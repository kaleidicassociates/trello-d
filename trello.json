[{"_id":"5931c06e44c159000ff8348a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5825193a65f32219003d83d6","updates":["5967b500cacb1e0029bc0e4d","5b69da20f991310003c9cd7f","5b7c72f235d2fb0003378482","5b7c733fff4a1e000304cccf","5bcf33038c21d304b1884135","5bfb3d1b99c06000498314ce","5c275a3e21eee700324a291c","5cb4d3b51b61c9005cce3991","5cf084f821b4030019d22626"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:45:50.175Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"## Welcome to Trello's REST API üëã\n\nWe're glad you're here, and we hope you'll find the documentation helpful.\n\nAt Trello we do our best to build on top of the same public API that we document here. What does that mean for you? It means, that if you see something happening in the website, or in one of the apps, you can probably do that same thing via the API. It also means that if you venture into the network tab in your browser when using Trello, in general, you can make those same API requests from your integration. üëç \n\nYou can use all of the routes we've documented inside of our docs! Before you get started you'll need to grab your API key üóù  and generate a token. You can grab those by logging into Trello and then heading [here](https://trello.com/app-key).\n\nSo what are you waiting for; let's get started building something awesome! üöÄ\n\np.s.\nSpot a mistake, or something that could be better? Please use the üìù **Suggest Edits** button.","excerpt":"","slug":"introduction","type":"basic","title":"Introduction","__v":9,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.513Z","children":[{"_id":"596ae9a354bdd2001a8ca026","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c06e44c159000ff8348a","updates":["59d484159cab1300386f1280","59d48418a55316002646556b","59df6b308b51880010b73fb1","5a5fba8393ecf8001e9be63f","5a78b0dda951020012e391d8","5b1d1c7eec1ac00003dd3376","5bc04ac32fa6b200035775df","5bc867b60723c8005ca1ed79","5bfb3d44892f3c0029ec4f8e","5bfb4288892f3c0029ec4fb9","5c0906874d2914021de8acb1","5c275a5662a6cd0020f4ea28","5c359e35e6f8df0062f5a7db","5ca4b5072b3bee00632c81d8","5cd363b2ea1732004be1a139","5cf52241067a4b00b4452a1e"],"next":{"pages":[],"description":""},"createdAt":"2017-07-16T04:20:51.221Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"When making any API request to Trello, you will need to include your API key, along with an oauth token that was generated using your key.\n\nSo for example if you wanted to load the board with the id `560bf4298b3dda300c18d09c` the full request would look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/560bf4298b3dda300c18d09c?fields=name,url&key={YOUR-API-KEY}&token={AN-OAUTH-TOKEN}\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\nAPI keys are associated with your Trello member account. We recommend when making Trello integrations that you create a new Trello account specifically for the integration or make sure that you let your team know which Trello account the API key belongs to.\n\nYou can get your API key at: https://trello.com/app-key.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You must be logged into Trello to retrieve your API key. If you see the message \\\"Not logged in\\\" when visiting the link above you need to login via https://trello.com/login.\",\n  \"title\": \"Be sure to log in to Trello!\"\n}\n[/block]","excerpt":"","slug":"api-key-tokens","type":"basic","title":"API Key & Tokens","__v":16,"updatedAt":"2019-06-10T14:28:52.514Z"},{"_id":"594d1a1d612674001b2d2006","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c06e44c159000ff8348a","updates":["59e2a988b0f4f2001a0372bd","5c7fccaa5edcbe00140e24bb"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:41.228Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"The Trello API provides a number of ways to access data throughout Trello. Because of the nested nature of the Trello experience (cards are in lists that are in boards), a number of resources are accessible as nested entities. Additionally, the API allows you to get at nested resources as URL parameters as well as query parameters.\n\nFor instance, if you wanted to get all of the cards for a board you could use:\n`https://api.trello.com/1/boards/{boardId}/cards`\nor\n`https://api.trello.com/1/boards/{boardId}/?cards=all`\n\nBecause a lot of the fields and values are duplicative, we've included a section of documentation for each resource that outlines how it can be accessed as a nested resource either via the URL or a query parameter. \n\nEach resource in the Trello API that is nested will contain a section `{Resource} Nested Resource` (e.g. [Actions Nested Resource](ref:actions-nested-resource)) wherein the options for using the resource as a query param or a URL are outlined. When a nested resource is available via another resource, we'll link to the nested resource section.","excerpt":"","slug":"understanding-nested-resources","type":"basic","title":"Understanding Nested Resources","__v":2,"updatedAt":"2019-06-10T14:28:52.514Z"}],"childrenPages":[{"_id":"596ae9a354bdd2001a8ca026","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c06e44c159000ff8348a","updates":["59d484159cab1300386f1280","59d48418a55316002646556b","59df6b308b51880010b73fb1","5a5fba8393ecf8001e9be63f","5a78b0dda951020012e391d8","5b1d1c7eec1ac00003dd3376","5bc04ac32fa6b200035775df","5bc867b60723c8005ca1ed79","5bfb3d44892f3c0029ec4f8e","5bfb4288892f3c0029ec4fb9","5c0906874d2914021de8acb1","5c275a5662a6cd0020f4ea28","5c359e35e6f8df0062f5a7db","5ca4b5072b3bee00632c81d8","5cd363b2ea1732004be1a139","5cf52241067a4b00b4452a1e"],"next":{"pages":[],"description":""},"createdAt":"2017-07-16T04:20:51.221Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"When making any API request to Trello, you will need to include your API key, along with an oauth token that was generated using your key.\n\nSo for example if you wanted to load the board with the id `560bf4298b3dda300c18d09c` the full request would look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/560bf4298b3dda300c18d09c?fields=name,url&key={YOUR-API-KEY}&token={AN-OAUTH-TOKEN}\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\nAPI keys are associated with your Trello member account. We recommend when making Trello integrations that you create a new Trello account specifically for the integration or make sure that you let your team know which Trello account the API key belongs to.\n\nYou can get your API key at: https://trello.com/app-key.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You must be logged into Trello to retrieve your API key. If you see the message \\\"Not logged in\\\" when visiting the link above you need to login via https://trello.com/login.\",\n  \"title\": \"Be sure to log in to Trello!\"\n}\n[/block]","excerpt":"","slug":"api-key-tokens","type":"basic","title":"API Key & Tokens","__v":16,"updatedAt":"2019-06-10T14:28:52.514Z"},{"_id":"594d1a1d612674001b2d2006","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c06e44c159000ff8348a","updates":["59e2a988b0f4f2001a0372bd","5c7fccaa5edcbe00140e24bb"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:41.228Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"The Trello API provides a number of ways to access data throughout Trello. Because of the nested nature of the Trello experience (cards are in lists that are in boards), a number of resources are accessible as nested entities. Additionally, the API allows you to get at nested resources as URL parameters as well as query parameters.\n\nFor instance, if you wanted to get all of the cards for a board you could use:\n`https://api.trello.com/1/boards/{boardId}/cards`\nor\n`https://api.trello.com/1/boards/{boardId}/?cards=all`\n\nBecause a lot of the fields and values are duplicative, we've included a section of documentation for each resource that outlines how it can be accessed as a nested resource either via the URL or a query parameter. \n\nEach resource in the Trello API that is nested will contain a section `{Resource} Nested Resource` (e.g. [Actions Nested Resource](ref:actions-nested-resource)) wherein the options for using the resource as a query param or a URL are outlined. When a nested resource is available via another resource, we'll link to the nested resource section.","excerpt":"","slug":"understanding-nested-resources","type":"basic","title":"Understanding Nested Resources","__v":2,"updatedAt":"2019-06-10T14:28:52.514Z"}]},{"_id":"596ae9a354bdd2001a8ca026","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c06e44c159000ff8348a","updates":["59d484159cab1300386f1280","59d48418a55316002646556b","59df6b308b51880010b73fb1","5a5fba8393ecf8001e9be63f","5a78b0dda951020012e391d8","5b1d1c7eec1ac00003dd3376","5bc04ac32fa6b200035775df","5bc867b60723c8005ca1ed79","5bfb3d44892f3c0029ec4f8e","5bfb4288892f3c0029ec4fb9","5c0906874d2914021de8acb1","5c275a5662a6cd0020f4ea28","5c359e35e6f8df0062f5a7db","5ca4b5072b3bee00632c81d8","5cd363b2ea1732004be1a139","5cf52241067a4b00b4452a1e"],"next":{"pages":[],"description":""},"createdAt":"2017-07-16T04:20:51.221Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"When making any API request to Trello, you will need to include your API key, along with an oauth token that was generated using your key.\n\nSo for example if you wanted to load the board with the id `560bf4298b3dda300c18d09c` the full request would look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/560bf4298b3dda300c18d09c?fields=name,url&key={YOUR-API-KEY}&token={AN-OAUTH-TOKEN}\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\nAPI keys are associated with your Trello member account. We recommend when making Trello integrations that you create a new Trello account specifically for the integration or make sure that you let your team know which Trello account the API key belongs to.\n\nYou can get your API key at: https://trello.com/app-key.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You must be logged into Trello to retrieve your API key. If you see the message \\\"Not logged in\\\" when visiting the link above you need to login via https://trello.com/login.\",\n  \"title\": \"Be sure to log in to Trello!\"\n}\n[/block]","excerpt":"","slug":"api-key-tokens","type":"basic","title":"API Key & Tokens","__v":16,"updatedAt":"2019-06-10T14:28:52.514Z"},{"_id":"594d1a1d612674001b2d2006","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c06e44c159000ff8348a","updates":["59e2a988b0f4f2001a0372bd","5c7fccaa5edcbe00140e24bb"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:41.228Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"The Trello API provides a number of ways to access data throughout Trello. Because of the nested nature of the Trello experience (cards are in lists that are in boards), a number of resources are accessible as nested entities. Additionally, the API allows you to get at nested resources as URL parameters as well as query parameters.\n\nFor instance, if you wanted to get all of the cards for a board you could use:\n`https://api.trello.com/1/boards/{boardId}/cards`\nor\n`https://api.trello.com/1/boards/{boardId}/?cards=all`\n\nBecause a lot of the fields and values are duplicative, we've included a section of documentation for each resource that outlines how it can be accessed as a nested resource either via the URL or a query parameter. \n\nEach resource in the Trello API that is nested will contain a section `{Resource} Nested Resource` (e.g. [Actions Nested Resource](ref:actions-nested-resource)) wherein the options for using the resource as a query param or a URL are outlined. When a nested resource is available via another resource, we'll link to the nested resource section.","excerpt":"","slug":"understanding-nested-resources","type":"basic","title":"Understanding Nested Resources","__v":2,"updatedAt":"2019-06-10T14:28:52.514Z"},{"_id":"5931c301d1f976000f7b4c0b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":["5c152331a3c0eb0031b4dfc7"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:56:49.983Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Actions are generated whenever an action occurs in Trello. For instance, when a user deletes a card, a `deleteCard` action is generated and includes information about the deleted card, the list the card was in, the board the card was on, the user that deleted the card, and the idObject of the action. Actions for Trello objects can be listed from nested action endpoints - e.g. the resource `GET` `/1/boards/[board_id]/actions` lists all of the actions for the given board. Additionally, data regarding individual action objects can be retrieved and updated using the resources listed below.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"You Can't List Actions\",\n  \"body\": \"If you are looking to get the actions for a resource, you'll want to use that resource's `{resourceId}/actions/` endpoint.\"\n}\n[/block]\nIncluded at the bottom of this page are a list of all action types and action types that are not returned from nested resources.\n\nYou can see some board actions in the activity feed in the board sidebar like below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/882dc2e-board-actions.png\",\n        \"board-actions.png\",\n        1474,\n        1518,\n        \"#4e5557\"\n      ]\n    }\n  ]\n}\n[/block]\nYou can see some card actions in the activity feed like below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/64b5384-card-actions.png\",\n        \"card-actions.png\",\n        1105,\n        986,\n        \"#513733\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"actions","type":"basic","title":"Actions","__v":1,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.515Z","children":[{"_id":"594d190cd8a2f7001b0b5481","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c301d1f976000f7b4c0b","updates":["59ffc09630f873001033cdbc"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:35:08.120Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the action\",\n    \"1-0\": \"**data**\\nobject\",\n    \"2-0\": \"**date**\\ndate\",\n    \"2-1\": \"When the action occurred\",\n    \"3-0\": \"**idMemberCreator**\\nstring\",\n    \"3-1\": \"The ID of the member who caused the action\",\n    \"4-0\": \"**type**\\nstring\",\n    \"4-1\": \"The type of the action. See list of [Action Types](ref:action-types) for options.\",\n    \"1-1\": \"Relevant information regarding the action\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/actions/592f11060f95a3d3d46a987a\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"592f11060f95a3d3d46a987a\\\",\\n  \\\"idMemberCreator\\\": \\\"5191197f9433cf5507006338\\\",\\n  \\\"data\\\": {\\n    \\\"list\\\": {\\n      \\\"name\\\": \\\"Professional\\\",\\n      \\\"id\\\": \\\"54a17e9db559f0356ce022e4\\\"\\n    },\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"BdarzfKF\\\",\\n      \\\"name\\\": \\\"Life Goals\\\",\\n      \\\"id\\\": \\\"54a17d76d4a5072e3931736b\\\"\\n    },\\n    \\\"card\\\": {\\n      \\\"shortLink\\\": \\\"gplJv6dx\\\",\\n      \\\"idShort\\\": 2,\\n      \\\"name\\\": \\\"Increase revenue by 10%\\\",\\n      \\\"id\\\": \\\"54a1844d304d9736e54d2546\\\",\\n      \\\"due\\\": \\\"2017-12-12T17:00:00.000Z\\\"\\n    },\\n    \\\"old\\\": {\\n      \\\"due\\\": \\\"2017-05-01T16:00:00.000Z\\\"\\n    }\\n  },\\n  \\\"type\\\": \\\"updateCard\\\",\\n  \\\"date\\\": \\\"2017-05-31T18:52:54.933Z\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"5191197f9433cf5507006338\\\",\\n    \\\"avatarHash\\\": \\\"ae0fde383cc2a195c053f1ad42c02022\\\",\\n    \\\"fullName\\\": \\\"Brian Cervino\\\",\\n    \\\"initials\\\": \\\"BC\\\",\\n    \\\"username\\\": \\\"brian\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"translationKey\\\": \\\"action_changed_a_due_date\\\",\\n    \\\"entities\\\": {\\n      \\\"card\\\": {\\n        \\\"type\\\": \\\"card\\\",\\n        \\\"due\\\": \\\"2017-12-12T17:00:00.000Z\\\",\\n        \\\"id\\\": \\\"54a1844d304d9736e54d2546\\\",\\n        \\\"shortLink\\\": \\\"gplJv6dx\\\",\\n        \\\"text\\\": \\\"Increase revenue by 10%\\\"\\n      },\\n      \\\"date\\\": {\\n        \\\"type\\\": \\\"date\\\",\\n        \\\"date\\\": \\\"2017-12-12T17:00:00.000Z\\\"\\n      },\\n      \\\"memberCreator\\\": {\\n        \\\"type\\\": \\\"member\\\",\\n        \\\"id\\\": \\\"5191197f9433cf5507006338\\\",\\n        \\\"username\\\": \\\"brian\\\",\\n        \\\"text\\\": \\\"Brian Cervino\\\"\\n      }\\n    }\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"action-object","type":"basic","title":"Action Object","__v":1,"updatedAt":"2019-06-10T14:28:52.516Z"},{"_id":"594d1934596ccf00153357ab","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":["598881b34c88d5002594021a","5c00074b533f9d031428d4ac"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:35:48.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get","examples":{"codes":[]}},"isReference":true,"order":1,"body":"Actions are often included as [nested resources](ref:understanding-nested-resources) within the Trello API. Their highly-nested nature is due to the fact that actions are created within the context of other resources. For instance, when a user adds another user to a board, Trello creates an `addMemberToBoard` action that references the board. Therefore, it makes sense to be able to access all of the actions within the context of an object from which they were created.\n[block:api-header]\n{\n  \"title\": \"Nested Actions with Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Default\",\n    \"h-3\": \"Description\",\n    \"0-0\": \"**actions_entities**\\nboolean\",\n    \"0-1\": \"true, false\",\n    \"0-2\": \"false\",\n    \"0-3\": \"Boolean to return actions' entities or not.\",\n    \"1-0\": \"**actions_display**\\nboolean\",\n    \"1-1\": \"true, false\",\n    \"1-2\": \"false\",\n    \"1-3\": \"Boolean to return actions' display or not.\",\n    \"2-0\": \"**actions_format**\\nstring\",\n    \"2-1\": \"One of: count, list, or minimal\",\n    \"2-2\": \"list\",\n    \"2-3\": \"The format that actions should be returned in.\",\n    \"3-0\": \"**actions_since** \\nstring\",\n    \"4-0\": \"**actions_limit** \\ninteger\",\n    \"5-0\": \"**action_fields**\\nstring\",\n    \"6-0\": \"**action_member** \\nboolean\",\n    \"7-0\": \"**action_member_fields**\\nstring\",\n    \"7-1\": \"String\",\n    \"7-2\": \"avatarHash,fullName,initials,username\",\n    \"8-0\": \"**action_memberCreator**\\nboolean\",\n    \"8-1\": \"Bool\",\n    \"9-0\": \"**action_memberCreator_fields** \\nstring\",\n    \"9-1\": \"avatarHash,fullName,initials,username\",\n    \"3-2\": \"none\",\n    \"4-2\": \"50\",\n    \"4-1\": \"numberInRange 0,1000\",\n    \"5-2\": \"all\",\n    \"6-1\": \"true, false\",\n    \"6-2\": \"true\",\n    \"8-2\": \"true\",\n    \"3-1\": \"ISO Datetime or Mongo ID\",\n    \"3-3\": \"The maximum date for when the actions were created. For more information on using `since` to page responses, visit the intro to [Paging](https://developers.trello.com/docs/api-introduction#section-paging) page.\",\n    \"4-3\": \"The number of action objects to be returned.\",\n    \"5-3\": \"A comma-separated list of [Action Object Fields](https://trello.readme.io/v1.0/reference#actions) to be included in the returned action objects.\",\n    \"5-1\": \"Comma-separated list of [Action Object Fields](https://trello.readme.io/v1.0/reference#actions).\",\n    \"6-3\": \"Determines whether to return the member object for the action.\",\n    \"7-3\": \"The fields to be returned if the member object is being returned.\",\n    \"8-3\": \"Determines whether to return the memberCreator object for the action.\",\n    \"9-3\": \"The fields to be returned if the memberCreator object is being returned.\"\n  },\n  \"cols\": 4,\n  \"rows\": 10\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/BdarzfKF/?fields=id&actions=addAttachmentToCard&actions_limit=2&action_fields=idMemberCreator&action_memberCreator_fields=fullName\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"54a17d76d4a5072e3931736b\\\",\\n  \\\"actions\\\": [\\n    {\\n      \\\"id\\\": \\\"54a1b7c3a6ea7c2b1eaa5cdf\\\",\\n      \\\"idMemberCreator\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberCreator\\\": {\\n        \\\"id\\\": \\\"53baf533e697a982248cd73f\\\",\\n        \\\"fullName\\\": \\\"Lauren Moon\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"54a1b73f030916211e718516\\\",\\n      \\\"idMemberCreator\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberCreator\\\": {\\n        \\\"id\\\": \\\"53baf533e697a982248cd73f\\\",\\n        \\\"fullName\\\": \\\"Lauren Moon\\\"\\n      }\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Actions via URL Params\"\n}\n[/block]\n`/object/{id}/actions`\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**entities**\\nboolean\",\n    \"0-1\": \"Default: `false`\",\n    \"1-0\": \"**display**\\nboolean\",\n    \"1-1\": \"Default: `false`\",\n    \"2-0\": \"**filter**\\nstring\",\n    \"3-0\": \"**fields**\\nstring\",\n    \"3-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- data\\n- date\\n- idMemberCreator\\n- type\",\n    \"4-0\": \"**limit**\\ninteger\",\n    \"4-1\": \"Default: `50`\\n`0` - `1000`\",\n    \"5-0\": \"**format**\\nstring\",\n    \"5-1\": \"Default: `list`\\nOne of: `count`, `list`, `minimal`\",\n    \"6-0\": \"**since**\\ndate\",\n    \"7-0\": \"**before**\\ndate\",\n    \"8-0\": \"**page**\\ninteger\",\n    \"8-1\": \"Default: `0`\",\n    \"9-0\": \"**idModels**\\nstring\",\n    \"9-1\": \"Comma-separated list of model IDs\",\n    \"10-0\": \"**member**\\nboolean\",\n    \"10-1\": \"Default: `true`\",\n    \"11-0\": \"**member_fields**\\nstring\",\n    \"11-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"12-0\": \"**memberCreator**\\nboolean\",\n    \"12-1\": \"Default: `true`\",\n    \"13-0\": \"**memberCreator_fields**\\nstring\",\n    \"13-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"2-1\": \"Default: `commentCard, updateCard:idList`\",\n    \"6-1\": \"ISO-Formatted Date (`2017-12-07T15:07:08.977Z`) or MongoID (`5a6029d00000000000000000`)\",\n    \"7-1\": \"ISO-Formatted Date (`2017-12-07T15:07:08.977Z`) or MongoID (`5a6029d00000000000000000`)\"\n  },\n  \"cols\": 2,\n  \"rows\": 14\n}\n[/block]","excerpt":"","slug":"actions-nested-resource","type":"basic","title":"Actions Nested Resource","__v":2,"updatedAt":"2019-06-10T14:28:52.517Z"},{"_id":"5931c36544c159000ff83499","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c301d1f976000f7b4c0b","updates":["59818220302822002abfc218","5981826a0b339f0035d3ffd1","59a5699db21a2b000f3d0689","59a569a1cdbd85001bfb15d9","5a60300be6fd95001299b603"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:58:29.446Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Due to the number of actions that occur in Trello, nested action resources filter out specific action types. For example, changing the name of a checklistItem will trigger a webhook on the board and will `POST` an action of type updateCheckItem with the old and new name of the checklistItem. However, no nested actions resource will return action types of `updateCheckItem`: `/cards/{id}/actions/`, `/boards/{id}/actions/`. However you can get that specific action instance via `GET` `/actions/{id}/`.\n[block:api-header]\n{\n  \"title\": \"All Action Types\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Action Name\",\n    \"h-1\": \"Context\",\n    \"0-0\": \"* acceptEnterpriseJoinRequest\\n* addAdminToBoard\\n* addAdminToOrganization\\n* addAttachmentToCard\\n* addBoardsPinnedToMember\\n* addChecklistToCard\\n* addLabelToCard\\n* addMemberToBoard\\n* addMemberToCard\\n* addMemberToOrganization\\n* addOrganizationToEnterprise\\n* addToEnterprisePluginWhitelist\\n* addToOrganizationBoard\\n* commentCard\\n* convertToCardFromCheckItem\\n* copyBoard\\n* copyCard\\n* copyChecklist\\n* createLabel\\n* copyCommentCard\\n* createBoard\\n* createBoardInvitation\\n* createBoardPreference\\n* createCard\\n* createChecklist\\n* createList\\n* createOrganization\\n* createOrganizationInvitation\\n* deleteAttachmentFromCard\\n* deleteBoardInvitation\\n* deleteCard\\n* deleteCheckItem\\n* deleteLabel\\n* deleteOrganizationInvitation\\n* disableEnterprisePluginWhitelist\\n* disablePlugin\\n* disablePowerUp\\n* emailCard\\n* enableEnterprisePluginWhitelist\\n* enablePlugin\\n* enablePowerUp\\n* makeAdminOfBoard\\n* makeAdminOfOrganization\\n* makeNormalMemberOfBoard\\n* makeNormalMemberOfOrganization\\n* makeObserverOfBoard\\n* memberJoinedTrello\\n* moveCardFromBoard\\n* moveCardToBoard\\n* moveListFromBoard\\n* moveListToBoard\\n* removeAdminFromBoard\\n* removeAdminFromOrganization\\n* removeBoardsPinnedFromMember\\n* removeChecklistFromCard\\n* removeFromEnterprisePluginWhitelist\\n* removeFromOrganizationBoard\\n* removeLabelFromCard\\n* removeMemberFromBoard\\n* removeMemberFromCard\\n* removeMemberFromOrganization\\n* removeOrganizationFromEnterprise\\n* unconfirmedBoardInvitation\\n* unconfirmedOrganizationInvitation\\n* updateBoard\\n* updateCard\\n* updateCheckItem\\n* updateCheckItemStateOnCard\\n* updateChecklist\\n* updateLabel\\n* updateList\\n* updateMember\\n* updateOrganization\\n* voteOnCard\",\n    \"0-1\": \"Card\"\n  },\n  \"cols\": 1,\n  \"rows\": 1\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Excluded Action Types\"\n}\n[/block]\nThese actions will be sent to [Webhooks](ref:webhooks) but are not included in nested action resource responses (e.g. `GET board/[board_id]/actions`).\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"* addAdminToBoard (Deprecated in favor of makeAdminOfBoard)\\n* addAdminToOrganization (Deprecated in favor of makeAdminOfOrganization)\\n* addBoardsPinnedToMember\\n* addLabelToCard\\n* copyChecklist\\n* createBoardInvitation\\n* createBoardPreference\\n* createCheckItem\\n* createChecklist\\n* createLabel\\n* createOrganizationInvitation\\n* deleteAttachmentFromCard (Excluded from [/lists/{listId}/actions](ref:listsidactions))\\n* deleteCheckItem\\n* deleteComment\\n* deleteLabel\\n* makeAdminOfOrganization\\n* removeAdminFromBoard (Deprecated in favor of makeNormalMemberOfBoard)\\n* removeAdminFromOrganization (Deprecated in favor of makeNormalMemberOfOrganization)\\n* removeBoardsPinnedFromMember\\n* removeLabelFromCard\\n* removeMemberFromBoard\\n* removeMemberFromOrganization\\n* updateCheckItem\\n* updateComment\\n* updateLabel\\n* voteOnCard\",\n    \"h-0\": \"Action Name\",\n    \"h-1\": \"Context\"\n  },\n  \"cols\": 1,\n  \"rows\": 1\n}\n[/block]","excerpt":"Actions have many types.","slug":"action-types","type":"basic","title":"Action Types","__v":5,"updatedAt":"2019-06-10T14:28:52.517Z"},{"_id":"5931c33344c159000ff83496","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5825193a65f32219003d83d6","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:57:39.658Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c34f25934a000f698a64","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5952ff13c356e9001b124b58","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"display"},{"_id":"5952ff1b439bc9001b4ace4d","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"entities"},{"_id":"5952ff35439bc9001b4ace4e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of action [fields](ref:action-object)","default":"all","type":"string","name":"fields"},{"_id":"5952ff4f3c835f0015a20d4c","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"member"},{"_id":"5952ff6d3c835f0015a20d4d","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"member_fields"},{"_id":"5952ff87c356e9001b124b59","ref":"","in":"query","required":false,"desc":"Whether to include the member object for the creator of the action","default":"true","type":"boolean","name":"memberCreator"},{"_id":"5952ffa0780fd4001b122ffd","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"}],"url":"/actions/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"`GET` `/1/actions/55411859be21b8ad7dcd4c78?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"55411859be21b8ad7dcd4c78\\\",\\n  \\\"idMemberCreator\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n  \\\"data\\\": {\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n      \\\"name\\\": \\\"Trello Development\\\",\\n      \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n    },\\n    \\\"card\\\": {\\n      \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n      \\\"idShort\\\": 1211,\\n      \\\"name\\\": \\\"What can you expect from this board?\\\",\\n      \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n    },\\n    \\\"attachment\\\": {\\n      \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\",\\n      \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\",\\n      \\\"name\\\": \\\"trello-logo.png\\\",\\n      \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\"\\n    }\\n  },\\n  \\\"type\\\": \\\"addAttachmentToCard\\\",\\n  \\\"date\\\": \\\"2015-04-29T17:43:53.614Z\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n    \\\"avatarHash\\\": \\\"448c93683331562616e24a04b09d41fa\\\",\\n    \\\"fullName\\\": \\\"Michelle Bearheart\\\",\\n    \\\"initials\\\": \\\"MB\\\",\\n    \\\"username\\\": \\\"michellebearheart\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"translationKey\\\": \\\"action_add_attachment_to_card\\\",\\n    \\\"entities\\\": {\\n      \\\"attachment\\\": {\\n        \\\"type\\\": \\\"attachment\\\",\\n        \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\",\\n        \\\"link\\\": true,\\n        \\\"text\\\": \\\"trello-logo.png\\\",\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\"\\n      },\\n      \\\"attachmentPreview\\\": {\\n        \\\"type\\\": \\\"attachmentPreview\\\",\\n        \\\"originalUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\",\\n        \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"type\\\": \\\"card\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\",\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"text\\\": \\\"What can you expect from this board?\\\"\\n      },\\n      \\\"memberCreator\\\": {\\n        \\\"type\\\": \\\"member\\\",\\n        \\\"id\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n        \\\"username\\\": \\\"michellebearheart\\\",\\n        \\\"text\\\": \\\"Michelle Bearheart\\\"\\n      }\\n    }\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get information about an action","slug":"actionsactionid","type":"endpoint","title":"/actions/{id}","__v":9,"updatedAt":"2019-06-10T14:28:52.518Z","swagger":{"path":"/actions/{id}"}},{"_id":"595300793c835f0015a20d6e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:03:53.902Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530085c356e9001b124b5a","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5953009594417f0015ec7f46","ref":"","in":"path","required":false,"desc":"An action [field](ref:action-object)","default":"","type":"string","name":"field"}],"url":"/actions/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get a specific property of an action","slug":"actionsidfield","type":"endpoint","title":"/actions/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.519Z","swagger":{"path":"/actions/{id}/{field}"}},{"_id":"595300b18073c90015d53d56","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":["5a79c5d6797814004eff54cc","5cb5b553dd712c00435a91e0"],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:04:49.988Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300bd8073c90015d53d57","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595300cf341432001554e422","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/board","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the board for an action","slug":"actionsidboard","type":"endpoint","title":"/actions/{id}/board","__v":4,"updatedAt":"2019-06-10T14:28:52.520Z","swagger":{"path":"/actions/{id}/board"}},{"_id":"595300e9c356e9001b124b5b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:05:45.119Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300f2070f4c001b25541c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5953010615da33001b8a793e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/card","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get the card for an action","slug":"actionsidcard","type":"endpoint","title":"/actions/{id}/card","__v":2,"updatedAt":"2019-06-10T14:28:52.521Z","swagger":{"path":"/actions/{id}/card"}},{"_id":"595a7892d5ed050015dad51b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":["5b2726e0c64e6c00039a11a1"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T17:02:10.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"translationKey\": \"action_create_card\",\n  \"entities\": {\n    \"card\": {\n      \"type\": \"card\",\n      \"id\": \"5afc9d35cd18a8783df9302e\",\n      \"shortLink\": \"syyPe0pd\",\n      \"text\": \"Grill Hotdogs\"\n    },\n    \"list\": {\n      \"type\": \"list\",\n      \"id\": \"5afc3b6c1b7976bd7669d771\",\n      \"text\": \"To Do\"\n    },\n    \"memberCreator\": {\n      \"type\": \"member\",\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"username\": \"philmurray\",\n      \"text\": \"Phil Murray\"\n    }\n  }\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300f2070f4c001b25541c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"}],"url":"/actions/{id}/display","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get the display information for an action.","slug":"actionsiddisplay","type":"endpoint","title":"/actions/{id}/display","__v":2,"updatedAt":"2019-06-10T14:28:52.521Z","swagger":{"path":"/actions/{id}/display"}},{"_id":"59530124780fd4001b12301e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:06:44.995Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530130341432001554e423","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"59530143780fd4001b12301f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/list","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get the list for an action","slug":"actionsidlist","type":"endpoint","title":"/actions/{id}/list","__v":2,"updatedAt":"2019-06-10T14:28:52.522Z","swagger":{"path":"/actions/{id}/list"}},{"_id":"595301ab94417f0015ec7f47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:08:59.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595301b7c356e9001b124b5c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595301cc105a970015021718","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/member","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Gets the member of an action (not the creator)","slug":"actionsidmember","type":"endpoint","title":"/actions/{id}/member","__v":2,"updatedAt":"2019-06-10T14:28:52.523Z","swagger":{"path":"/actions/{id}/member"}},{"_id":"595301e4780fd4001b123020","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:09:56.900Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595301ef15da33001b8a793f","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595301ff439bc9001b4ace6f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/memberCreator","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Gets the member who created the action","slug":"actionsidmembercreator","type":"endpoint","title":"/actions/{id}/memberCreator","__v":2,"updatedAt":"2019-06-10T14:28:52.524Z","swagger":{"path":"/actions/{id}/memberCreator"}},{"_id":"59530215780fd4001b123021","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:10:45.927Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530220f135e5001be8e048","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"59530236341432001554e424","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/organization","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Get the organization of an action","slug":"actionsidorganization","type":"endpoint","title":"/actions/{id}/organization","__v":2,"updatedAt":"2019-06-10T14:28:52.525Z","swagger":{"path":"/actions/{id}/organization"}},{"_id":"5953024694417f0015ec7f48","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:11:34.477Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953025374ea3e001518d1dc","ref":"","in":"path","required":false,"desc":"The ID of the action to update","default":"","type":"string","name":"id"},{"_id":"5953029073082700156d5c88","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"text"}],"url":"/actions/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Only Comment Actions\",\n  \"body\": \"You can only use `PUT` on `commentCard` actions to update the comment. `PUT`ing a new text value will also update the comment on the card. You can only update the comment as the member who wrote the comment, or a member with greater permissions.\"\n}\n[/block]","excerpt":"Update a comment action","slug":"actionsid","type":"endpoint","title":"/actions/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.525Z","swagger":{"path":"/actions/{id}"}},{"_id":"595a78c7d63575001bd655ce","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T17:03:03.271Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953025374ea3e001518d1dc","ref":"","in":"path","required":false,"desc":"The ID of the action to update","default":"","type":"string","name":"id"},{"_id":"5953029073082700156d5c88","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"value"}],"url":"/actions/{id}/text","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Only Comment Actions\",\n  \"body\": \"You can only use `PUT` on `commentCard` actions to update the comment. `PUT`ing a new text value will also update the comment on the card. You can only update the comment as the member who wrote the comment, or a member with greater permissions.\"\n}\n[/block]","excerpt":"Update a comment action","slug":"actionsidtext","type":"endpoint","title":"/actions/{id}/text","__v":0,"updatedAt":"2019-06-10T14:28:52.526Z","swagger":{"path":"/actions/{id}/text"}},{"_id":"595302d13c835f0015a20d8f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:13:53.941Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595302e3780fd4001b123022","ref":"","in":"path","required":false,"desc":"The ID of the commentCard action to delete","default":"","type":"string","name":"id"}],"url":"/actions/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You can only use `DELETE` on `commentCard` actions. Deleting a `commentCard` action will also delete the comment on the card. You can only delete a `commentCard` action if you are the one that created the comment, you have more permissions on the board than the person that created the comment, or the person that created the comment has deleted their account.\",\n  \"title\": \"Only Comment Actions\"\n}\n[/block]","excerpt":"Delete a comment action","slug":"actionsid-1","type":"endpoint","title":"/actions/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.527Z","swagger":{"path":"/actions/{id}"}}],"childrenPages":[{"_id":"594d190cd8a2f7001b0b5481","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c301d1f976000f7b4c0b","updates":["59ffc09630f873001033cdbc"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:35:08.120Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the action\",\n    \"1-0\": \"**data**\\nobject\",\n    \"2-0\": \"**date**\\ndate\",\n    \"2-1\": \"When the action occurred\",\n    \"3-0\": \"**idMemberCreator**\\nstring\",\n    \"3-1\": \"The ID of the member who caused the action\",\n    \"4-0\": \"**type**\\nstring\",\n    \"4-1\": \"The type of the action. See list of [Action Types](ref:action-types) for options.\",\n    \"1-1\": \"Relevant information regarding the action\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/actions/592f11060f95a3d3d46a987a\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"592f11060f95a3d3d46a987a\\\",\\n  \\\"idMemberCreator\\\": \\\"5191197f9433cf5507006338\\\",\\n  \\\"data\\\": {\\n    \\\"list\\\": {\\n      \\\"name\\\": \\\"Professional\\\",\\n      \\\"id\\\": \\\"54a17e9db559f0356ce022e4\\\"\\n    },\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"BdarzfKF\\\",\\n      \\\"name\\\": \\\"Life Goals\\\",\\n      \\\"id\\\": \\\"54a17d76d4a5072e3931736b\\\"\\n    },\\n    \\\"card\\\": {\\n      \\\"shortLink\\\": \\\"gplJv6dx\\\",\\n      \\\"idShort\\\": 2,\\n      \\\"name\\\": \\\"Increase revenue by 10%\\\",\\n      \\\"id\\\": \\\"54a1844d304d9736e54d2546\\\",\\n      \\\"due\\\": \\\"2017-12-12T17:00:00.000Z\\\"\\n    },\\n    \\\"old\\\": {\\n      \\\"due\\\": \\\"2017-05-01T16:00:00.000Z\\\"\\n    }\\n  },\\n  \\\"type\\\": \\\"updateCard\\\",\\n  \\\"date\\\": \\\"2017-05-31T18:52:54.933Z\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"5191197f9433cf5507006338\\\",\\n    \\\"avatarHash\\\": \\\"ae0fde383cc2a195c053f1ad42c02022\\\",\\n    \\\"fullName\\\": \\\"Brian Cervino\\\",\\n    \\\"initials\\\": \\\"BC\\\",\\n    \\\"username\\\": \\\"brian\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"translationKey\\\": \\\"action_changed_a_due_date\\\",\\n    \\\"entities\\\": {\\n      \\\"card\\\": {\\n        \\\"type\\\": \\\"card\\\",\\n        \\\"due\\\": \\\"2017-12-12T17:00:00.000Z\\\",\\n        \\\"id\\\": \\\"54a1844d304d9736e54d2546\\\",\\n        \\\"shortLink\\\": \\\"gplJv6dx\\\",\\n        \\\"text\\\": \\\"Increase revenue by 10%\\\"\\n      },\\n      \\\"date\\\": {\\n        \\\"type\\\": \\\"date\\\",\\n        \\\"date\\\": \\\"2017-12-12T17:00:00.000Z\\\"\\n      },\\n      \\\"memberCreator\\\": {\\n        \\\"type\\\": \\\"member\\\",\\n        \\\"id\\\": \\\"5191197f9433cf5507006338\\\",\\n        \\\"username\\\": \\\"brian\\\",\\n        \\\"text\\\": \\\"Brian Cervino\\\"\\n      }\\n    }\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"action-object","type":"basic","title":"Action Object","__v":1,"updatedAt":"2019-06-10T14:28:52.516Z"},{"_id":"594d1934596ccf00153357ab","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":["598881b34c88d5002594021a","5c00074b533f9d031428d4ac"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:35:48.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get","examples":{"codes":[]}},"isReference":true,"order":1,"body":"Actions are often included as [nested resources](ref:understanding-nested-resources) within the Trello API. Their highly-nested nature is due to the fact that actions are created within the context of other resources. For instance, when a user adds another user to a board, Trello creates an `addMemberToBoard` action that references the board. Therefore, it makes sense to be able to access all of the actions within the context of an object from which they were created.\n[block:api-header]\n{\n  \"title\": \"Nested Actions with Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Default\",\n    \"h-3\": \"Description\",\n    \"0-0\": \"**actions_entities**\\nboolean\",\n    \"0-1\": \"true, false\",\n    \"0-2\": \"false\",\n    \"0-3\": \"Boolean to return actions' entities or not.\",\n    \"1-0\": \"**actions_display**\\nboolean\",\n    \"1-1\": \"true, false\",\n    \"1-2\": \"false\",\n    \"1-3\": \"Boolean to return actions' display or not.\",\n    \"2-0\": \"**actions_format**\\nstring\",\n    \"2-1\": \"One of: count, list, or minimal\",\n    \"2-2\": \"list\",\n    \"2-3\": \"The format that actions should be returned in.\",\n    \"3-0\": \"**actions_since** \\nstring\",\n    \"4-0\": \"**actions_limit** \\ninteger\",\n    \"5-0\": \"**action_fields**\\nstring\",\n    \"6-0\": \"**action_member** \\nboolean\",\n    \"7-0\": \"**action_member_fields**\\nstring\",\n    \"7-1\": \"String\",\n    \"7-2\": \"avatarHash,fullName,initials,username\",\n    \"8-0\": \"**action_memberCreator**\\nboolean\",\n    \"8-1\": \"Bool\",\n    \"9-0\": \"**action_memberCreator_fields** \\nstring\",\n    \"9-1\": \"avatarHash,fullName,initials,username\",\n    \"3-2\": \"none\",\n    \"4-2\": \"50\",\n    \"4-1\": \"numberInRange 0,1000\",\n    \"5-2\": \"all\",\n    \"6-1\": \"true, false\",\n    \"6-2\": \"true\",\n    \"8-2\": \"true\",\n    \"3-1\": \"ISO Datetime or Mongo ID\",\n    \"3-3\": \"The maximum date for when the actions were created. For more information on using `since` to page responses, visit the intro to [Paging](https://developers.trello.com/docs/api-introduction#section-paging) page.\",\n    \"4-3\": \"The number of action objects to be returned.\",\n    \"5-3\": \"A comma-separated list of [Action Object Fields](https://trello.readme.io/v1.0/reference#actions) to be included in the returned action objects.\",\n    \"5-1\": \"Comma-separated list of [Action Object Fields](https://trello.readme.io/v1.0/reference#actions).\",\n    \"6-3\": \"Determines whether to return the member object for the action.\",\n    \"7-3\": \"The fields to be returned if the member object is being returned.\",\n    \"8-3\": \"Determines whether to return the memberCreator object for the action.\",\n    \"9-3\": \"The fields to be returned if the memberCreator object is being returned.\"\n  },\n  \"cols\": 4,\n  \"rows\": 10\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/BdarzfKF/?fields=id&actions=addAttachmentToCard&actions_limit=2&action_fields=idMemberCreator&action_memberCreator_fields=fullName\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"54a17d76d4a5072e3931736b\\\",\\n  \\\"actions\\\": [\\n    {\\n      \\\"id\\\": \\\"54a1b7c3a6ea7c2b1eaa5cdf\\\",\\n      \\\"idMemberCreator\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberCreator\\\": {\\n        \\\"id\\\": \\\"53baf533e697a982248cd73f\\\",\\n        \\\"fullName\\\": \\\"Lauren Moon\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"54a1b73f030916211e718516\\\",\\n      \\\"idMemberCreator\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberCreator\\\": {\\n        \\\"id\\\": \\\"53baf533e697a982248cd73f\\\",\\n        \\\"fullName\\\": \\\"Lauren Moon\\\"\\n      }\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Actions via URL Params\"\n}\n[/block]\n`/object/{id}/actions`\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**entities**\\nboolean\",\n    \"0-1\": \"Default: `false`\",\n    \"1-0\": \"**display**\\nboolean\",\n    \"1-1\": \"Default: `false`\",\n    \"2-0\": \"**filter**\\nstring\",\n    \"3-0\": \"**fields**\\nstring\",\n    \"3-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- data\\n- date\\n- idMemberCreator\\n- type\",\n    \"4-0\": \"**limit**\\ninteger\",\n    \"4-1\": \"Default: `50`\\n`0` - `1000`\",\n    \"5-0\": \"**format**\\nstring\",\n    \"5-1\": \"Default: `list`\\nOne of: `count`, `list`, `minimal`\",\n    \"6-0\": \"**since**\\ndate\",\n    \"7-0\": \"**before**\\ndate\",\n    \"8-0\": \"**page**\\ninteger\",\n    \"8-1\": \"Default: `0`\",\n    \"9-0\": \"**idModels**\\nstring\",\n    \"9-1\": \"Comma-separated list of model IDs\",\n    \"10-0\": \"**member**\\nboolean\",\n    \"10-1\": \"Default: `true`\",\n    \"11-0\": \"**member_fields**\\nstring\",\n    \"11-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"12-0\": \"**memberCreator**\\nboolean\",\n    \"12-1\": \"Default: `true`\",\n    \"13-0\": \"**memberCreator_fields**\\nstring\",\n    \"13-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"2-1\": \"Default: `commentCard, updateCard:idList`\",\n    \"6-1\": \"ISO-Formatted Date (`2017-12-07T15:07:08.977Z`) or MongoID (`5a6029d00000000000000000`)\",\n    \"7-1\": \"ISO-Formatted Date (`2017-12-07T15:07:08.977Z`) or MongoID (`5a6029d00000000000000000`)\"\n  },\n  \"cols\": 2,\n  \"rows\": 14\n}\n[/block]","excerpt":"","slug":"actions-nested-resource","type":"basic","title":"Actions Nested Resource","__v":2,"updatedAt":"2019-06-10T14:28:52.517Z"},{"_id":"5931c36544c159000ff83499","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c301d1f976000f7b4c0b","updates":["59818220302822002abfc218","5981826a0b339f0035d3ffd1","59a5699db21a2b000f3d0689","59a569a1cdbd85001bfb15d9","5a60300be6fd95001299b603"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:58:29.446Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Due to the number of actions that occur in Trello, nested action resources filter out specific action types. For example, changing the name of a checklistItem will trigger a webhook on the board and will `POST` an action of type updateCheckItem with the old and new name of the checklistItem. However, no nested actions resource will return action types of `updateCheckItem`: `/cards/{id}/actions/`, `/boards/{id}/actions/`. However you can get that specific action instance via `GET` `/actions/{id}/`.\n[block:api-header]\n{\n  \"title\": \"All Action Types\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Action Name\",\n    \"h-1\": \"Context\",\n    \"0-0\": \"* acceptEnterpriseJoinRequest\\n* addAdminToBoard\\n* addAdminToOrganization\\n* addAttachmentToCard\\n* addBoardsPinnedToMember\\n* addChecklistToCard\\n* addLabelToCard\\n* addMemberToBoard\\n* addMemberToCard\\n* addMemberToOrganization\\n* addOrganizationToEnterprise\\n* addToEnterprisePluginWhitelist\\n* addToOrganizationBoard\\n* commentCard\\n* convertToCardFromCheckItem\\n* copyBoard\\n* copyCard\\n* copyChecklist\\n* createLabel\\n* copyCommentCard\\n* createBoard\\n* createBoardInvitation\\n* createBoardPreference\\n* createCard\\n* createChecklist\\n* createList\\n* createOrganization\\n* createOrganizationInvitation\\n* deleteAttachmentFromCard\\n* deleteBoardInvitation\\n* deleteCard\\n* deleteCheckItem\\n* deleteLabel\\n* deleteOrganizationInvitation\\n* disableEnterprisePluginWhitelist\\n* disablePlugin\\n* disablePowerUp\\n* emailCard\\n* enableEnterprisePluginWhitelist\\n* enablePlugin\\n* enablePowerUp\\n* makeAdminOfBoard\\n* makeAdminOfOrganization\\n* makeNormalMemberOfBoard\\n* makeNormalMemberOfOrganization\\n* makeObserverOfBoard\\n* memberJoinedTrello\\n* moveCardFromBoard\\n* moveCardToBoard\\n* moveListFromBoard\\n* moveListToBoard\\n* removeAdminFromBoard\\n* removeAdminFromOrganization\\n* removeBoardsPinnedFromMember\\n* removeChecklistFromCard\\n* removeFromEnterprisePluginWhitelist\\n* removeFromOrganizationBoard\\n* removeLabelFromCard\\n* removeMemberFromBoard\\n* removeMemberFromCard\\n* removeMemberFromOrganization\\n* removeOrganizationFromEnterprise\\n* unconfirmedBoardInvitation\\n* unconfirmedOrganizationInvitation\\n* updateBoard\\n* updateCard\\n* updateCheckItem\\n* updateCheckItemStateOnCard\\n* updateChecklist\\n* updateLabel\\n* updateList\\n* updateMember\\n* updateOrganization\\n* voteOnCard\",\n    \"0-1\": \"Card\"\n  },\n  \"cols\": 1,\n  \"rows\": 1\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Excluded Action Types\"\n}\n[/block]\nThese actions will be sent to [Webhooks](ref:webhooks) but are not included in nested action resource responses (e.g. `GET board/[board_id]/actions`).\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"* addAdminToBoard (Deprecated in favor of makeAdminOfBoard)\\n* addAdminToOrganization (Deprecated in favor of makeAdminOfOrganization)\\n* addBoardsPinnedToMember\\n* addLabelToCard\\n* copyChecklist\\n* createBoardInvitation\\n* createBoardPreference\\n* createCheckItem\\n* createChecklist\\n* createLabel\\n* createOrganizationInvitation\\n* deleteAttachmentFromCard (Excluded from [/lists/{listId}/actions](ref:listsidactions))\\n* deleteCheckItem\\n* deleteComment\\n* deleteLabel\\n* makeAdminOfOrganization\\n* removeAdminFromBoard (Deprecated in favor of makeNormalMemberOfBoard)\\n* removeAdminFromOrganization (Deprecated in favor of makeNormalMemberOfOrganization)\\n* removeBoardsPinnedFromMember\\n* removeLabelFromCard\\n* removeMemberFromBoard\\n* removeMemberFromOrganization\\n* updateCheckItem\\n* updateComment\\n* updateLabel\\n* voteOnCard\",\n    \"h-0\": \"Action Name\",\n    \"h-1\": \"Context\"\n  },\n  \"cols\": 1,\n  \"rows\": 1\n}\n[/block]","excerpt":"Actions have many types.","slug":"action-types","type":"basic","title":"Action Types","__v":5,"updatedAt":"2019-06-10T14:28:52.517Z"},{"_id":"5931c33344c159000ff83496","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5825193a65f32219003d83d6","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:57:39.658Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c34f25934a000f698a64","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5952ff13c356e9001b124b58","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"display"},{"_id":"5952ff1b439bc9001b4ace4d","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"entities"},{"_id":"5952ff35439bc9001b4ace4e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of action [fields](ref:action-object)","default":"all","type":"string","name":"fields"},{"_id":"5952ff4f3c835f0015a20d4c","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"member"},{"_id":"5952ff6d3c835f0015a20d4d","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"member_fields"},{"_id":"5952ff87c356e9001b124b59","ref":"","in":"query","required":false,"desc":"Whether to include the member object for the creator of the action","default":"true","type":"boolean","name":"memberCreator"},{"_id":"5952ffa0780fd4001b122ffd","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"}],"url":"/actions/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"`GET` `/1/actions/55411859be21b8ad7dcd4c78?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"55411859be21b8ad7dcd4c78\\\",\\n  \\\"idMemberCreator\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n  \\\"data\\\": {\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n      \\\"name\\\": \\\"Trello Development\\\",\\n      \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n    },\\n    \\\"card\\\": {\\n      \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n      \\\"idShort\\\": 1211,\\n      \\\"name\\\": \\\"What can you expect from this board?\\\",\\n      \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n    },\\n    \\\"attachment\\\": {\\n      \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\",\\n      \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\",\\n      \\\"name\\\": \\\"trello-logo.png\\\",\\n      \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\"\\n    }\\n  },\\n  \\\"type\\\": \\\"addAttachmentToCard\\\",\\n  \\\"date\\\": \\\"2015-04-29T17:43:53.614Z\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n    \\\"avatarHash\\\": \\\"448c93683331562616e24a04b09d41fa\\\",\\n    \\\"fullName\\\": \\\"Michelle Bearheart\\\",\\n    \\\"initials\\\": \\\"MB\\\",\\n    \\\"username\\\": \\\"michellebearheart\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"translationKey\\\": \\\"action_add_attachment_to_card\\\",\\n    \\\"entities\\\": {\\n      \\\"attachment\\\": {\\n        \\\"type\\\": \\\"attachment\\\",\\n        \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\",\\n        \\\"link\\\": true,\\n        \\\"text\\\": \\\"trello-logo.png\\\",\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\"\\n      },\\n      \\\"attachmentPreview\\\": {\\n        \\\"type\\\": \\\"attachmentPreview\\\",\\n        \\\"originalUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\",\\n        \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"type\\\": \\\"card\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\",\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"text\\\": \\\"What can you expect from this board?\\\"\\n      },\\n      \\\"memberCreator\\\": {\\n        \\\"type\\\": \\\"member\\\",\\n        \\\"id\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n        \\\"username\\\": \\\"michellebearheart\\\",\\n        \\\"text\\\": \\\"Michelle Bearheart\\\"\\n      }\\n    }\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get information about an action","slug":"actionsactionid","type":"endpoint","title":"/actions/{id}","__v":9,"updatedAt":"2019-06-10T14:28:52.518Z","swagger":{"path":"/actions/{id}"}},{"_id":"595300793c835f0015a20d6e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:03:53.902Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530085c356e9001b124b5a","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5953009594417f0015ec7f46","ref":"","in":"path","required":false,"desc":"An action [field](ref:action-object)","default":"","type":"string","name":"field"}],"url":"/actions/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get a specific property of an action","slug":"actionsidfield","type":"endpoint","title":"/actions/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.519Z","swagger":{"path":"/actions/{id}/{field}"}},{"_id":"595300b18073c90015d53d56","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":["5a79c5d6797814004eff54cc","5cb5b553dd712c00435a91e0"],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:04:49.988Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300bd8073c90015d53d57","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595300cf341432001554e422","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/board","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the board for an action","slug":"actionsidboard","type":"endpoint","title":"/actions/{id}/board","__v":4,"updatedAt":"2019-06-10T14:28:52.520Z","swagger":{"path":"/actions/{id}/board"}},{"_id":"595300e9c356e9001b124b5b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:05:45.119Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300f2070f4c001b25541c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5953010615da33001b8a793e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/card","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get the card for an action","slug":"actionsidcard","type":"endpoint","title":"/actions/{id}/card","__v":2,"updatedAt":"2019-06-10T14:28:52.521Z","swagger":{"path":"/actions/{id}/card"}},{"_id":"595a7892d5ed050015dad51b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":["5b2726e0c64e6c00039a11a1"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T17:02:10.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"translationKey\": \"action_create_card\",\n  \"entities\": {\n    \"card\": {\n      \"type\": \"card\",\n      \"id\": \"5afc9d35cd18a8783df9302e\",\n      \"shortLink\": \"syyPe0pd\",\n      \"text\": \"Grill Hotdogs\"\n    },\n    \"list\": {\n      \"type\": \"list\",\n      \"id\": \"5afc3b6c1b7976bd7669d771\",\n      \"text\": \"To Do\"\n    },\n    \"memberCreator\": {\n      \"type\": \"member\",\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"username\": \"philmurray\",\n      \"text\": \"Phil Murray\"\n    }\n  }\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300f2070f4c001b25541c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"}],"url":"/actions/{id}/display","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get the display information for an action.","slug":"actionsiddisplay","type":"endpoint","title":"/actions/{id}/display","__v":2,"updatedAt":"2019-06-10T14:28:52.521Z","swagger":{"path":"/actions/{id}/display"}},{"_id":"59530124780fd4001b12301e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:06:44.995Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530130341432001554e423","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"59530143780fd4001b12301f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/list","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get the list for an action","slug":"actionsidlist","type":"endpoint","title":"/actions/{id}/list","__v":2,"updatedAt":"2019-06-10T14:28:52.522Z","swagger":{"path":"/actions/{id}/list"}},{"_id":"595301ab94417f0015ec7f47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:08:59.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595301b7c356e9001b124b5c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595301cc105a970015021718","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/member","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Gets the member of an action (not the creator)","slug":"actionsidmember","type":"endpoint","title":"/actions/{id}/member","__v":2,"updatedAt":"2019-06-10T14:28:52.523Z","swagger":{"path":"/actions/{id}/member"}},{"_id":"595301e4780fd4001b123020","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:09:56.900Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595301ef15da33001b8a793f","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595301ff439bc9001b4ace6f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/memberCreator","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Gets the member who created the action","slug":"actionsidmembercreator","type":"endpoint","title":"/actions/{id}/memberCreator","__v":2,"updatedAt":"2019-06-10T14:28:52.524Z","swagger":{"path":"/actions/{id}/memberCreator"}},{"_id":"59530215780fd4001b123021","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:10:45.927Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530220f135e5001be8e048","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"59530236341432001554e424","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/organization","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Get the organization of an action","slug":"actionsidorganization","type":"endpoint","title":"/actions/{id}/organization","__v":2,"updatedAt":"2019-06-10T14:28:52.525Z","swagger":{"path":"/actions/{id}/organization"}},{"_id":"5953024694417f0015ec7f48","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:11:34.477Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953025374ea3e001518d1dc","ref":"","in":"path","required":false,"desc":"The ID of the action to update","default":"","type":"string","name":"id"},{"_id":"5953029073082700156d5c88","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"text"}],"url":"/actions/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Only Comment Actions\",\n  \"body\": \"You can only use `PUT` on `commentCard` actions to update the comment. `PUT`ing a new text value will also update the comment on the card. You can only update the comment as the member who wrote the comment, or a member with greater permissions.\"\n}\n[/block]","excerpt":"Update a comment action","slug":"actionsid","type":"endpoint","title":"/actions/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.525Z","swagger":{"path":"/actions/{id}"}},{"_id":"595a78c7d63575001bd655ce","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T17:03:03.271Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953025374ea3e001518d1dc","ref":"","in":"path","required":false,"desc":"The ID of the action to update","default":"","type":"string","name":"id"},{"_id":"5953029073082700156d5c88","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"value"}],"url":"/actions/{id}/text","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Only Comment Actions\",\n  \"body\": \"You can only use `PUT` on `commentCard` actions to update the comment. `PUT`ing a new text value will also update the comment on the card. You can only update the comment as the member who wrote the comment, or a member with greater permissions.\"\n}\n[/block]","excerpt":"Update a comment action","slug":"actionsidtext","type":"endpoint","title":"/actions/{id}/text","__v":0,"updatedAt":"2019-06-10T14:28:52.526Z","swagger":{"path":"/actions/{id}/text"}},{"_id":"595302d13c835f0015a20d8f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:13:53.941Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595302e3780fd4001b123022","ref":"","in":"path","required":false,"desc":"The ID of the commentCard action to delete","default":"","type":"string","name":"id"}],"url":"/actions/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You can only use `DELETE` on `commentCard` actions. Deleting a `commentCard` action will also delete the comment on the card. You can only delete a `commentCard` action if you are the one that created the comment, you have more permissions on the board than the person that created the comment, or the person that created the comment has deleted their account.\",\n  \"title\": \"Only Comment Actions\"\n}\n[/block]","excerpt":"Delete a comment action","slug":"actionsid-1","type":"endpoint","title":"/actions/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.527Z","swagger":{"path":"/actions/{id}"}}]},{"_id":"594d190cd8a2f7001b0b5481","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c301d1f976000f7b4c0b","updates":["59ffc09630f873001033cdbc"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:35:08.120Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the action\",\n    \"1-0\": \"**data**\\nobject\",\n    \"2-0\": \"**date**\\ndate\",\n    \"2-1\": \"When the action occurred\",\n    \"3-0\": \"**idMemberCreator**\\nstring\",\n    \"3-1\": \"The ID of the member who caused the action\",\n    \"4-0\": \"**type**\\nstring\",\n    \"4-1\": \"The type of the action. See list of [Action Types](ref:action-types) for options.\",\n    \"1-1\": \"Relevant information regarding the action\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/actions/592f11060f95a3d3d46a987a\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"592f11060f95a3d3d46a987a\\\",\\n  \\\"idMemberCreator\\\": \\\"5191197f9433cf5507006338\\\",\\n  \\\"data\\\": {\\n    \\\"list\\\": {\\n      \\\"name\\\": \\\"Professional\\\",\\n      \\\"id\\\": \\\"54a17e9db559f0356ce022e4\\\"\\n    },\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"BdarzfKF\\\",\\n      \\\"name\\\": \\\"Life Goals\\\",\\n      \\\"id\\\": \\\"54a17d76d4a5072e3931736b\\\"\\n    },\\n    \\\"card\\\": {\\n      \\\"shortLink\\\": \\\"gplJv6dx\\\",\\n      \\\"idShort\\\": 2,\\n      \\\"name\\\": \\\"Increase revenue by 10%\\\",\\n      \\\"id\\\": \\\"54a1844d304d9736e54d2546\\\",\\n      \\\"due\\\": \\\"2017-12-12T17:00:00.000Z\\\"\\n    },\\n    \\\"old\\\": {\\n      \\\"due\\\": \\\"2017-05-01T16:00:00.000Z\\\"\\n    }\\n  },\\n  \\\"type\\\": \\\"updateCard\\\",\\n  \\\"date\\\": \\\"2017-05-31T18:52:54.933Z\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"5191197f9433cf5507006338\\\",\\n    \\\"avatarHash\\\": \\\"ae0fde383cc2a195c053f1ad42c02022\\\",\\n    \\\"fullName\\\": \\\"Brian Cervino\\\",\\n    \\\"initials\\\": \\\"BC\\\",\\n    \\\"username\\\": \\\"brian\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"translationKey\\\": \\\"action_changed_a_due_date\\\",\\n    \\\"entities\\\": {\\n      \\\"card\\\": {\\n        \\\"type\\\": \\\"card\\\",\\n        \\\"due\\\": \\\"2017-12-12T17:00:00.000Z\\\",\\n        \\\"id\\\": \\\"54a1844d304d9736e54d2546\\\",\\n        \\\"shortLink\\\": \\\"gplJv6dx\\\",\\n        \\\"text\\\": \\\"Increase revenue by 10%\\\"\\n      },\\n      \\\"date\\\": {\\n        \\\"type\\\": \\\"date\\\",\\n        \\\"date\\\": \\\"2017-12-12T17:00:00.000Z\\\"\\n      },\\n      \\\"memberCreator\\\": {\\n        \\\"type\\\": \\\"member\\\",\\n        \\\"id\\\": \\\"5191197f9433cf5507006338\\\",\\n        \\\"username\\\": \\\"brian\\\",\\n        \\\"text\\\": \\\"Brian Cervino\\\"\\n      }\\n    }\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"action-object","type":"basic","title":"Action Object","__v":1,"updatedAt":"2019-06-10T14:28:52.516Z"},{"_id":"594d1934596ccf00153357ab","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":["598881b34c88d5002594021a","5c00074b533f9d031428d4ac"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:35:48.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get","examples":{"codes":[]}},"isReference":true,"order":1,"body":"Actions are often included as [nested resources](ref:understanding-nested-resources) within the Trello API. Their highly-nested nature is due to the fact that actions are created within the context of other resources. For instance, when a user adds another user to a board, Trello creates an `addMemberToBoard` action that references the board. Therefore, it makes sense to be able to access all of the actions within the context of an object from which they were created.\n[block:api-header]\n{\n  \"title\": \"Nested Actions with Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Default\",\n    \"h-3\": \"Description\",\n    \"0-0\": \"**actions_entities**\\nboolean\",\n    \"0-1\": \"true, false\",\n    \"0-2\": \"false\",\n    \"0-3\": \"Boolean to return actions' entities or not.\",\n    \"1-0\": \"**actions_display**\\nboolean\",\n    \"1-1\": \"true, false\",\n    \"1-2\": \"false\",\n    \"1-3\": \"Boolean to return actions' display or not.\",\n    \"2-0\": \"**actions_format**\\nstring\",\n    \"2-1\": \"One of: count, list, or minimal\",\n    \"2-2\": \"list\",\n    \"2-3\": \"The format that actions should be returned in.\",\n    \"3-0\": \"**actions_since** \\nstring\",\n    \"4-0\": \"**actions_limit** \\ninteger\",\n    \"5-0\": \"**action_fields**\\nstring\",\n    \"6-0\": \"**action_member** \\nboolean\",\n    \"7-0\": \"**action_member_fields**\\nstring\",\n    \"7-1\": \"String\",\n    \"7-2\": \"avatarHash,fullName,initials,username\",\n    \"8-0\": \"**action_memberCreator**\\nboolean\",\n    \"8-1\": \"Bool\",\n    \"9-0\": \"**action_memberCreator_fields** \\nstring\",\n    \"9-1\": \"avatarHash,fullName,initials,username\",\n    \"3-2\": \"none\",\n    \"4-2\": \"50\",\n    \"4-1\": \"numberInRange 0,1000\",\n    \"5-2\": \"all\",\n    \"6-1\": \"true, false\",\n    \"6-2\": \"true\",\n    \"8-2\": \"true\",\n    \"3-1\": \"ISO Datetime or Mongo ID\",\n    \"3-3\": \"The maximum date for when the actions were created. For more information on using `since` to page responses, visit the intro to [Paging](https://developers.trello.com/docs/api-introduction#section-paging) page.\",\n    \"4-3\": \"The number of action objects to be returned.\",\n    \"5-3\": \"A comma-separated list of [Action Object Fields](https://trello.readme.io/v1.0/reference#actions) to be included in the returned action objects.\",\n    \"5-1\": \"Comma-separated list of [Action Object Fields](https://trello.readme.io/v1.0/reference#actions).\",\n    \"6-3\": \"Determines whether to return the member object for the action.\",\n    \"7-3\": \"The fields to be returned if the member object is being returned.\",\n    \"8-3\": \"Determines whether to return the memberCreator object for the action.\",\n    \"9-3\": \"The fields to be returned if the memberCreator object is being returned.\"\n  },\n  \"cols\": 4,\n  \"rows\": 10\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/BdarzfKF/?fields=id&actions=addAttachmentToCard&actions_limit=2&action_fields=idMemberCreator&action_memberCreator_fields=fullName\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"54a17d76d4a5072e3931736b\\\",\\n  \\\"actions\\\": [\\n    {\\n      \\\"id\\\": \\\"54a1b7c3a6ea7c2b1eaa5cdf\\\",\\n      \\\"idMemberCreator\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberCreator\\\": {\\n        \\\"id\\\": \\\"53baf533e697a982248cd73f\\\",\\n        \\\"fullName\\\": \\\"Lauren Moon\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"54a1b73f030916211e718516\\\",\\n      \\\"idMemberCreator\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberCreator\\\": {\\n        \\\"id\\\": \\\"53baf533e697a982248cd73f\\\",\\n        \\\"fullName\\\": \\\"Lauren Moon\\\"\\n      }\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Actions via URL Params\"\n}\n[/block]\n`/object/{id}/actions`\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**entities**\\nboolean\",\n    \"0-1\": \"Default: `false`\",\n    \"1-0\": \"**display**\\nboolean\",\n    \"1-1\": \"Default: `false`\",\n    \"2-0\": \"**filter**\\nstring\",\n    \"3-0\": \"**fields**\\nstring\",\n    \"3-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- data\\n- date\\n- idMemberCreator\\n- type\",\n    \"4-0\": \"**limit**\\ninteger\",\n    \"4-1\": \"Default: `50`\\n`0` - `1000`\",\n    \"5-0\": \"**format**\\nstring\",\n    \"5-1\": \"Default: `list`\\nOne of: `count`, `list`, `minimal`\",\n    \"6-0\": \"**since**\\ndate\",\n    \"7-0\": \"**before**\\ndate\",\n    \"8-0\": \"**page**\\ninteger\",\n    \"8-1\": \"Default: `0`\",\n    \"9-0\": \"**idModels**\\nstring\",\n    \"9-1\": \"Comma-separated list of model IDs\",\n    \"10-0\": \"**member**\\nboolean\",\n    \"10-1\": \"Default: `true`\",\n    \"11-0\": \"**member_fields**\\nstring\",\n    \"11-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"12-0\": \"**memberCreator**\\nboolean\",\n    \"12-1\": \"Default: `true`\",\n    \"13-0\": \"**memberCreator_fields**\\nstring\",\n    \"13-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"2-1\": \"Default: `commentCard, updateCard:idList`\",\n    \"6-1\": \"ISO-Formatted Date (`2017-12-07T15:07:08.977Z`) or MongoID (`5a6029d00000000000000000`)\",\n    \"7-1\": \"ISO-Formatted Date (`2017-12-07T15:07:08.977Z`) or MongoID (`5a6029d00000000000000000`)\"\n  },\n  \"cols\": 2,\n  \"rows\": 14\n}\n[/block]","excerpt":"","slug":"actions-nested-resource","type":"basic","title":"Actions Nested Resource","__v":2,"updatedAt":"2019-06-10T14:28:52.517Z"},{"_id":"5931c36544c159000ff83499","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5931c301d1f976000f7b4c0b","updates":["59818220302822002abfc218","5981826a0b339f0035d3ffd1","59a5699db21a2b000f3d0689","59a569a1cdbd85001bfb15d9","5a60300be6fd95001299b603"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:58:29.446Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Due to the number of actions that occur in Trello, nested action resources filter out specific action types. For example, changing the name of a checklistItem will trigger a webhook on the board and will `POST` an action of type updateCheckItem with the old and new name of the checklistItem. However, no nested actions resource will return action types of `updateCheckItem`: `/cards/{id}/actions/`, `/boards/{id}/actions/`. However you can get that specific action instance via `GET` `/actions/{id}/`.\n[block:api-header]\n{\n  \"title\": \"All Action Types\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Action Name\",\n    \"h-1\": \"Context\",\n    \"0-0\": \"* acceptEnterpriseJoinRequest\\n* addAdminToBoard\\n* addAdminToOrganization\\n* addAttachmentToCard\\n* addBoardsPinnedToMember\\n* addChecklistToCard\\n* addLabelToCard\\n* addMemberToBoard\\n* addMemberToCard\\n* addMemberToOrganization\\n* addOrganizationToEnterprise\\n* addToEnterprisePluginWhitelist\\n* addToOrganizationBoard\\n* commentCard\\n* convertToCardFromCheckItem\\n* copyBoard\\n* copyCard\\n* copyChecklist\\n* createLabel\\n* copyCommentCard\\n* createBoard\\n* createBoardInvitation\\n* createBoardPreference\\n* createCard\\n* createChecklist\\n* createList\\n* createOrganization\\n* createOrganizationInvitation\\n* deleteAttachmentFromCard\\n* deleteBoardInvitation\\n* deleteCard\\n* deleteCheckItem\\n* deleteLabel\\n* deleteOrganizationInvitation\\n* disableEnterprisePluginWhitelist\\n* disablePlugin\\n* disablePowerUp\\n* emailCard\\n* enableEnterprisePluginWhitelist\\n* enablePlugin\\n* enablePowerUp\\n* makeAdminOfBoard\\n* makeAdminOfOrganization\\n* makeNormalMemberOfBoard\\n* makeNormalMemberOfOrganization\\n* makeObserverOfBoard\\n* memberJoinedTrello\\n* moveCardFromBoard\\n* moveCardToBoard\\n* moveListFromBoard\\n* moveListToBoard\\n* removeAdminFromBoard\\n* removeAdminFromOrganization\\n* removeBoardsPinnedFromMember\\n* removeChecklistFromCard\\n* removeFromEnterprisePluginWhitelist\\n* removeFromOrganizationBoard\\n* removeLabelFromCard\\n* removeMemberFromBoard\\n* removeMemberFromCard\\n* removeMemberFromOrganization\\n* removeOrganizationFromEnterprise\\n* unconfirmedBoardInvitation\\n* unconfirmedOrganizationInvitation\\n* updateBoard\\n* updateCard\\n* updateCheckItem\\n* updateCheckItemStateOnCard\\n* updateChecklist\\n* updateLabel\\n* updateList\\n* updateMember\\n* updateOrganization\\n* voteOnCard\",\n    \"0-1\": \"Card\"\n  },\n  \"cols\": 1,\n  \"rows\": 1\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Excluded Action Types\"\n}\n[/block]\nThese actions will be sent to [Webhooks](ref:webhooks) but are not included in nested action resource responses (e.g. `GET board/[board_id]/actions`).\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"* addAdminToBoard (Deprecated in favor of makeAdminOfBoard)\\n* addAdminToOrganization (Deprecated in favor of makeAdminOfOrganization)\\n* addBoardsPinnedToMember\\n* addLabelToCard\\n* copyChecklist\\n* createBoardInvitation\\n* createBoardPreference\\n* createCheckItem\\n* createChecklist\\n* createLabel\\n* createOrganizationInvitation\\n* deleteAttachmentFromCard (Excluded from [/lists/{listId}/actions](ref:listsidactions))\\n* deleteCheckItem\\n* deleteComment\\n* deleteLabel\\n* makeAdminOfOrganization\\n* removeAdminFromBoard (Deprecated in favor of makeNormalMemberOfBoard)\\n* removeAdminFromOrganization (Deprecated in favor of makeNormalMemberOfOrganization)\\n* removeBoardsPinnedFromMember\\n* removeLabelFromCard\\n* removeMemberFromBoard\\n* removeMemberFromOrganization\\n* updateCheckItem\\n* updateComment\\n* updateLabel\\n* voteOnCard\",\n    \"h-0\": \"Action Name\",\n    \"h-1\": \"Context\"\n  },\n  \"cols\": 1,\n  \"rows\": 1\n}\n[/block]","excerpt":"Actions have many types.","slug":"action-types","type":"basic","title":"Action Types","__v":5,"updatedAt":"2019-06-10T14:28:52.517Z"},{"_id":"5931c33344c159000ff83496","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5825193a65f32219003d83d6","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:57:39.658Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c34f25934a000f698a64","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5952ff13c356e9001b124b58","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"display"},{"_id":"5952ff1b439bc9001b4ace4d","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"entities"},{"_id":"5952ff35439bc9001b4ace4e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of action [fields](ref:action-object)","default":"all","type":"string","name":"fields"},{"_id":"5952ff4f3c835f0015a20d4c","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"member"},{"_id":"5952ff6d3c835f0015a20d4d","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"member_fields"},{"_id":"5952ff87c356e9001b124b59","ref":"","in":"query","required":false,"desc":"Whether to include the member object for the creator of the action","default":"true","type":"boolean","name":"memberCreator"},{"_id":"5952ffa0780fd4001b122ffd","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"}],"url":"/actions/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"`GET` `/1/actions/55411859be21b8ad7dcd4c78?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"55411859be21b8ad7dcd4c78\\\",\\n  \\\"idMemberCreator\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n  \\\"data\\\": {\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n      \\\"name\\\": \\\"Trello Development\\\",\\n      \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n    },\\n    \\\"card\\\": {\\n      \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n      \\\"idShort\\\": 1211,\\n      \\\"name\\\": \\\"What can you expect from this board?\\\",\\n      \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n    },\\n    \\\"attachment\\\": {\\n      \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\",\\n      \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\",\\n      \\\"name\\\": \\\"trello-logo.png\\\",\\n      \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\"\\n    }\\n  },\\n  \\\"type\\\": \\\"addAttachmentToCard\\\",\\n  \\\"date\\\": \\\"2015-04-29T17:43:53.614Z\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n    \\\"avatarHash\\\": \\\"448c93683331562616e24a04b09d41fa\\\",\\n    \\\"fullName\\\": \\\"Michelle Bearheart\\\",\\n    \\\"initials\\\": \\\"MB\\\",\\n    \\\"username\\\": \\\"michellebearheart\\\"\\n  },\\n  \\\"display\\\": {\\n    \\\"translationKey\\\": \\\"action_add_attachment_to_card\\\",\\n    \\\"entities\\\": {\\n      \\\"attachment\\\": {\\n        \\\"type\\\": \\\"attachment\\\",\\n        \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\",\\n        \\\"link\\\": true,\\n        \\\"text\\\": \\\"trello-logo.png\\\",\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\"\\n      },\\n      \\\"attachmentPreview\\\": {\\n        \\\"type\\\": \\\"attachmentPreview\\\",\\n        \\\"originalUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1294x1268/219cc6eb9c9b7b2ef8b1251c90a4184a/trello-logo.png\\\",\\n        \\\"id\\\": \\\"55411857be21b8ad7dcd4c70\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/600x588/09dcbeb01f2de5d29a513c6e3aad3649/trello-logo.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/4f7dcc310113192a307f347d/1200x1176/728412168dacbfff02e9414d84a0356f/trello-logo.png\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"type\\\": \\\"card\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\",\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"text\\\": \\\"What can you expect from this board?\\\"\\n      },\\n      \\\"memberCreator\\\": {\\n        \\\"type\\\": \\\"member\\\",\\n        \\\"id\\\": \\\"54e20f22ca5e45bc555c1cdb\\\",\\n        \\\"username\\\": \\\"michellebearheart\\\",\\n        \\\"text\\\": \\\"Michelle Bearheart\\\"\\n      }\\n    }\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get information about an action","slug":"actionsactionid","type":"endpoint","title":"/actions/{id}","__v":9,"updatedAt":"2019-06-10T14:28:52.518Z","swagger":{"path":"/actions/{id}"}},{"_id":"595300793c835f0015a20d6e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:03:53.902Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530085c356e9001b124b5a","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5953009594417f0015ec7f46","ref":"","in":"path","required":false,"desc":"An action [field](ref:action-object)","default":"","type":"string","name":"field"}],"url":"/actions/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get a specific property of an action","slug":"actionsidfield","type":"endpoint","title":"/actions/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.519Z","swagger":{"path":"/actions/{id}/{field}"}},{"_id":"595300b18073c90015d53d56","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":["5a79c5d6797814004eff54cc","5cb5b553dd712c00435a91e0"],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:04:49.988Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300bd8073c90015d53d57","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595300cf341432001554e422","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/board","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the board for an action","slug":"actionsidboard","type":"endpoint","title":"/actions/{id}/board","__v":4,"updatedAt":"2019-06-10T14:28:52.520Z","swagger":{"path":"/actions/{id}/board"}},{"_id":"595300e9c356e9001b124b5b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:05:45.119Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300f2070f4c001b25541c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"5953010615da33001b8a793e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/card","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get the card for an action","slug":"actionsidcard","type":"endpoint","title":"/actions/{id}/card","__v":2,"updatedAt":"2019-06-10T14:28:52.521Z","swagger":{"path":"/actions/{id}/card"}},{"_id":"595a7892d5ed050015dad51b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":["5b2726e0c64e6c00039a11a1"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T17:02:10.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"translationKey\": \"action_create_card\",\n  \"entities\": {\n    \"card\": {\n      \"type\": \"card\",\n      \"id\": \"5afc9d35cd18a8783df9302e\",\n      \"shortLink\": \"syyPe0pd\",\n      \"text\": \"Grill Hotdogs\"\n    },\n    \"list\": {\n      \"type\": \"list\",\n      \"id\": \"5afc3b6c1b7976bd7669d771\",\n      \"text\": \"To Do\"\n    },\n    \"memberCreator\": {\n      \"type\": \"member\",\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"username\": \"philmurray\",\n      \"text\": \"Phil Murray\"\n    }\n  }\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595300f2070f4c001b25541c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"}],"url":"/actions/{id}/display","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get the display information for an action.","slug":"actionsiddisplay","type":"endpoint","title":"/actions/{id}/display","__v":2,"updatedAt":"2019-06-10T14:28:52.521Z","swagger":{"path":"/actions/{id}/display"}},{"_id":"59530124780fd4001b12301e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:06:44.995Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530130341432001554e423","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"59530143780fd4001b12301f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/list","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get the list for an action","slug":"actionsidlist","type":"endpoint","title":"/actions/{id}/list","__v":2,"updatedAt":"2019-06-10T14:28:52.522Z","swagger":{"path":"/actions/{id}/list"}},{"_id":"595301ab94417f0015ec7f47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:08:59.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595301b7c356e9001b124b5c","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595301cc105a970015021718","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/member","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Gets the member of an action (not the creator)","slug":"actionsidmember","type":"endpoint","title":"/actions/{id}/member","__v":2,"updatedAt":"2019-06-10T14:28:52.523Z","swagger":{"path":"/actions/{id}/member"}},{"_id":"595301e4780fd4001b123020","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:09:56.900Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595301ef15da33001b8a793f","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"595301ff439bc9001b4ace6f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/memberCreator","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Gets the member who created the action","slug":"actionsidmembercreator","type":"endpoint","title":"/actions/{id}/memberCreator","__v":2,"updatedAt":"2019-06-10T14:28:52.524Z","swagger":{"path":"/actions/{id}/memberCreator"}},{"_id":"59530215780fd4001b123021","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:10:45.927Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530220f135e5001be8e048","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"id"},{"_id":"59530236341432001554e424","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/actions/{id}/organization","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Get the organization of an action","slug":"actionsidorganization","type":"endpoint","title":"/actions/{id}/organization","__v":2,"updatedAt":"2019-06-10T14:28:52.525Z","swagger":{"path":"/actions/{id}/organization"}},{"_id":"5953024694417f0015ec7f48","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:11:34.477Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953025374ea3e001518d1dc","ref":"","in":"path","required":false,"desc":"The ID of the action to update","default":"","type":"string","name":"id"},{"_id":"5953029073082700156d5c88","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"text"}],"url":"/actions/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Only Comment Actions\",\n  \"body\": \"You can only use `PUT` on `commentCard` actions to update the comment. `PUT`ing a new text value will also update the comment on the card. You can only update the comment as the member who wrote the comment, or a member with greater permissions.\"\n}\n[/block]","excerpt":"Update a comment action","slug":"actionsid","type":"endpoint","title":"/actions/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.525Z","swagger":{"path":"/actions/{id}"}},{"_id":"595a78c7d63575001bd655ce","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5931c301d1f976000f7b4c0b","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T17:03:03.271Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953025374ea3e001518d1dc","ref":"","in":"path","required":false,"desc":"The ID of the action to update","default":"","type":"string","name":"id"},{"_id":"5953029073082700156d5c88","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"value"}],"url":"/actions/{id}/text","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Only Comment Actions\",\n  \"body\": \"You can only use `PUT` on `commentCard` actions to update the comment. `PUT`ing a new text value will also update the comment on the card. You can only update the comment as the member who wrote the comment, or a member with greater permissions.\"\n}\n[/block]","excerpt":"Update a comment action","slug":"actionsidtext","type":"endpoint","title":"/actions/{id}/text","__v":0,"updatedAt":"2019-06-10T14:28:52.526Z","swagger":{"path":"/actions/{id}/text"}},{"_id":"595302d13c835f0015a20d8f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5931c301d1f976000f7b4c0b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:13:53.941Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595302e3780fd4001b123022","ref":"","in":"path","required":false,"desc":"The ID of the commentCard action to delete","default":"","type":"string","name":"id"}],"url":"/actions/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You can only use `DELETE` on `commentCard` actions. Deleting a `commentCard` action will also delete the comment on the card. You can only delete a `commentCard` action if you are the one that created the comment, you have more permissions on the board than the person that created the comment, or the person that created the comment has deleted their account.\",\n  \"title\": \"Only Comment Actions\"\n}\n[/block]","excerpt":"Delete a comment action","slug":"actionsid-1","type":"endpoint","title":"/actions/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.527Z","swagger":{"path":"/actions/{id}"}},{"_id":"594d1192f4cb8a001bbe2bbb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:03:14.012Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952971a4731e4005d8255ee","ref":"","in":"query","required":true,"desc":"A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. \"urls=/members/trello,/cards/[cardId]\"","default":"","type":"string","name":"urls"}],"url":"/batch","method":"get","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/batch/?urls=/members/trello/,boards/4eea4ffc91e31d1746000046,cards/74836e2c91e31d1746008921/pluginData&key=[yourKey]&token=[yourToken]"}]}},"isReference":true,"order":3,"body":"The batch endpoint allows you to make multiple GET requests to the Trello API in a single request. By batching GET requests together, you can reduce the volume of calls you are making to the API and more easily stay within your API rate limit. The batch endpoint can not be called recursively; requests containing the batch url will be ignored.","excerpt":"","slug":"batch","type":"basic","title":"Batch","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.530Z","children":[{"_id":"595abf17d5ed050015dad74b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:03:03.565Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/batch/?urls=/members/trello/,boards/4eea4ffc91e31d1746000046,cards/74836e2c91e31d1746008921/pluginData&key=[yourKey]&token=[yourToken]"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952971a4731e4005d8255ee","ref":"","in":"query","required":true,"desc":"A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. \"urls=/members/trello,/cards/[cardId]\"","default":"","type":"string","name":"urls"}],"url":"/batch","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"","excerpt":"","slug":"batch-1","type":"endpoint","title":"/batch","__v":0,"parentDoc":"594d1192f4cb8a001bbe2bbb","updatedAt":"2019-06-10T14:28:52.530Z","swagger":{"path":"/batch"}}],"childrenPages":[{"_id":"595abf17d5ed050015dad74b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:03:03.565Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/batch/?urls=/members/trello/,boards/4eea4ffc91e31d1746000046,cards/74836e2c91e31d1746008921/pluginData&key=[yourKey]&token=[yourToken]"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952971a4731e4005d8255ee","ref":"","in":"query","required":true,"desc":"A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. \"urls=/members/trello,/cards/[cardId]\"","default":"","type":"string","name":"urls"}],"url":"/batch","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"","excerpt":"","slug":"batch-1","type":"endpoint","title":"/batch","__v":0,"parentDoc":"594d1192f4cb8a001bbe2bbb","updatedAt":"2019-06-10T14:28:52.530Z","swagger":{"path":"/batch"}}]},{"_id":"595abf17d5ed050015dad74b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:03:03.565Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/batch/?urls=/members/trello/,boards/4eea4ffc91e31d1746000046,cards/74836e2c91e31d1746008921/pluginData&key=[yourKey]&token=[yourToken]"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952971a4731e4005d8255ee","ref":"","in":"query","required":true,"desc":"A list of API routes. Maximum of 10 routes allowed. The routes should begin with a forward slash and should not include the API version number - e.g. \"urls=/members/trello,/cards/[cardId]\"","default":"","type":"string","name":"urls"}],"url":"/batch","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"","excerpt":"","slug":"batch-1","type":"endpoint","title":"/batch","__v":0,"parentDoc":"594d1192f4cb8a001bbe2bbb","updatedAt":"2019-06-10T14:28:52.530Z","swagger":{"path":"/batch"}},{"_id":"59304329b810fd000fccb51d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":["5965167044f169001a9250c4","59dbcf35ab0b3200260788b0","5a28b3c6b948c200120292c3"],"next":{"pages":[],"description":""},"createdAt":"2017-06-01T16:39:05.288Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"Boards are fundamental to Trello. A board may belong to 0 or 1 teams and can have 0 or more lists. This is what a board looks like:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/d2fd5ad-Screen_Shot_2017-07-21_at_11.51.12_AM.png\",\n        \"Screen Shot 2017-07-21 at 11.51.12 AM.png\",\n        1195,\n        869,\n        \"#cbbfb8\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boards-2","type":"basic","title":"Boards","__v":3,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.531Z","children":[{"_id":"5948381532618000272097c5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":["5aa669ba61096f001cc1984f","5b31515cec613b000312ecbd"],"next":{"pages":[],"description":""},"createdAt":"2017-06-19T20:46:13.471Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id** \\nstring\",\n    \"0-1\": \"The ID of the board\",\n    \"1-0\": \"**name** \\nstring\",\n    \"2-0\": \"**desc**\\nstring\",\n    \"3-0\": \"**descData** \\nstring or `null`\",\n    \"4-0\": \"**closed**\\nboolean\",\n    \"5-0\": \"**idOrganization** \\nstring\",\n    \"6-0\": \"**pinned** \\nboolean\",\n    \"7-0\": \"**url** \\nstring\",\n    \"8-0\": \"**shortUrl** \\nstring\",\n    \"9-0\": \"**prefs**\\nobject\",\n    \"10-0\": \"**labelNames**\\nobject\",\n    \"1-1\": \"The name of the board\",\n    \"2-1\": \"The description of the board.\\n*Deprecated*\",\n    \"4-1\": \"Boolean whether the board has been closed or not.\",\n    \"5-1\": \"MongoID of the organization to which the board belongs.\",\n    \"6-1\": \"Boolean whether the board has been pinned or not.\",\n    \"7-1\": \"Persistent URL for the board.\",\n    \"8-1\": \"URL for the board using only its shortMongoID\",\n    \"10-1\": \"Object containing color keys and the label names given for one label of each color on the board. To get a full list of labels on the board see [/boards/{id}/labels/](https://developers.trello.com/v1.0/reference#boardsboardidlabels).\",\n    \"3-1\": \"If the description includes custom emoji, this will contain the data necessary to display them.\",\n    \"9-1\": \"Short for \\\"preferences\\\", these are the settings for the board\",\n    \"11-0\": \"**starred**\\nboolean\",\n    \"11-1\": \"Whether the board has been starred by the current request's user.\",\n    \"12-0\": \"**limits**\\nobject\",\n    \"12-1\": \"An object containing information on the limits that exist for the board. Read more about at [Limits](doc:limits).\",\n    \"13-0\": \"**memberships**\\narray\",\n    \"13-1\": \"Array of objects that represent the relationship of users to this board as [memberships](ref:boardsidmemberships).\"\n  },\n  \"cols\": 2,\n  \"rows\": 14\n}\n[/block]\nAn example request and response for a board object and all of its fields would look like:\n\n`GET` `/1/boards/5612e4f91b25c15e873722b8?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5612e4f91b25c15e873722b8\\\",\\n  \\\"name\\\": \\\"Employee Manual\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"54b58957112602c9a0be7aa3\\\",\\n  \\\"invited\\\": false,\\n  \\\"limits\\\": {\\n    \\\"attachments\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 34200,\\n        \\\"warnAt\\\": 32400\\n      }\\n    },\\n    \\\"boards\\\": {\\n      \\\"totalMembersPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1520,\\n        \\\"warnAt\\\": 1440\\n      }\\n    },\\n    \\\"cards\\\": {\\n      \\\"openPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 4750,\\n        \\\"warnAt\\\": 4500\\n      },\\n      \\\"totalPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1900000,\\n        \\\"warnAt\\\": 1800000\\n      }\\n    },\\n    \\\"checklists\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1900000,\\n        \\\"warnAt\\\": 1800000\\n      }\\n    },\\n    \\\"customFields\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 48,\\n        \\\"warnAt\\\": 45\\n      }\\n    },\\n    \\\"labels\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 950,\\n        \\\"warnAt\\\": 900\\n      }\\n    },\\n    \\\"lists\\\": {\\n      \\\"openPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 475,\\n        \\\"warnAt\\\": 450\\n      },\\n      \\\"totalPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 2850,\\n        \\\"warnAt\\\": 2700\\n      }\\n    }\\n  },\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"5612e4fb1b25c15e8737234b\\\",\\n      \\\"idMember\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"5925e4fc63096260c349cbd4\\\",\\n      \\\"idMember\\\": \\\"53cd82cd7ed746db278c4f32\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    }\\n  ],\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": false,\\n  \\\"url\\\": \\\"https://trello.com/b/HbTEX5hb/employee-manual\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"5925b78fa1bd45e1bfb835da\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1707/f3c8b6101072d80565d9b6368f05b19d/photo-1495571758719-6ec1e876d6ae\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/140x100/5afcd242d52da7ad4827966d8c896c00/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/256x192/d297510e553abc340fb0de3570445f03/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/480x480/08b5996b0a87a0f3dd80af488d99194a/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/960x960/7cb60ad23bdee1ca45a7c5e4e0c07968/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1024x1024/dca79e47ce10cd2c985dc4ba61abd9cc/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2048,\\n        \\\"height\\\": 2048,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2048x2048/b5a88d70569d9ded2af259e8d332c346/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1280x1280/c9ae077543d6c41ea2d48d84fdc12484/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1920,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1920x1920/cc85a9a12195863a1ff2193b5bb3a651/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2560,\\n        \\\"height\\\": 1600,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1600/de59d9e742f2de51d4284c6fd7c07f5d/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2560,\\n        \\\"height\\\": 1707,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1707/f3c8b6101072d80565d9b6368f05b19d/photo-1495571758719-6ec1e876d6ae\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"backgroundBottomColor\\\": \\\"#332b09\\\",\\n    \\\"backgroundTopColor\\\": \\\"#d3c4a9\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [],\\n  \\\"shortLink\\\": \\\"HbTEX5hb\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"\\\",\\n    \\\"yellow\\\": \\\"good to go\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [],\\n  \\\"dateLastActivity\\\": \\\"2016-01-07T21:24:47.855Z\\\",\\n  \\\"dateLastView\\\": \\\"2018-03-12T14:15:20.234Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/HbTEX5hb\\\",\\n  \\\"idTags\\\": [],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"board-object","type":"basic","title":"Board Object","__v":2,"parentDoc":"59304329b810fd000fccb51d","updatedAt":"2019-06-10T14:28:52.531Z"},{"_id":"594abbcd721bd90010e34a4d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-21T18:32:45.955Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Boards are accessible as [nested resources](ref:understanding-nested-resources) via a number of other resources.\n[block:api-header]\n{\n  \"title\": \"Nested Boards via Query Params\"\n}\n[/block]\nFor objects that can contain multiple boards, like `organizations` and `members`\n\n`/1/{object}/{id}?boards=open`\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**boards**\",\n    \"0-1\": \"Default: `none`\\n\\n`all` or a comma-separated list of:\\n\\n- `open` - Returns all boards that are open.\\n- `closed` - Returns all boards that have been closed.\\n- `members` - Returns all boards that have visibility set to Private.\\n- `organization` - Returns all boards that have visibility set to Team.\\n- `public` - Returns all boards that have visibility set to Public.\\n- `starred` - Returns all boards that have been starred.\",\n    \"1-0\": \"**board_fields**\",\n    \"1-1\": \"Default: `all`\\n\\n`all` or a comma-separated list of board [fields](ref:board-object)\",\n    \"2-0\": \"**board_actions**\",\n    \"2-1\": \"`all` or a comma-separated list of:\\n\\n- addAttachmentToCard\\n- addChecklistToCard\\n- addMemberToBoard\\n- addMemberToCard\\n- addMemberToOrganization\\n- addToOrganizationBoard\\n- commentCard\\n- convertToCardFromCheckItem\\n- copyBoard\\n- copyCard\\n- copyCommentCard\\n- createBoard\\n- createCard\\n- createList\\n- createOrganization\\n- deleteAttachmentFromCard\\n- deleteBoardInvitation\\n- deleteCard\\n- deleteOrganizationInvitation\\n- disablePowerUp\\n- emailCard\\n- enablePowerUp\\n- makeAdminOfBoard\\n- makeNormalMemberOfBoard\\n- makeNormalMemberOfOrganization\\n- makeObserverOfBoard\\n- memberJoinedTrello\\n- moveCardFromBoard\\n- moveCardToBoard\\n- moveListFromBoard\\n- moveListToBoard\\n- removeChecklistFromCard\\n- removeFromOrganizationBoard\\n- removeMemberFromCard\\n- unconfirmedBoardInvitation\\n- unconfirmedOrganizationInvitation\\n- updateBoard\\n- updateCard\\n- updateCard:closed\\n- updateCard:desc\\n- updateCard:idList\\n- updateCard:name\\n- updateCheckItemStateOnCard\\n- updateChecklist\\n- updateList\\n- updateList:closed\\n- updateList:name\\n- updateMember\\n- updateOrganization\",\n    \"3-0\": \"**board_actions_entities**\",\n    \"3-1\": \"Default: `false`\\n`true` or `false`\",\n    \"4-0\": \"**board_actions_display**\",\n    \"4-1\": \"Default: `false`\\n`true` or `false`\",\n    \"5-0\": \"**board_actions_format**\",\n    \"5-1\": \"Default: `list`\\nOne of: `count`, `list`, `minimal`\",\n    \"6-0\": \"**board_actions_since**\",\n    \"6-1\": \"A date, `null`, or `lastView`\",\n    \"7-0\": \"**board_actions_limit**\",\n    \"7-1\": \"Default: 50\\nMax: 1000\",\n    \"8-0\": \"**board_action_fields**\",\n    \"8-1\": \"`all` or a comma-separated list of action [fields](ref:action-object)\",\n    \"9-0\": \"**board_lists**\",\n    \"9-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\"\n  },\n  \"cols\": 2,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"boards-nested-resource","type":"basic","title":"Boards Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.532Z"},{"_id":"5930438a3d2a84000f3fc455","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","updates":["593ee313f69a3b00314a93e5","593ee314b8bb9b002f176927","5b615ebba95b0a0003442860","5bd8528d9f8abf0031417b08","5cb455434910200019864b9a","5cda3f307f1a56004b335a1a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-01T16:40:42.400Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"language":"text","code":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"592da9d093a38d2500465fd9","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"},{"_id":"594abb176496cb003a87996c","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about actions as nested resources [here](https://trello.readme.io/reference#actions-nested-resource).","default":"all","type":"string","name":"actions"},{"_id":"594abb176496cb003a879964","ref":"","in":"query","required":false,"desc":"Valid values are one of: `mine` or `none`.","default":"none","type":"string","name":"boardStars"},{"_id":"594abb176496cb003a87996b","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about cards as nested resources [here](https://trello.readme.io/reference#cards-nested-resource).","default":"none","type":"string","name":"cards"},{"_id":"598dc208ce7da8002fc6db83","ref":"","in":"query","required":false,"desc":"Use with the `cards` param to include card pluginData with the response","default":"false","type":"boolean","name":"card_pluginData"},{"_id":"594abb176496cb003a879956","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about checklists as nested resources [here](https://trello.readme.io/reference#checklists-nested-resource).","default":"none","type":"string","name":"checklists"},{"_id":"5bca56054fc912003283daaa","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about custom fields as nested resources [here](#custom-fields-nested-resource).","default":"false","type":"boolean","name":"customFields"},{"_id":"5aff195c1e89e1000352ca99","ref":"","in":"query","required":false,"desc":"The fields of the board to be included in the response. Valid values: all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url","default":"name,desc,descData,closed,idOrganization,pinned,url,shortUrl,prefs,labelNames","type":"string","name":"fields"},{"_id":"594abb176496cb003a879963","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about labels as nested resources [here](https://trello.readme.io/reference#labels-nested-resource).","default":"","type":"string","name":"labels"},{"_id":"592da73351a3e80f00eb5113","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about lists as nested resources [here](https://trello.readme.io/reference#lists-nested-resource).","default":"open","type":"string","name":"lists"},{"_id":"594abb176496cb003a87995b","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about members as nested resources [here](https://trello.readme.io/reference#members-nested-resource).","default":"none","type":"string","name":"members"},{"_id":"594abb176496cb003a87995e","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about memberships as nested resources [here](https://trello.readme.io/reference#memberships-nested-resource).","default":"none","type":"string","name":"memberships"},{"_id":"594abb176496cb003a879959","ref":"","in":"query","required":false,"desc":"Returns a list of member objects representing members who been invited to be a member of the board. One of: admins, all, none, normal, owners","default":"none","type":"string","name":"membersInvited"},{"_id":"594abb176496cb003a879958","ref":"","in":"query","required":false,"desc":"The member fields to be included in the membersInvited response. Valid values: all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"all","type":"string","name":"membersInvited_fields"},{"_id":"594abb176496cb003a879957","ref":"","in":"query","required":false,"desc":"Determines whether the pluginData for this board should be returned. Valid values: true or false.","default":"false","type":"boolean","name":"pluginData"},{"_id":"594abb176496cb003a879954","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about organizations as nested resources [here](https://trello.readme.io/reference#organization-nested-resource).","default":"false","type":"boolean","name":"organization"},{"_id":"598dc2628f3e1d0023160e4c","ref":"","in":"query","required":false,"desc":"Use with the `organization` param to include organization pluginData with the response","default":"false","type":"boolean","name":"organization_pluginData"},{"_id":"594abb176496cb003a879950","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"myPrefs"},{"_id":"594abb176496cb003a87994f","ref":"","in":"query","required":false,"desc":"Also known as collections, tags, refer to the collection(s) that a Board belongs to.","default":"false","type":"boolean","name":"tags"}],"url":"/boards/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Request a single board.","slug":"boardsboardid-1","type":"endpoint","title":"/boards/{id}","__v":20,"parentDoc":"59304329b810fd000fccb51d","updatedAt":"2019-06-10T14:28:52.532Z","swagger":{"path":"/boards/{id}"}},{"_id":"5931c0ab25934a000f698a36","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:46:51.464Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n\"_value\": \"https://trello.com/b/9clNtU6v\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c2d8d1f976000f7b4c07","ref":"","in":"path","required":false,"desc":"The ID of the board.","default":"","type":"string","name":"id"},{"_id":"5931c2d8d1f976000f7b4c06","ref":"","in":"path","required":false,"desc":"The field you'd like to receive. Valid values: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.","default":"","type":"string","name":"field"}],"url":"/boards/{id}/{field}","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/9clNtU6v/shortUrl"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"boards-nested-resources","type":"endpoint","title":"/boards/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.533Z","swagger":{"path":"/boards/{id}/{field}"}},{"_id":"5931c39a25934a000f698a67","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":["5a42844a2f35a4003084cf12","5a42844dd5c9a0001224fa05"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:59:22.060Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5939a82bcb0811201c349bf9\",\n    \"idMemberCreator\": \"5589c3ea49b40cedc28cf70e\",\n    \"data\": {\n      \"list\": {\n        \"name\": \"Done\",\n        \"id\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"board\": {\n        \"shortLink\": \"d2EnEWSY\",\n        \"name\": \"Best Test Board!\",\n        \"id\": \"586e8f681d4fe9b06a928307\"\n      },\n      \"card\": {\n        \"shortLink\": \"HKaaH2Pk\",\n        \"idShort\": 94,\n        \"name\": \"Design New System\",\n        \"id\": \"5939a829eba57d109331a289\",\n        \"pos\": 229375\n      },\n      \"old\": {\n        \"pos\": 163839.5\n      }\n    },\n    \"type\": \"updateCard\",\n    \"date\": \"2017-06-08T19:40:27.915Z\",\n    \"memberCreator\": {\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"avatarHash\": \"d24f1fe1d7da4b5aab5243ebd65af4a1\",\n      \"fullName\": \"Bentley Cook\",\n      \"initials\": \"BC\",\n      \"username\": \"bentleycook\"\n    }\n  },\n  {\n    \"id\": \"5939a82bcb0811201c349bf8\",\n    \"idMemberCreator\": \"5589c3ea49b40cedc28cf70e\",\n    \"data\": {\n      \"listAfter\": {\n        \"name\": \"Done\",\n        \"id\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"listBefore\": {\n        \"name\": \"Doing\",\n        \"id\": \"58d4144e4ec5c792a898d4b4\"\n      },\n      \"board\": {\n        \"shortLink\": \"d2EnEWSY\",\n        \"name\": \"Best Test Board!\",\n        \"id\": \"586e8f681d4fe9b06a928307\"\n      },\n      \"card\": {\n        \"shortLink\": \"HKaaH2Pk\",\n        \"idShort\": 94,\n        \"name\": \"Design New System\",\n        \"id\": \"5939a829eba57d109331a289\",\n        \"idList\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"old\": {\n        \"idList\": \"58d4144e4ec5c792a898d4b4\"\n      }\n    },\n    \"type\": \"updateCard\",\n    \"date\": \"2017-06-08T19:40:27.878Z\",\n    \"memberCreator\": {\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"avatarHash\": \"d24f1fe1d7da4b5aab5243ebd65af4a1\",\n      \"fullName\": \"Bentley Cook\",\n      \"initials\": \"BC\",\n      \"username\": \"bentleycook\"\n    }\n  }\n]","language":"json","status":200},{"name":"","code":"unauthorized permission requested","language":"text","status":401},{"status":400,"language":"text","code":"invalid id"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"}],"url":"/boards/{boardId}/actions","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/actions/?limit=2"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"# Board Actions\nThere are a lot of things you can do with this endpoint. It is a [nested resource](#understanding-nested-resources). For more information and to see everything you can do with actions, be sure to check out the [actions documentation](#actions-nested-resource). All of the query params found there can be used here.\n\n## Board Specific Actions\nOnly actions specific to the board will be shown.","excerpt":"","slug":"boardsboardidactions","type":"endpoint","title":"/boards/{id}/actions","__v":4,"updatedAt":"2019-06-10T14:28:52.533Z","swagger":{"path":"/boards/{boardId}/actions"}},{"_id":"5952d6ada953c2001b3f5351","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:05:33.520Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5846f8577b05f61b7a6f3971\",\n    \"idBoard\": \"4d5ea62fd76aa1136000000c\",\n    \"idPlugin\": \"55a5d917446f517774210013\"\n  },\n  {\n    \"id\": \"5846f99996b59c33ab555249\",\n    \"idBoard\": \"4d5ea62fd76aa1136000000c\",\n    \"idPlugin\": \"568c143d95adcd7308cbc3fb\"\n  }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"5952d6b8a953c2001b3f5352","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/boardPlugins","method":"get","examples":{"codes":[{"language":"html","code":"https://api.trello.com/1/boards/nC8QJJoZ/boardPlugins"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the enabled Power-Ups on a board","slug":"boardsidboardplugins","type":"endpoint","title":"/boards/{id}/boardPlugins","__v":1,"updatedAt":"2019-06-10T14:28:52.534Z","swagger":{"path":"/boards/{id}/boardPlugins"}},{"_id":"59396cb0819ce5002f425010","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:26:40.201Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/?fields=id&boardStars=mine"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"586e8f681d4fe9b06a928307\",\n  \"boardStars\": [\n    {\n      \"_id\": \"59370b012373f371a531b73d\",\n      \"idBoard\": \"586e8f681d4fe9b06a928307\",\n      \"pos\": 360448\n    }\n  ]\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"},{"_id":"5939a9ba4ea7ce000f36d7f0","ref":"","in":"path","required":false,"desc":"Valid values: mine, none","default":"mine","type":"string","name":"filter"}],"url":"/boards/{boardId}/boardStars","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"boardsboardidactions-2","type":"endpoint","title":"/boards/{id}/boardStars","__v":1,"updatedAt":"2019-06-10T14:28:52.534Z","swagger":{"path":"/boards/{boardId}/boardStars"}},{"_id":"59396d39819ce5002f425074","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:28:57.668Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5941465a11d2c760d95b95ad\",\n    \"name\": \"Checklists\",\n    \"members\": []\n  },\n  {\n    \"id\": \"5939a829eba57d109331a289\",\n    \"name\": \"Design New System\",\n    \"members\": [\n      {\n        \"id\": \"5589c3ea49b40cedc28cf70e\",\n        \"fullName\": \"Bentley Cook\"\n      }\n    ]\n  }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/boards/d2EnEWSY/cards/?limit=2&fields=name&members=true&member_fields=fullName&key=[yourKey]&token=[yourToken]"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"}],"url":"/boards/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"This resource is a nested card resource. Nested cards are documented [here](ref:cards-nested-resource). The cards returned by this resource will be within the context of the board whose ID is being used.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Not Chronologically Sorted\",\n  \"body\": \"Cards are returned sorted by lists within the board; they are not chronologically sorted. If you are paging through cards, you will want to retrieve the list of cards and then find the oldest card based on its ID - all IDs in Trello are mongo IDs and can be converted to timestamps (https://steveridout.github.io/mongo-object-time/).\"\n}\n[/block]","excerpt":"Fetch open cards on a board","slug":"boardsboardidtest","type":"endpoint","title":"/boards/{id}/cards","__v":4,"updatedAt":"2019-06-10T14:28:52.535Z","swagger":{"path":"/boards/{id}/cards"}},{"_id":"59396dec819ce5002f425076","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:31:56.243Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"59394c1939fc59910b4f7cfd\",\n    \"checkItemStates\": null,\n    \"closed\": true,\n    \"dateLastActivity\": \"2017-06-08T13:07:57.302Z\",\n    \"desc\": \"\",\n    \"descData\": null,\n    \"idBoard\": \"586e8f681d4fe9b06a928307\",\n    \"idList\": \"58d4144e4ec5c792a898d4b4\",\n    \"idMembersVoted\": [],\n    \"idShort\": 93,\n    \"idAttachmentCover\": null,\n    \"manualCoverAttachment\": false,\n    \"idLabels\": [],\n    \"name\": \"Test\",\n    \"pos\": 163839.5,\n    \"shortLink\": \"vxzyFCkF\",\n    \"badges\": {\n      \"votes\": 0,\n      \"viewingMemberVoted\": false,\n      \"subscribed\": false,\n      \"fogbugz\": \"\",\n      \"checkItems\": 0,\n      \"checkItemsChecked\": 0,\n      \"comments\": 0,\n      \"attachments\": 0,\n      \"description\": false,\n      \"due\": null,\n      \"dueComplete\": false\n    },\n    \"dueComplete\": false,\n    \"due\": null,\n    \"idChecklists\": [],\n    \"idMembers\": [],\n    \"labels\": [],\n    \"shortUrl\": \"https://trello.com/c/vxzyFCkF\",\n    \"subscribed\": false,\n    \"url\": \"https://trello.com/c/vxzyFCkF/93-test\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/cards/closed"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"},{"_id":"5951547f470b3a0015ba1512","ref":"","in":"path","required":false,"desc":"Valid Values: all, closed, none, open, visible.","default":"","type":"string","name":"filter"}],"url":"/boards/{boardId}/cards/{filter}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"","slug":"boardsboardidcardsfilter","type":"endpoint","title":"/boards/{id}/cards/{filter}","__v":1,"updatedAt":"2019-06-10T14:28:52.535Z","swagger":{"path":"/boards/{boardId}/cards/{filter}"}},{"_id":"59396c72e376d4002f8a12e6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:25:38.389Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/cards/59394c1939fc59910b4f7cfd"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"59394c1939fc59910b4f7cfd\",\n  \"badges\": {\n    \"votes\": 0,\n    \"viewingMemberVoted\": false,\n    \"subscribed\": false,\n    \"fogbugz\": \"\",\n    \"checkItems\": 0,\n    \"checkItemsChecked\": 0,\n    \"comments\": 0,\n    \"attachments\": 0,\n    \"description\": false,\n    \"due\": null,\n    \"dueComplete\": false\n  },\n  \"checkItemStates\": [],\n  \"closed\": true,\n  \"dueComplete\": false,\n  \"dateLastActivity\": \"2017-06-08T13:07:57.302Z\",\n  \"desc\": \"\",\n  \"descData\": null,\n  \"due\": null,\n  \"email\": null,\n  \"idBoard\": \"586e8f681d4fe9b06a928307\",\n  \"idChecklists\": [],\n  \"idList\": \"58d4144e4ec5c792a898d4b4\",\n  \"idMembers\": [],\n  \"idMembersVoted\": [],\n  \"idShort\": 93,\n  \"idAttachmentCover\": null,\n  \"manualCoverAttachment\": false,\n  \"labels\": [],\n  \"idLabels\": [],\n  \"name\": \"Test\",\n  \"pos\": 163839.5,\n  \"shortLink\": \"vxzyFCkF\",\n  \"shortUrl\": \"https://trello.com/c/vxzyFCkF\",\n  \"subscribed\": false,\n  \"url\": \"https://trello.com/c/vxzyFCkF/93-test\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"59515640702f02001bf3d884","ref":"","in":"path","required":false,"desc":"The id the card to retrieve.","default":"","type":"string","name":"idCard"}],"url":"/boards/{id}/cards/{idCard}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"This resource is used to retrieve individual cards on a board. It is a nested version of the cards object. For more on the query parameters available, read the documentation [here](ref:cards-nested-resource).","excerpt":"","slug":"boardsboardidactions-1","type":"endpoint","title":"/boards/{id}/cards/{cardId}","__v":1,"updatedAt":"2019-06-10T14:28:52.536Z","swagger":{"path":"/boards/{id}/cards/{idCard}"}},{"_id":"59396cba819ce5002f425071","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:26:50.300Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/boards/d2EnEWSY/checklists?checkItem_fields=name&fields=name&token=[yourToken]&key=[yourKey]"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"586eb0f532487bceb8b75aca\",\n    \"name\": \"Checklist\",\n    \"checkItems\": [\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f6599c7bcf2c5116bc\",\n        \"name\": \"1\"\n      },\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f64e39386b8b101675\",\n        \"name\": \"2\"\n      },\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f740aec762d6601f6a\",\n        \"name\": \"3\"\n      }\n    ]\n  },\n  {\n    \"id\": \"586eb2770c9dc27f034162f7\",\n    \"name\": \"Checklist\",\n    \"checkItems\": []\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/checklists","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"This resource is used to retrieve checklists from cards on the board with the given id. It is a nested version of the checklists object. For more on the query parameters available, read the documentation [here](ref:checklists-nested-resource).","excerpt":"","slug":"boardsboardidactions-3","type":"endpoint","title":"/boards/{id}/checklists","__v":0,"updatedAt":"2019-06-10T14:28:52.536Z","swagger":{"path":"/boards/{id}/checklists"}},{"_id":"5ab0f6d6ade4f4003cf6b016","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["5b29143736a5030003c3febc"],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T11:56:06.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/customFields?token=[yourToken]&key=[yourKey]"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/customFields","method":"get"},"isReference":true,"order":11,"body":"","excerpt":"Get the Custom Field Definitions that exist on a board.","slug":"boardsidcustomfields","type":"endpoint","title":"/boards/{id}/customFields","__v":4,"updatedAt":"2019-06-10T14:28:52.537Z","swagger":{"path":"/boards/{id}/customFields"}},{"_id":"59396ed94ea7ce000f36ca3a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:35:53.873Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f960e18d5a5001e81aa29","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of label [fields](#label-object)","default":"all","type":"string","name":"fields"},{"_id":"597f960e18d5a5001e81aa28","ref":"","in":"query","required":false,"desc":"0 to 1000","default":"50","type":"int","name":"limit"}],"url":"/boards/{id}/labels","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/boards/ZqN99gGN/labels?limit=3&fields=name,color\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd747\\\",\\n    \\\"name\\\": \\\"Verified on branch\\\",\\n    \\\"color\\\": \\\"yellow\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd74a\\\",\\n    \\\"name\\\": \\\"Regression\\\",\\n    \\\"color\\\": \\\"purple\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd74b\\\",\\n    \\\"name\\\": \\\"Verified on staging\\\",\\n    \\\"color\\\": \\\"blue\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boardsboardidlabels","type":"endpoint","title":"/boards/{id}/labels","__v":3,"updatedAt":"2019-06-10T14:28:52.537Z","swagger":{"path":"/boards/{id}/labels"}},{"_id":"59396f04e376d4002f8a139e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":["597acae6903c5800248b4e83","5cda244b77452d0013bb33d2"],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:36:36.545Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f977cebbd9c0014917342","ref":"","in":"query","required":false,"desc":"One of: `all`, `closed`, `none`, `open`","default":"none","type":"string","name":"cards"},{"_id":"597f977cebbd9c0014917341","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](#card-object)","default":"all","type":"string","name":"card_fields"},{"_id":"597f977cebbd9c0014917340","ref":"","in":"query","required":false,"desc":"One of `all`, `closed`, `none`, `open`","default":"open","type":"string","name":"filter"},{"_id":"597f977cebbd9c001491733f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](#list-object)","default":"all","type":"string","name":"fields"}],"url":"/boards/{id}/lists","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://trello.com/1/boards/ZqN99gGN/lists?cards=open&card_fields=name&filter=open&fields=name\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd737\\\",\\n    \\\"name\\\": \\\"Backlog\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd818\\\",\\n        \\\"name\\\": \\\"Product Owner: Brian\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd7e5\\\",\\n        \\\"name\\\": \\\"(3) fix /org/:id route\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd738\\\",\\n    \\\"name\\\": \\\"Sprint Backlog\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a890c6504676888e1dd776\\\",\\n        \\\"name\\\": \\\"(8) Clicking the collection beneath a board should filter by collection, not open collections pop-over\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd7f0\\\",\\n        \\\"name\\\": \\\"(2) BC3 team boards page: Show Other Private Boards\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c6504676888e1dd772\\\",\\n        \\\"name\\\": \\\"(1) Add post-message-io\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd739\\\",\\n    \\\"name\\\": \\\"In Progress\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a248d3977a6e388bf6cb80\\\",\\n        \\\"name\\\": \\\"Multiple due dates\\\"\\n      }\\n    ]\\t\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boardsboardidlists","type":"endpoint","title":"/boards/{id}/lists","__v":7,"updatedAt":"2019-06-10T14:28:52.538Z","swagger":{"path":"/boards/{id}/lists"}},{"_id":"59396f114ea7ce000f36ca3e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:36:49.028Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5939a6656c83cb003b99ba19","ref":"","in":"path","required":false,"desc":"One of `all`, `closed`, `none`, `open`","default":"","type":"string","name":"filter"}],"url":"/boards/{id}/lists/{filter}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"","excerpt":"","slug":"boardsboardidlistsfilter","type":"endpoint","title":"/boards/{id}/lists/{filter}","__v":1,"updatedAt":"2019-06-10T14:28:52.538Z","swagger":{"path":"/boards/{id}/lists/{filter}"}},{"_id":"5939a67f109baf00336c09db","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T19:33:19.545Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"This resource is a nested members resource. Nested members are documented at [Members Nested Resource](ref:members-nested-resource). The members returned by this resource will be within the context of the board whose ID is being used.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"memberTypes\",\n  \"body\": \"The `memberType` field returned from this endpoint only enumerates the relationship between the user and the organization to which the board belongs. Use the [1/boards/{boardId}/memberships](#boardsidmemberships) resource to determine the type of membership the member has to the board.\"\n}\n[/block]","excerpt":"Get the members for a board","slug":"boardsboardidmembers","type":"endpoint","title":"/boards/{id}/members","__v":8,"updatedAt":"2019-06-10T14:28:52.539Z","swagger":{"path":"/boards/{id}/members"}},{"_id":"59de25e15e7f1500106cd241","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-10-11T14:08:33.788Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"name":"","code":"","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"text","code":"curl https://trello.com/1/boards/59de14978d0f59de14978d0f/memberships/?orgMemberType=true&member=true&member_fields=fullName"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f986afe3a5f00281c7eef","ref":"","in":"query","required":false,"desc":"One of `admins`, `all`, `none`, `normal`","default":"all","type":"string","name":"filter"},{"_id":"597f9881537d33002033963b","ref":"","in":"query","required":false,"desc":"Works for premium organizations only.","default":"false","type":"boolean","name":"activity"},{"_id":"59de25e15e7f1500106cd244","ref":"","in":"query","required":false,"desc":"Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`.","default":"false","type":"boolean","name":"orgMemberType"},{"_id":"59de25e15e7f1500106cd243","ref":"","in":"query","required":false,"desc":"Determines whether to include a nester member object.","default":"false","type":"boolean","name":"member"},{"_id":"59de25e15e7f1500106cd242","ref":"","in":"query","required":false,"desc":"Fields to show if `member=true`. Valid values: [nested member resource fields](https://developers.trello.com/v1.0/reference#members-nested-resource).","default":"fullname,username","type":"string","name":"member_fields"}],"url":"/boards/{id}/memberships","method":"get"},"isReference":true,"order":16,"body":"Example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://trello.com/1/boards/59de14978d0f59de14978d0f/memberships/?orgMemberType=true&member=true&member_fields=fullName\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nResponse:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"59de14978d0fd81978d0fd81\\\",\\n    \\\"idMember\\\": \\\"978d0fd81cb40cedc28cf70e\\\",\\n    \\\"memberType\\\": \\\"admin\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"orgMemberType\\\": \\\"admin\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5589c3ea49b4978d0fd810\\\",\\n      \\\"fullName\\\": \\\"Bill Stanley\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"78d0fd81d0fd81978d0fd81\\\",\\n    \\\"idMember\\\": \\\"81978d0fd8178d0fd81d0fd\\\",\\n    \\\"memberType\\\": \\\"observer\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"178d0fd81978d0fd881d0fd\\\",\\n      \\\"fullName\\\": \\\"Marty Roberts\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"d4be2307fe96624ba421059d\\\",\\n    \\\"idMember\\\": \\\"60957479168735c5fe044bd0\\\",\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"4746097904bd1685735c5fe0\\\",\\n      \\\"fullName\\\": \\\"Maria Smith\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"1c10f2359de23661bc14d92a\\\",\\n    \\\"idMember\\\": \\\"59c501209144830f7a929f36\\\",\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"unconfirmed\\\": true,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5a9054830f7429f120919c36\\\",\\n      \\\"fullName\\\": \\\"Stan Billsby\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n### Field Definitions\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field\",\n    \"0-0\": \"unconfirmed\\n**boolean**\",\n    \"h-1\": \"Valid Values\",\n    \"0-1\": \"`true` or `false`\",\n    \"h-2\": \"Description\",\n    \"1-0\": \"deactivated\\n**boolean**\",\n    \"1-1\": \"`true` or `false`\",\n    \"0-2\": \"Whether the user has confirmed their Trello account. Inviting a user via email to the board who does not have a Trello account will result in `unconfirmed: true` until they create a Trello account.\",\n    \"1-2\": \"Whether the user's Trello account has been deactivated or not.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]","excerpt":"Get information about the memberships users have to the board.","slug":"boardsidmemberships","type":"endpoint","title":"/boards/{id}/memberships","__v":5,"updatedAt":"2019-06-10T14:28:52.539Z","swagger":{"path":"/boards/{id}/memberships"}},{"_id":"5952d8072cc1e8001b6adb16","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:11:19.902Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"55a5d917446f517774210013\",\n    \"name\": \"Voting\",\n    \"public\": true,\n    \"url\": \"https://voting.trello.services/manifest.json\"\n  },\n  {\n    \"id\": \"568c143d95adcd7308cbc3fb\",\n    \"name\": \"SurveyMonkey\",\n    \"public\": true,\n    \"url\": \"https://surveymonkey.trello.services/manifest.json\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d8897d896d001b09b826","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5952d8afa953c2001b3f5355","ref":"","in":"query","required":false,"desc":"One of: `enabled` or `available`","default":"enabled","type":"string","name":"filter"}],"url":"/boards/{id}/plugins","method":"get","examples":{"codes":[{"language":"http","code":"https://api.trello.com/1/boards/nC8QJJoZ/plugins?filter=enabled"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"List the Power-Ups for a board","slug":"boardsidplugins","type":"endpoint","title":"/boards/{id}/plugins","__v":2,"updatedAt":"2019-06-10T14:28:52.540Z","swagger":{"path":"/boards/{id}/plugins"}},{"_id":"5943ebd76ec7dc002db0f46c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-16T14:31:51.888Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":false,"desc":"The new name for the board. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"594490d7bc74a3000f35f499","ref":"","in":"query","required":false,"desc":"A new description for the board, 0 to 16384 characters long","default":"","type":"string","name":"desc"},{"_id":"594490d7bc74a3000f35f498","ref":"","in":"query","required":false,"desc":"Whether the board is closed","default":"","type":"boolean","name":"closed"},{"_id":"594490d7bc74a3000f35f497","ref":"","in":"query","required":false,"desc":"Whether the acting user is subscribed to the board","default":"","type":"boolean","name":"subscribed"},{"_id":"594490d7bc74a3000f35f496","ref":"","in":"query","required":false,"desc":"The id of the team the board should be moved to","default":"","type":"string","name":"idOrganization"},{"_id":"594490d7bc74a3000f35f495","ref":"","in":"query","required":false,"desc":"One of: org, private, public","default":"","type":"string","name":"prefs/permissionLevel"},{"_id":"594490d7bc74a3000f35f494","ref":"","in":"query","required":false,"desc":"Whether team members can join the board themselves","default":"","type":"boolean","name":"prefs/selfJoin"},{"_id":"594490d7bc74a3000f35f493","ref":"","in":"query","required":false,"desc":"Whether card covers should be displayed on this board","default":"","type":"boolean","name":"prefs/cardCovers"},{"_id":"5cf6c6beb0f8f400191f6f84","ref":"","in":"query","required":false,"desc":"Determines whether the Voting Power-Up should hide who voted on cards or not.","default":"","type":"boolean","name":"prefs/hideVotes"},{"_id":"594490d7bc74a3000f35f492","ref":"","in":"query","required":false,"desc":"Who can invite people to this board. One of: admins, members","default":"","type":"string","name":"prefs/invitations"},{"_id":"594490d7bc74a3000f35f491","ref":"","in":"query","required":false,"desc":"Who can vote on this board. One of disabled, members, observers, org, public","default":"","type":"string","name":"prefs/voting"},{"_id":"594490d7bc74a3000f35f490","ref":"","in":"query","required":false,"desc":"Who can comment on cards on this board. One of: disabled, members, observers, org, public","default":"","type":"string","name":"prefs/comments"},{"_id":"594490d7bc74a3000f35f48f","ref":"","in":"query","required":false,"desc":"The id of a custom background or one of: blue, orange, green, red, purple, pink, lime, sky, grey","default":"","type":"string","name":"prefs/background"},{"_id":"594490d7bc74a3000f35f48e","ref":"","in":"query","required":false,"desc":"One of: pirate, regular","default":"","type":"string","name":"prefs/cardAging"},{"_id":"594490d7bc74a3000f35f48d","ref":"","in":"query","required":false,"desc":"Determines whether the calendar feed is enabled or not.","default":"","type":"boolean","name":"prefs/calendarFeedEnabled"},{"_id":"5952705b4731e4005d8254e5","ref":"","in":"query","required":false,"desc":"Name for the green label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/green"},{"_id":"5952705b4731e4005d8254e4","ref":"","in":"query","required":false,"desc":"Name for the yellow label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/yellow"},{"_id":"5952705b4731e4005d8254e3","ref":"","in":"query","required":false,"desc":"Name for the orange label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/orange"},{"_id":"5952705b4731e4005d8254e2","ref":"","in":"query","required":false,"desc":"Name for the red label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/red"},{"_id":"5952705b4731e4005d8254e1","ref":"","in":"query","required":false,"desc":"Name for the purple label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/purple"},{"_id":"5952705b4731e4005d8254e0","ref":"","in":"query","required":false,"desc":"Name for the blue label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/blue"}],"url":"/boards/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"This endpoint can be used to update one or more properties of the card at once. Alternatively, you can also update a single property of the card as the params for this method via:\n\n`PUT /1/boards/{id}/{property}?value={newValue}`\n\nSo for example, to archive a board:\n\n`PUT /1/boards/{id}/closed?value=true`\n\nOr to update the name of a board:\n\n`PUT /1/boards/{id}/name?value={new board name}`","excerpt":"Update an existing board by id","slug":"idnext","type":"endpoint","title":"/boards/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.540Z","swagger":{"path":"/boards/{id}"}},{"_id":"59526ea9109f490029f6a24f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:41:45.763Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The email address of a user to add as a member of the board.","default":"","type":"string","name":"email"},{"_id":"5952733f08a112006b18c9c1","ref":"","in":"body","required":false,"desc":"The full name of the user to as a member of the board. Must have a length of at least 1 and cannot begin nor end with a space.","default":"","type":"string","name":"fullName"},{"_id":"5952733f08a112006b18c9c0","ref":"","in":"header","required":true,"desc":"Valid values: admin, normal, observer. Determines what type of member the user being added should be of the board.","default":"","type":"string","name":"type"}],"url":"/boards/{id}/members","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Update an existing board by id","slug":"boardsidlabelnamesmembers","type":"endpoint","title":"/boards/{id}/members","__v":1,"updatedAt":"2019-06-10T14:28:52.541Z","swagger":{"path":"/boards/{id}/members"}},{"_id":"59526eaf28e9ae004b965a1f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59bf1d51b1d4c7001008fcb3","5c1cfc4f61d386002a575e82"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:41:51.954Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"595273b3f168f9001bba9a39","ref":"","in":"query","required":true,"desc":"One of: admin, normal, observer. Determines the type of member this user will be on the board.","default":"","type":"string","name":"type"},{"_id":"59bfdc60e180d8003a118299","ref":"","in":"path","required":false,"desc":"The id of the member to add to the board.","default":"","type":"string","name":"idMember"},{"_id":"5c8280ad47ddc8002f1aa0ad","ref":"","in":"query","required":false,"desc":"Optional param that allows organization admins to add multi-board guests onto a board.","default":"false","type":"boolean","name":"allowBillableGuest"}],"url":"/boards/{id}/members/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Add a member to the board.","slug":"boardsidlabelnamesmembersidmember","type":"endpoint","title":"/boards/{id}/members/{idMember}","__v":8,"updatedAt":"2019-06-10T14:28:52.541Z","swagger":{"path":"/boards/{id}/members/{idMember}"}},{"_id":"59526ebec86ac3003f370f72","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:42:06.639Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of a membership that should be added to this board.","default":"","type":"string","name":"idMembership"},{"_id":"5952742b109f490029f6a29c","ref":"","in":"query","required":true,"desc":"One of: admin, normal, observer. Determines the type of member that this membership will be to this board.","default":"","type":"string","name":"type"},{"_id":"5952742b109f490029f6a29b","ref":"","in":"query","required":false,"desc":"Valid values: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"fullName, username","type":"string","name":"member_fields"}],"url":"/boards/{id}/memberships/{idMembership}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"","excerpt":"Update an existing board by id","slug":"boardsidlabelnamesmembershipsidmembership","type":"endpoint","title":"/boards/{id}/memberships/{idMembership}","__v":1,"updatedAt":"2019-06-10T14:28:52.542Z","swagger":{"path":"/boards/{id}/memberships/{idMembership}"}},{"_id":"59526ef7c86ac3003f370f73","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:03.489Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Valid values: bottom, top. Determines the position of the email address.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/myPrefs/emailPosition","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsemailposition","type":"endpoint","title":"/boards/{id}/myPrefs/emailPosition","__v":1,"updatedAt":"2019-06-10T14:28:52.542Z","swagger":{"path":"/boards/{id}/myPrefs/emailPosition"}},{"_id":"59526f001579820035a6afee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:12.082Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of an email list.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/myPrefs/idEmailList","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsidemaillist","type":"endpoint","title":"/boards/{id}/myPrefs/idEmailList","__v":1,"updatedAt":"2019-06-10T14:28:52.543Z","swagger":{"path":"/boards/{id}/myPrefs/idEmailList"}},{"_id":"59526f08109f490029f6a250","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:20.583Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the list guide.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showListGuide","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowlistguide","type":"endpoint","title":"/boards/{id}/myPrefs/showListGuide","__v":1,"updatedAt":"2019-06-10T14:28:52.543Z","swagger":{"path":"/boards/{id}/myPrefs/showListGuide"}},{"_id":"59526f0ec86ac3003f370f74","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["5bbd124073abaf00034e22ba"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:26.488Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the side bar.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebar","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebae","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebar","__v":2,"updatedAt":"2019-06-10T14:28:52.544Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebar"}},{"_id":"59526f1aa6c9140033c80717","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:38.768Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show sidebar activity.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarActivity","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebaractivity","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarActivity","__v":1,"updatedAt":"2019-06-10T14:28:52.544Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarActivity"}},{"_id":"59526f22b1a12000672aed55","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:46.746Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the sidebar board actions.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarBoardActions","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebarboardactions","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarBoardActions","__v":1,"updatedAt":"2019-06-10T14:28:52.545Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarBoardActions"}},{"_id":"59526f344731e4005d8254dd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:44:04.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show members of the board in the sidebar.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarMembers","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebarmembers","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarMembers","__v":1,"updatedAt":"2019-06-10T14:28:52.545Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarMembers"}},{"_id":"595278ffd93ebe003ff33951","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59679011c603a6002bca3126","5c2082ff1f2eb2005184db26"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:25:51.174Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The new name for the board. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527afba0e05a0041b07332","ref":"","in":"query","required":false,"desc":"Determines whether to use the default set of labels.","default":"true","type":"boolean","name":"defaultLabels"},{"_id":"59527afba0e05a0041b07331","ref":"","in":"query","required":false,"desc":"Determines whether to add the default set of lists to a board (To Do, Doing, Done). It is ignored if `idBoardSource` is provided.","default":"true","type":"boolean","name":"defaultLists"},{"_id":"594490d7bc74a3000f35f499","ref":"","in":"query","required":false,"desc":"A new description for the board, 0 to 16384 characters long","default":"","type":"string","name":"desc"},{"_id":"594490d7bc74a3000f35f496","ref":"","in":"query","required":false,"desc":"The id or name of the team the board should belong to.","default":"","type":"string","name":"idOrganization"},{"_id":"594490d7bc74a3000f35f495","ref":"","in":"query","required":false,"desc":"The id of a board to copy into the new board.","default":"","type":"string","name":"idBoardSource"},{"_id":"594490d7bc74a3000f35f494","ref":"","in":"query","required":false,"desc":"To keep cards from the original board pass in the value `cards`","default":"none","type":"string","name":"keepFromSource"},{"_id":"594490d7bc74a3000f35f493","ref":"","in":"query","required":false,"desc":"The Power-Ups that should be enabled on the new board. One of: `all`, `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"powerUps"},{"_id":"594490d7bc74a3000f35f492","ref":"","in":"query","required":false,"desc":"The permissions level of the board. One of: `org`, `private`, `public`.","default":"private","type":"string","name":"prefs_permissionLevel"},{"_id":"594490d7bc74a3000f35f491","ref":"","in":"query","required":false,"desc":"Who can vote on this board. One of `disabled`, `members`, `observers`, `org`, `public`.","default":"disabled","type":"string","name":"prefs_voting"},{"_id":"594490d7bc74a3000f35f490","ref":"","in":"query","required":false,"desc":"Who can comment on cards on this board. One of: `disabled`, `members`, `observers`, `org`, `public`.","default":"members","type":"string","name":"prefs_comments"},{"_id":"5952705b4731e4005d8254e5","ref":"","in":"query","required":false,"desc":"Determines what types of members can invite users to join. One of: `admins`, `members`.","default":"members","type":"string","name":"prefs_invitations"},{"_id":"5952705b4731e4005d8254e4","ref":"","in":"query","required":false,"desc":"Determines whether users can join the boards themselves or whether they have to be invited.","default":"true","type":"boolean","name":"prefs_selfJoin"},{"_id":"5952705b4731e4005d8254e3","ref":"","in":"query","required":false,"desc":"Determines whether card covers are enabled.","default":"true","type":"boolean","name":"prefs_cardCovers"},{"_id":"594490d7bc74a3000f35f48f","ref":"","in":"query","required":false,"desc":"The id of a custom background or one of: `blue`, `orange`, `green`, `red`, `purple`, `pink`, `lime`, `sky`, `grey`.","default":"blue","type":"string","name":"prefs_background"},{"_id":"594490d7bc74a3000f35f48e","ref":"","in":"query","required":false,"desc":"Determines the type of card aging that should take place on the board if card aging is enabled. One of: `pirate`, `regular`.","default":"regular","type":"string","name":"prefs_cardAging"}],"url":"/boards/","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Create a new board.","slug":"boardsid","type":"endpoint","title":"/boards/","__v":5,"updatedAt":"2019-06-10T14:28:52.548Z","swagger":{"path":"/boards/"}},{"_id":"5952d705373d400015dfa347","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:07:01.067Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d71311ad0a001b0a7e21","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5952d72ca953c2001b3f5353","ref":"","in":"query","required":false,"desc":"The ID of the Power-Up to enable","default":"","type":"string","name":"idPlugin"}],"url":"/boards/{id}/boardPlugins","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"If a board has reached the max number of Power-Ups that can be enabled on it, the API will return the following error message with a 409 status code:\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n    \\\"message\\\": \\\"Can't enable plugin\\\",\\n    \\\"error\\\": \\\"PLUGIN_TOO_MANY_PLUGINS\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Enable a Power-Up on a board","slug":"boardsidboardplugins-1","type":"endpoint","title":"/boards/{id}/boardPlugins","__v":4,"updatedAt":"2019-06-10T14:28:52.549Z","swagger":{"path":"/boards/{id}/boardPlugins"}},{"_id":"59527cb2d93ebe003ff3395c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:41:38.221Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/calendarKey/generate","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"This endpoint is used to generate a new key for the calendar to make use of.","excerpt":"Create a new board.","slug":"boardsidcalendarkeygenerate","type":"endpoint","title":"/boards/{id}/calendarKey/generate","__v":2,"updatedAt":"2019-06-10T14:28:52.549Z","swagger":{"path":"/boards/{id}/calendarKey/generate"}},{"_id":"59527cf01579820035a6b098","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:40.581Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/emailKey/generate","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"This resource is used to generate a new key to be used for email.","excerpt":"","slug":"boardsidemailkeygenerate","type":"endpoint","title":"/boards/{id}/emailKey/generate","__v":1,"updatedAt":"2019-06-10T14:28:52.550Z","swagger":{"path":"/boards/{id}/emailKey/generate"}},{"_id":"59527cf69262c20041644be5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:46.975Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of a tag from the organization to which this board belongs.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/idTags","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":34,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Warning: Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"","slug":"boardsididtags","type":"endpoint","title":"/boards/{id}/idTags","__v":0,"updatedAt":"2019-06-10T14:28:52.550Z","swagger":{"path":"/boards/{id}/idTags"}},{"_id":"59527cfdf168f9001bba9a87","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:53.445Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The name of the label to be created. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527e2328e9ae004b965a4d","ref":"","in":"query","required":true,"desc":"Sets the color of the new label. Valid values are a label color or `null`.","default":"","type":"string","name":"color"}],"url":"/boards/{id}/labels","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"","excerpt":"","slug":"boardsidlabels","type":"endpoint","title":"/boards/{id}/labels","__v":1,"updatedAt":"2019-06-10T14:28:52.552Z","swagger":{"path":"/boards/{id}/labels"}},{"_id":"59527d01f8a1ac001b0f69ff","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59bd5596284517001a16d760","5c62b02217284400b6de9a3d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:57.656Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The name of the list to be created. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527e67fc28ee004d046862","ref":"","in":"query","required":false,"desc":"Determines the position of the list. Valid values: `top`, `bottom`, or a positive number.","default":"top","type":"string","name":"pos"}],"url":"/boards/{id}/lists","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"","excerpt":"","slug":"boardsidlists","type":"endpoint","title":"/boards/{id}/lists","__v":4,"updatedAt":"2019-06-10T14:28:52.553Z","swagger":{"path":"/boards/{id}/lists"}},{"_id":"59527d081579820035a6b099","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:43:04.430Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/markedAsViewed","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"","slug":"boardsidmarkedasviewed","type":"endpoint","title":"/boards/{id}/markedAsViewed","__v":2,"updatedAt":"2019-06-10T14:28:52.553Z","swagger":{"path":"/boards/{id}/markedAsViewed"}},{"_id":"59527d10d93ebe003ff3395e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:43:12.851Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The Power-Up to be enabled on the board. One of: `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/powerUps","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"","slug":"boardsidpowerups","type":"endpoint","title":"/boards/{id}/powerUps","__v":0,"updatedAt":"2019-06-10T14:28:52.554Z","swagger":{"path":"/boards/{id}/powerUps"}},{"_id":"5a29563e2f609b00300752f6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-12-07T14:54:54.291Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to delete","default":"","type":"string","name":"id"}],"url":"/boards/{id}","method":"delete"},"isReference":true,"order":39,"body":"","excerpt":"Delete a board.","slug":"boardsid-1","type":"endpoint","title":"/boards/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.554Z","swagger":{"path":"/boards/{id}"}},{"_id":"5952d7605f609600157a79f0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"59512835cef5a9007106bd9d","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:08:32.823Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d76b12a2d3001b73b3b2","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5b76cf3e7d0df8000369a5f0","ref":"","in":"path","required":false,"desc":"The ID of the Power-Up to disable","default":"","type":"string","name":"idPlugin"}],"url":"/boards/{id}/boardPlugins/{idPlugin}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Disable a Power-Up on a board","slug":"boardsidboardplugins-2","type":"endpoint","title":"/boards/{id}/boardPlugins/{idPlugin}","__v":3,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/boardPlugins/{idPlugin}"}},{"_id":"59527efa4731e4005d825539","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:51:22.068Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"59527efa4731e4005d82553a","ref":"","in":"path","required":false,"desc":"The id, username, or organization name of the user to be removed from the board.","default":"","type":"string","name":"idMember"}],"url":"/boards/{id}/members/{idMember}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"","slug":"boardsidmembersidmember","type":"endpoint","title":"/boards/{id}/members/{idMember}","__v":1,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/members/{idMember}"}},{"_id":"59527f3ed93ebe003ff33960","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:52:30.170Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"59527efa4731e4005d82553a","ref":"","in":"path","required":false,"desc":"The Power-Up to be enabled on the board. One of: `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"powerUp"}],"url":"/boards/{id}/powerUps/{powerUp}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"","excerpt":"","slug":"boardsidpowerupspowerup","type":"endpoint","title":"/boards/{id}/powerUps/{powerUp}","__v":0,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/powerUps/{powerUp}"}}],"childrenPages":[{"_id":"5948381532618000272097c5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":["5aa669ba61096f001cc1984f","5b31515cec613b000312ecbd"],"next":{"pages":[],"description":""},"createdAt":"2017-06-19T20:46:13.471Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id** \\nstring\",\n    \"0-1\": \"The ID of the board\",\n    \"1-0\": \"**name** \\nstring\",\n    \"2-0\": \"**desc**\\nstring\",\n    \"3-0\": \"**descData** \\nstring or `null`\",\n    \"4-0\": \"**closed**\\nboolean\",\n    \"5-0\": \"**idOrganization** \\nstring\",\n    \"6-0\": \"**pinned** \\nboolean\",\n    \"7-0\": \"**url** \\nstring\",\n    \"8-0\": \"**shortUrl** \\nstring\",\n    \"9-0\": \"**prefs**\\nobject\",\n    \"10-0\": \"**labelNames**\\nobject\",\n    \"1-1\": \"The name of the board\",\n    \"2-1\": \"The description of the board.\\n*Deprecated*\",\n    \"4-1\": \"Boolean whether the board has been closed or not.\",\n    \"5-1\": \"MongoID of the organization to which the board belongs.\",\n    \"6-1\": \"Boolean whether the board has been pinned or not.\",\n    \"7-1\": \"Persistent URL for the board.\",\n    \"8-1\": \"URL for the board using only its shortMongoID\",\n    \"10-1\": \"Object containing color keys and the label names given for one label of each color on the board. To get a full list of labels on the board see [/boards/{id}/labels/](https://developers.trello.com/v1.0/reference#boardsboardidlabels).\",\n    \"3-1\": \"If the description includes custom emoji, this will contain the data necessary to display them.\",\n    \"9-1\": \"Short for \\\"preferences\\\", these are the settings for the board\",\n    \"11-0\": \"**starred**\\nboolean\",\n    \"11-1\": \"Whether the board has been starred by the current request's user.\",\n    \"12-0\": \"**limits**\\nobject\",\n    \"12-1\": \"An object containing information on the limits that exist for the board. Read more about at [Limits](doc:limits).\",\n    \"13-0\": \"**memberships**\\narray\",\n    \"13-1\": \"Array of objects that represent the relationship of users to this board as [memberships](ref:boardsidmemberships).\"\n  },\n  \"cols\": 2,\n  \"rows\": 14\n}\n[/block]\nAn example request and response for a board object and all of its fields would look like:\n\n`GET` `/1/boards/5612e4f91b25c15e873722b8?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5612e4f91b25c15e873722b8\\\",\\n  \\\"name\\\": \\\"Employee Manual\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"54b58957112602c9a0be7aa3\\\",\\n  \\\"invited\\\": false,\\n  \\\"limits\\\": {\\n    \\\"attachments\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 34200,\\n        \\\"warnAt\\\": 32400\\n      }\\n    },\\n    \\\"boards\\\": {\\n      \\\"totalMembersPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1520,\\n        \\\"warnAt\\\": 1440\\n      }\\n    },\\n    \\\"cards\\\": {\\n      \\\"openPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 4750,\\n        \\\"warnAt\\\": 4500\\n      },\\n      \\\"totalPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1900000,\\n        \\\"warnAt\\\": 1800000\\n      }\\n    },\\n    \\\"checklists\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1900000,\\n        \\\"warnAt\\\": 1800000\\n      }\\n    },\\n    \\\"customFields\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 48,\\n        \\\"warnAt\\\": 45\\n      }\\n    },\\n    \\\"labels\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 950,\\n        \\\"warnAt\\\": 900\\n      }\\n    },\\n    \\\"lists\\\": {\\n      \\\"openPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 475,\\n        \\\"warnAt\\\": 450\\n      },\\n      \\\"totalPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 2850,\\n        \\\"warnAt\\\": 2700\\n      }\\n    }\\n  },\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"5612e4fb1b25c15e8737234b\\\",\\n      \\\"idMember\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"5925e4fc63096260c349cbd4\\\",\\n      \\\"idMember\\\": \\\"53cd82cd7ed746db278c4f32\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    }\\n  ],\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": false,\\n  \\\"url\\\": \\\"https://trello.com/b/HbTEX5hb/employee-manual\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"5925b78fa1bd45e1bfb835da\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1707/f3c8b6101072d80565d9b6368f05b19d/photo-1495571758719-6ec1e876d6ae\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/140x100/5afcd242d52da7ad4827966d8c896c00/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/256x192/d297510e553abc340fb0de3570445f03/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/480x480/08b5996b0a87a0f3dd80af488d99194a/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/960x960/7cb60ad23bdee1ca45a7c5e4e0c07968/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1024x1024/dca79e47ce10cd2c985dc4ba61abd9cc/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2048,\\n        \\\"height\\\": 2048,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2048x2048/b5a88d70569d9ded2af259e8d332c346/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1280x1280/c9ae077543d6c41ea2d48d84fdc12484/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1920,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1920x1920/cc85a9a12195863a1ff2193b5bb3a651/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2560,\\n        \\\"height\\\": 1600,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1600/de59d9e742f2de51d4284c6fd7c07f5d/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2560,\\n        \\\"height\\\": 1707,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1707/f3c8b6101072d80565d9b6368f05b19d/photo-1495571758719-6ec1e876d6ae\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"backgroundBottomColor\\\": \\\"#332b09\\\",\\n    \\\"backgroundTopColor\\\": \\\"#d3c4a9\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [],\\n  \\\"shortLink\\\": \\\"HbTEX5hb\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"\\\",\\n    \\\"yellow\\\": \\\"good to go\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [],\\n  \\\"dateLastActivity\\\": \\\"2016-01-07T21:24:47.855Z\\\",\\n  \\\"dateLastView\\\": \\\"2018-03-12T14:15:20.234Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/HbTEX5hb\\\",\\n  \\\"idTags\\\": [],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"board-object","type":"basic","title":"Board Object","__v":2,"parentDoc":"59304329b810fd000fccb51d","updatedAt":"2019-06-10T14:28:52.531Z"},{"_id":"594abbcd721bd90010e34a4d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-21T18:32:45.955Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Boards are accessible as [nested resources](ref:understanding-nested-resources) via a number of other resources.\n[block:api-header]\n{\n  \"title\": \"Nested Boards via Query Params\"\n}\n[/block]\nFor objects that can contain multiple boards, like `organizations` and `members`\n\n`/1/{object}/{id}?boards=open`\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**boards**\",\n    \"0-1\": \"Default: `none`\\n\\n`all` or a comma-separated list of:\\n\\n- `open` - Returns all boards that are open.\\n- `closed` - Returns all boards that have been closed.\\n- `members` - Returns all boards that have visibility set to Private.\\n- `organization` - Returns all boards that have visibility set to Team.\\n- `public` - Returns all boards that have visibility set to Public.\\n- `starred` - Returns all boards that have been starred.\",\n    \"1-0\": \"**board_fields**\",\n    \"1-1\": \"Default: `all`\\n\\n`all` or a comma-separated list of board [fields](ref:board-object)\",\n    \"2-0\": \"**board_actions**\",\n    \"2-1\": \"`all` or a comma-separated list of:\\n\\n- addAttachmentToCard\\n- addChecklistToCard\\n- addMemberToBoard\\n- addMemberToCard\\n- addMemberToOrganization\\n- addToOrganizationBoard\\n- commentCard\\n- convertToCardFromCheckItem\\n- copyBoard\\n- copyCard\\n- copyCommentCard\\n- createBoard\\n- createCard\\n- createList\\n- createOrganization\\n- deleteAttachmentFromCard\\n- deleteBoardInvitation\\n- deleteCard\\n- deleteOrganizationInvitation\\n- disablePowerUp\\n- emailCard\\n- enablePowerUp\\n- makeAdminOfBoard\\n- makeNormalMemberOfBoard\\n- makeNormalMemberOfOrganization\\n- makeObserverOfBoard\\n- memberJoinedTrello\\n- moveCardFromBoard\\n- moveCardToBoard\\n- moveListFromBoard\\n- moveListToBoard\\n- removeChecklistFromCard\\n- removeFromOrganizationBoard\\n- removeMemberFromCard\\n- unconfirmedBoardInvitation\\n- unconfirmedOrganizationInvitation\\n- updateBoard\\n- updateCard\\n- updateCard:closed\\n- updateCard:desc\\n- updateCard:idList\\n- updateCard:name\\n- updateCheckItemStateOnCard\\n- updateChecklist\\n- updateList\\n- updateList:closed\\n- updateList:name\\n- updateMember\\n- updateOrganization\",\n    \"3-0\": \"**board_actions_entities**\",\n    \"3-1\": \"Default: `false`\\n`true` or `false`\",\n    \"4-0\": \"**board_actions_display**\",\n    \"4-1\": \"Default: `false`\\n`true` or `false`\",\n    \"5-0\": \"**board_actions_format**\",\n    \"5-1\": \"Default: `list`\\nOne of: `count`, `list`, `minimal`\",\n    \"6-0\": \"**board_actions_since**\",\n    \"6-1\": \"A date, `null`, or `lastView`\",\n    \"7-0\": \"**board_actions_limit**\",\n    \"7-1\": \"Default: 50\\nMax: 1000\",\n    \"8-0\": \"**board_action_fields**\",\n    \"8-1\": \"`all` or a comma-separated list of action [fields](ref:action-object)\",\n    \"9-0\": \"**board_lists**\",\n    \"9-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\"\n  },\n  \"cols\": 2,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"boards-nested-resource","type":"basic","title":"Boards Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.532Z"},{"_id":"5930438a3d2a84000f3fc455","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","updates":["593ee313f69a3b00314a93e5","593ee314b8bb9b002f176927","5b615ebba95b0a0003442860","5bd8528d9f8abf0031417b08","5cb455434910200019864b9a","5cda3f307f1a56004b335a1a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-01T16:40:42.400Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"language":"text","code":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"592da9d093a38d2500465fd9","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"},{"_id":"594abb176496cb003a87996c","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about actions as nested resources [here](https://trello.readme.io/reference#actions-nested-resource).","default":"all","type":"string","name":"actions"},{"_id":"594abb176496cb003a879964","ref":"","in":"query","required":false,"desc":"Valid values are one of: `mine` or `none`.","default":"none","type":"string","name":"boardStars"},{"_id":"594abb176496cb003a87996b","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about cards as nested resources [here](https://trello.readme.io/reference#cards-nested-resource).","default":"none","type":"string","name":"cards"},{"_id":"598dc208ce7da8002fc6db83","ref":"","in":"query","required":false,"desc":"Use with the `cards` param to include card pluginData with the response","default":"false","type":"boolean","name":"card_pluginData"},{"_id":"594abb176496cb003a879956","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about checklists as nested resources [here](https://trello.readme.io/reference#checklists-nested-resource).","default":"none","type":"string","name":"checklists"},{"_id":"5bca56054fc912003283daaa","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about custom fields as nested resources [here](#custom-fields-nested-resource).","default":"false","type":"boolean","name":"customFields"},{"_id":"5aff195c1e89e1000352ca99","ref":"","in":"query","required":false,"desc":"The fields of the board to be included in the response. Valid values: all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url","default":"name,desc,descData,closed,idOrganization,pinned,url,shortUrl,prefs,labelNames","type":"string","name":"fields"},{"_id":"594abb176496cb003a879963","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about labels as nested resources [here](https://trello.readme.io/reference#labels-nested-resource).","default":"","type":"string","name":"labels"},{"_id":"592da73351a3e80f00eb5113","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about lists as nested resources [here](https://trello.readme.io/reference#lists-nested-resource).","default":"open","type":"string","name":"lists"},{"_id":"594abb176496cb003a87995b","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about members as nested resources [here](https://trello.readme.io/reference#members-nested-resource).","default":"none","type":"string","name":"members"},{"_id":"594abb176496cb003a87995e","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about memberships as nested resources [here](https://trello.readme.io/reference#memberships-nested-resource).","default":"none","type":"string","name":"memberships"},{"_id":"594abb176496cb003a879959","ref":"","in":"query","required":false,"desc":"Returns a list of member objects representing members who been invited to be a member of the board. One of: admins, all, none, normal, owners","default":"none","type":"string","name":"membersInvited"},{"_id":"594abb176496cb003a879958","ref":"","in":"query","required":false,"desc":"The member fields to be included in the membersInvited response. Valid values: all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"all","type":"string","name":"membersInvited_fields"},{"_id":"594abb176496cb003a879957","ref":"","in":"query","required":false,"desc":"Determines whether the pluginData for this board should be returned. Valid values: true or false.","default":"false","type":"boolean","name":"pluginData"},{"_id":"594abb176496cb003a879954","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about organizations as nested resources [here](https://trello.readme.io/reference#organization-nested-resource).","default":"false","type":"boolean","name":"organization"},{"_id":"598dc2628f3e1d0023160e4c","ref":"","in":"query","required":false,"desc":"Use with the `organization` param to include organization pluginData with the response","default":"false","type":"boolean","name":"organization_pluginData"},{"_id":"594abb176496cb003a879950","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"myPrefs"},{"_id":"594abb176496cb003a87994f","ref":"","in":"query","required":false,"desc":"Also known as collections, tags, refer to the collection(s) that a Board belongs to.","default":"false","type":"boolean","name":"tags"}],"url":"/boards/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Request a single board.","slug":"boardsboardid-1","type":"endpoint","title":"/boards/{id}","__v":20,"parentDoc":"59304329b810fd000fccb51d","updatedAt":"2019-06-10T14:28:52.532Z","swagger":{"path":"/boards/{id}"}},{"_id":"5931c0ab25934a000f698a36","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:46:51.464Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n\"_value\": \"https://trello.com/b/9clNtU6v\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c2d8d1f976000f7b4c07","ref":"","in":"path","required":false,"desc":"The ID of the board.","default":"","type":"string","name":"id"},{"_id":"5931c2d8d1f976000f7b4c06","ref":"","in":"path","required":false,"desc":"The field you'd like to receive. Valid values: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.","default":"","type":"string","name":"field"}],"url":"/boards/{id}/{field}","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/9clNtU6v/shortUrl"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"boards-nested-resources","type":"endpoint","title":"/boards/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.533Z","swagger":{"path":"/boards/{id}/{field}"}},{"_id":"5931c39a25934a000f698a67","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":["5a42844a2f35a4003084cf12","5a42844dd5c9a0001224fa05"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:59:22.060Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5939a82bcb0811201c349bf9\",\n    \"idMemberCreator\": \"5589c3ea49b40cedc28cf70e\",\n    \"data\": {\n      \"list\": {\n        \"name\": \"Done\",\n        \"id\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"board\": {\n        \"shortLink\": \"d2EnEWSY\",\n        \"name\": \"Best Test Board!\",\n        \"id\": \"586e8f681d4fe9b06a928307\"\n      },\n      \"card\": {\n        \"shortLink\": \"HKaaH2Pk\",\n        \"idShort\": 94,\n        \"name\": \"Design New System\",\n        \"id\": \"5939a829eba57d109331a289\",\n        \"pos\": 229375\n      },\n      \"old\": {\n        \"pos\": 163839.5\n      }\n    },\n    \"type\": \"updateCard\",\n    \"date\": \"2017-06-08T19:40:27.915Z\",\n    \"memberCreator\": {\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"avatarHash\": \"d24f1fe1d7da4b5aab5243ebd65af4a1\",\n      \"fullName\": \"Bentley Cook\",\n      \"initials\": \"BC\",\n      \"username\": \"bentleycook\"\n    }\n  },\n  {\n    \"id\": \"5939a82bcb0811201c349bf8\",\n    \"idMemberCreator\": \"5589c3ea49b40cedc28cf70e\",\n    \"data\": {\n      \"listAfter\": {\n        \"name\": \"Done\",\n        \"id\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"listBefore\": {\n        \"name\": \"Doing\",\n        \"id\": \"58d4144e4ec5c792a898d4b4\"\n      },\n      \"board\": {\n        \"shortLink\": \"d2EnEWSY\",\n        \"name\": \"Best Test Board!\",\n        \"id\": \"586e8f681d4fe9b06a928307\"\n      },\n      \"card\": {\n        \"shortLink\": \"HKaaH2Pk\",\n        \"idShort\": 94,\n        \"name\": \"Design New System\",\n        \"id\": \"5939a829eba57d109331a289\",\n        \"idList\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"old\": {\n        \"idList\": \"58d4144e4ec5c792a898d4b4\"\n      }\n    },\n    \"type\": \"updateCard\",\n    \"date\": \"2017-06-08T19:40:27.878Z\",\n    \"memberCreator\": {\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"avatarHash\": \"d24f1fe1d7da4b5aab5243ebd65af4a1\",\n      \"fullName\": \"Bentley Cook\",\n      \"initials\": \"BC\",\n      \"username\": \"bentleycook\"\n    }\n  }\n]","language":"json","status":200},{"name":"","code":"unauthorized permission requested","language":"text","status":401},{"status":400,"language":"text","code":"invalid id"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"}],"url":"/boards/{boardId}/actions","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/actions/?limit=2"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"# Board Actions\nThere are a lot of things you can do with this endpoint. It is a [nested resource](#understanding-nested-resources). For more information and to see everything you can do with actions, be sure to check out the [actions documentation](#actions-nested-resource). All of the query params found there can be used here.\n\n## Board Specific Actions\nOnly actions specific to the board will be shown.","excerpt":"","slug":"boardsboardidactions","type":"endpoint","title":"/boards/{id}/actions","__v":4,"updatedAt":"2019-06-10T14:28:52.533Z","swagger":{"path":"/boards/{boardId}/actions"}},{"_id":"5952d6ada953c2001b3f5351","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:05:33.520Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5846f8577b05f61b7a6f3971\",\n    \"idBoard\": \"4d5ea62fd76aa1136000000c\",\n    \"idPlugin\": \"55a5d917446f517774210013\"\n  },\n  {\n    \"id\": \"5846f99996b59c33ab555249\",\n    \"idBoard\": \"4d5ea62fd76aa1136000000c\",\n    \"idPlugin\": \"568c143d95adcd7308cbc3fb\"\n  }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"5952d6b8a953c2001b3f5352","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/boardPlugins","method":"get","examples":{"codes":[{"language":"html","code":"https://api.trello.com/1/boards/nC8QJJoZ/boardPlugins"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the enabled Power-Ups on a board","slug":"boardsidboardplugins","type":"endpoint","title":"/boards/{id}/boardPlugins","__v":1,"updatedAt":"2019-06-10T14:28:52.534Z","swagger":{"path":"/boards/{id}/boardPlugins"}},{"_id":"59396cb0819ce5002f425010","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:26:40.201Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/?fields=id&boardStars=mine"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"586e8f681d4fe9b06a928307\",\n  \"boardStars\": [\n    {\n      \"_id\": \"59370b012373f371a531b73d\",\n      \"idBoard\": \"586e8f681d4fe9b06a928307\",\n      \"pos\": 360448\n    }\n  ]\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"},{"_id":"5939a9ba4ea7ce000f36d7f0","ref":"","in":"path","required":false,"desc":"Valid values: mine, none","default":"mine","type":"string","name":"filter"}],"url":"/boards/{boardId}/boardStars","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"boardsboardidactions-2","type":"endpoint","title":"/boards/{id}/boardStars","__v":1,"updatedAt":"2019-06-10T14:28:52.534Z","swagger":{"path":"/boards/{boardId}/boardStars"}},{"_id":"59396d39819ce5002f425074","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:28:57.668Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5941465a11d2c760d95b95ad\",\n    \"name\": \"Checklists\",\n    \"members\": []\n  },\n  {\n    \"id\": \"5939a829eba57d109331a289\",\n    \"name\": \"Design New System\",\n    \"members\": [\n      {\n        \"id\": \"5589c3ea49b40cedc28cf70e\",\n        \"fullName\": \"Bentley Cook\"\n      }\n    ]\n  }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/boards/d2EnEWSY/cards/?limit=2&fields=name&members=true&member_fields=fullName&key=[yourKey]&token=[yourToken]"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"}],"url":"/boards/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"This resource is a nested card resource. Nested cards are documented [here](ref:cards-nested-resource). The cards returned by this resource will be within the context of the board whose ID is being used.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Not Chronologically Sorted\",\n  \"body\": \"Cards are returned sorted by lists within the board; they are not chronologically sorted. If you are paging through cards, you will want to retrieve the list of cards and then find the oldest card based on its ID - all IDs in Trello are mongo IDs and can be converted to timestamps (https://steveridout.github.io/mongo-object-time/).\"\n}\n[/block]","excerpt":"Fetch open cards on a board","slug":"boardsboardidtest","type":"endpoint","title":"/boards/{id}/cards","__v":4,"updatedAt":"2019-06-10T14:28:52.535Z","swagger":{"path":"/boards/{id}/cards"}},{"_id":"59396dec819ce5002f425076","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:31:56.243Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"59394c1939fc59910b4f7cfd\",\n    \"checkItemStates\": null,\n    \"closed\": true,\n    \"dateLastActivity\": \"2017-06-08T13:07:57.302Z\",\n    \"desc\": \"\",\n    \"descData\": null,\n    \"idBoard\": \"586e8f681d4fe9b06a928307\",\n    \"idList\": \"58d4144e4ec5c792a898d4b4\",\n    \"idMembersVoted\": [],\n    \"idShort\": 93,\n    \"idAttachmentCover\": null,\n    \"manualCoverAttachment\": false,\n    \"idLabels\": [],\n    \"name\": \"Test\",\n    \"pos\": 163839.5,\n    \"shortLink\": \"vxzyFCkF\",\n    \"badges\": {\n      \"votes\": 0,\n      \"viewingMemberVoted\": false,\n      \"subscribed\": false,\n      \"fogbugz\": \"\",\n      \"checkItems\": 0,\n      \"checkItemsChecked\": 0,\n      \"comments\": 0,\n      \"attachments\": 0,\n      \"description\": false,\n      \"due\": null,\n      \"dueComplete\": false\n    },\n    \"dueComplete\": false,\n    \"due\": null,\n    \"idChecklists\": [],\n    \"idMembers\": [],\n    \"labels\": [],\n    \"shortUrl\": \"https://trello.com/c/vxzyFCkF\",\n    \"subscribed\": false,\n    \"url\": \"https://trello.com/c/vxzyFCkF/93-test\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/cards/closed"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"},{"_id":"5951547f470b3a0015ba1512","ref":"","in":"path","required":false,"desc":"Valid Values: all, closed, none, open, visible.","default":"","type":"string","name":"filter"}],"url":"/boards/{boardId}/cards/{filter}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"","slug":"boardsboardidcardsfilter","type":"endpoint","title":"/boards/{id}/cards/{filter}","__v":1,"updatedAt":"2019-06-10T14:28:52.535Z","swagger":{"path":"/boards/{boardId}/cards/{filter}"}},{"_id":"59396c72e376d4002f8a12e6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:25:38.389Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/cards/59394c1939fc59910b4f7cfd"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"59394c1939fc59910b4f7cfd\",\n  \"badges\": {\n    \"votes\": 0,\n    \"viewingMemberVoted\": false,\n    \"subscribed\": false,\n    \"fogbugz\": \"\",\n    \"checkItems\": 0,\n    \"checkItemsChecked\": 0,\n    \"comments\": 0,\n    \"attachments\": 0,\n    \"description\": false,\n    \"due\": null,\n    \"dueComplete\": false\n  },\n  \"checkItemStates\": [],\n  \"closed\": true,\n  \"dueComplete\": false,\n  \"dateLastActivity\": \"2017-06-08T13:07:57.302Z\",\n  \"desc\": \"\",\n  \"descData\": null,\n  \"due\": null,\n  \"email\": null,\n  \"idBoard\": \"586e8f681d4fe9b06a928307\",\n  \"idChecklists\": [],\n  \"idList\": \"58d4144e4ec5c792a898d4b4\",\n  \"idMembers\": [],\n  \"idMembersVoted\": [],\n  \"idShort\": 93,\n  \"idAttachmentCover\": null,\n  \"manualCoverAttachment\": false,\n  \"labels\": [],\n  \"idLabels\": [],\n  \"name\": \"Test\",\n  \"pos\": 163839.5,\n  \"shortLink\": \"vxzyFCkF\",\n  \"shortUrl\": \"https://trello.com/c/vxzyFCkF\",\n  \"subscribed\": false,\n  \"url\": \"https://trello.com/c/vxzyFCkF/93-test\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"59515640702f02001bf3d884","ref":"","in":"path","required":false,"desc":"The id the card to retrieve.","default":"","type":"string","name":"idCard"}],"url":"/boards/{id}/cards/{idCard}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"This resource is used to retrieve individual cards on a board. It is a nested version of the cards object. For more on the query parameters available, read the documentation [here](ref:cards-nested-resource).","excerpt":"","slug":"boardsboardidactions-1","type":"endpoint","title":"/boards/{id}/cards/{cardId}","__v":1,"updatedAt":"2019-06-10T14:28:52.536Z","swagger":{"path":"/boards/{id}/cards/{idCard}"}},{"_id":"59396cba819ce5002f425071","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:26:50.300Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/boards/d2EnEWSY/checklists?checkItem_fields=name&fields=name&token=[yourToken]&key=[yourKey]"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"586eb0f532487bceb8b75aca\",\n    \"name\": \"Checklist\",\n    \"checkItems\": [\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f6599c7bcf2c5116bc\",\n        \"name\": \"1\"\n      },\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f64e39386b8b101675\",\n        \"name\": \"2\"\n      },\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f740aec762d6601f6a\",\n        \"name\": \"3\"\n      }\n    ]\n  },\n  {\n    \"id\": \"586eb2770c9dc27f034162f7\",\n    \"name\": \"Checklist\",\n    \"checkItems\": []\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/checklists","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"This resource is used to retrieve checklists from cards on the board with the given id. It is a nested version of the checklists object. For more on the query parameters available, read the documentation [here](ref:checklists-nested-resource).","excerpt":"","slug":"boardsboardidactions-3","type":"endpoint","title":"/boards/{id}/checklists","__v":0,"updatedAt":"2019-06-10T14:28:52.536Z","swagger":{"path":"/boards/{id}/checklists"}},{"_id":"5ab0f6d6ade4f4003cf6b016","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["5b29143736a5030003c3febc"],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T11:56:06.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/customFields?token=[yourToken]&key=[yourKey]"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/customFields","method":"get"},"isReference":true,"order":11,"body":"","excerpt":"Get the Custom Field Definitions that exist on a board.","slug":"boardsidcustomfields","type":"endpoint","title":"/boards/{id}/customFields","__v":4,"updatedAt":"2019-06-10T14:28:52.537Z","swagger":{"path":"/boards/{id}/customFields"}},{"_id":"59396ed94ea7ce000f36ca3a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:35:53.873Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f960e18d5a5001e81aa29","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of label [fields](#label-object)","default":"all","type":"string","name":"fields"},{"_id":"597f960e18d5a5001e81aa28","ref":"","in":"query","required":false,"desc":"0 to 1000","default":"50","type":"int","name":"limit"}],"url":"/boards/{id}/labels","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/boards/ZqN99gGN/labels?limit=3&fields=name,color\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd747\\\",\\n    \\\"name\\\": \\\"Verified on branch\\\",\\n    \\\"color\\\": \\\"yellow\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd74a\\\",\\n    \\\"name\\\": \\\"Regression\\\",\\n    \\\"color\\\": \\\"purple\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd74b\\\",\\n    \\\"name\\\": \\\"Verified on staging\\\",\\n    \\\"color\\\": \\\"blue\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boardsboardidlabels","type":"endpoint","title":"/boards/{id}/labels","__v":3,"updatedAt":"2019-06-10T14:28:52.537Z","swagger":{"path":"/boards/{id}/labels"}},{"_id":"59396f04e376d4002f8a139e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":["597acae6903c5800248b4e83","5cda244b77452d0013bb33d2"],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:36:36.545Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f977cebbd9c0014917342","ref":"","in":"query","required":false,"desc":"One of: `all`, `closed`, `none`, `open`","default":"none","type":"string","name":"cards"},{"_id":"597f977cebbd9c0014917341","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](#card-object)","default":"all","type":"string","name":"card_fields"},{"_id":"597f977cebbd9c0014917340","ref":"","in":"query","required":false,"desc":"One of `all`, `closed`, `none`, `open`","default":"open","type":"string","name":"filter"},{"_id":"597f977cebbd9c001491733f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](#list-object)","default":"all","type":"string","name":"fields"}],"url":"/boards/{id}/lists","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://trello.com/1/boards/ZqN99gGN/lists?cards=open&card_fields=name&filter=open&fields=name\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd737\\\",\\n    \\\"name\\\": \\\"Backlog\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd818\\\",\\n        \\\"name\\\": \\\"Product Owner: Brian\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd7e5\\\",\\n        \\\"name\\\": \\\"(3) fix /org/:id route\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd738\\\",\\n    \\\"name\\\": \\\"Sprint Backlog\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a890c6504676888e1dd776\\\",\\n        \\\"name\\\": \\\"(8) Clicking the collection beneath a board should filter by collection, not open collections pop-over\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd7f0\\\",\\n        \\\"name\\\": \\\"(2) BC3 team boards page: Show Other Private Boards\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c6504676888e1dd772\\\",\\n        \\\"name\\\": \\\"(1) Add post-message-io\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd739\\\",\\n    \\\"name\\\": \\\"In Progress\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a248d3977a6e388bf6cb80\\\",\\n        \\\"name\\\": \\\"Multiple due dates\\\"\\n      }\\n    ]\\t\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boardsboardidlists","type":"endpoint","title":"/boards/{id}/lists","__v":7,"updatedAt":"2019-06-10T14:28:52.538Z","swagger":{"path":"/boards/{id}/lists"}},{"_id":"59396f114ea7ce000f36ca3e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:36:49.028Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5939a6656c83cb003b99ba19","ref":"","in":"path","required":false,"desc":"One of `all`, `closed`, `none`, `open`","default":"","type":"string","name":"filter"}],"url":"/boards/{id}/lists/{filter}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"","excerpt":"","slug":"boardsboardidlistsfilter","type":"endpoint","title":"/boards/{id}/lists/{filter}","__v":1,"updatedAt":"2019-06-10T14:28:52.538Z","swagger":{"path":"/boards/{id}/lists/{filter}"}},{"_id":"5939a67f109baf00336c09db","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T19:33:19.545Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"This resource is a nested members resource. Nested members are documented at [Members Nested Resource](ref:members-nested-resource). The members returned by this resource will be within the context of the board whose ID is being used.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"memberTypes\",\n  \"body\": \"The `memberType` field returned from this endpoint only enumerates the relationship between the user and the organization to which the board belongs. Use the [1/boards/{boardId}/memberships](#boardsidmemberships) resource to determine the type of membership the member has to the board.\"\n}\n[/block]","excerpt":"Get the members for a board","slug":"boardsboardidmembers","type":"endpoint","title":"/boards/{id}/members","__v":8,"updatedAt":"2019-06-10T14:28:52.539Z","swagger":{"path":"/boards/{id}/members"}},{"_id":"59de25e15e7f1500106cd241","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-10-11T14:08:33.788Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"name":"","code":"","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"text","code":"curl https://trello.com/1/boards/59de14978d0f59de14978d0f/memberships/?orgMemberType=true&member=true&member_fields=fullName"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f986afe3a5f00281c7eef","ref":"","in":"query","required":false,"desc":"One of `admins`, `all`, `none`, `normal`","default":"all","type":"string","name":"filter"},{"_id":"597f9881537d33002033963b","ref":"","in":"query","required":false,"desc":"Works for premium organizations only.","default":"false","type":"boolean","name":"activity"},{"_id":"59de25e15e7f1500106cd244","ref":"","in":"query","required":false,"desc":"Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`.","default":"false","type":"boolean","name":"orgMemberType"},{"_id":"59de25e15e7f1500106cd243","ref":"","in":"query","required":false,"desc":"Determines whether to include a nester member object.","default":"false","type":"boolean","name":"member"},{"_id":"59de25e15e7f1500106cd242","ref":"","in":"query","required":false,"desc":"Fields to show if `member=true`. Valid values: [nested member resource fields](https://developers.trello.com/v1.0/reference#members-nested-resource).","default":"fullname,username","type":"string","name":"member_fields"}],"url":"/boards/{id}/memberships","method":"get"},"isReference":true,"order":16,"body":"Example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://trello.com/1/boards/59de14978d0f59de14978d0f/memberships/?orgMemberType=true&member=true&member_fields=fullName\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nResponse:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"59de14978d0fd81978d0fd81\\\",\\n    \\\"idMember\\\": \\\"978d0fd81cb40cedc28cf70e\\\",\\n    \\\"memberType\\\": \\\"admin\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"orgMemberType\\\": \\\"admin\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5589c3ea49b4978d0fd810\\\",\\n      \\\"fullName\\\": \\\"Bill Stanley\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"78d0fd81d0fd81978d0fd81\\\",\\n    \\\"idMember\\\": \\\"81978d0fd8178d0fd81d0fd\\\",\\n    \\\"memberType\\\": \\\"observer\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"178d0fd81978d0fd881d0fd\\\",\\n      \\\"fullName\\\": \\\"Marty Roberts\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"d4be2307fe96624ba421059d\\\",\\n    \\\"idMember\\\": \\\"60957479168735c5fe044bd0\\\",\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"4746097904bd1685735c5fe0\\\",\\n      \\\"fullName\\\": \\\"Maria Smith\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"1c10f2359de23661bc14d92a\\\",\\n    \\\"idMember\\\": \\\"59c501209144830f7a929f36\\\",\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"unconfirmed\\\": true,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5a9054830f7429f120919c36\\\",\\n      \\\"fullName\\\": \\\"Stan Billsby\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n### Field Definitions\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field\",\n    \"0-0\": \"unconfirmed\\n**boolean**\",\n    \"h-1\": \"Valid Values\",\n    \"0-1\": \"`true` or `false`\",\n    \"h-2\": \"Description\",\n    \"1-0\": \"deactivated\\n**boolean**\",\n    \"1-1\": \"`true` or `false`\",\n    \"0-2\": \"Whether the user has confirmed their Trello account. Inviting a user via email to the board who does not have a Trello account will result in `unconfirmed: true` until they create a Trello account.\",\n    \"1-2\": \"Whether the user's Trello account has been deactivated or not.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]","excerpt":"Get information about the memberships users have to the board.","slug":"boardsidmemberships","type":"endpoint","title":"/boards/{id}/memberships","__v":5,"updatedAt":"2019-06-10T14:28:52.539Z","swagger":{"path":"/boards/{id}/memberships"}},{"_id":"5952d8072cc1e8001b6adb16","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:11:19.902Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"55a5d917446f517774210013\",\n    \"name\": \"Voting\",\n    \"public\": true,\n    \"url\": \"https://voting.trello.services/manifest.json\"\n  },\n  {\n    \"id\": \"568c143d95adcd7308cbc3fb\",\n    \"name\": \"SurveyMonkey\",\n    \"public\": true,\n    \"url\": \"https://surveymonkey.trello.services/manifest.json\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d8897d896d001b09b826","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5952d8afa953c2001b3f5355","ref":"","in":"query","required":false,"desc":"One of: `enabled` or `available`","default":"enabled","type":"string","name":"filter"}],"url":"/boards/{id}/plugins","method":"get","examples":{"codes":[{"language":"http","code":"https://api.trello.com/1/boards/nC8QJJoZ/plugins?filter=enabled"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"List the Power-Ups for a board","slug":"boardsidplugins","type":"endpoint","title":"/boards/{id}/plugins","__v":2,"updatedAt":"2019-06-10T14:28:52.540Z","swagger":{"path":"/boards/{id}/plugins"}},{"_id":"5943ebd76ec7dc002db0f46c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-16T14:31:51.888Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":false,"desc":"The new name for the board. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"594490d7bc74a3000f35f499","ref":"","in":"query","required":false,"desc":"A new description for the board, 0 to 16384 characters long","default":"","type":"string","name":"desc"},{"_id":"594490d7bc74a3000f35f498","ref":"","in":"query","required":false,"desc":"Whether the board is closed","default":"","type":"boolean","name":"closed"},{"_id":"594490d7bc74a3000f35f497","ref":"","in":"query","required":false,"desc":"Whether the acting user is subscribed to the board","default":"","type":"boolean","name":"subscribed"},{"_id":"594490d7bc74a3000f35f496","ref":"","in":"query","required":false,"desc":"The id of the team the board should be moved to","default":"","type":"string","name":"idOrganization"},{"_id":"594490d7bc74a3000f35f495","ref":"","in":"query","required":false,"desc":"One of: org, private, public","default":"","type":"string","name":"prefs/permissionLevel"},{"_id":"594490d7bc74a3000f35f494","ref":"","in":"query","required":false,"desc":"Whether team members can join the board themselves","default":"","type":"boolean","name":"prefs/selfJoin"},{"_id":"594490d7bc74a3000f35f493","ref":"","in":"query","required":false,"desc":"Whether card covers should be displayed on this board","default":"","type":"boolean","name":"prefs/cardCovers"},{"_id":"5cf6c6beb0f8f400191f6f84","ref":"","in":"query","required":false,"desc":"Determines whether the Voting Power-Up should hide who voted on cards or not.","default":"","type":"boolean","name":"prefs/hideVotes"},{"_id":"594490d7bc74a3000f35f492","ref":"","in":"query","required":false,"desc":"Who can invite people to this board. One of: admins, members","default":"","type":"string","name":"prefs/invitations"},{"_id":"594490d7bc74a3000f35f491","ref":"","in":"query","required":false,"desc":"Who can vote on this board. One of disabled, members, observers, org, public","default":"","type":"string","name":"prefs/voting"},{"_id":"594490d7bc74a3000f35f490","ref":"","in":"query","required":false,"desc":"Who can comment on cards on this board. One of: disabled, members, observers, org, public","default":"","type":"string","name":"prefs/comments"},{"_id":"594490d7bc74a3000f35f48f","ref":"","in":"query","required":false,"desc":"The id of a custom background or one of: blue, orange, green, red, purple, pink, lime, sky, grey","default":"","type":"string","name":"prefs/background"},{"_id":"594490d7bc74a3000f35f48e","ref":"","in":"query","required":false,"desc":"One of: pirate, regular","default":"","type":"string","name":"prefs/cardAging"},{"_id":"594490d7bc74a3000f35f48d","ref":"","in":"query","required":false,"desc":"Determines whether the calendar feed is enabled or not.","default":"","type":"boolean","name":"prefs/calendarFeedEnabled"},{"_id":"5952705b4731e4005d8254e5","ref":"","in":"query","required":false,"desc":"Name for the green label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/green"},{"_id":"5952705b4731e4005d8254e4","ref":"","in":"query","required":false,"desc":"Name for the yellow label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/yellow"},{"_id":"5952705b4731e4005d8254e3","ref":"","in":"query","required":false,"desc":"Name for the orange label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/orange"},{"_id":"5952705b4731e4005d8254e2","ref":"","in":"query","required":false,"desc":"Name for the red label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/red"},{"_id":"5952705b4731e4005d8254e1","ref":"","in":"query","required":false,"desc":"Name for the purple label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/purple"},{"_id":"5952705b4731e4005d8254e0","ref":"","in":"query","required":false,"desc":"Name for the blue label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/blue"}],"url":"/boards/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"This endpoint can be used to update one or more properties of the card at once. Alternatively, you can also update a single property of the card as the params for this method via:\n\n`PUT /1/boards/{id}/{property}?value={newValue}`\n\nSo for example, to archive a board:\n\n`PUT /1/boards/{id}/closed?value=true`\n\nOr to update the name of a board:\n\n`PUT /1/boards/{id}/name?value={new board name}`","excerpt":"Update an existing board by id","slug":"idnext","type":"endpoint","title":"/boards/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.540Z","swagger":{"path":"/boards/{id}"}},{"_id":"59526ea9109f490029f6a24f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:41:45.763Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The email address of a user to add as a member of the board.","default":"","type":"string","name":"email"},{"_id":"5952733f08a112006b18c9c1","ref":"","in":"body","required":false,"desc":"The full name of the user to as a member of the board. Must have a length of at least 1 and cannot begin nor end with a space.","default":"","type":"string","name":"fullName"},{"_id":"5952733f08a112006b18c9c0","ref":"","in":"header","required":true,"desc":"Valid values: admin, normal, observer. Determines what type of member the user being added should be of the board.","default":"","type":"string","name":"type"}],"url":"/boards/{id}/members","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Update an existing board by id","slug":"boardsidlabelnamesmembers","type":"endpoint","title":"/boards/{id}/members","__v":1,"updatedAt":"2019-06-10T14:28:52.541Z","swagger":{"path":"/boards/{id}/members"}},{"_id":"59526eaf28e9ae004b965a1f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59bf1d51b1d4c7001008fcb3","5c1cfc4f61d386002a575e82"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:41:51.954Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"595273b3f168f9001bba9a39","ref":"","in":"query","required":true,"desc":"One of: admin, normal, observer. Determines the type of member this user will be on the board.","default":"","type":"string","name":"type"},{"_id":"59bfdc60e180d8003a118299","ref":"","in":"path","required":false,"desc":"The id of the member to add to the board.","default":"","type":"string","name":"idMember"},{"_id":"5c8280ad47ddc8002f1aa0ad","ref":"","in":"query","required":false,"desc":"Optional param that allows organization admins to add multi-board guests onto a board.","default":"false","type":"boolean","name":"allowBillableGuest"}],"url":"/boards/{id}/members/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Add a member to the board.","slug":"boardsidlabelnamesmembersidmember","type":"endpoint","title":"/boards/{id}/members/{idMember}","__v":8,"updatedAt":"2019-06-10T14:28:52.541Z","swagger":{"path":"/boards/{id}/members/{idMember}"}},{"_id":"59526ebec86ac3003f370f72","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:42:06.639Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of a membership that should be added to this board.","default":"","type":"string","name":"idMembership"},{"_id":"5952742b109f490029f6a29c","ref":"","in":"query","required":true,"desc":"One of: admin, normal, observer. Determines the type of member that this membership will be to this board.","default":"","type":"string","name":"type"},{"_id":"5952742b109f490029f6a29b","ref":"","in":"query","required":false,"desc":"Valid values: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"fullName, username","type":"string","name":"member_fields"}],"url":"/boards/{id}/memberships/{idMembership}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"","excerpt":"Update an existing board by id","slug":"boardsidlabelnamesmembershipsidmembership","type":"endpoint","title":"/boards/{id}/memberships/{idMembership}","__v":1,"updatedAt":"2019-06-10T14:28:52.542Z","swagger":{"path":"/boards/{id}/memberships/{idMembership}"}},{"_id":"59526ef7c86ac3003f370f73","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:03.489Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Valid values: bottom, top. Determines the position of the email address.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/myPrefs/emailPosition","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsemailposition","type":"endpoint","title":"/boards/{id}/myPrefs/emailPosition","__v":1,"updatedAt":"2019-06-10T14:28:52.542Z","swagger":{"path":"/boards/{id}/myPrefs/emailPosition"}},{"_id":"59526f001579820035a6afee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:12.082Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of an email list.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/myPrefs/idEmailList","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsidemaillist","type":"endpoint","title":"/boards/{id}/myPrefs/idEmailList","__v":1,"updatedAt":"2019-06-10T14:28:52.543Z","swagger":{"path":"/boards/{id}/myPrefs/idEmailList"}},{"_id":"59526f08109f490029f6a250","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:20.583Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the list guide.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showListGuide","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowlistguide","type":"endpoint","title":"/boards/{id}/myPrefs/showListGuide","__v":1,"updatedAt":"2019-06-10T14:28:52.543Z","swagger":{"path":"/boards/{id}/myPrefs/showListGuide"}},{"_id":"59526f0ec86ac3003f370f74","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["5bbd124073abaf00034e22ba"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:26.488Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the side bar.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebar","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebae","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebar","__v":2,"updatedAt":"2019-06-10T14:28:52.544Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebar"}},{"_id":"59526f1aa6c9140033c80717","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:38.768Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show sidebar activity.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarActivity","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebaractivity","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarActivity","__v":1,"updatedAt":"2019-06-10T14:28:52.544Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarActivity"}},{"_id":"59526f22b1a12000672aed55","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:46.746Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the sidebar board actions.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarBoardActions","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebarboardactions","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarBoardActions","__v":1,"updatedAt":"2019-06-10T14:28:52.545Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarBoardActions"}},{"_id":"59526f344731e4005d8254dd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:44:04.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show members of the board in the sidebar.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarMembers","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebarmembers","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarMembers","__v":1,"updatedAt":"2019-06-10T14:28:52.545Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarMembers"}},{"_id":"595278ffd93ebe003ff33951","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59679011c603a6002bca3126","5c2082ff1f2eb2005184db26"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:25:51.174Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The new name for the board. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527afba0e05a0041b07332","ref":"","in":"query","required":false,"desc":"Determines whether to use the default set of labels.","default":"true","type":"boolean","name":"defaultLabels"},{"_id":"59527afba0e05a0041b07331","ref":"","in":"query","required":false,"desc":"Determines whether to add the default set of lists to a board (To Do, Doing, Done). It is ignored if `idBoardSource` is provided.","default":"true","type":"boolean","name":"defaultLists"},{"_id":"594490d7bc74a3000f35f499","ref":"","in":"query","required":false,"desc":"A new description for the board, 0 to 16384 characters long","default":"","type":"string","name":"desc"},{"_id":"594490d7bc74a3000f35f496","ref":"","in":"query","required":false,"desc":"The id or name of the team the board should belong to.","default":"","type":"string","name":"idOrganization"},{"_id":"594490d7bc74a3000f35f495","ref":"","in":"query","required":false,"desc":"The id of a board to copy into the new board.","default":"","type":"string","name":"idBoardSource"},{"_id":"594490d7bc74a3000f35f494","ref":"","in":"query","required":false,"desc":"To keep cards from the original board pass in the value `cards`","default":"none","type":"string","name":"keepFromSource"},{"_id":"594490d7bc74a3000f35f493","ref":"","in":"query","required":false,"desc":"The Power-Ups that should be enabled on the new board. One of: `all`, `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"powerUps"},{"_id":"594490d7bc74a3000f35f492","ref":"","in":"query","required":false,"desc":"The permissions level of the board. One of: `org`, `private`, `public`.","default":"private","type":"string","name":"prefs_permissionLevel"},{"_id":"594490d7bc74a3000f35f491","ref":"","in":"query","required":false,"desc":"Who can vote on this board. One of `disabled`, `members`, `observers`, `org`, `public`.","default":"disabled","type":"string","name":"prefs_voting"},{"_id":"594490d7bc74a3000f35f490","ref":"","in":"query","required":false,"desc":"Who can comment on cards on this board. One of: `disabled`, `members`, `observers`, `org`, `public`.","default":"members","type":"string","name":"prefs_comments"},{"_id":"5952705b4731e4005d8254e5","ref":"","in":"query","required":false,"desc":"Determines what types of members can invite users to join. One of: `admins`, `members`.","default":"members","type":"string","name":"prefs_invitations"},{"_id":"5952705b4731e4005d8254e4","ref":"","in":"query","required":false,"desc":"Determines whether users can join the boards themselves or whether they have to be invited.","default":"true","type":"boolean","name":"prefs_selfJoin"},{"_id":"5952705b4731e4005d8254e3","ref":"","in":"query","required":false,"desc":"Determines whether card covers are enabled.","default":"true","type":"boolean","name":"prefs_cardCovers"},{"_id":"594490d7bc74a3000f35f48f","ref":"","in":"query","required":false,"desc":"The id of a custom background or one of: `blue`, `orange`, `green`, `red`, `purple`, `pink`, `lime`, `sky`, `grey`.","default":"blue","type":"string","name":"prefs_background"},{"_id":"594490d7bc74a3000f35f48e","ref":"","in":"query","required":false,"desc":"Determines the type of card aging that should take place on the board if card aging is enabled. One of: `pirate`, `regular`.","default":"regular","type":"string","name":"prefs_cardAging"}],"url":"/boards/","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Create a new board.","slug":"boardsid","type":"endpoint","title":"/boards/","__v":5,"updatedAt":"2019-06-10T14:28:52.548Z","swagger":{"path":"/boards/"}},{"_id":"5952d705373d400015dfa347","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:07:01.067Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d71311ad0a001b0a7e21","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5952d72ca953c2001b3f5353","ref":"","in":"query","required":false,"desc":"The ID of the Power-Up to enable","default":"","type":"string","name":"idPlugin"}],"url":"/boards/{id}/boardPlugins","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"If a board has reached the max number of Power-Ups that can be enabled on it, the API will return the following error message with a 409 status code:\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n    \\\"message\\\": \\\"Can't enable plugin\\\",\\n    \\\"error\\\": \\\"PLUGIN_TOO_MANY_PLUGINS\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Enable a Power-Up on a board","slug":"boardsidboardplugins-1","type":"endpoint","title":"/boards/{id}/boardPlugins","__v":4,"updatedAt":"2019-06-10T14:28:52.549Z","swagger":{"path":"/boards/{id}/boardPlugins"}},{"_id":"59527cb2d93ebe003ff3395c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:41:38.221Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/calendarKey/generate","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"This endpoint is used to generate a new key for the calendar to make use of.","excerpt":"Create a new board.","slug":"boardsidcalendarkeygenerate","type":"endpoint","title":"/boards/{id}/calendarKey/generate","__v":2,"updatedAt":"2019-06-10T14:28:52.549Z","swagger":{"path":"/boards/{id}/calendarKey/generate"}},{"_id":"59527cf01579820035a6b098","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:40.581Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/emailKey/generate","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"This resource is used to generate a new key to be used for email.","excerpt":"","slug":"boardsidemailkeygenerate","type":"endpoint","title":"/boards/{id}/emailKey/generate","__v":1,"updatedAt":"2019-06-10T14:28:52.550Z","swagger":{"path":"/boards/{id}/emailKey/generate"}},{"_id":"59527cf69262c20041644be5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:46.975Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of a tag from the organization to which this board belongs.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/idTags","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":34,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Warning: Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"","slug":"boardsididtags","type":"endpoint","title":"/boards/{id}/idTags","__v":0,"updatedAt":"2019-06-10T14:28:52.550Z","swagger":{"path":"/boards/{id}/idTags"}},{"_id":"59527cfdf168f9001bba9a87","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:53.445Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The name of the label to be created. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527e2328e9ae004b965a4d","ref":"","in":"query","required":true,"desc":"Sets the color of the new label. Valid values are a label color or `null`.","default":"","type":"string","name":"color"}],"url":"/boards/{id}/labels","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"","excerpt":"","slug":"boardsidlabels","type":"endpoint","title":"/boards/{id}/labels","__v":1,"updatedAt":"2019-06-10T14:28:52.552Z","swagger":{"path":"/boards/{id}/labels"}},{"_id":"59527d01f8a1ac001b0f69ff","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59bd5596284517001a16d760","5c62b02217284400b6de9a3d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:57.656Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The name of the list to be created. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527e67fc28ee004d046862","ref":"","in":"query","required":false,"desc":"Determines the position of the list. Valid values: `top`, `bottom`, or a positive number.","default":"top","type":"string","name":"pos"}],"url":"/boards/{id}/lists","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"","excerpt":"","slug":"boardsidlists","type":"endpoint","title":"/boards/{id}/lists","__v":4,"updatedAt":"2019-06-10T14:28:52.553Z","swagger":{"path":"/boards/{id}/lists"}},{"_id":"59527d081579820035a6b099","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:43:04.430Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/markedAsViewed","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"","slug":"boardsidmarkedasviewed","type":"endpoint","title":"/boards/{id}/markedAsViewed","__v":2,"updatedAt":"2019-06-10T14:28:52.553Z","swagger":{"path":"/boards/{id}/markedAsViewed"}},{"_id":"59527d10d93ebe003ff3395e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:43:12.851Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The Power-Up to be enabled on the board. One of: `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/powerUps","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"","slug":"boardsidpowerups","type":"endpoint","title":"/boards/{id}/powerUps","__v":0,"updatedAt":"2019-06-10T14:28:52.554Z","swagger":{"path":"/boards/{id}/powerUps"}},{"_id":"5a29563e2f609b00300752f6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-12-07T14:54:54.291Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to delete","default":"","type":"string","name":"id"}],"url":"/boards/{id}","method":"delete"},"isReference":true,"order":39,"body":"","excerpt":"Delete a board.","slug":"boardsid-1","type":"endpoint","title":"/boards/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.554Z","swagger":{"path":"/boards/{id}"}},{"_id":"5952d7605f609600157a79f0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"59512835cef5a9007106bd9d","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:08:32.823Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d76b12a2d3001b73b3b2","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5b76cf3e7d0df8000369a5f0","ref":"","in":"path","required":false,"desc":"The ID of the Power-Up to disable","default":"","type":"string","name":"idPlugin"}],"url":"/boards/{id}/boardPlugins/{idPlugin}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Disable a Power-Up on a board","slug":"boardsidboardplugins-2","type":"endpoint","title":"/boards/{id}/boardPlugins/{idPlugin}","__v":3,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/boardPlugins/{idPlugin}"}},{"_id":"59527efa4731e4005d825539","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:51:22.068Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"59527efa4731e4005d82553a","ref":"","in":"path","required":false,"desc":"The id, username, or organization name of the user to be removed from the board.","default":"","type":"string","name":"idMember"}],"url":"/boards/{id}/members/{idMember}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"","slug":"boardsidmembersidmember","type":"endpoint","title":"/boards/{id}/members/{idMember}","__v":1,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/members/{idMember}"}},{"_id":"59527f3ed93ebe003ff33960","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:52:30.170Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"59527efa4731e4005d82553a","ref":"","in":"path","required":false,"desc":"The Power-Up to be enabled on the board. One of: `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"powerUp"}],"url":"/boards/{id}/powerUps/{powerUp}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"","excerpt":"","slug":"boardsidpowerupspowerup","type":"endpoint","title":"/boards/{id}/powerUps/{powerUp}","__v":0,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/powerUps/{powerUp}"}}]},{"_id":"5948381532618000272097c5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":["5aa669ba61096f001cc1984f","5b31515cec613b000312ecbd"],"next":{"pages":[],"description":""},"createdAt":"2017-06-19T20:46:13.471Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id** \\nstring\",\n    \"0-1\": \"The ID of the board\",\n    \"1-0\": \"**name** \\nstring\",\n    \"2-0\": \"**desc**\\nstring\",\n    \"3-0\": \"**descData** \\nstring or `null`\",\n    \"4-0\": \"**closed**\\nboolean\",\n    \"5-0\": \"**idOrganization** \\nstring\",\n    \"6-0\": \"**pinned** \\nboolean\",\n    \"7-0\": \"**url** \\nstring\",\n    \"8-0\": \"**shortUrl** \\nstring\",\n    \"9-0\": \"**prefs**\\nobject\",\n    \"10-0\": \"**labelNames**\\nobject\",\n    \"1-1\": \"The name of the board\",\n    \"2-1\": \"The description of the board.\\n*Deprecated*\",\n    \"4-1\": \"Boolean whether the board has been closed or not.\",\n    \"5-1\": \"MongoID of the organization to which the board belongs.\",\n    \"6-1\": \"Boolean whether the board has been pinned or not.\",\n    \"7-1\": \"Persistent URL for the board.\",\n    \"8-1\": \"URL for the board using only its shortMongoID\",\n    \"10-1\": \"Object containing color keys and the label names given for one label of each color on the board. To get a full list of labels on the board see [/boards/{id}/labels/](https://developers.trello.com/v1.0/reference#boardsboardidlabels).\",\n    \"3-1\": \"If the description includes custom emoji, this will contain the data necessary to display them.\",\n    \"9-1\": \"Short for \\\"preferences\\\", these are the settings for the board\",\n    \"11-0\": \"**starred**\\nboolean\",\n    \"11-1\": \"Whether the board has been starred by the current request's user.\",\n    \"12-0\": \"**limits**\\nobject\",\n    \"12-1\": \"An object containing information on the limits that exist for the board. Read more about at [Limits](doc:limits).\",\n    \"13-0\": \"**memberships**\\narray\",\n    \"13-1\": \"Array of objects that represent the relationship of users to this board as [memberships](ref:boardsidmemberships).\"\n  },\n  \"cols\": 2,\n  \"rows\": 14\n}\n[/block]\nAn example request and response for a board object and all of its fields would look like:\n\n`GET` `/1/boards/5612e4f91b25c15e873722b8?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5612e4f91b25c15e873722b8\\\",\\n  \\\"name\\\": \\\"Employee Manual\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"54b58957112602c9a0be7aa3\\\",\\n  \\\"invited\\\": false,\\n  \\\"limits\\\": {\\n    \\\"attachments\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 34200,\\n        \\\"warnAt\\\": 32400\\n      }\\n    },\\n    \\\"boards\\\": {\\n      \\\"totalMembersPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1520,\\n        \\\"warnAt\\\": 1440\\n      }\\n    },\\n    \\\"cards\\\": {\\n      \\\"openPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 4750,\\n        \\\"warnAt\\\": 4500\\n      },\\n      \\\"totalPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1900000,\\n        \\\"warnAt\\\": 1800000\\n      }\\n    },\\n    \\\"checklists\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 1900000,\\n        \\\"warnAt\\\": 1800000\\n      }\\n    },\\n    \\\"customFields\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 48,\\n        \\\"warnAt\\\": 45\\n      }\\n    },\\n    \\\"labels\\\": {\\n      \\\"perBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 950,\\n        \\\"warnAt\\\": 900\\n      }\\n    },\\n    \\\"lists\\\": {\\n      \\\"openPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 475,\\n        \\\"warnAt\\\": 450\\n      },\\n      \\\"totalPerBoard\\\": {\\n        \\\"status\\\": \\\"ok\\\",\\n        \\\"disableAt\\\": 2850,\\n        \\\"warnAt\\\": 2700\\n      }\\n    }\\n  },\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"5612e4fb1b25c15e8737234b\\\",\\n      \\\"idMember\\\": \\\"53baf533e697a982248cd73f\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"5925e4fc63096260c349cbd4\\\",\\n      \\\"idMember\\\": \\\"53cd82cd7ed746db278c4f32\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    }\\n  ],\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": false,\\n  \\\"url\\\": \\\"https://trello.com/b/HbTEX5hb/employee-manual\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"5925b78fa1bd45e1bfb835da\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1707/f3c8b6101072d80565d9b6368f05b19d/photo-1495571758719-6ec1e876d6ae\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/140x100/5afcd242d52da7ad4827966d8c896c00/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/256x192/d297510e553abc340fb0de3570445f03/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/480x480/08b5996b0a87a0f3dd80af488d99194a/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/960x960/7cb60ad23bdee1ca45a7c5e4e0c07968/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1024x1024/dca79e47ce10cd2c985dc4ba61abd9cc/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2048,\\n        \\\"height\\\": 2048,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2048x2048/b5a88d70569d9ded2af259e8d332c346/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1280x1280/c9ae077543d6c41ea2d48d84fdc12484/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1920,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/1920x1920/cc85a9a12195863a1ff2193b5bb3a651/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2560,\\n        \\\"height\\\": 1600,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1600/de59d9e742f2de51d4284c6fd7c07f5d/photo-1495571758719-6ec1e876d6ae.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 2560,\\n        \\\"height\\\": 1707,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/2560x1707/f3c8b6101072d80565d9b6368f05b19d/photo-1495571758719-6ec1e876d6ae\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"backgroundBottomColor\\\": \\\"#332b09\\\",\\n    \\\"backgroundTopColor\\\": \\\"#d3c4a9\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [],\\n  \\\"shortLink\\\": \\\"HbTEX5hb\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"\\\",\\n    \\\"yellow\\\": \\\"good to go\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [],\\n  \\\"dateLastActivity\\\": \\\"2016-01-07T21:24:47.855Z\\\",\\n  \\\"dateLastView\\\": \\\"2018-03-12T14:15:20.234Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/HbTEX5hb\\\",\\n  \\\"idTags\\\": [],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"board-object","type":"basic","title":"Board Object","__v":2,"parentDoc":"59304329b810fd000fccb51d","updatedAt":"2019-06-10T14:28:52.531Z"},{"_id":"594abbcd721bd90010e34a4d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-21T18:32:45.955Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Boards are accessible as [nested resources](ref:understanding-nested-resources) via a number of other resources.\n[block:api-header]\n{\n  \"title\": \"Nested Boards via Query Params\"\n}\n[/block]\nFor objects that can contain multiple boards, like `organizations` and `members`\n\n`/1/{object}/{id}?boards=open`\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**boards**\",\n    \"0-1\": \"Default: `none`\\n\\n`all` or a comma-separated list of:\\n\\n- `open` - Returns all boards that are open.\\n- `closed` - Returns all boards that have been closed.\\n- `members` - Returns all boards that have visibility set to Private.\\n- `organization` - Returns all boards that have visibility set to Team.\\n- `public` - Returns all boards that have visibility set to Public.\\n- `starred` - Returns all boards that have been starred.\",\n    \"1-0\": \"**board_fields**\",\n    \"1-1\": \"Default: `all`\\n\\n`all` or a comma-separated list of board [fields](ref:board-object)\",\n    \"2-0\": \"**board_actions**\",\n    \"2-1\": \"`all` or a comma-separated list of:\\n\\n- addAttachmentToCard\\n- addChecklistToCard\\n- addMemberToBoard\\n- addMemberToCard\\n- addMemberToOrganization\\n- addToOrganizationBoard\\n- commentCard\\n- convertToCardFromCheckItem\\n- copyBoard\\n- copyCard\\n- copyCommentCard\\n- createBoard\\n- createCard\\n- createList\\n- createOrganization\\n- deleteAttachmentFromCard\\n- deleteBoardInvitation\\n- deleteCard\\n- deleteOrganizationInvitation\\n- disablePowerUp\\n- emailCard\\n- enablePowerUp\\n- makeAdminOfBoard\\n- makeNormalMemberOfBoard\\n- makeNormalMemberOfOrganization\\n- makeObserverOfBoard\\n- memberJoinedTrello\\n- moveCardFromBoard\\n- moveCardToBoard\\n- moveListFromBoard\\n- moveListToBoard\\n- removeChecklistFromCard\\n- removeFromOrganizationBoard\\n- removeMemberFromCard\\n- unconfirmedBoardInvitation\\n- unconfirmedOrganizationInvitation\\n- updateBoard\\n- updateCard\\n- updateCard:closed\\n- updateCard:desc\\n- updateCard:idList\\n- updateCard:name\\n- updateCheckItemStateOnCard\\n- updateChecklist\\n- updateList\\n- updateList:closed\\n- updateList:name\\n- updateMember\\n- updateOrganization\",\n    \"3-0\": \"**board_actions_entities**\",\n    \"3-1\": \"Default: `false`\\n`true` or `false`\",\n    \"4-0\": \"**board_actions_display**\",\n    \"4-1\": \"Default: `false`\\n`true` or `false`\",\n    \"5-0\": \"**board_actions_format**\",\n    \"5-1\": \"Default: `list`\\nOne of: `count`, `list`, `minimal`\",\n    \"6-0\": \"**board_actions_since**\",\n    \"6-1\": \"A date, `null`, or `lastView`\",\n    \"7-0\": \"**board_actions_limit**\",\n    \"7-1\": \"Default: 50\\nMax: 1000\",\n    \"8-0\": \"**board_action_fields**\",\n    \"8-1\": \"`all` or a comma-separated list of action [fields](ref:action-object)\",\n    \"9-0\": \"**board_lists**\",\n    \"9-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\"\n  },\n  \"cols\": 2,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"boards-nested-resource","type":"basic","title":"Boards Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.532Z"},{"_id":"5930438a3d2a84000f3fc455","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","updates":["593ee313f69a3b00314a93e5","593ee314b8bb9b002f176927","5b615ebba95b0a0003442860","5bd8528d9f8abf0031417b08","5cb455434910200019864b9a","5cda3f307f1a56004b335a1a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-01T16:40:42.400Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"language":"text","code":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"592da9d093a38d2500465fd9","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"},{"_id":"594abb176496cb003a87996c","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about actions as nested resources [here](https://trello.readme.io/reference#actions-nested-resource).","default":"all","type":"string","name":"actions"},{"_id":"594abb176496cb003a879964","ref":"","in":"query","required":false,"desc":"Valid values are one of: `mine` or `none`.","default":"none","type":"string","name":"boardStars"},{"_id":"594abb176496cb003a87996b","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about cards as nested resources [here](https://trello.readme.io/reference#cards-nested-resource).","default":"none","type":"string","name":"cards"},{"_id":"598dc208ce7da8002fc6db83","ref":"","in":"query","required":false,"desc":"Use with the `cards` param to include card pluginData with the response","default":"false","type":"boolean","name":"card_pluginData"},{"_id":"594abb176496cb003a879956","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about checklists as nested resources [here](https://trello.readme.io/reference#checklists-nested-resource).","default":"none","type":"string","name":"checklists"},{"_id":"5bca56054fc912003283daaa","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about custom fields as nested resources [here](#custom-fields-nested-resource).","default":"false","type":"boolean","name":"customFields"},{"_id":"5aff195c1e89e1000352ca99","ref":"","in":"query","required":false,"desc":"The fields of the board to be included in the response. Valid values: all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url","default":"name,desc,descData,closed,idOrganization,pinned,url,shortUrl,prefs,labelNames","type":"string","name":"fields"},{"_id":"594abb176496cb003a879963","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about labels as nested resources [here](https://trello.readme.io/reference#labels-nested-resource).","default":"","type":"string","name":"labels"},{"_id":"592da73351a3e80f00eb5113","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about lists as nested resources [here](https://trello.readme.io/reference#lists-nested-resource).","default":"open","type":"string","name":"lists"},{"_id":"594abb176496cb003a87995b","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about members as nested resources [here](https://trello.readme.io/reference#members-nested-resource).","default":"none","type":"string","name":"members"},{"_id":"594abb176496cb003a87995e","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about memberships as nested resources [here](https://trello.readme.io/reference#memberships-nested-resource).","default":"none","type":"string","name":"memberships"},{"_id":"594abb176496cb003a879959","ref":"","in":"query","required":false,"desc":"Returns a list of member objects representing members who been invited to be a member of the board. One of: admins, all, none, normal, owners","default":"none","type":"string","name":"membersInvited"},{"_id":"594abb176496cb003a879958","ref":"","in":"query","required":false,"desc":"The member fields to be included in the membersInvited response. Valid values: all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"all","type":"string","name":"membersInvited_fields"},{"_id":"594abb176496cb003a879957","ref":"","in":"query","required":false,"desc":"Determines whether the pluginData for this board should be returned. Valid values: true or false.","default":"false","type":"boolean","name":"pluginData"},{"_id":"594abb176496cb003a879954","ref":"","in":"query","required":false,"desc":"This is a nested resource. Read more about organizations as nested resources [here](https://trello.readme.io/reference#organization-nested-resource).","default":"false","type":"boolean","name":"organization"},{"_id":"598dc2628f3e1d0023160e4c","ref":"","in":"query","required":false,"desc":"Use with the `organization` param to include organization pluginData with the response","default":"false","type":"boolean","name":"organization_pluginData"},{"_id":"594abb176496cb003a879950","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"myPrefs"},{"_id":"594abb176496cb003a87994f","ref":"","in":"query","required":false,"desc":"Also known as collections, tags, refer to the collection(s) that a Board belongs to.","default":"false","type":"boolean","name":"tags"}],"url":"/boards/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Request a single board.","slug":"boardsboardid-1","type":"endpoint","title":"/boards/{id}","__v":20,"parentDoc":"59304329b810fd000fccb51d","updatedAt":"2019-06-10T14:28:52.532Z","swagger":{"path":"/boards/{id}"}},{"_id":"5931c0ab25934a000f698a36","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:46:51.464Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n\"_value\": \"https://trello.com/b/9clNtU6v\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c2d8d1f976000f7b4c07","ref":"","in":"path","required":false,"desc":"The ID of the board.","default":"","type":"string","name":"id"},{"_id":"5931c2d8d1f976000f7b4c06","ref":"","in":"path","required":false,"desc":"The field you'd like to receive. Valid values: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url.","default":"","type":"string","name":"field"}],"url":"/boards/{id}/{field}","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/9clNtU6v/shortUrl"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"boards-nested-resources","type":"endpoint","title":"/boards/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.533Z","swagger":{"path":"/boards/{id}/{field}"}},{"_id":"5931c39a25934a000f698a67","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":["5a42844a2f35a4003084cf12","5a42844dd5c9a0001224fa05"],"next":{"pages":[],"description":""},"createdAt":"2017-06-02T19:59:22.060Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5939a82bcb0811201c349bf9\",\n    \"idMemberCreator\": \"5589c3ea49b40cedc28cf70e\",\n    \"data\": {\n      \"list\": {\n        \"name\": \"Done\",\n        \"id\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"board\": {\n        \"shortLink\": \"d2EnEWSY\",\n        \"name\": \"Best Test Board!\",\n        \"id\": \"586e8f681d4fe9b06a928307\"\n      },\n      \"card\": {\n        \"shortLink\": \"HKaaH2Pk\",\n        \"idShort\": 94,\n        \"name\": \"Design New System\",\n        \"id\": \"5939a829eba57d109331a289\",\n        \"pos\": 229375\n      },\n      \"old\": {\n        \"pos\": 163839.5\n      }\n    },\n    \"type\": \"updateCard\",\n    \"date\": \"2017-06-08T19:40:27.915Z\",\n    \"memberCreator\": {\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"avatarHash\": \"d24f1fe1d7da4b5aab5243ebd65af4a1\",\n      \"fullName\": \"Bentley Cook\",\n      \"initials\": \"BC\",\n      \"username\": \"bentleycook\"\n    }\n  },\n  {\n    \"id\": \"5939a82bcb0811201c349bf8\",\n    \"idMemberCreator\": \"5589c3ea49b40cedc28cf70e\",\n    \"data\": {\n      \"listAfter\": {\n        \"name\": \"Done\",\n        \"id\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"listBefore\": {\n        \"name\": \"Doing\",\n        \"id\": \"58d4144e4ec5c792a898d4b4\"\n      },\n      \"board\": {\n        \"shortLink\": \"d2EnEWSY\",\n        \"name\": \"Best Test Board!\",\n        \"id\": \"586e8f681d4fe9b06a928307\"\n      },\n      \"card\": {\n        \"shortLink\": \"HKaaH2Pk\",\n        \"idShort\": 94,\n        \"name\": \"Design New System\",\n        \"id\": \"5939a829eba57d109331a289\",\n        \"idList\": \"58dba95aa3fca404ad62476c\"\n      },\n      \"old\": {\n        \"idList\": \"58d4144e4ec5c792a898d4b4\"\n      }\n    },\n    \"type\": \"updateCard\",\n    \"date\": \"2017-06-08T19:40:27.878Z\",\n    \"memberCreator\": {\n      \"id\": \"5589c3ea49b40cedc28cf70e\",\n      \"avatarHash\": \"d24f1fe1d7da4b5aab5243ebd65af4a1\",\n      \"fullName\": \"Bentley Cook\",\n      \"initials\": \"BC\",\n      \"username\": \"bentleycook\"\n    }\n  }\n]","language":"json","status":200},{"name":"","code":"unauthorized permission requested","language":"text","status":401},{"status":400,"language":"text","code":"invalid id"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"}],"url":"/boards/{boardId}/actions","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/actions/?limit=2"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"# Board Actions\nThere are a lot of things you can do with this endpoint. It is a [nested resource](#understanding-nested-resources). For more information and to see everything you can do with actions, be sure to check out the [actions documentation](#actions-nested-resource). All of the query params found there can be used here.\n\n## Board Specific Actions\nOnly actions specific to the board will be shown.","excerpt":"","slug":"boardsboardidactions","type":"endpoint","title":"/boards/{id}/actions","__v":4,"updatedAt":"2019-06-10T14:28:52.533Z","swagger":{"path":"/boards/{boardId}/actions"}},{"_id":"5952d6ada953c2001b3f5351","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:05:33.520Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5846f8577b05f61b7a6f3971\",\n    \"idBoard\": \"4d5ea62fd76aa1136000000c\",\n    \"idPlugin\": \"55a5d917446f517774210013\"\n  },\n  {\n    \"id\": \"5846f99996b59c33ab555249\",\n    \"idBoard\": \"4d5ea62fd76aa1136000000c\",\n    \"idPlugin\": \"568c143d95adcd7308cbc3fb\"\n  }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"5952d6b8a953c2001b3f5352","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/boardPlugins","method":"get","examples":{"codes":[{"language":"html","code":"https://api.trello.com/1/boards/nC8QJJoZ/boardPlugins"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the enabled Power-Ups on a board","slug":"boardsidboardplugins","type":"endpoint","title":"/boards/{id}/boardPlugins","__v":1,"updatedAt":"2019-06-10T14:28:52.534Z","swagger":{"path":"/boards/{id}/boardPlugins"}},{"_id":"59396cb0819ce5002f425010","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:26:40.201Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/?fields=id&boardStars=mine"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"586e8f681d4fe9b06a928307\",\n  \"boardStars\": [\n    {\n      \"_id\": \"59370b012373f371a531b73d\",\n      \"idBoard\": \"586e8f681d4fe9b06a928307\",\n      \"pos\": 360448\n    }\n  ]\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"},{"_id":"5939a9ba4ea7ce000f36d7f0","ref":"","in":"path","required":false,"desc":"Valid values: mine, none","default":"mine","type":"string","name":"filter"}],"url":"/boards/{boardId}/boardStars","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"boardsboardidactions-2","type":"endpoint","title":"/boards/{id}/boardStars","__v":1,"updatedAt":"2019-06-10T14:28:52.534Z","swagger":{"path":"/boards/{boardId}/boardStars"}},{"_id":"59396d39819ce5002f425074","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:28:57.668Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"[\n  {\n    \"id\": \"5941465a11d2c760d95b95ad\",\n    \"name\": \"Checklists\",\n    \"members\": []\n  },\n  {\n    \"id\": \"5939a829eba57d109331a289\",\n    \"name\": \"Design New System\",\n    \"members\": [\n      {\n        \"id\": \"5589c3ea49b40cedc28cf70e\",\n        \"fullName\": \"Bentley Cook\"\n      }\n    ]\n  }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/boards/d2EnEWSY/cards/?limit=2&fields=name&members=true&member_fields=fullName&key=[yourKey]&token=[yourToken]"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"}],"url":"/boards/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"This resource is a nested card resource. Nested cards are documented [here](ref:cards-nested-resource). The cards returned by this resource will be within the context of the board whose ID is being used.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Not Chronologically Sorted\",\n  \"body\": \"Cards are returned sorted by lists within the board; they are not chronologically sorted. If you are paging through cards, you will want to retrieve the list of cards and then find the oldest card based on its ID - all IDs in Trello are mongo IDs and can be converted to timestamps (https://steveridout.github.io/mongo-object-time/).\"\n}\n[/block]","excerpt":"Fetch open cards on a board","slug":"boardsboardidtest","type":"endpoint","title":"/boards/{id}/cards","__v":4,"updatedAt":"2019-06-10T14:28:52.535Z","swagger":{"path":"/boards/{id}/cards"}},{"_id":"59396dec819ce5002f425076","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:31:56.243Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"59394c1939fc59910b4f7cfd\",\n    \"checkItemStates\": null,\n    \"closed\": true,\n    \"dateLastActivity\": \"2017-06-08T13:07:57.302Z\",\n    \"desc\": \"\",\n    \"descData\": null,\n    \"idBoard\": \"586e8f681d4fe9b06a928307\",\n    \"idList\": \"58d4144e4ec5c792a898d4b4\",\n    \"idMembersVoted\": [],\n    \"idShort\": 93,\n    \"idAttachmentCover\": null,\n    \"manualCoverAttachment\": false,\n    \"idLabels\": [],\n    \"name\": \"Test\",\n    \"pos\": 163839.5,\n    \"shortLink\": \"vxzyFCkF\",\n    \"badges\": {\n      \"votes\": 0,\n      \"viewingMemberVoted\": false,\n      \"subscribed\": false,\n      \"fogbugz\": \"\",\n      \"checkItems\": 0,\n      \"checkItemsChecked\": 0,\n      \"comments\": 0,\n      \"attachments\": 0,\n      \"description\": false,\n      \"due\": null,\n      \"dueComplete\": false\n    },\n    \"dueComplete\": false,\n    \"due\": null,\n    \"idChecklists\": [],\n    \"idMembers\": [],\n    \"labels\": [],\n    \"shortUrl\": \"https://trello.com/c/vxzyFCkF\",\n    \"subscribed\": false,\n    \"url\": \"https://trello.com/c/vxzyFCkF/93-test\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/cards/closed"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"boardId"},{"_id":"5951547f470b3a0015ba1512","ref":"","in":"path","required":false,"desc":"Valid Values: all, closed, none, open, visible.","default":"","type":"string","name":"filter"}],"url":"/boards/{boardId}/cards/{filter}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"","slug":"boardsboardidcardsfilter","type":"endpoint","title":"/boards/{id}/cards/{filter}","__v":1,"updatedAt":"2019-06-10T14:28:52.535Z","swagger":{"path":"/boards/{boardId}/cards/{filter}"}},{"_id":"59396c72e376d4002f8a12e6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:25:38.389Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://trello.com/1/boards/d2EnEWSY/cards/59394c1939fc59910b4f7cfd"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"59394c1939fc59910b4f7cfd\",\n  \"badges\": {\n    \"votes\": 0,\n    \"viewingMemberVoted\": false,\n    \"subscribed\": false,\n    \"fogbugz\": \"\",\n    \"checkItems\": 0,\n    \"checkItemsChecked\": 0,\n    \"comments\": 0,\n    \"attachments\": 0,\n    \"description\": false,\n    \"due\": null,\n    \"dueComplete\": false\n  },\n  \"checkItemStates\": [],\n  \"closed\": true,\n  \"dueComplete\": false,\n  \"dateLastActivity\": \"2017-06-08T13:07:57.302Z\",\n  \"desc\": \"\",\n  \"descData\": null,\n  \"due\": null,\n  \"email\": null,\n  \"idBoard\": \"586e8f681d4fe9b06a928307\",\n  \"idChecklists\": [],\n  \"idList\": \"58d4144e4ec5c792a898d4b4\",\n  \"idMembers\": [],\n  \"idMembersVoted\": [],\n  \"idShort\": 93,\n  \"idAttachmentCover\": null,\n  \"manualCoverAttachment\": false,\n  \"labels\": [],\n  \"idLabels\": [],\n  \"name\": \"Test\",\n  \"pos\": 163839.5,\n  \"shortLink\": \"vxzyFCkF\",\n  \"shortUrl\": \"https://trello.com/c/vxzyFCkF\",\n  \"subscribed\": false,\n  \"url\": \"https://trello.com/c/vxzyFCkF/93-test\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"59515640702f02001bf3d884","ref":"","in":"path","required":false,"desc":"The id the card to retrieve.","default":"","type":"string","name":"idCard"}],"url":"/boards/{id}/cards/{idCard}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"This resource is used to retrieve individual cards on a board. It is a nested version of the cards object. For more on the query parameters available, read the documentation [here](ref:cards-nested-resource).","excerpt":"","slug":"boardsboardidactions-1","type":"endpoint","title":"/boards/{id}/cards/{cardId}","__v":1,"updatedAt":"2019-06-10T14:28:52.536Z","swagger":{"path":"/boards/{id}/cards/{idCard}"}},{"_id":"59396cba819ce5002f425071","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:26:50.300Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/boards/d2EnEWSY/checklists?checkItem_fields=name&fields=name&token=[yourToken]&key=[yourKey]"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"586eb0f532487bceb8b75aca\",\n    \"name\": \"Checklist\",\n    \"checkItems\": [\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f6599c7bcf2c5116bc\",\n        \"name\": \"1\"\n      },\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f64e39386b8b101675\",\n        \"name\": \"2\"\n      },\n      {\n        \"idChecklist\": \"586eb0f532487bceb8b75aca\",\n        \"id\": \"586eb0f740aec762d6601f6a\",\n        \"name\": \"3\"\n      }\n    ]\n  },\n  {\n    \"id\": \"586eb2770c9dc27f034162f7\",\n    \"name\": \"Checklist\",\n    \"checkItems\": []\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/checklists","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"This resource is used to retrieve checklists from cards on the board with the given id. It is a nested version of the checklists object. For more on the query parameters available, read the documentation [here](ref:checklists-nested-resource).","excerpt":"","slug":"boardsboardidactions-3","type":"endpoint","title":"/boards/{id}/checklists","__v":0,"updatedAt":"2019-06-10T14:28:52.536Z","swagger":{"path":"/boards/{id}/checklists"}},{"_id":"5ab0f6d6ade4f4003cf6b016","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["5b29143736a5030003c3febc"],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T11:56:06.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/customFields?token=[yourToken]&key=[yourKey]"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/customFields","method":"get"},"isReference":true,"order":11,"body":"","excerpt":"Get the Custom Field Definitions that exist on a board.","slug":"boardsidcustomfields","type":"endpoint","title":"/boards/{id}/customFields","__v":4,"updatedAt":"2019-06-10T14:28:52.537Z","swagger":{"path":"/boards/{id}/customFields"}},{"_id":"59396ed94ea7ce000f36ca3a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:35:53.873Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f960e18d5a5001e81aa29","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of label [fields](#label-object)","default":"all","type":"string","name":"fields"},{"_id":"597f960e18d5a5001e81aa28","ref":"","in":"query","required":false,"desc":"0 to 1000","default":"50","type":"int","name":"limit"}],"url":"/boards/{id}/labels","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/boards/ZqN99gGN/labels?limit=3&fields=name,color\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd747\\\",\\n    \\\"name\\\": \\\"Verified on branch\\\",\\n    \\\"color\\\": \\\"yellow\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd74a\\\",\\n    \\\"name\\\": \\\"Regression\\\",\\n    \\\"color\\\": \\\"purple\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd74b\\\",\\n    \\\"name\\\": \\\"Verified on staging\\\",\\n    \\\"color\\\": \\\"blue\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boardsboardidlabels","type":"endpoint","title":"/boards/{id}/labels","__v":3,"updatedAt":"2019-06-10T14:28:52.537Z","swagger":{"path":"/boards/{id}/labels"}},{"_id":"59396f04e376d4002f8a139e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":["597acae6903c5800248b4e83","5cda244b77452d0013bb33d2"],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:36:36.545Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f977cebbd9c0014917342","ref":"","in":"query","required":false,"desc":"One of: `all`, `closed`, `none`, `open`","default":"none","type":"string","name":"cards"},{"_id":"597f977cebbd9c0014917341","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](#card-object)","default":"all","type":"string","name":"card_fields"},{"_id":"597f977cebbd9c0014917340","ref":"","in":"query","required":false,"desc":"One of `all`, `closed`, `none`, `open`","default":"open","type":"string","name":"filter"},{"_id":"597f977cebbd9c001491733f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](#list-object)","default":"all","type":"string","name":"fields"}],"url":"/boards/{id}/lists","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://trello.com/1/boards/ZqN99gGN/lists?cards=open&card_fields=name&filter=open&fields=name\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd737\\\",\\n    \\\"name\\\": \\\"Backlog\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd818\\\",\\n        \\\"name\\\": \\\"Product Owner: Brian\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd7e5\\\",\\n        \\\"name\\\": \\\"(3) fix /org/:id route\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd738\\\",\\n    \\\"name\\\": \\\"Sprint Backlog\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a890c6504676888e1dd776\\\",\\n        \\\"name\\\": \\\"(8) Clicking the collection beneath a board should filter by collection, not open collections pop-over\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c7504676888e1dd7f0\\\",\\n        \\\"name\\\": \\\"(2) BC3 team boards page: Show Other Private Boards\\\"\\n      },\\n      {\\n        \\\"id\\\": \\\"57a890c6504676888e1dd772\\\",\\n        \\\"name\\\": \\\"(1) Add post-message-io\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"57a890c6504676888e1dd739\\\",\\n    \\\"name\\\": \\\"In Progress\\\",\\n    \\\"cards\\\": [\\n      {\\n        \\\"id\\\": \\\"57a248d3977a6e388bf6cb80\\\",\\n        \\\"name\\\": \\\"Multiple due dates\\\"\\n      }\\n    ]\\t\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"boardsboardidlists","type":"endpoint","title":"/boards/{id}/lists","__v":7,"updatedAt":"2019-06-10T14:28:52.538Z","swagger":{"path":"/boards/{id}/lists"}},{"_id":"59396f114ea7ce000f36ca3e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T15:36:49.028Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5939a6656c83cb003b99ba19","ref":"","in":"path","required":false,"desc":"One of `all`, `closed`, `none`, `open`","default":"","type":"string","name":"filter"}],"url":"/boards/{id}/lists/{filter}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"","excerpt":"","slug":"boardsboardidlistsfilter","type":"endpoint","title":"/boards/{id}/lists/{filter}","__v":1,"updatedAt":"2019-06-10T14:28:52.538Z","swagger":{"path":"/boards/{id}/lists/{filter}"}},{"_id":"5939a67f109baf00336c09db","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-08T19:33:19.545Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"This resource is a nested members resource. Nested members are documented at [Members Nested Resource](ref:members-nested-resource). The members returned by this resource will be within the context of the board whose ID is being used.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"memberTypes\",\n  \"body\": \"The `memberType` field returned from this endpoint only enumerates the relationship between the user and the organization to which the board belongs. Use the [1/boards/{boardId}/memberships](#boardsidmemberships) resource to determine the type of membership the member has to the board.\"\n}\n[/block]","excerpt":"Get the members for a board","slug":"boardsboardidmembers","type":"endpoint","title":"/boards/{id}/members","__v":8,"updatedAt":"2019-06-10T14:28:52.539Z","swagger":{"path":"/boards/{id}/members"}},{"_id":"59de25e15e7f1500106cd241","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-10-11T14:08:33.788Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"name":"","code":"","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"text","code":"curl https://trello.com/1/boards/59de14978d0f59de14978d0f/memberships/?orgMemberType=true&member=true&member_fields=fullName"}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"597f986afe3a5f00281c7eef","ref":"","in":"query","required":false,"desc":"One of `admins`, `all`, `none`, `normal`","default":"all","type":"string","name":"filter"},{"_id":"597f9881537d33002033963b","ref":"","in":"query","required":false,"desc":"Works for premium organizations only.","default":"false","type":"boolean","name":"activity"},{"_id":"59de25e15e7f1500106cd244","ref":"","in":"query","required":false,"desc":"Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`.","default":"false","type":"boolean","name":"orgMemberType"},{"_id":"59de25e15e7f1500106cd243","ref":"","in":"query","required":false,"desc":"Determines whether to include a nester member object.","default":"false","type":"boolean","name":"member"},{"_id":"59de25e15e7f1500106cd242","ref":"","in":"query","required":false,"desc":"Fields to show if `member=true`. Valid values: [nested member resource fields](https://developers.trello.com/v1.0/reference#members-nested-resource).","default":"fullname,username","type":"string","name":"member_fields"}],"url":"/boards/{id}/memberships","method":"get"},"isReference":true,"order":16,"body":"Example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://trello.com/1/boards/59de14978d0f59de14978d0f/memberships/?orgMemberType=true&member=true&member_fields=fullName\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nResponse:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"59de14978d0fd81978d0fd81\\\",\\n    \\\"idMember\\\": \\\"978d0fd81cb40cedc28cf70e\\\",\\n    \\\"memberType\\\": \\\"admin\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"orgMemberType\\\": \\\"admin\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5589c3ea49b4978d0fd810\\\",\\n      \\\"fullName\\\": \\\"Bill Stanley\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"78d0fd81d0fd81978d0fd81\\\",\\n    \\\"idMember\\\": \\\"81978d0fd8178d0fd81d0fd\\\",\\n    \\\"memberType\\\": \\\"observer\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"178d0fd81978d0fd881d0fd\\\",\\n      \\\"fullName\\\": \\\"Marty Roberts\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"d4be2307fe96624ba421059d\\\",\\n    \\\"idMember\\\": \\\"60957479168735c5fe044bd0\\\",\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"unconfirmed\\\": false,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"4746097904bd1685735c5fe0\\\",\\n      \\\"fullName\\\": \\\"Maria Smith\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"1c10f2359de23661bc14d92a\\\",\\n    \\\"idMember\\\": \\\"59c501209144830f7a929f36\\\",\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"unconfirmed\\\": true,\\n    \\\"deactivated\\\": false,\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5a9054830f7429f120919c36\\\",\\n      \\\"fullName\\\": \\\"Stan Billsby\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n### Field Definitions\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field\",\n    \"0-0\": \"unconfirmed\\n**boolean**\",\n    \"h-1\": \"Valid Values\",\n    \"0-1\": \"`true` or `false`\",\n    \"h-2\": \"Description\",\n    \"1-0\": \"deactivated\\n**boolean**\",\n    \"1-1\": \"`true` or `false`\",\n    \"0-2\": \"Whether the user has confirmed their Trello account. Inviting a user via email to the board who does not have a Trello account will result in `unconfirmed: true` until they create a Trello account.\",\n    \"1-2\": \"Whether the user's Trello account has been deactivated or not.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]","excerpt":"Get information about the memberships users have to the board.","slug":"boardsidmemberships","type":"endpoint","title":"/boards/{id}/memberships","__v":5,"updatedAt":"2019-06-10T14:28:52.539Z","swagger":{"path":"/boards/{id}/memberships"}},{"_id":"5952d8072cc1e8001b6adb16","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:11:19.902Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"id\": \"55a5d917446f517774210013\",\n    \"name\": \"Voting\",\n    \"public\": true,\n    \"url\": \"https://voting.trello.services/manifest.json\"\n  },\n  {\n    \"id\": \"568c143d95adcd7308cbc3fb\",\n    \"name\": \"SurveyMonkey\",\n    \"public\": true,\n    \"url\": \"https://surveymonkey.trello.services/manifest.json\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d8897d896d001b09b826","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5952d8afa953c2001b3f5355","ref":"","in":"query","required":false,"desc":"One of: `enabled` or `available`","default":"enabled","type":"string","name":"filter"}],"url":"/boards/{id}/plugins","method":"get","examples":{"codes":[{"language":"http","code":"https://api.trello.com/1/boards/nC8QJJoZ/plugins?filter=enabled"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"List the Power-Ups for a board","slug":"boardsidplugins","type":"endpoint","title":"/boards/{id}/plugins","__v":2,"updatedAt":"2019-06-10T14:28:52.540Z","swagger":{"path":"/boards/{id}/plugins"}},{"_id":"5943ebd76ec7dc002db0f46c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-16T14:31:51.888Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":false,"desc":"The new name for the board. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"594490d7bc74a3000f35f499","ref":"","in":"query","required":false,"desc":"A new description for the board, 0 to 16384 characters long","default":"","type":"string","name":"desc"},{"_id":"594490d7bc74a3000f35f498","ref":"","in":"query","required":false,"desc":"Whether the board is closed","default":"","type":"boolean","name":"closed"},{"_id":"594490d7bc74a3000f35f497","ref":"","in":"query","required":false,"desc":"Whether the acting user is subscribed to the board","default":"","type":"boolean","name":"subscribed"},{"_id":"594490d7bc74a3000f35f496","ref":"","in":"query","required":false,"desc":"The id of the team the board should be moved to","default":"","type":"string","name":"idOrganization"},{"_id":"594490d7bc74a3000f35f495","ref":"","in":"query","required":false,"desc":"One of: org, private, public","default":"","type":"string","name":"prefs/permissionLevel"},{"_id":"594490d7bc74a3000f35f494","ref":"","in":"query","required":false,"desc":"Whether team members can join the board themselves","default":"","type":"boolean","name":"prefs/selfJoin"},{"_id":"594490d7bc74a3000f35f493","ref":"","in":"query","required":false,"desc":"Whether card covers should be displayed on this board","default":"","type":"boolean","name":"prefs/cardCovers"},{"_id":"5cf6c6beb0f8f400191f6f84","ref":"","in":"query","required":false,"desc":"Determines whether the Voting Power-Up should hide who voted on cards or not.","default":"","type":"boolean","name":"prefs/hideVotes"},{"_id":"594490d7bc74a3000f35f492","ref":"","in":"query","required":false,"desc":"Who can invite people to this board. One of: admins, members","default":"","type":"string","name":"prefs/invitations"},{"_id":"594490d7bc74a3000f35f491","ref":"","in":"query","required":false,"desc":"Who can vote on this board. One of disabled, members, observers, org, public","default":"","type":"string","name":"prefs/voting"},{"_id":"594490d7bc74a3000f35f490","ref":"","in":"query","required":false,"desc":"Who can comment on cards on this board. One of: disabled, members, observers, org, public","default":"","type":"string","name":"prefs/comments"},{"_id":"594490d7bc74a3000f35f48f","ref":"","in":"query","required":false,"desc":"The id of a custom background or one of: blue, orange, green, red, purple, pink, lime, sky, grey","default":"","type":"string","name":"prefs/background"},{"_id":"594490d7bc74a3000f35f48e","ref":"","in":"query","required":false,"desc":"One of: pirate, regular","default":"","type":"string","name":"prefs/cardAging"},{"_id":"594490d7bc74a3000f35f48d","ref":"","in":"query","required":false,"desc":"Determines whether the calendar feed is enabled or not.","default":"","type":"boolean","name":"prefs/calendarFeedEnabled"},{"_id":"5952705b4731e4005d8254e5","ref":"","in":"query","required":false,"desc":"Name for the green label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/green"},{"_id":"5952705b4731e4005d8254e4","ref":"","in":"query","required":false,"desc":"Name for the yellow label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/yellow"},{"_id":"5952705b4731e4005d8254e3","ref":"","in":"query","required":false,"desc":"Name for the orange label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/orange"},{"_id":"5952705b4731e4005d8254e2","ref":"","in":"query","required":false,"desc":"Name for the red label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/red"},{"_id":"5952705b4731e4005d8254e1","ref":"","in":"query","required":false,"desc":"Name for the purple label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/purple"},{"_id":"5952705b4731e4005d8254e0","ref":"","in":"query","required":false,"desc":"Name for the blue label. 1 to 16384 characters long","default":"","type":"string","name":"labelNames/blue"}],"url":"/boards/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"This endpoint can be used to update one or more properties of the card at once. Alternatively, you can also update a single property of the card as the params for this method via:\n\n`PUT /1/boards/{id}/{property}?value={newValue}`\n\nSo for example, to archive a board:\n\n`PUT /1/boards/{id}/closed?value=true`\n\nOr to update the name of a board:\n\n`PUT /1/boards/{id}/name?value={new board name}`","excerpt":"Update an existing board by id","slug":"idnext","type":"endpoint","title":"/boards/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.540Z","swagger":{"path":"/boards/{id}"}},{"_id":"59526ea9109f490029f6a24f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:41:45.763Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The email address of a user to add as a member of the board.","default":"","type":"string","name":"email"},{"_id":"5952733f08a112006b18c9c1","ref":"","in":"body","required":false,"desc":"The full name of the user to as a member of the board. Must have a length of at least 1 and cannot begin nor end with a space.","default":"","type":"string","name":"fullName"},{"_id":"5952733f08a112006b18c9c0","ref":"","in":"header","required":true,"desc":"Valid values: admin, normal, observer. Determines what type of member the user being added should be of the board.","default":"","type":"string","name":"type"}],"url":"/boards/{id}/members","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Update an existing board by id","slug":"boardsidlabelnamesmembers","type":"endpoint","title":"/boards/{id}/members","__v":1,"updatedAt":"2019-06-10T14:28:52.541Z","swagger":{"path":"/boards/{id}/members"}},{"_id":"59526eaf28e9ae004b965a1f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59bf1d51b1d4c7001008fcb3","5c1cfc4f61d386002a575e82"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:41:51.954Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"595273b3f168f9001bba9a39","ref":"","in":"query","required":true,"desc":"One of: admin, normal, observer. Determines the type of member this user will be on the board.","default":"","type":"string","name":"type"},{"_id":"59bfdc60e180d8003a118299","ref":"","in":"path","required":false,"desc":"The id of the member to add to the board.","default":"","type":"string","name":"idMember"},{"_id":"5c8280ad47ddc8002f1aa0ad","ref":"","in":"query","required":false,"desc":"Optional param that allows organization admins to add multi-board guests onto a board.","default":"false","type":"boolean","name":"allowBillableGuest"}],"url":"/boards/{id}/members/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Add a member to the board.","slug":"boardsidlabelnamesmembersidmember","type":"endpoint","title":"/boards/{id}/members/{idMember}","__v":8,"updatedAt":"2019-06-10T14:28:52.541Z","swagger":{"path":"/boards/{id}/members/{idMember}"}},{"_id":"59526ebec86ac3003f370f72","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:42:06.639Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of a membership that should be added to this board.","default":"","type":"string","name":"idMembership"},{"_id":"5952742b109f490029f6a29c","ref":"","in":"query","required":true,"desc":"One of: admin, normal, observer. Determines the type of member that this membership will be to this board.","default":"","type":"string","name":"type"},{"_id":"5952742b109f490029f6a29b","ref":"","in":"query","required":false,"desc":"Valid values: all, avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"fullName, username","type":"string","name":"member_fields"}],"url":"/boards/{id}/memberships/{idMembership}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"","excerpt":"Update an existing board by id","slug":"boardsidlabelnamesmembershipsidmembership","type":"endpoint","title":"/boards/{id}/memberships/{idMembership}","__v":1,"updatedAt":"2019-06-10T14:28:52.542Z","swagger":{"path":"/boards/{id}/memberships/{idMembership}"}},{"_id":"59526ef7c86ac3003f370f73","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:03.489Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Valid values: bottom, top. Determines the position of the email address.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/myPrefs/emailPosition","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsemailposition","type":"endpoint","title":"/boards/{id}/myPrefs/emailPosition","__v":1,"updatedAt":"2019-06-10T14:28:52.542Z","swagger":{"path":"/boards/{id}/myPrefs/emailPosition"}},{"_id":"59526f001579820035a6afee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:12.082Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of an email list.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/myPrefs/idEmailList","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsidemaillist","type":"endpoint","title":"/boards/{id}/myPrefs/idEmailList","__v":1,"updatedAt":"2019-06-10T14:28:52.543Z","swagger":{"path":"/boards/{id}/myPrefs/idEmailList"}},{"_id":"59526f08109f490029f6a250","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:20.583Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the list guide.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showListGuide","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowlistguide","type":"endpoint","title":"/boards/{id}/myPrefs/showListGuide","__v":1,"updatedAt":"2019-06-10T14:28:52.543Z","swagger":{"path":"/boards/{id}/myPrefs/showListGuide"}},{"_id":"59526f0ec86ac3003f370f74","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["5bbd124073abaf00034e22ba"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:26.488Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the side bar.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebar","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebae","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebar","__v":2,"updatedAt":"2019-06-10T14:28:52.544Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebar"}},{"_id":"59526f1aa6c9140033c80717","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:38.768Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show sidebar activity.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarActivity","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebaractivity","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarActivity","__v":1,"updatedAt":"2019-06-10T14:28:52.544Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarActivity"}},{"_id":"59526f22b1a12000672aed55","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:43:46.746Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show the sidebar board actions.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarBoardActions","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebarboardactions","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarBoardActions","__v":1,"updatedAt":"2019-06-10T14:28:52.545Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarBoardActions"}},{"_id":"59526f344731e4005d8254dd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T14:44:04.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"Determines whether to show members of the board in the sidebar.","default":"","type":"boolean","name":"value"}],"url":"/boards/{id}/myPrefs/showSidebarMembers","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Update an existing board by id","slug":"boardsidmyprefsshowsidebarmembers","type":"endpoint","title":"/boards/{id}/myPrefs/showSidebarMembers","__v":1,"updatedAt":"2019-06-10T14:28:52.545Z","swagger":{"path":"/boards/{id}/myPrefs/showSidebarMembers"}},{"_id":"595278ffd93ebe003ff33951","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59679011c603a6002bca3126","5c2082ff1f2eb2005184db26"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:25:51.174Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The new name for the board. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527afba0e05a0041b07332","ref":"","in":"query","required":false,"desc":"Determines whether to use the default set of labels.","default":"true","type":"boolean","name":"defaultLabels"},{"_id":"59527afba0e05a0041b07331","ref":"","in":"query","required":false,"desc":"Determines whether to add the default set of lists to a board (To Do, Doing, Done). It is ignored if `idBoardSource` is provided.","default":"true","type":"boolean","name":"defaultLists"},{"_id":"594490d7bc74a3000f35f499","ref":"","in":"query","required":false,"desc":"A new description for the board, 0 to 16384 characters long","default":"","type":"string","name":"desc"},{"_id":"594490d7bc74a3000f35f496","ref":"","in":"query","required":false,"desc":"The id or name of the team the board should belong to.","default":"","type":"string","name":"idOrganization"},{"_id":"594490d7bc74a3000f35f495","ref":"","in":"query","required":false,"desc":"The id of a board to copy into the new board.","default":"","type":"string","name":"idBoardSource"},{"_id":"594490d7bc74a3000f35f494","ref":"","in":"query","required":false,"desc":"To keep cards from the original board pass in the value `cards`","default":"none","type":"string","name":"keepFromSource"},{"_id":"594490d7bc74a3000f35f493","ref":"","in":"query","required":false,"desc":"The Power-Ups that should be enabled on the new board. One of: `all`, `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"powerUps"},{"_id":"594490d7bc74a3000f35f492","ref":"","in":"query","required":false,"desc":"The permissions level of the board. One of: `org`, `private`, `public`.","default":"private","type":"string","name":"prefs_permissionLevel"},{"_id":"594490d7bc74a3000f35f491","ref":"","in":"query","required":false,"desc":"Who can vote on this board. One of `disabled`, `members`, `observers`, `org`, `public`.","default":"disabled","type":"string","name":"prefs_voting"},{"_id":"594490d7bc74a3000f35f490","ref":"","in":"query","required":false,"desc":"Who can comment on cards on this board. One of: `disabled`, `members`, `observers`, `org`, `public`.","default":"members","type":"string","name":"prefs_comments"},{"_id":"5952705b4731e4005d8254e5","ref":"","in":"query","required":false,"desc":"Determines what types of members can invite users to join. One of: `admins`, `members`.","default":"members","type":"string","name":"prefs_invitations"},{"_id":"5952705b4731e4005d8254e4","ref":"","in":"query","required":false,"desc":"Determines whether users can join the boards themselves or whether they have to be invited.","default":"true","type":"boolean","name":"prefs_selfJoin"},{"_id":"5952705b4731e4005d8254e3","ref":"","in":"query","required":false,"desc":"Determines whether card covers are enabled.","default":"true","type":"boolean","name":"prefs_cardCovers"},{"_id":"594490d7bc74a3000f35f48f","ref":"","in":"query","required":false,"desc":"The id of a custom background or one of: `blue`, `orange`, `green`, `red`, `purple`, `pink`, `lime`, `sky`, `grey`.","default":"blue","type":"string","name":"prefs_background"},{"_id":"594490d7bc74a3000f35f48e","ref":"","in":"query","required":false,"desc":"Determines the type of card aging that should take place on the board if card aging is enabled. One of: `pirate`, `regular`.","default":"regular","type":"string","name":"prefs_cardAging"}],"url":"/boards/","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Create a new board.","slug":"boardsid","type":"endpoint","title":"/boards/","__v":5,"updatedAt":"2019-06-10T14:28:52.548Z","swagger":{"path":"/boards/"}},{"_id":"5952d705373d400015dfa347","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:07:01.067Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d71311ad0a001b0a7e21","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5952d72ca953c2001b3f5353","ref":"","in":"query","required":false,"desc":"The ID of the Power-Up to enable","default":"","type":"string","name":"idPlugin"}],"url":"/boards/{id}/boardPlugins","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"If a board has reached the max number of Power-Ups that can be enabled on it, the API will return the following error message with a 409 status code:\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n    \\\"message\\\": \\\"Can't enable plugin\\\",\\n    \\\"error\\\": \\\"PLUGIN_TOO_MANY_PLUGINS\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Enable a Power-Up on a board","slug":"boardsidboardplugins-1","type":"endpoint","title":"/boards/{id}/boardPlugins","__v":4,"updatedAt":"2019-06-10T14:28:52.549Z","swagger":{"path":"/boards/{id}/boardPlugins"}},{"_id":"59527cb2d93ebe003ff3395c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:41:38.221Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/calendarKey/generate","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"This endpoint is used to generate a new key for the calendar to make use of.","excerpt":"Create a new board.","slug":"boardsidcalendarkeygenerate","type":"endpoint","title":"/boards/{id}/calendarKey/generate","__v":2,"updatedAt":"2019-06-10T14:28:52.549Z","swagger":{"path":"/boards/{id}/calendarKey/generate"}},{"_id":"59527cf01579820035a6b098","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:40.581Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/emailKey/generate","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"This resource is used to generate a new key to be used for email.","excerpt":"","slug":"boardsidemailkeygenerate","type":"endpoint","title":"/boards/{id}/emailKey/generate","__v":1,"updatedAt":"2019-06-10T14:28:52.550Z","swagger":{"path":"/boards/{id}/emailKey/generate"}},{"_id":"59527cf69262c20041644be5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:46.975Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The id of a tag from the organization to which this board belongs.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/idTags","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":34,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Warning: Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"","slug":"boardsididtags","type":"endpoint","title":"/boards/{id}/idTags","__v":0,"updatedAt":"2019-06-10T14:28:52.550Z","swagger":{"path":"/boards/{id}/idTags"}},{"_id":"59527cfdf168f9001bba9a87","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:53.445Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The name of the label to be created. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527e2328e9ae004b965a4d","ref":"","in":"query","required":true,"desc":"Sets the color of the new label. Valid values are a label color or `null`.","default":"","type":"string","name":"color"}],"url":"/boards/{id}/labels","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"","excerpt":"","slug":"boardsidlabels","type":"endpoint","title":"/boards/{id}/labels","__v":1,"updatedAt":"2019-06-10T14:28:52.552Z","swagger":{"path":"/boards/{id}/labels"}},{"_id":"59527d01f8a1ac001b0f69ff","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":["59bd5596284517001a16d760","5c62b02217284400b6de9a3d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:42:57.656Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The name of the list to be created. 1 to 16384 characters long.","default":"","type":"string","name":"name"},{"_id":"59527e67fc28ee004d046862","ref":"","in":"query","required":false,"desc":"Determines the position of the list. Valid values: `top`, `bottom`, or a positive number.","default":"top","type":"string","name":"pos"}],"url":"/boards/{id}/lists","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"","excerpt":"","slug":"boardsidlists","type":"endpoint","title":"/boards/{id}/lists","__v":4,"updatedAt":"2019-06-10T14:28:52.553Z","swagger":{"path":"/boards/{id}/lists"}},{"_id":"59527d081579820035a6b099","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:43:04.430Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"}],"url":"/boards/{id}/markedAsViewed","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"","slug":"boardsidmarkedasviewed","type":"endpoint","title":"/boards/{id}/markedAsViewed","__v":2,"updatedAt":"2019-06-10T14:28:52.553Z","swagger":{"path":"/boards/{id}/markedAsViewed"}},{"_id":"59527d10d93ebe003ff3395e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:43:12.851Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"594490d7bc74a3000f35f49a","ref":"","in":"query","required":true,"desc":"The Power-Up to be enabled on the board. One of: `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"value"}],"url":"/boards/{id}/powerUps","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"","slug":"boardsidpowerups","type":"endpoint","title":"/boards/{id}/powerUps","__v":0,"updatedAt":"2019-06-10T14:28:52.554Z","swagger":{"path":"/boards/{id}/powerUps"}},{"_id":"5a29563e2f609b00300752f6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-12-07T14:54:54.291Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to delete","default":"","type":"string","name":"id"}],"url":"/boards/{id}","method":"delete"},"isReference":true,"order":39,"body":"","excerpt":"Delete a board.","slug":"boardsid-1","type":"endpoint","title":"/boards/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.554Z","swagger":{"path":"/boards/{id}"}},{"_id":"5952d7605f609600157a79f0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"59512835cef5a9007106bd9d","parentDoc":"59304329b810fd000fccb51d","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T22:08:32.823Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952d76b12a2d3001b73b3b2","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"},{"_id":"5b76cf3e7d0df8000369a5f0","ref":"","in":"path","required":false,"desc":"The ID of the Power-Up to disable","default":"","type":"string","name":"idPlugin"}],"url":"/boards/{id}/boardPlugins/{idPlugin}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Disable a Power-Up on a board","slug":"boardsidboardplugins-2","type":"endpoint","title":"/boards/{id}/boardPlugins/{idPlugin}","__v":3,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/boardPlugins/{idPlugin}"}},{"_id":"59527efa4731e4005d825539","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:51:22.068Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"59527efa4731e4005d82553a","ref":"","in":"path","required":false,"desc":"The id, username, or organization name of the user to be removed from the board.","default":"","type":"string","name":"idMember"}],"url":"/boards/{id}/members/{idMember}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"","slug":"boardsidmembersidmember","type":"endpoint","title":"/boards/{id}/members/{idMember}","__v":1,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/members/{idMember}"}},{"_id":"59527f3ed93ebe003ff33960","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59304329b810fd000fccb51d","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:52:30.170Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The id of the board to update","default":"","type":"string","name":"id"},{"_id":"59527efa4731e4005d82553a","ref":"","in":"path","required":false,"desc":"The Power-Up to be enabled on the board. One of: `calendar`, `cardAging`, `recap`, `voting`.","default":"","type":"string","name":"powerUp"}],"url":"/boards/{id}/powerUps/{powerUp}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"","excerpt":"","slug":"boardsidpowerupspowerup","type":"endpoint","title":"/boards/{id}/powerUps/{powerUp}","__v":0,"updatedAt":"2019-06-10T14:28:52.555Z","swagger":{"path":"/boards/{id}/powerUps/{powerUp}"}},{"_id":"594c1c9001cfe6000f40fde7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T19:37:52.787Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"Lists in Trello contain cards. A card belongs to exactly one list.\n\nFor display purposes, cards have a front:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/188269b-Screen_Shot_2017-06-26_at_1.41.55_PM.png\",\n        \"Screen Shot 2017-06-26 at 1.41.55 PM.png\",\n        578,\n        530,\n        \"#77493f\"\n      ]\n    }\n  ]\n}\n[/block]\nAnd a back:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/0e166bc-Screen_Shot_2017-06-26_at_1.42.29_PM.png\",\n        \"Screen Shot 2017-06-26 at 1.42.29 PM.png\",\n        1898,\n        1906,\n        \"#4b4142\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"cards-1","type":"basic","title":"Cards","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.556Z","children":[{"_id":"594d1946f45834003df50221","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59764dfc43e329001fb55804","5982b00a78b974002a9c3cab"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:36:06.473Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**badges**\\nObject\",\n    \"2-0\": \"**checkItemStates**\\narray\",\n    \"3-0\": \"**closed**\\nboolean\",\n    \"4-0\": \"**dateLastActivity**\\ndate\",\n    \"4-1\": \"The datetime of the last activity on the card. \\n\\nNote: There are activities that update dateLastActivity that do not create a corresponding action. For instance, updating the name field of a checklist item on a card does not create an action but does update the card and board's dateLastActivity value.\",\n    \"5-0\": \"**desc**\\nstring\",\n    \"6-0\": \"**descData**\",\n    \"7-0\": \"**due**\\ndate\",\n    \"8-0\": \"**dueComplete**\\nboolean\",\n    \"9-0\": \"**idAttachmentCover**\\nstring\",\n    \"9-1\": \"The id of the attachment selected as the cover image, if one exists\",\n    \"10-0\": \"**idBoard**\\nstring\",\n    \"10-1\": \"The ID of the board the card is on\",\n    \"11-0\": \"**idChecklists**\\narray of strings\",\n    \"11-1\": \"An array of checklist IDs that are on this card\",\n    \"12-0\": \"**idLabels**\\narray of strings\",\n    \"12-1\": \"An array of label IDs that are on this card\",\n    \"13-0\": \"**idList**\\nstring\",\n    \"13-1\": \"The ID of the list the card is in\",\n    \"14-0\": \"**idMembers**\\narray of strings\",\n    \"14-1\": \"An array of member IDs that are on this card\",\n    \"15-0\": \"**idMembersVoted**\\narray of strings\",\n    \"15-1\": \"An array of member IDs who have voted on this card\",\n    \"16-0\": \"**idShort**\\ninteger\",\n    \"16-1\": \"Numeric ID for the card on this board. Only unique to the board, and subject to change as the card moves\",\n    \"17-0\": \"**labels**\\narray of [Labels](ref:labels)\",\n    \"17-1\": \"Array of label objects on this card\",\n    \"18-0\": \"**manualCoverAttachment**\\nboolean\",\n    \"19-0\": \"**name**\\nstring\",\n    \"19-1\": \"Name of the card\",\n    \"20-0\": \"**pos**\\nfloat\",\n    \"20-1\": \"Position of the card in the list\",\n    \"21-0\": \"**shortLink**\\nstring\",\n    \"21-1\": \"The 8 character shortened ID for the card\",\n    \"22-0\": \"**shortUrl**\\nstring\",\n    \"22-1\": \"URL to the card without the name slug\",\n    \"23-0\": \"**subscribed**\\nboolean\",\n    \"23-1\": \"Whether this member is subscribed to the card\",\n    \"24-0\": \"**url**\\nstring\",\n    \"24-1\": \"Full URL to the card, with the name slug\",\n    \"0-1\": \"The ID of the card\",\n    \"3-1\": \"Whether the card is closed (archived). Note: Archived lists and boards do not cascade archives to cards. A card can have `closed: false` but be on an archived board.\",\n    \"5-1\": \"The description for the card. Up to 16384 chars.\",\n    \"7-1\": \"The due date on the card, if one exists\",\n    \"8-1\": \"Whether the due date has been marked complete\",\n    \"6-1\": \"If the description has custom emoji, this field will provide the data necessary to display them.\\n\\n```json\\n\\\"descData\\\": {\\n    \\\"emoji\\\": {\\n      \\\"morty\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\"\\n    }\\n  }\\n```\",\n    \"1-1\": \"Pieces of information about the card that are displayed on the front of the card.\\n\\n```json\\n\\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": true,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 1,\\n    \\\"attachments\\\": 2,\\n    \\\"description\\\": true,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  }\\n```\",\n    \"18-1\": \"Whether the card cover image was selected automatically by Trello, or manually by the user\",\n    \"25-0\": \"**address**\\nstring\",\n    \"26-0\": \"**locationName**\\nstring\",\n    \"27-0\": \"**coordinates**\\nobject\",\n    \"25-1\": \"Address of card location\",\n    \"26-1\": \"Name of card location\",\n    \"27-1\": \"Either a comma-separated string in the format latitude,longitude or an object containing keys for `latitude` and `longitude` whose values are numbers between -180 and 180.\"\n  },\n  \"cols\": 2,\n  \"rows\": 28\n}\n[/block]\nFor example:\n\n`GET` `/1/cards/560bf4dd7139286471dc009c?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n  \\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": true,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 0,\\n    \\\"attachments\\\": 2,\\n    \\\"description\\\": false,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  },\\n  \\\"checkItemStates\\\": [\\n    \\n  ],\\n  \\\"closed\\\": false,\\n  \\\"dueComplete\\\": false,\\n  \\\"dateLastActivity\\\": \\\"2017-06-26T17:39:49.583Z\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"due\\\": null,\\n  \\\"email\\\": null,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"idChecklists\\\": [\\n    \\n  ],\\n  \\\"idList\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\",\\n  \\\"idMembers\\\": [\\n    \\\"556c8537a1928ba745504dd8\\\"\\n  ],\\n  \\\"idMembersVoted\\\": [\\n    \\n  ],\\n  \\\"idShort\\\": 9,\\n  \\\"idAttachmentCover\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n  \\\"manualCoverAttachment\\\": false,\\n  \\\"labels\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n      \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n      \\\"name\\\": \\\"Visited\\\",\\n      \\\"color\\\": \\\"green\\\"\\n    }\\n  ],\\n  \\\"idLabels\\\": [\\n    \\\"560bf42919ad3a5dc29f33c5\\\"\\n  ],\\n  \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n  \\\"pos\\\": 16384,\\n  \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/c/nqPiDKmw\\\",\\n  \\\"subscribed\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/c/nqPiDKmw/9-grand-canyon-national-park\\\"\\n  \\\"address\\\": \\\"55 Broadway\\\\nSan Francisco CA 94111\\\\nUnited States\\\",\\n  \\\"locationName\\\": \\\"55 Broadway, NY 10280\\\",\\n  \\\"coordinates\\\": {\\n    \\\"latitude\\\": 37.7986712,\\n    \\\"longitude\\\": -122.3991514\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-object","type":"basic","title":"Card Object","__v":2,"updatedAt":"2019-06-10T14:28:52.556Z"},{"_id":"594d19c2612674001b2d2005","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"5b75d499c1398c0003dbf656","updates":["59784b3fc6bb2e0038448cb1","59b721a5f9c9e20010753a06","5a39363d33fb0d00344de8c4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:10.546Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Cards are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to cards as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Cards as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing cards as a nested resource via query params. For instance, the query params are available when you are accessing cards via:  `/object/{id}?cards=visible`.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Don't get confused!\",\n  \"body\": \"Cards can be nested as query params *and* as URL params. \\n\\nIf your route looks like `1/boards/{boardId}/cards` you're going to want to head down to [**Nested Cards as URL Params**](ref:section-nested-cards-as-url-params).\\n\\nIf your route looks like `1/boards/{boardId}?cards` you're in the right spot! The parameters directly below are available to you.\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**cards**\",\n    \"0-1\": \"Default: None\\nOptions: one of:\\n`all`\\n`closed`\\n`none`\\n`open` - Includes cards that are open in lists that have been archived.\\n`visible` - Only returns cards in lists that are not closed.\",\n    \"6-0\": \"**card_stickers**\",\n    \"6-1\": \"Default: `false`\\nOptions: `true` or `false`\",\n    \"5-0\": \"**card_attachment_fields**\",\n    \"5-1\": \"Default: `url,previews`\\nOptions: `all` or a comma-separated list of attachment [fields](ref:attachments)\",\n    \"4-0\": \"**card_attachments**\",\n    \"4-1\": \"Options: `true`, `false`, or `cover`\",\n    \"3-0\": \"**card_member_fields**\",\n    \"3-1\": \"Default: `id,avatarHash,avatarUrl,initials,fullName,username,confirmed,memberType`\\nOptions: `all` or a comma-separated list of member [fields](ref:member-object)\",\n    \"2-0\": \"**card_members**\",\n    \"2-1\": \"Default: `false`\\nOptions: `true` or `false`\",\n    \"1-0\": \"**card_fields**\",\n    \"1-1\": \"Default: `all`\\nOptions: `all` or a comma-separated list of card [fields](ref:card-object)\",\n    \"h-1\": \"Options\",\n    \"h-0\": \"Parameter\",\n    \"h-2\": \"Default\",\n    \"1-2\": \"`all`\",\n    \"2-2\": \"`false`\",\n    \"3-2\": \"\",\n    \"5-2\": \"`url,previews`\",\n    \"6-2\": \"`false`\",\n    \"0-2\": \"None\",\n    \"7-0\": \"**cards_modifiedSince**\",\n    \"7-1\": \"Default: none\\nOptions: ISO Timestamp (eg: `2018-08-07T17:02:24.030Z`\",\n    \"8-0\": \"**card_customFieldItems**\",\n    \"8-1\": \"Default: `false`\\nOptions: `false` or `true` to include [customFieldItems](ref:cardsidcustomfielditems)  in the response\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Cards as URL Params\"\n}\n[/block]\nCards are also available as nested resources via URL parameters. For instance, you may want just the cards belonging to a specific resource like a list or a board; in that case you'd use the route `/1/boards/{id}/cards` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**actions**\",\n    \"1-0\": \"**attachments**\",\n    \"1-1\": \"Default: `false`\\nEither a boolean value or `cover` for only cover attachments\",\n    \"2-0\": \"**attachment_fields**\",\n    \"4-0\": \"**stickers**\",\n    \"5-0\": \"**members**\",\n    \"6-0\": \"**member_fields**\",\n    \"7-0\": \"**checkItemStates**\",\n    \"8-0\": \"**checklists**\",\n    \"9-0\": \"**limit**\",\n    \"11-0\": \"**since**\",\n    \"12-0\": \"**before**\",\n    \"13-0\": \"**filter**\",\n    \"14-0\": \"**fields**\",\n    \"14-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- badges\\n- checkItemStates\\n- closed\\n- dateLastActivity\\n- desc\\n- descData\\n- due\\n- idAttachmentCover\\n- idBoard\\n- idChecklists\\n- idLabels\\n- idList\\n- idMembers\\n- idMembersVoted\\n- idShort\\n- labels\\n- limits\\n- manualCoverAttachment\\n- name\\n- pos\\n- shortLink\\n- shortUrl\\n- subscribed\\n- url\",\n    \"13-1\": \"Default: `visible`\\nOne of: `all`, `closed`, `none`, `open`, `visible`\",\n    \"12-1\": \"A date, or `null`\",\n    \"11-1\": \"A date, or `null`\",\n    \"9-1\": \"A number from `1` to `1000`\",\n    \"8-1\": \"Default: `none`\\nOne of: `all`, `none`\",\n    \"7-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"5-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"6-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"4-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"2-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- bytes\\n- date\\n- edgeColor\\n- idMember\\n- isUpload\\n- mimeType\\n- name\\n- previews\\n- url\",\n    \"0-1\": \"`all` or a comma-separated list of:\\n\\n- addAttachmentToCard\\n- addChecklistToCard\\n- addMemberToBoard\\n- addMemberToCard\\n- addMemberToOrganization\\n- addToOrganizationBoard\\n- commentCard\\n- convertToCardFromCheckItem\\n- copyBoard\\n- copyCard\\n- copyCommentCard\\n- createBoard\\n- createCard\\n- createList\\n- createOrganization\\n- deleteAttachmentFromCard\\n- deleteBoardInvitation\\n- deleteCard\\n- deleteOrganizationInvitation\\n- disablePowerUp\\n- emailCard\\n- enablePowerUp\\n- makeAdminOfBoard\\n- makeNormalMemberOfBoard\\n- makeNormalMemberOfOrganization\\n- makeObserverOfBoard\\n- memberJoinedTrello\\n- moveCardFromBoard\\n- moveCardToBoard\\n- moveListFromBoard\\n- moveListToBoard\\n- removeChecklistFromCard\\n- removeFromOrganizationBoard\\n- removeMemberFromCard\\n- unconfirmedBoardInvitation\\n- unconfirmedOrganizationInvitation\\n- updateBoard\\n- updateCard\\n- updateCard:closed\\n- updateCard:desc\\n- updateCard:idList\\n- updateCard:name\\n- updateCheckItemStateOnCard\\n- updateChecklist\\n- updateList\\n- updateList:closed\\n- updateList:name\\n- updateMember\\n- updateOrganization\",\n    \"15-0\": \"**pluginData**\",\n    \"15-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"10-0\": \"**sort**\",\n    \"10-1\": \"Default: `none`\\nOne of: `-id`\",\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"3-0\": \"**customFieldItems**\",\n    \"3-1\": \"Default: `false`\\nOne of: `true`, `false`\\n\\nCheck out [Getting Started With Custom Fields](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-getting-customfielditems-for-cards) for more on Custom Fields.\"\n  },\n  \"cols\": 2,\n  \"rows\": 16\n}\n[/block]\nHere's an example using the cards nested resource to get the visible cards in a list:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/lists/560bf44ea68b16bd0fc2a9a9/cards?fields=id,name,badges,labels\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n    \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 2,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n    \\\"name\\\": \\\"Petrified Forest National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      \\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n    \\\"name\\\": \\\"Saguaro National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\"\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"cards-nested-resource","type":"basic","title":"Cards Nested Resource","__v":3,"updatedAt":"2019-06-10T14:28:52.557Z"},{"_id":"59516d04fafb63003375d567","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:22:28.422Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Cards can have up to 100 attachments. Attachments can be either just URLs, images with previews, or arbitrary files.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**bytes**\\ninteger\",\n    \"2-0\": \"**date**\\ndate\",\n    \"3-0\": \"**edgeColor**\\nstring\",\n    \"4-0\": \"**idMember**\\nstring\",\n    \"5-0\": \"**isUpload**\\nboolean\",\n    \"6-0\": \"**mimeType**\\nstring\",\n    \"7-0\": \"**name**\\nstring\",\n    \"8-0\": \"**pos**\\nfloat\",\n    \"9-0\": \"**previews**\\narray of preview objects\",\n    \"10-0\": \"**url**\\nstring\",\n    \"0-1\": \"The ID of the attachment\",\n    \"1-1\": \"The size of the attachment in bytes\",\n    \"2-1\": \"The date the attachment was added\",\n    \"3-1\": \"For image attachments, the extracted edge color\",\n    \"4-1\": \"The ID of the member who attached the attachment\",\n    \"5-1\": \"Whether the attachment was uploaded\",\n    \"6-1\": \"The mimeType for the attachment. Default is null. mimeTypes are only stored/returned if it is sent when initially creating the attachment. The Trello web client does not set the mimeType when uploading attachments.\",\n    \"7-1\": \"The name of the attachment\",\n    \"8-1\": \"The position of the attachment in the attachments list\",\n    \"9-1\": \"If the image is an uploaded image, Trello will generate some various sized previews\",\n    \"10-1\": \"The URL to the attachment\"\n  },\n  \"cols\": 2,\n  \"rows\": 11\n}\n[/block]\n`GET` `/1/cards/nqPiDKmw/attachments/5944a06460ed0bee471ad8e0`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n  \\\"bytes\\\": 1351054,\\n  \\\"date\\\": \\\"2017-06-17T03:22:12.489Z\\\",\\n  \\\"edgeColor\\\": \\\"#603e3d\\\",\\n  \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n  \\\"isUpload\\\": true,\\n  \\\"mimeType\\\": null,\\n  \\\"name\\\": \\\"image.png\\\",\\n  \\\"previews\\\": [\\n    {\\n      \\\"bytes\\\": 7093,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/70x50/9a91dc761550dbbb658acaab6e82788f/image.png\\\",\\n      \\\"height\\\": 50,\\n      \\\"width\\\": 70,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a036\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"bytes\\\": 78708,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/250x150/a871bc785b48830941b619299f29a29c/image.png\\\",\\n      \\\"height\\\": 150,\\n      \\\"width\\\": 250,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a035\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"bytes\\\": 29621,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/150x85/1f6bfdb36d636cf33885459e5152842a/image.png\\\",\\n      \\\"height\\\": 85,\\n      \\\"width\\\": 150,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a034\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 111108,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/300x170/7bf7c8551d3ed495e2872a342df529c8/image.png\\\",\\n      \\\"height\\\": 170,\\n      \\\"width\\\": 300,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a033\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 418182,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/600x340/4fa1415ee1f63d7e0323a99cf9c4b070/image.png\\\",\\n      \\\"height\\\": 340,\\n      \\\"width\\\": 600,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a032\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 1351054,\\n      \\\"height\\\": 600,\\n      \\\"width\\\": 1060,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a031\\\",\\n      \\\"scaled\\\": true\\n    }\\n  ],\\n  \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n  \\\"pos\\\": 32768\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"attachments","type":"basic","title":"Attachments","__v":0,"updatedAt":"2019-06-10T14:28:52.557Z"},{"_id":"595170b3bb93f700353caa99","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:38:11.534Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Cards can have stickers applied to them. In addition to the default stickers, Business Class and Gold members can create custom stickers. Custom stickers are documented in the [members section](https://developers.trello.com/reference#membersidcustomstickers).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/46f3b1a-stickers.PNG\",\n        \"stickers.PNG\",\n        425,\n        339,\n        \"#3e96b9\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**image**\\nstring\",\n    \"2-0\": \"**imageScaled**\\narray of scaled image objects\",\n    \"3-0\": \"**imageUrl**\\nstring\",\n    \"3-1\": \"Direct URL to the image\",\n    \"4-0\": \"**left**\\nfloat\",\n    \"5-0\": \"**top**\\nfloat\",\n    \"6-0\": \"**rotate**\\nfloat\",\n    \"7-0\": \"**zIndex**\\ninteger\",\n    \"0-1\": \"The ID of the sticker\",\n    \"2-1\": \"An array of scaled versions of the sticker image\\n\\n```json\\n {\\n  \\\"width\\\": 140,\\n  \\\"height\\\": 140,\\n  \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n  \\\"scaled\\\": false,\\n  \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n}\\n```\",\n    \"4-1\": \"How far to the left of the card the sticker is placed\",\n    \"5-1\": \"How far from the top of the card the sticker is placed\",\n    \"7-1\": \"The ordering for display which tells you which sticker would show on top of another\",\n    \"6-1\": \"How much the sticker has been rotated\",\n    \"1-1\": \"The name of the sticker if it is a default sticker or a generated id if it is a custom sticker. See section below for the names of the default stickers.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\n`GET` `/1/cards/nqX2Cl8w/stickers/5807bedf4e4d6ba6ca02039f`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5807bedf4e4d6ba6ca02039f\\\",\\n  \\\"top\\\": 0,\\n  \\\"left\\\": 47.31,\\n  \\\"zIndex\\\": 1,\\n  \\\"rotate\\\": -7,\\n  \\\"image\\\": \\\"taco-alert\\\",\\n  \\\"imageUrl\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n  \\\"imageScaled\\\": [\\n    {\\n      \\\"width\\\": 140,\\n      \\\"height\\\": 140,\\n      \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n      \\\"scaled\\\": false,\\n      \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n    },\\n    {\\n      \\\"width\\\": 280,\\n      \\\"height\\\": 280,\\n      \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert@2x.png\\\",\\n      \\\"scaled\\\": false,\\n      \\\"_id\\\": \\\"5951704b646dd188a3aabbf1\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Default stickers\"\n}\n[/block]\nThe following stickers are built into Trello. When adding a sticker to a card, they can be added by setting the image parameter to the corresponding value. Note that Taco and Pete stickers, as well as custom stickers are only available for Business Class and Gold members.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"* check\\n* heart\\n* warning\\n* clock\\n* smile\\n* laugh\\n* huh\\n* frown\\n* thumbsup\\n* thumbsdown\\n* star\\n* rocketship\\n* taco-love\\n* taco-confused\\n* taco-cool\\n* taco-angry\\n* taco-celebrate\\n* taco-robot\\n* taco-alert\\n* taco-active\\n* taco-money\\n* taco-reading\",\n    \"0-1\": \"* taco-trophy\\n * taco-sleeping\\n * taco-pixel\\n * taco-proto\\n * taco-embarrassed\\n * taco-clean\\n * pete-happy\\n * pete-love\\n * pete-broken\\n * pete-alert\\n * pete-talk\\n * pete-vacation\\n * pete-confused\\n * pete-shipped\\n * pete-busy\\n * pete-completed\\n * pete-space\\n * pete-sketch\\n * pete-ghost\\n * pete-award\\n * pete-music\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"stickers","type":"basic","title":"Stickers","__v":0,"updatedAt":"2019-06-10T14:28:52.558Z"},{"_id":"59514b96a67f7b00556c851b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":["596e57f86b8da1001bf713ce"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T17:59:50.094Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ba5e3079400735c90ac","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59514c82634cc1003f74c0b1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of [fields](ref:card-object). **Defaults**: `badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl, url`","default":"","type":"string","name":"fields"},{"_id":"595280802080bf002bebff14","ref":"","in":"query","required":false,"desc":"See the [Actions Nested Resource](ref:actions-nested-resource)","default":"","type":"string","name":"actions"},{"_id":"5952809528e9ae004b965a73","ref":"","in":"query","required":false,"desc":"`true`, `false`, or `cover`","default":"false","type":"string","name":"attachments"},{"_id":"595280b8f8a1ac001b0f6a06","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"attachment_fields"},{"_id":"595280d69262c20041644c0b","ref":"","in":"query","required":false,"desc":"Whether to return member objects for members on the card","default":"false","type":"boolean","name":"members"},{"_id":"595280e2fc28ee004d046868","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object). **Defaults**: `avatarHash, fullName, initials, username`","default":"","type":"string","name":"member_fields"},{"_id":"59528111e9de4f0061237063","ref":"","in":"query","required":false,"desc":"Whether to return member objects for members who voted on the card","default":"false","type":"boolean","name":"membersVoted"},{"_id":"5952812ba0e05a0041b07357","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object). **Defaults**: `avatarHash, fullName, initials, username`","default":"","type":"string","name":"memberVoted_fields"},{"_id":"5952813a9262c20041644c0c","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"checkItemStates"},{"_id":"5952815f4731e4005d825561","ref":"","in":"query","required":false,"desc":"Whether to return the checklists on the card. `all` or `none`","default":"none","type":"string","name":"checklists"},{"_id":"59528173a6c9140033c80754","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `idBoard,idCard,name,pos`","default":"all","type":"string","name":"checklist_fields"},{"_id":"59528195fc28ee004d046869","ref":"","in":"query","required":false,"desc":"Whether to return the board object the card is on","default":"false","type":"boolean","name":"board"},{"_id":"596adbbad43aa90015ac0af1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object). **Defaults**: `name, desc, descData, closed, idOrganization, pinned, url, prefs`","default":"","type":"string","name":"board_fields"},{"_id":"595281bc4731e4005d825563","ref":"","in":"query","required":false,"desc":"See the [Lists Nested Resource](ref:lists-nested-resource)","default":"false","type":"boolean","name":"list"},{"_id":"595281d24731e4005d825564","ref":"","in":"query","required":false,"desc":"Whether to include pluginData on the card with the response","default":"false","type":"boolean","name":"pluginData"},{"_id":"595281e2a6c9140033c80755","ref":"","in":"query","required":false,"desc":"Whether to include sticker models with the response","default":"false","type":"boolean","name":"stickers"},{"_id":"5952820276da4b00292947f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"sticker_fields"},{"_id":"5bca5cdc685fb5001ead628e","ref":"","in":"query","required":false,"desc":"Whether to include the customFieldItems","default":"false","type":"boolean","name":"customFieldItems"}],"url":"/cards/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/cards/SDmaAwz9\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"58e800aa9ebaaa01c586f630\\\",\\n  \\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": false,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 0,\\n    \\\"attachments\\\": 1,\\n    \\\"description\\\": true,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  },\\n  \\\"checkItemStates\\\": [\\n    \\n  ],\\n  \\\"closed\\\": false,\\n  \\\"dateLastActivity\\\": \\\"2017-04-07T21:26:00.365Z\\\",\\n  \\\"desc\\\": \\\"Allows you to stay on top of the progress of any project by sending updates to Slack channels when activity occurs on Trello cards, lists, and boards. Customizable.\\\\n\\\\nRead more: http://blog.trello.com/slack-power-up-trello-alerts\\\",\\n  \\\"descData\\\": {\\n    \\\"emoji\\\": {\\n      \\n    }\\n  },\\n  \\\"due\\\": null,\\n  \\\"dueComplete\\\": false,\\n  \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n  \\\"idChecklists\\\": [\\n    \\n  ],\\n  \\\"idLabels\\\": [\\n    \\n  ],\\n  \\\"idList\\\": \\\"58e7fee3e06e4001f1cc3658\\\",\\n  \\\"idMembers\\\": [\\n    \\n  ],\\n  \\\"idShort\\\": 1579,\\n  \\\"idAttachmentCover\\\": \\\"58e801c30f51ca01a6dd6745\\\",\\n  \\\"manualCoverAttachment\\\": false,\\n  \\\"labels\\\": [\\n    \\n  ],\\n  \\\"name\\\": \\\"Trello Alerts for Slack\\\",\\n  \\\"pos\\\": 131071,\\n  \\\"shortUrl\\\": \\\"https://trello.com/c/SDmaAwz9\\\",\\n  \\\"url\\\": \\\"https://trello.com/c/SDmaAwz9/1579-trello-alerts-for-slack\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a card by its ID","slug":"cardsid","type":"endpoint","title":"/cards/{id}","__v":26,"updatedAt":"2019-06-10T14:28:52.558Z","swagger":{"path":"/cards/{id}"}},{"_id":"59514df1cc55510029d567ca","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5a687bdefe2e78001c26de4a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:09:53.469Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514e02e3079400735c90cf","ref":"","in":"path","required":false,"desc":"The id of the card","default":"","type":"string","name":"id"},{"_id":"59514e18cc55510029d567cb","ref":"","in":"path","required":false,"desc":"The desired field. One of [fields](ref:card-object)","default":"","type":"string","name":"field"}],"url":"/cards/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"`GET` `/1/cards/nqPiDKmw/name`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"_value\\\": \\\"Grand Canyon National Park\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a specific property of a card","slug":"cardsidfield","type":"endpoint","title":"/cards/{id}/{field}","__v":3,"updatedAt":"2019-06-10T14:28:52.559Z","swagger":{"path":"/cards/{id}/{field}"}},{"_id":"59514e53e3079400735c90d0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["598884ec467353000f686145","5996e4d5b6c6e900250f80ff","5b1574c1090faf0003917672"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:11:31.993Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f2b8eb072003d98aa81","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/actions","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"For all available query params, please see the [Actions Nested Resource](#actions-nested-resource)\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Default Actions Filter\",\n  \"body\": \"Keep in mind the default filter for actions is `commentCard, updateCard:idList`. If you want to see all of the actions for a single card, you'll need to add `filter=all` to the query.\"\n}\n[/block]\nFor Example:\n\n`GET` `/1/cards/NIRpzVDM/actions?limit=5`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"561f43cf9ee2b14c75583e6e\\\",\\n    \\\"idMemberCreator\\\": \\\"561f394aeb6a4b033754060e\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"Looking Forward to new support`\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-10-15T06:12:31.822Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"561f394aeb6a4b033754060e\\\",\\n      \\\"avatarHash\\\": \\\"f3d899950817ffcf32ca671cb793809d\\\",\\n      \\\"fullName\\\": \\\"Eric Chen\\\",\\n      \\\"initials\\\": \\\"EC\\\",\\n      \\\"username\\\": \\\"ericchen76\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"5605799c5a1b485d054e1135\\\",\\n    \\\"idMemberCreator\\\": \\\"4e70297a9618260000001a81\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"This has probably come up before, but can we please have due dates for checklist items? \\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-25T16:43:08.158Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4e70297a9618260000001a81\\\",\\n      \\\"avatarHash\\\": \\\"aaf480486554c8f329469e736f79420c\\\",\\n      \\\"fullName\\\": \\\"Ashish Bogawat\\\",\\n      \\\"initials\\\": \\\"AB\\\",\\n      \\\"username\\\": \\\"ashishbogawat\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560019007f0637ba5deda56a\\\",\\n    \\\"idMemberCreator\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"@constancedelgiudice I've been trying to keep this post up to date: http://trellostatus.tumblr.com/post/129567787933/investigating-delays-with-email-to-board\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T14:49:36.534Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n      \\\"avatarHash\\\": \\\"94527f5abac7de03a5ab541c14b49d11\\\",\\n      \\\"fullName\\\": \\\"Ben McCormack\\\",\\n      \\\"initials\\\": \\\"BRM\\\",\\n      \\\"username\\\": \\\"ben\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560015b435c347e254747ac0\\\",\\n    \\\"idMemberCreator\\\": \\\"55feef4242595b8ec2f5f197\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"Thank you so much for the quick response‚Ä¶. I guess I‚Äôll keep a look out for any news! \\\\n\\\\nConstance\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T13:52:34.000Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"55feef4242595b8ec2f5f197\\\",\\n      \\\"avatarHash\\\": \\\"d7d8a3e2bf16941ea0b460d347017ae1\\\",\\n      \\\"fullName\\\": \\\"Constance DelGiudice\\\",\\n      \\\"initials\\\": \\\"CD\\\",\\n      \\\"username\\\": \\\"constancedelgiudice\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560007f1da47d319e30a2034\\\",\\n    \\\"idMemberCreator\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"@constancedelgiudice we're noticing the delays as well. We're reaching out to our email service provider to figure out what's happening.\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T13:36:49.216Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n      \\\"avatarHash\\\": \\\"94527f5abac7de03a5ab541c14b49d11\\\",\\n      \\\"fullName\\\": \\\"Ben McCormack\\\",\\n      \\\"initials\\\": \\\"BRM\\\",\\n      \\\"username\\\": \\\"ben\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a card","slug":"cardsidactions","type":"endpoint","title":"/cards/{id}/actions","__v":5,"updatedAt":"2019-06-10T14:28:52.561Z","swagger":{"path":"/cards/{id}/actions"}},{"_id":"59514e650bc2d00015ec0b8b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:11:49.396Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514e737ba53e002beb8599","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516c1750feec002b5b9617","ref":"","in":"path","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"fields"},{"_id":"59516c9350feec002b5b9619","ref":"","in":"path","required":false,"desc":"Use `cover` to restrict to just the cover attachment","default":"false","type":"string","name":"filter"}],"url":"/cards/{id}/attachments","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/cards/SDmaAwz9/attachments\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"58e801c30f51ca01a6dd6745\\\",\\n    \\\"bytes\\\": 62103,\\n    \\\"date\\\": \\\"2017-04-07T21:16:51.346Z\\\",\\n    \\\"edgeColor\\\": \\\"#f0e9f1\\\",\\n    \\\"idMember\\\": \\\"57f2789b32d54fa10d99beb6\\\",\\n    \\\"isUpload\\\": true,\\n    \\\"mimeType\\\": null,\\n    \\\"name\\\": \\\"Screen Shot 2017-04-07 at 5.14.55 PM.png\\\",\\n    \\\"previews\\\": [\\n      {\\n        \\\"bytes\\\": 1811,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/70x50/e5ef494a0044dd7cd6b73c19955c8cfa/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 50,\\n        \\\"width\\\": 70,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e42\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"bytes\\\": 5285,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/250x150/6d59fba20fe4a2c431129b3c300b95a5/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 150,\\n        \\\"width\\\": 250,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e41\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"bytes\\\": 3431,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/150x77/ed52a061abdb26c84059f91e084f74a8/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 77,\\n        \\\"width\\\": 150,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e40\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 6229,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/300x154/c467423c26881a5210aca243bf0254af/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 154,\\n        \\\"width\\\": 300,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3f\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 13359,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/600x309/17f5babd64192bea9c29e96832bdc07f/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 309,\\n        \\\"width\\\": 600,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3e\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 35340,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/1200x617/6ff057c7801890c126228ce1fd70337c/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 617,\\n        \\\"width\\\": 1200,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3d\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 62103,\\n        \\\"height\\\": 663,\\n        \\\"width\\\": 1289,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4d5ea62fd76aa1136000000c/58e800aa9ebaaa01c586f630/1619f1fcd3065c9a2bccd318e9b7a154/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3c\\\",\\n        \\\"scaled\\\": true\\n      }\\n    ],\\n    \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4d5ea62fd76aa1136000000c/58e800aa9ebaaa01c586f630/1619f1fcd3065c9a2bccd318e9b7a154/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n    \\\"pos\\\": 16384\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the attachments on a card","slug":"cardsidattachments","type":"endpoint","title":"/cards/{id}/attachments","__v":3,"updatedAt":"2019-06-10T14:28:52.561Z","swagger":{"path":"/cards/{id}/attachments"}},{"_id":"59514e8f634cc1003f74c0b6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:12:31.225Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ea00085690081e9a62c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59514ea898e9e2004705bcbb","ref":"","in":"path","required":false,"desc":"The ID of the attachment","default":"","type":"string","name":"idAttachment"},{"_id":"59516ce7d331a7001596b19a","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/attachments/{idAttachment}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get a specific attachment on a card","slug":"cardsidattachmentsidattachment","type":"endpoint","title":"/cards/{id}/attachments/{idAttachment}","__v":3,"updatedAt":"2019-06-10T14:28:52.562Z","swagger":{"path":"/cards/{id}/attachments/{idAttachment}"}},{"_id":"59514eb97bfda600473af195","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:13:13.348Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f3b6e2e440047ce265a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"596ae9011ce50e0015b64827","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/board","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"`GET` `/1/cards/560bf4dd7139286471dc009c/board`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"US National Parks\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"577eb8850b41e08c3034aae2\\\",\\n  \\\"invited\\\": false,\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/b/tBmYPSYe/us-national-parks\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"560bfbb5176d070c67adc2b9\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/140x100/cf6ffdfac5ecf934ec324bf028b82686/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/256x192/2189d1f2d6c159c7de210412cc0e971f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/480x480/62bde347e629774a83378caf61f0fdb7/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/960x960/3102fa79837dfd37834cfaee02d1921c/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1024x1024/53a50ede7425af0b02a7b9bde783fe94/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1280x1280/491f54004976a4a81706caae613acf7f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1080,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09d\\\",\\n      \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"58ebc5d5abcedaf34a60800e\\\",\\n      \\\"idMember\\\": \\\"56fd3de8ba3cbeb22737fd55\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    }\\n  ],\\n  \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"Visited\\\",\\n    \\\"yellow\\\": \\\"\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [\\n    \\n  ],\\n  \\\"dateLastActivity\\\": \\\"2017-06-26T17:39:49.583Z\\\",\\n  \\\"dateLastView\\\": \\\"2017-06-26T17:43:56.319Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/tBmYPSYe\\\",\\n  \\\"idTags\\\": [\\n    \\n  ],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the board a card is on","slug":"cardsidboard","type":"endpoint","title":"/cards/{id}/board","__v":2,"updatedAt":"2019-06-10T14:28:52.562Z","swagger":{"path":"/cards/{id}/board"}},{"_id":"59514ed40085690081e9a62d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:13:40.162Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595173e0d331a7001596b1a7","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595173f78297ad0033c03d40","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `idCheckItem`, `state`","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/checkItemStates","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"`GET` `/1/cards/ndXbmEbO/checkItemStates`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"idCheckItem\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n    \\\"state\\\": \\\"complete\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the completed checklist items on a card","slug":"cardsidcheckitemstates","type":"endpoint","title":"/cards/{id}/checkItemStates","__v":2,"updatedAt":"2019-06-10T14:28:52.563Z","swagger":{"path":"/cards/{id}/checkItemStates"}},{"_id":"59514eebe706bd005ffb9fd7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:14:03.814Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ef9e706bd005ffb9fd8","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5952783eb1a12000672aed6c","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"all","type":"string","name":"checkItems"},{"_id":"595278614731e4005d825513","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `name,nameData,pos,state,type`","default":"name,nameData,pos,state","type":"string","name":"checkItem_fields"},{"_id":"5952786dd93ebe003ff33950","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"all","type":"string","name":"filter"},{"_id":"59527883f8a1ac001b0f69f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `idBoard,idCard,name,pos`","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/checklists","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"`GET` `/1/cards/ndXbmEbO/checklists`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5914b2923876e144b5cb6974\\\",\\n    \\\"name\\\": \\\"Awesomeness to come\\\",\\n    \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n    \\\"idCard\\\": \\\"5914b27920508fcb6bfd525f\\\",\\n    \\\"pos\\\": 16384,\\n    \\\"checkItems\\\": [\\n      {\\n        \\\"state\\\": \\\"complete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n        \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 16867\\n      },\\n      {\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b2a1ee4421b88542b59a\\\",\\n        \\\"name\\\": \\\"Custom Fields on mobile\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 34254\\n      },\\n      {\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b2b2e01e5b17afedf6fc\\\",\\n        \\\"name\\\": \\\"Working well across multiple boards\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 51540\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the checklists on a card","slug":"cardsidchecklists","type":"endpoint","title":"/cards/{id}/checklists","__v":5,"updatedAt":"2019-06-10T14:28:52.563Z","swagger":{"path":"/cards/{id}/checklists"}},{"_id":"59514f2b7bfda600473af196","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:07.502Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527895a0e05a0041b072ed","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595278b61579820035a6b073","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `name,nameData,pos,state,type`","default":"name,nameData,pos,state","type":"string","name":"fields"},{"_id":"5af9b2d68e3cc8000313327d","ref":"","in":"path","required":false,"desc":"The ID of the checkitem","default":"","type":"string","name":"idCheckItem"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"`GET` `/1/cards/ndXbmEbO/checkItem/5914b29abcbe09ab9478d156?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"state\\\": \\\"complete\\\",\\n  \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n  \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n  \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n  \\\"nameData\\\": null,\\n  \\\"type\\\": null,\\n  \\\"pos\\\": 16867\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a specific checkItem on a card","slug":"cardsidcheckitemidcheckitem","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":4,"updatedAt":"2019-06-10T14:28:52.564Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5ace617b851e340003da6766","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-04-11T19:26:51.437Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f3b6e2e440047ce265a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/customFieldItems","method":"get"},"isReference":true,"order":13,"body":"`GET https://api.trello.com/1/cards/5acbbe5d615f7dd1935b92f5/customFieldItems`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5acbd57f7160061ed10daa2c\\\",\\n    \\\"value\\\": {\\n      \\\"text\\\": \\\"High Priority\\\"\\n    },\\n    \\\"idCustomField\\\": \\\"5ab0f9f30c8780347a255463\\\",\\n    \\\"idModel\\\": \\\"5acbbe5d615f7dd1935b92f5\\\",\\n    \\\"modelType\\\": \\\"card\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the custom field items for a card.","slug":"cardsidcustomfielditems","type":"endpoint","title":"/cards/{id}/customFieldItems","__v":2,"updatedAt":"2019-06-10T14:28:52.564Z","swagger":{"path":"/cards/{id}/customFieldItems"}},{"_id":"59514f38cc55510029d567cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:20.391Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595172fb2f25a4001b90768e","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fe9b0406d00155a8e90","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/list","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"For all available query params, please see the [Lists Nested Resource](ref:lists-nested-resource)\n\nFor example\n\n`GET` `/1/cards/560bf4dd7139286471dc009c/list`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\",\\n  \\\"name\\\": \\\"Arizona\\\",\\n  \\\"closed\\\": false,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"pos\\\": 131071,\\n  \\\"subscribed\\\": false\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the list a card is in","slug":"cardsidlist","type":"endpoint","title":"/cards/{id}/list","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/list"}},{"_id":"59514f4b0bc2d00015ec0b8c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:39.331Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595279142080bf002bebfed2","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fb570084b001beca6db","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"fields"}],"url":"/cards/{id}/members","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Get the members on a card","slug":"cardsidmembers","type":"endpoint","title":"/cards/{id}/members","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/members"}},{"_id":"59514f5f98e9e2004705bcbc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:59.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952792d109f490029f6a2a2","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fce07ba77001b75bdd0","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"fields"}],"url":"/cards/{id}/membersVoted","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"Get the members who have voted on a card","slug":"cardsidmembersvoted","type":"endpoint","title":"/cards/{id}/membersVoted","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/membersVoted"}},{"_id":"59514f790085690081e9a62f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:25.197Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595279394731e4005d825514","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/pluginData","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"Get any shared pluginData on a card","slug":"cardsidplugindata","type":"endpoint","title":"/cards/{id}/pluginData","__v":1,"updatedAt":"2019-06-10T14:28:52.566Z","swagger":{"path":"/cards/{id}/pluginData"}},{"_id":"59514f8898e9e2004705bcbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:40.615Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59517085c471ab001b308910","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595170ae6e2e440047ce265b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/stickers","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"For Example:\n\n`GET` `/1/cards/nqX2Cl8w/stickers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5807bedf4e4d6ba6ca02039f\\\",\\n    \\\"top\\\": 0,\\n    \\\"left\\\": 47.31,\\n    \\\"zIndex\\\": 1,\\n    \\\"rotate\\\": -7,\\n    \\\"image\\\": \\\"taco-alert\\\",\\n    \\\"imageUrl\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n    \\\"imageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 140,\\n        \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n        \\\"scaled\\\": false,\\n        \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n      },\\n      {\\n        \\\"width\\\": 280,\\n        \\\"height\\\": 280,\\n        \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert@2x.png\\\",\\n        \\\"scaled\\\": false,\\n        \\\"_id\\\": \\\"5951704b646dd188a3aabbf1\\\"\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the stickers on a card","slug":"cardsidstickers","type":"endpoint","title":"/cards/{id}/stickers","__v":2,"updatedAt":"2019-06-10T14:28:52.566Z","swagger":{"path":"/cards/{id}/stickers"}},{"_id":"59514f96d5b36f004be3061d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:54.793Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595171d62f25a4001b90768b","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595171dcb88bfb001b5d5b8a","ref":"","in":"path","required":false,"desc":"The ID of the sticker","default":"","type":"string","name":"idSticker"},{"_id":"595171f06aff60001ba596d8","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/stickers/{idSticker}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Get a specific sticker on a card","slug":"cardsidstickersidsticker","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":3,"updatedAt":"2019-06-10T14:28:52.567Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"59514fae7bfda600473af197","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5b23672a80aeea000317e355","5c484acd2206ce0ea57be6e5","5cabb95e42f5b1000f3309e2"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:17:18.440Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514fbc0085690081e9a631","ref":"","in":"path","required":false,"desc":"The ID of the card to update","default":"","type":"string","name":"id"},{"_id":"59517532d331a7001596b1a9","ref":"","in":"query","required":false,"desc":"The new name for the card","default":"","type":"string","name":"name"},{"_id":"5951753a4e07bf001b77b9fc","ref":"","in":"query","required":false,"desc":"The new description for the card","default":"","type":"string","name":"desc"},{"_id":"595175922f25a4001b907690","ref":"","in":"query","required":false,"desc":"Whether the card should be archived (closed: true)","default":"","type":"boolean","name":"closed"},{"_id":"59527960f8a1ac001b0f69f8","ref":"","in":"query","required":false,"desc":"Comma-separated list of member IDs","default":"","type":"string","name":"idMembers"},{"_id":"59527979c86ac3003f370fdb","ref":"","in":"query","required":false,"desc":"The ID of the image attachment the card should use as its cover, or null for none","default":"","type":"string","name":"idAttachmentCover"},{"_id":"595279851579820035a6b074","ref":"","in":"query","required":false,"desc":"The ID of the list the card should be in","default":"","type":"string","name":"idList"},{"_id":"595279931579820035a6b075","ref":"","in":"query","required":false,"desc":"Comma-separated list of label IDs","default":"","type":"string","name":"idLabels"},{"_id":"5952799e28e9ae004b965a49","ref":"","in":"query","required":false,"desc":"The ID of the board the card should be on","default":"","type":"string","name":"idBoard"},{"_id":"595279b4f544fe0015385cd6","ref":"","in":"query","required":false,"desc":"The position of the card in its list. `top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"595279cb08a112006b18c9eb","ref":"","in":"query","required":false,"desc":"When the card is due, or `null`","default":"","type":"datetime","name":"due"},{"_id":"595279dce9de4f0061237037","ref":"","in":"query","required":false,"desc":"Whether the due date should be marked complete","default":"","type":"boolean","name":"dueComplete"},{"_id":"595279efa6c9140033c80749","ref":"","in":"query","required":false,"desc":"Whether the member is should be subscribed to the card","default":"","type":"boolean","name":"subscribed"}],"url":"/cards/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"This endpoint can be used to update one or more properties of the card at once. Alternatively, you can also update a single property of the card as the params for this method via:\n\n`PUT` `/1/cards/{id}/{property}?value={newValue}`\n\nSo for example, to archive a card:\n\n`PUT` `/1/cards/{id}/closed?value=true`\n\nOr to move the card to a different list:\n\n`PUT` `/1/cards/{id}/idList?value={new list ID}`\n\nIf you want to move a card across different boards, you should use the ID of the new board as well as ID of the target list:\n\n`PUT` `/1/cards/{id}/idBoard?value={new board ID}&idList={new list ID}`\n\nOn success, the endpoint returns a [JSON object](#page-cardsid) representing the updated card.","excerpt":"Update a card","slug":"cardsid-1","type":"endpoint","title":"/cards/{id}","__v":17,"updatedAt":"2019-06-10T14:28:52.567Z","swagger":{"path":"/cards/{id}"}},{"_id":"595150500085690081e9a632","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5b3381bb06aa32000399eeb8"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:20:00.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595150776aff60001ba5956a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515082e706bd005ffb9fda","ref":"","in":"path","required":false,"desc":"The ID of the comment action to update","default":"","type":"string","name":"idAction"},{"_id":"595150950bc2d00015ec0b8d","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"text"}],"url":"/cards/{id}/actions/{idAction}/comments","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Only the original author of a comment can update it.\",\n  \"title\": \"Note\"\n}\n[/block]","excerpt":"Update an existing comment","slug":"cardsidactionsidactioncomments","type":"endpoint","title":"/cards/{id}/actions/{idAction}/comments","__v":4,"updatedAt":"2019-06-10T14:28:52.568Z","swagger":{"path":"/cards/{id}/actions/{idAction}/comments"}},{"_id":"59515e6653920e0015947184","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:20:06.003Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59515e800bc2d00015ec0cc5","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515e8d4e07bf001b77b954","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to update","default":"","type":"string","name":"idCheckItem"},{"_id":"59515eadc2cc4200156eaa09","ref":"","in":"query","required":false,"desc":"The new name for the checklist item","default":"","type":"string","name":"name"},{"_id":"59515ed4470b3a0015ba15a6","ref":"","in":"query","required":false,"desc":"One of: `complete`, `incomplete`","default":"","type":"string","name":"state"},{"_id":"59515ee3d331a7001596b109","ref":"","in":"query","required":false,"desc":"The ID of the checklist this item is in","default":"","type":"string","name":"idChecklist"},{"_id":"59515ef4702f02001bf3d8cd","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You can only move a checkItem to a checklist on the same card. You can't move a checkItem from a checklist on one card to a checklist on a different card.\"\n}\n[/block]","excerpt":"Update an item in a checklist on a card.","slug":"cardsidcheckitemidcheckitem-1","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":8,"updatedAt":"2019-06-10T14:28:52.568Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5b0d4d8c20631300034cc067","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-05-29T12:54:36.425Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"59515e800bc2d00015ec0cc5","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"idCard"},{"_id":"59515e8d4e07bf001b77b954","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to update","default":"","type":"string","name":"idCheckItem"},{"_id":"59515ef4702f02001bf3d8cd","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"5b0d4d3e20631300034cc064","ref":"","in":"path","required":false,"desc":"The ID of the item to update.","default":"","type":"string","name":"idChecklist"}],"url":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}","method":"put"},"isReference":true,"order":23,"body":"","excerpt":"Update an item in a checklist on a card.","slug":"cardsidcardchecklistidchecklistcheckitemidcheckitem","type":"endpoint","title":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}","__v":0,"updatedAt":"2019-06-10T14:28:52.569Z","swagger":{"path":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}"}},{"_id":"59527b60d93ebe003ff33958","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:36:00.890Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527b6ba6c9140033c8074a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59527b72d93ebe003ff33959","ref":"","in":"path","required":false,"desc":"The ID of the sticker to update","default":"","type":"string","name":"idSticker"},{"_id":"59527b7df168f9001bba9a84","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"top"},{"_id":"59527b832080bf002bebfed9","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"left"},{"_id":"59527b8d1579820035a6b096","ref":"","in":"query","required":false,"desc":"","default":"","type":"int","name":"zIndex"},{"_id":"59527b95d93ebe003ff3395a","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"rotate"}],"url":"/cards/{id}/stickers/{idSticker}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Update a sticker on a card","slug":"cardsidstickersidsticker-2","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":6,"updatedAt":"2019-06-10T14:28:52.570Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"59515f47e706bd005ffba0e9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59dcd41baf484300303c2798","5c926d5ce0d7e600436ea9b4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:23:51.693Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527bcb9262c20041644bc2","ref":"","in":"query","required":false,"desc":"The name for the card","default":"","type":"string","name":"name"},{"_id":"59527bd32080bf002bebfedb","ref":"","in":"query","required":false,"desc":"The description for the card","default":"","type":"string","name":"desc"},{"_id":"59527be7f544fe0015385cfa","ref":"","in":"query","required":false,"desc":"The position of the new card. `top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"59527bf2f544fe0015385cfb","ref":"","in":"query","required":false,"desc":"A due date for the card","default":"","type":"datetime","name":"due"},{"_id":"59527bff2080bf002bebfedc","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"dueComplete"},{"_id":"59527c14b1a12000672aed91","ref":"","in":"query","required":true,"desc":"The ID of the list the card should be created in","default":"","type":"string","name":"idList"},{"_id":"59527c25f168f9001bba9a85","ref":"","in":"query","required":false,"desc":"Comma-separated list of member IDs to add to the card","default":"","type":"string","name":"idMembers"},{"_id":"59527c34f168f9001bba9a86","ref":"","in":"query","required":false,"desc":"Comma-separated list of label IDs to add to the card","default":"","type":"string","name":"idLabels"},{"_id":"59527c4a9262c20041644bc3","ref":"","in":"query","required":false,"desc":"A URL starting with `http://` or `https://`","default":"","type":"string","name":"urlSource"},{"_id":"59527c64e9de4f0061237039","ref":"","in":"query","required":false,"desc":"","default":"","type":"file","name":"fileSource"},{"_id":"59527c64e9de4f0061237038","ref":"","in":"query","required":false,"desc":"The ID of a card to copy into the new card","default":"","type":"string","name":"idCardSource"},{"_id":"59527caaf544fe0015385cfc","ref":"","in":"query","required":false,"desc":"If using `idCardSource` you can specify which properties to copy over. `all` or comma-separated list of: `attachments,checklists,comments,due,labels,members,stickers`","default":"all","type":"string","name":"keepFromSource"}],"url":"/cards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Copying Cards\",\n  \"body\": \"When copying an existing card into a new card with `idCardSource` checklist items are always unchecked and due dates are never marked as complete regardless of their corresponding values in the source card.\"\n}\n[/block]","excerpt":"Create a new card","slug":"cards-2","type":"endpoint","title":"/cards","__v":14,"updatedAt":"2019-06-10T14:28:52.570Z","swagger":{"path":"/cards"}},{"_id":"59515f686aff60001ba5967a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:24:24.644Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59515f7aeb8e31001bc9f381","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515f8a53920e00159471a5","ref":"","in":"query","required":true,"desc":"The comment","default":"","type":"string","name":"text"}],"url":"/cards/{id}/actions/comments","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Add a new comment to a card","slug":"cardsidactionscomments","type":"endpoint","title":"/cards/{id}/actions/comments","__v":2,"updatedAt":"2019-06-10T14:28:52.571Z","swagger":{"path":"/cards/{id}/actions/comments"}},{"_id":"59516013d331a7001596b10b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5ce3f676b89aab01871f086d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:27:15.586Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\":\"5bbce18fa4a337483b145a57\",\n\t\"bytes\":6654,\n  \"date\":\"2018-10-09T17:12:47.847Z\",  \t\n  \"edgeColor\":null,\n  \"idMember\":\"5589c3ea49b40cedc28cf70e\",\n  \"isUpload\":true,\n  \"mimeType\":null,\n  \"name\":\"test.pdf\",\n  \"previews\":[],\n  \"url\":\"https://trello-attachments.s3.amazonaws.com/5bbcda7a58bba713f1b18c10/5bbce0dbcac3a880704bc097/eca30e0de0a07563d870cd25d30e6fcb/test.pdf\",\n  \"pos\":32768,\n  \"limits\":{}\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595160910544650015752cb1","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595160a66aff60001ba5967d","ref":"","in":"query","required":false,"desc":"The name of the attachment. Max length 256.","default":"","type":"string","name":"name"},{"_id":"595160e1e00c6e0015b5ad28","ref":"","in":"query","required":false,"desc":"The file to attach, as multipart/form-data","default":"","type":"file","name":"file"},{"_id":"595160f7470b3a0015ba15cb","ref":"","in":"query","required":false,"desc":"The mimeType of the attachment. Max length 256","default":"","type":"string","name":"mimeType"},{"_id":"5951610a2f25a4001b90767a","ref":"","in":"query","required":false,"desc":"A URL to attach. Must start with `http://` or `https://`","default":"","type":"string","name":"url"}],"url":"/cards/{id}/attachments","method":"post","examples":{"codes":[{"code":"# Upload a file directly from a local path\ncurl -v -F token={TrelloToken} -F file=@test.pdf https://api.trello.com/1/cards/5bbce18fa4a337483b145a57/attachments\\?key\\={APIKey}\\&token\\={TrelloToken}\n# You can specify a path to the file: `file=@path/to/file/test.pdf`","language":"curl"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"There are two primary ways of adding attachments to cards:\n\n**Attaching a URL directly to a card:** \n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -d \\\"url={URL}&key={API_KEY}&token={API_TOKEN}\\\" -X POST https://api.trello.com/1/cards/{id}/attachments\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n**Attaching a file object to a card:** \n\nTrello expects that the file object is encoded as multipart/form-data. For examples demonstrating how to add attachments check out this [Glitch project](https://glitch.com/~trello-attachments-api) üöÄ.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"100 Attachments Per Card\",\n  \"body\": \"If you try to add an attachment to a card that already has 100 attachments, you will get a `422` `unprocessable entity` error.\"\n}\n[/block]\nReturn object\n```json\n{\n\"id\": \"\",\n\"bytes\": null,\n\"date\": \"\",\n\"edgeColor\": null,\n\"idMember\": \"\",\n\"isUpload\": false,\n\"mimeType\": \"\",\n\"name\": \"\",\n\"previews\": [],\n\"url\": \"\",\n\"pos\": 147456,\n\"limits\": {}\n}\n```","excerpt":"Add an attachment to a card","slug":"cardsidattachments-1","type":"endpoint","title":"/cards/{id}/attachments","__v":15,"updatedAt":"2019-06-10T14:28:52.571Z","swagger":{"path":"/cards/{id}/attachments"}},{"_id":"59516333b88bfb001b5d5af3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:40:35.775Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163440544650015752cb6","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516365c471ab001b3088bf","ref":"","in":"query","required":false,"desc":"The name of the checklist","default":"","type":"string","name":"name"},{"_id":"59516377e00c6e0015b5ad2d","ref":"","in":"query","required":false,"desc":"The ID of a source checklist to copy into the new one","default":"","type":"string","name":"idChecklistSource"},{"_id":"5acba19806a2ce0003f28ea0","ref":"","in":"query","required":false,"desc":"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"}],"url":"/cards/{id}/checklists","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Create a new checklist on a card","slug":"cardsidchecklists-1","type":"endpoint","title":"/cards/{id}/checklists","__v":4,"updatedAt":"2019-06-10T14:28:52.572Z","swagger":{"path":"/cards/{id}/checklists"}},{"_id":"595163a2b88bfb001b5d5af4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:42:26.358Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163b56aff60001ba59683","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595163c0b88bfb001b5d5af5","ref":"","in":"query","required":false,"desc":"The ID of the label to add","default":"","type":"string","name":"value"}],"url":"/cards/{id}/idLabels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Add a label to a card","slug":"cardsididlabels","type":"endpoint","title":"/cards/{id}/idLabels","__v":2,"updatedAt":"2019-06-10T14:28:52.572Z","swagger":{"path":"/cards/{id}/idLabels"}},{"_id":"595163d2470b3a0015ba15ce","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:43:14.707Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163e2702f02001bf3d917","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595163efeb8e31001bc9f3ab","ref":"","in":"query","required":false,"desc":"The ID of the member to add to the card","default":"","type":"string","name":"value"}],"url":"/cards/{id}/idMembers","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"","excerpt":"Add a member to a card","slug":"cardsididmembers","type":"endpoint","title":"/cards/{id}/idMembers","__v":2,"updatedAt":"2019-06-10T14:28:52.573Z","swagger":{"path":"/cards/{id}/idMembers"}},{"_id":"5951641fc2cc4200156eaa52","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:44:31.556Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5951642e702f02001bf3d918","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951644e4e07bf001b77b95d","ref":"","in":"query","required":true,"desc":"A valid label color or `null`. See [labels](ref:label-object)","default":"","type":"string","name":"color"},{"_id":"5951647e702f02001bf3d919","ref":"","in":"query","required":false,"desc":"A name for the label","default":"","type":"string","name":"name"}],"url":"/cards/{id}/labels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"","excerpt":"Add a new label to a card","slug":"cardsidlabels","type":"endpoint","title":"/cards/{id}/labels","__v":3,"updatedAt":"2019-06-10T14:28:52.573Z","swagger":{"path":"/cards/{id}/labels"}},{"_id":"595164964e07bf001b77b97f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:46:30.629Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595164a353920e00159471ea","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/markAssociatedNotificationsRead","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":32,"body":"","excerpt":"Mark notifications about this card as read","slug":"cardsidmarkassociatednotificationsread","type":"endpoint","title":"/cards/{id}/markAssociatedNotificationsRead","__v":1,"updatedAt":"2019-06-10T14:28:52.574Z","swagger":{"path":"/cards/{id}/markAssociatedNotificationsRead"}},{"_id":"595164c1d331a7001596b110","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:47:13.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595164f2829c660029e0fe85","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951650644e91b002904dbbb","ref":"","in":"query","required":true,"desc":"The ID of the member to vote 'yes' on the card","default":"","type":"string","name":"value"}],"url":"/cards/{id}/membersVoted","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Requires Voting Power-Up\",\n  \"body\": \"This route will only work if the Voting Power-Up is enabled on the board\"\n}\n[/block]","excerpt":"Vote on the card","slug":"cardsidmembersvoted-1","type":"endpoint","title":"/cards/{id}/membersVoted","__v":2,"updatedAt":"2019-06-10T14:28:52.574Z","swagger":{"path":"/cards/{id}/membersVoted"}},{"_id":"5cedc0b47765e1005cd0683e","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.574Z","createdAt":"2019-05-28T23:13:56.289Z","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl --request POST \\\n  --url https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1"},{"name":"Node","language":"javascript","code":"var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1' };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});"},{"name":null,"language":"ruby","code":"require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\n\nresponse = http.request(request)\nputs response.read_body"},{"language":"javascript","code":"var data = null;\n\nvar xhr = new XMLHttpRequest();\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\");\n\nxhr.send(data);"},{"language":"python","code":"import requests\n\nurl = \"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\"\n\nresponse = requests.request(\"POST\", url)\n\nprint(response.text)"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5cedc0b47765e1005cd06844","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5cedc0b47765e1005cd06843","ref":"","in":"query","required":true,"desc":"For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)","default":"","type":"string","name":"image"},{"_id":"5cedc0b47765e1005cd06842","ref":"","in":"query","required":true,"desc":"The top position of the sticker, from -60 to 100","default":"","type":"float","name":"top"},{"_id":"5cedc0b47765e1005cd06841","ref":"","in":"query","required":true,"desc":"The left position of the sticker, from -60 to 100","default":"","type":"float","name":"left"},{"_id":"5cedc0b47765e1005cd06840","ref":"","in":"query","required":true,"desc":"The z-index of the sticker","default":"","type":"int","name":"zIndex"},{"_id":"5cedc0b47765e1005cd0683f","ref":"","in":"query","required":false,"desc":"The rotation of the sticker","default":"0","type":"float","name":"rotate"}],"url":"/cards/{id}/stickers","method":"post"},"isReference":true,"order":34,"body":"[block:api-header]\n{\n  \"title\": \"Specifying sticker names\"\n}\n[/block]\nTrello has a set of built-in stickers that are available to members. For the full list, see the [Stickers section](https://developers.trello.com/reference#stickers).\n\nAdditionally, members can create custom stickers. Those are documented in the [members](https://developers.trello.com/reference?#membersidcustomstickers) section.","excerpt":"Add a sticker to a card","slug":"cardsidstickers-1","type":"endpoint","title":"/cards/{id}/stickers","__v":13,"swagger":{"path":"/cards/{id}/stickers"}},{"_id":"59516526207e1f00296b6ddf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:48:54.231Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516564829c660029e0fe86","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"This action is not reversible\",\n  \"body\": \"Deleting a card cannot be undone. Its safer to mark the card as `closed` (archived).\"\n}\n[/block]","excerpt":"Delete a card","slug":"delete-card","type":"endpoint","title":"/cards/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.575Z","swagger":{"path":"/cards/{id}"}},{"_id":"59516774470b3a0015ba1612","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59ae7b3b751330002fabf7dd","59ae7b3d751330002fabf7de"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:58:44.199Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516780c2cc4200156eaa5c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516789c471ab001b3088e3","ref":"","in":"path","required":false,"desc":"The ID of the comment action","default":"","type":"string","name":"idAction"}],"url":"/cards/{id}/actions/{idAction}/comments","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Note\",\n  \"body\": \"This can only be done by the original author of the comment, or someone with higher permissions than the original author.\"\n}\n[/block]","excerpt":"Delete a comment","slug":"cardsidactionsidactioncomments-1","type":"endpoint","title":"/cards/{id}/actions/{idAction}/comments","__v":4,"updatedAt":"2019-06-10T14:28:52.575Z","swagger":{"path":"/cards/{id}/actions/{idAction}/comments"}},{"_id":"595167b07c47dc0015d344d1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:59:44.133Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595167c053920e00159471ef","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595167e1561f66002bfbf888","ref":"","in":"path","required":false,"desc":"The ID of the attachment to delete","default":"","type":"string","name":"idAttachment"}],"url":"/cards/{id}/attachments/{idAttachment}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"Delete an attachment","slug":"cardsidattachmentsidattachment-1","type":"endpoint","title":"/cards/{id}/attachments/{idAttachment}","__v":2,"updatedAt":"2019-06-10T14:28:52.576Z","swagger":{"path":"/cards/{id}/attachments/{idAttachment}"}},{"_id":"59516809b88bfb001b5d5b1c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:01:12.999Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516814470b3a0015ba1613","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951681eb88bfb001b5d5b1d","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to delete","default":"","type":"string","name":"idCheckItem"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"Delete a checklist item","slug":"cardsidcheckitemidcheckitem-2","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":2,"updatedAt":"2019-06-10T14:28:52.576Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5951683fc2cc4200156eaa7d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:02:07.785Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595168492e17ad001bad70dc","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516853d331a7001596b153","ref":"","in":"path","required":false,"desc":"The ID of the checklist to delete","default":"","type":"string","name":"idChecklist"}],"url":"/cards/{id}/checklists/{idChecklist}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":39,"body":"","excerpt":"Delete a checklist from a card","slug":"cardsidchecklistsidchecklist","type":"endpoint","title":"/cards/{id}/checklists/{idChecklist}","__v":2,"updatedAt":"2019-06-10T14:28:52.577Z","swagger":{"path":"/cards/{id}/checklists/{idChecklist}"}},{"_id":"595169aa0544650015752cc1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:08:10.550Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595169b57c47dc0015d34517","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595169bc829c660029e0fe90","ref":"","in":"path","required":false,"desc":"The ID of the label to remove","default":"","type":"string","name":"idLabel"}],"url":"/cards/{id}/idLabels/{idLabel}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Remove a label from a card","slug":"cardsididlabelsidlabel","type":"endpoint","title":"/cards/{id}/idLabels/{idLabel}","__v":2,"updatedAt":"2019-06-10T14:28:52.578Z","swagger":{"path":"/cards/{id}/idLabels/{idLabel}"}},{"_id":"595169d67c47dc0015d34518","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:08:54.961Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595169e444e91b002904dbc3","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595169f1c2cc4200156eaa82","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the card","default":"","type":"string","name":"idMember"}],"url":"/cards/{id}/idMembers/{idMember}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"Remove a member from a card","slug":"cardsididmembersidmember","type":"endpoint","title":"/cards/{id}/idMembers/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.578Z","swagger":{"path":"/cards/{id}/idMembers/{idMember}"}},{"_id":"59516a08470b3a0015ba1617","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:09:44.633Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516a13b88bfb001b5d5b40","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516a1d561f66002bfbf88b","ref":"","in":"path","required":false,"desc":"The ID of the member whose vote to remove","default":"","type":"string","name":"idMember"}],"url":"/cards/{id}/membersVoted/{idMember}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Voting Power-Up Required\",\n  \"body\": \"The Voting Power-Up must be enabled on the board\"\n}\n[/block]","excerpt":"Remove a member's vote from a card","slug":"cardsidmembersvotedidmember","type":"endpoint","title":"/cards/{id}/membersVoted/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.581Z","swagger":{"path":"/cards/{id}/membersVoted/{idMember}"}},{"_id":"59516a45fafb63003375d54c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:10:45.180Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516a54561f66002bfbf88c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516a5fb88bfb001b5d5b41","ref":"","in":"path","required":false,"desc":"The ID of the sticker to remove from the card","default":"","type":"string","name":"idSticker"}],"url":"/cards/{id}/stickers/{idSticker}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":43,"body":"","excerpt":"Remove a sticker from the card","slug":"cardsidstickersidsticker-1","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":2,"updatedAt":"2019-06-10T14:28:52.581Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}}],"childrenPages":[{"_id":"594d1946f45834003df50221","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59764dfc43e329001fb55804","5982b00a78b974002a9c3cab"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:36:06.473Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**badges**\\nObject\",\n    \"2-0\": \"**checkItemStates**\\narray\",\n    \"3-0\": \"**closed**\\nboolean\",\n    \"4-0\": \"**dateLastActivity**\\ndate\",\n    \"4-1\": \"The datetime of the last activity on the card. \\n\\nNote: There are activities that update dateLastActivity that do not create a corresponding action. For instance, updating the name field of a checklist item on a card does not create an action but does update the card and board's dateLastActivity value.\",\n    \"5-0\": \"**desc**\\nstring\",\n    \"6-0\": \"**descData**\",\n    \"7-0\": \"**due**\\ndate\",\n    \"8-0\": \"**dueComplete**\\nboolean\",\n    \"9-0\": \"**idAttachmentCover**\\nstring\",\n    \"9-1\": \"The id of the attachment selected as the cover image, if one exists\",\n    \"10-0\": \"**idBoard**\\nstring\",\n    \"10-1\": \"The ID of the board the card is on\",\n    \"11-0\": \"**idChecklists**\\narray of strings\",\n    \"11-1\": \"An array of checklist IDs that are on this card\",\n    \"12-0\": \"**idLabels**\\narray of strings\",\n    \"12-1\": \"An array of label IDs that are on this card\",\n    \"13-0\": \"**idList**\\nstring\",\n    \"13-1\": \"The ID of the list the card is in\",\n    \"14-0\": \"**idMembers**\\narray of strings\",\n    \"14-1\": \"An array of member IDs that are on this card\",\n    \"15-0\": \"**idMembersVoted**\\narray of strings\",\n    \"15-1\": \"An array of member IDs who have voted on this card\",\n    \"16-0\": \"**idShort**\\ninteger\",\n    \"16-1\": \"Numeric ID for the card on this board. Only unique to the board, and subject to change as the card moves\",\n    \"17-0\": \"**labels**\\narray of [Labels](ref:labels)\",\n    \"17-1\": \"Array of label objects on this card\",\n    \"18-0\": \"**manualCoverAttachment**\\nboolean\",\n    \"19-0\": \"**name**\\nstring\",\n    \"19-1\": \"Name of the card\",\n    \"20-0\": \"**pos**\\nfloat\",\n    \"20-1\": \"Position of the card in the list\",\n    \"21-0\": \"**shortLink**\\nstring\",\n    \"21-1\": \"The 8 character shortened ID for the card\",\n    \"22-0\": \"**shortUrl**\\nstring\",\n    \"22-1\": \"URL to the card without the name slug\",\n    \"23-0\": \"**subscribed**\\nboolean\",\n    \"23-1\": \"Whether this member is subscribed to the card\",\n    \"24-0\": \"**url**\\nstring\",\n    \"24-1\": \"Full URL to the card, with the name slug\",\n    \"0-1\": \"The ID of the card\",\n    \"3-1\": \"Whether the card is closed (archived). Note: Archived lists and boards do not cascade archives to cards. A card can have `closed: false` but be on an archived board.\",\n    \"5-1\": \"The description for the card. Up to 16384 chars.\",\n    \"7-1\": \"The due date on the card, if one exists\",\n    \"8-1\": \"Whether the due date has been marked complete\",\n    \"6-1\": \"If the description has custom emoji, this field will provide the data necessary to display them.\\n\\n```json\\n\\\"descData\\\": {\\n    \\\"emoji\\\": {\\n      \\\"morty\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\"\\n    }\\n  }\\n```\",\n    \"1-1\": \"Pieces of information about the card that are displayed on the front of the card.\\n\\n```json\\n\\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": true,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 1,\\n    \\\"attachments\\\": 2,\\n    \\\"description\\\": true,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  }\\n```\",\n    \"18-1\": \"Whether the card cover image was selected automatically by Trello, or manually by the user\",\n    \"25-0\": \"**address**\\nstring\",\n    \"26-0\": \"**locationName**\\nstring\",\n    \"27-0\": \"**coordinates**\\nobject\",\n    \"25-1\": \"Address of card location\",\n    \"26-1\": \"Name of card location\",\n    \"27-1\": \"Either a comma-separated string in the format latitude,longitude or an object containing keys for `latitude` and `longitude` whose values are numbers between -180 and 180.\"\n  },\n  \"cols\": 2,\n  \"rows\": 28\n}\n[/block]\nFor example:\n\n`GET` `/1/cards/560bf4dd7139286471dc009c?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n  \\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": true,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 0,\\n    \\\"attachments\\\": 2,\\n    \\\"description\\\": false,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  },\\n  \\\"checkItemStates\\\": [\\n    \\n  ],\\n  \\\"closed\\\": false,\\n  \\\"dueComplete\\\": false,\\n  \\\"dateLastActivity\\\": \\\"2017-06-26T17:39:49.583Z\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"due\\\": null,\\n  \\\"email\\\": null,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"idChecklists\\\": [\\n    \\n  ],\\n  \\\"idList\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\",\\n  \\\"idMembers\\\": [\\n    \\\"556c8537a1928ba745504dd8\\\"\\n  ],\\n  \\\"idMembersVoted\\\": [\\n    \\n  ],\\n  \\\"idShort\\\": 9,\\n  \\\"idAttachmentCover\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n  \\\"manualCoverAttachment\\\": false,\\n  \\\"labels\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n      \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n      \\\"name\\\": \\\"Visited\\\",\\n      \\\"color\\\": \\\"green\\\"\\n    }\\n  ],\\n  \\\"idLabels\\\": [\\n    \\\"560bf42919ad3a5dc29f33c5\\\"\\n  ],\\n  \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n  \\\"pos\\\": 16384,\\n  \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/c/nqPiDKmw\\\",\\n  \\\"subscribed\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/c/nqPiDKmw/9-grand-canyon-national-park\\\"\\n  \\\"address\\\": \\\"55 Broadway\\\\nSan Francisco CA 94111\\\\nUnited States\\\",\\n  \\\"locationName\\\": \\\"55 Broadway, NY 10280\\\",\\n  \\\"coordinates\\\": {\\n    \\\"latitude\\\": 37.7986712,\\n    \\\"longitude\\\": -122.3991514\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-object","type":"basic","title":"Card Object","__v":2,"updatedAt":"2019-06-10T14:28:52.556Z"},{"_id":"594d19c2612674001b2d2005","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"5b75d499c1398c0003dbf656","updates":["59784b3fc6bb2e0038448cb1","59b721a5f9c9e20010753a06","5a39363d33fb0d00344de8c4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:10.546Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Cards are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to cards as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Cards as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing cards as a nested resource via query params. For instance, the query params are available when you are accessing cards via:  `/object/{id}?cards=visible`.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Don't get confused!\",\n  \"body\": \"Cards can be nested as query params *and* as URL params. \\n\\nIf your route looks like `1/boards/{boardId}/cards` you're going to want to head down to [**Nested Cards as URL Params**](ref:section-nested-cards-as-url-params).\\n\\nIf your route looks like `1/boards/{boardId}?cards` you're in the right spot! The parameters directly below are available to you.\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**cards**\",\n    \"0-1\": \"Default: None\\nOptions: one of:\\n`all`\\n`closed`\\n`none`\\n`open` - Includes cards that are open in lists that have been archived.\\n`visible` - Only returns cards in lists that are not closed.\",\n    \"6-0\": \"**card_stickers**\",\n    \"6-1\": \"Default: `false`\\nOptions: `true` or `false`\",\n    \"5-0\": \"**card_attachment_fields**\",\n    \"5-1\": \"Default: `url,previews`\\nOptions: `all` or a comma-separated list of attachment [fields](ref:attachments)\",\n    \"4-0\": \"**card_attachments**\",\n    \"4-1\": \"Options: `true`, `false`, or `cover`\",\n    \"3-0\": \"**card_member_fields**\",\n    \"3-1\": \"Default: `id,avatarHash,avatarUrl,initials,fullName,username,confirmed,memberType`\\nOptions: `all` or a comma-separated list of member [fields](ref:member-object)\",\n    \"2-0\": \"**card_members**\",\n    \"2-1\": \"Default: `false`\\nOptions: `true` or `false`\",\n    \"1-0\": \"**card_fields**\",\n    \"1-1\": \"Default: `all`\\nOptions: `all` or a comma-separated list of card [fields](ref:card-object)\",\n    \"h-1\": \"Options\",\n    \"h-0\": \"Parameter\",\n    \"h-2\": \"Default\",\n    \"1-2\": \"`all`\",\n    \"2-2\": \"`false`\",\n    \"3-2\": \"\",\n    \"5-2\": \"`url,previews`\",\n    \"6-2\": \"`false`\",\n    \"0-2\": \"None\",\n    \"7-0\": \"**cards_modifiedSince**\",\n    \"7-1\": \"Default: none\\nOptions: ISO Timestamp (eg: `2018-08-07T17:02:24.030Z`\",\n    \"8-0\": \"**card_customFieldItems**\",\n    \"8-1\": \"Default: `false`\\nOptions: `false` or `true` to include [customFieldItems](ref:cardsidcustomfielditems)  in the response\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Cards as URL Params\"\n}\n[/block]\nCards are also available as nested resources via URL parameters. For instance, you may want just the cards belonging to a specific resource like a list or a board; in that case you'd use the route `/1/boards/{id}/cards` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**actions**\",\n    \"1-0\": \"**attachments**\",\n    \"1-1\": \"Default: `false`\\nEither a boolean value or `cover` for only cover attachments\",\n    \"2-0\": \"**attachment_fields**\",\n    \"4-0\": \"**stickers**\",\n    \"5-0\": \"**members**\",\n    \"6-0\": \"**member_fields**\",\n    \"7-0\": \"**checkItemStates**\",\n    \"8-0\": \"**checklists**\",\n    \"9-0\": \"**limit**\",\n    \"11-0\": \"**since**\",\n    \"12-0\": \"**before**\",\n    \"13-0\": \"**filter**\",\n    \"14-0\": \"**fields**\",\n    \"14-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- badges\\n- checkItemStates\\n- closed\\n- dateLastActivity\\n- desc\\n- descData\\n- due\\n- idAttachmentCover\\n- idBoard\\n- idChecklists\\n- idLabels\\n- idList\\n- idMembers\\n- idMembersVoted\\n- idShort\\n- labels\\n- limits\\n- manualCoverAttachment\\n- name\\n- pos\\n- shortLink\\n- shortUrl\\n- subscribed\\n- url\",\n    \"13-1\": \"Default: `visible`\\nOne of: `all`, `closed`, `none`, `open`, `visible`\",\n    \"12-1\": \"A date, or `null`\",\n    \"11-1\": \"A date, or `null`\",\n    \"9-1\": \"A number from `1` to `1000`\",\n    \"8-1\": \"Default: `none`\\nOne of: `all`, `none`\",\n    \"7-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"5-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"6-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"4-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"2-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- bytes\\n- date\\n- edgeColor\\n- idMember\\n- isUpload\\n- mimeType\\n- name\\n- previews\\n- url\",\n    \"0-1\": \"`all` or a comma-separated list of:\\n\\n- addAttachmentToCard\\n- addChecklistToCard\\n- addMemberToBoard\\n- addMemberToCard\\n- addMemberToOrganization\\n- addToOrganizationBoard\\n- commentCard\\n- convertToCardFromCheckItem\\n- copyBoard\\n- copyCard\\n- copyCommentCard\\n- createBoard\\n- createCard\\n- createList\\n- createOrganization\\n- deleteAttachmentFromCard\\n- deleteBoardInvitation\\n- deleteCard\\n- deleteOrganizationInvitation\\n- disablePowerUp\\n- emailCard\\n- enablePowerUp\\n- makeAdminOfBoard\\n- makeNormalMemberOfBoard\\n- makeNormalMemberOfOrganization\\n- makeObserverOfBoard\\n- memberJoinedTrello\\n- moveCardFromBoard\\n- moveCardToBoard\\n- moveListFromBoard\\n- moveListToBoard\\n- removeChecklistFromCard\\n- removeFromOrganizationBoard\\n- removeMemberFromCard\\n- unconfirmedBoardInvitation\\n- unconfirmedOrganizationInvitation\\n- updateBoard\\n- updateCard\\n- updateCard:closed\\n- updateCard:desc\\n- updateCard:idList\\n- updateCard:name\\n- updateCheckItemStateOnCard\\n- updateChecklist\\n- updateList\\n- updateList:closed\\n- updateList:name\\n- updateMember\\n- updateOrganization\",\n    \"15-0\": \"**pluginData**\",\n    \"15-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"10-0\": \"**sort**\",\n    \"10-1\": \"Default: `none`\\nOne of: `-id`\",\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"3-0\": \"**customFieldItems**\",\n    \"3-1\": \"Default: `false`\\nOne of: `true`, `false`\\n\\nCheck out [Getting Started With Custom Fields](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-getting-customfielditems-for-cards) for more on Custom Fields.\"\n  },\n  \"cols\": 2,\n  \"rows\": 16\n}\n[/block]\nHere's an example using the cards nested resource to get the visible cards in a list:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/lists/560bf44ea68b16bd0fc2a9a9/cards?fields=id,name,badges,labels\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n    \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 2,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n    \\\"name\\\": \\\"Petrified Forest National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      \\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n    \\\"name\\\": \\\"Saguaro National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\"\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"cards-nested-resource","type":"basic","title":"Cards Nested Resource","__v":3,"updatedAt":"2019-06-10T14:28:52.557Z"},{"_id":"59516d04fafb63003375d567","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:22:28.422Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Cards can have up to 100 attachments. Attachments can be either just URLs, images with previews, or arbitrary files.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**bytes**\\ninteger\",\n    \"2-0\": \"**date**\\ndate\",\n    \"3-0\": \"**edgeColor**\\nstring\",\n    \"4-0\": \"**idMember**\\nstring\",\n    \"5-0\": \"**isUpload**\\nboolean\",\n    \"6-0\": \"**mimeType**\\nstring\",\n    \"7-0\": \"**name**\\nstring\",\n    \"8-0\": \"**pos**\\nfloat\",\n    \"9-0\": \"**previews**\\narray of preview objects\",\n    \"10-0\": \"**url**\\nstring\",\n    \"0-1\": \"The ID of the attachment\",\n    \"1-1\": \"The size of the attachment in bytes\",\n    \"2-1\": \"The date the attachment was added\",\n    \"3-1\": \"For image attachments, the extracted edge color\",\n    \"4-1\": \"The ID of the member who attached the attachment\",\n    \"5-1\": \"Whether the attachment was uploaded\",\n    \"6-1\": \"The mimeType for the attachment. Default is null. mimeTypes are only stored/returned if it is sent when initially creating the attachment. The Trello web client does not set the mimeType when uploading attachments.\",\n    \"7-1\": \"The name of the attachment\",\n    \"8-1\": \"The position of the attachment in the attachments list\",\n    \"9-1\": \"If the image is an uploaded image, Trello will generate some various sized previews\",\n    \"10-1\": \"The URL to the attachment\"\n  },\n  \"cols\": 2,\n  \"rows\": 11\n}\n[/block]\n`GET` `/1/cards/nqPiDKmw/attachments/5944a06460ed0bee471ad8e0`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n  \\\"bytes\\\": 1351054,\\n  \\\"date\\\": \\\"2017-06-17T03:22:12.489Z\\\",\\n  \\\"edgeColor\\\": \\\"#603e3d\\\",\\n  \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n  \\\"isUpload\\\": true,\\n  \\\"mimeType\\\": null,\\n  \\\"name\\\": \\\"image.png\\\",\\n  \\\"previews\\\": [\\n    {\\n      \\\"bytes\\\": 7093,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/70x50/9a91dc761550dbbb658acaab6e82788f/image.png\\\",\\n      \\\"height\\\": 50,\\n      \\\"width\\\": 70,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a036\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"bytes\\\": 78708,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/250x150/a871bc785b48830941b619299f29a29c/image.png\\\",\\n      \\\"height\\\": 150,\\n      \\\"width\\\": 250,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a035\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"bytes\\\": 29621,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/150x85/1f6bfdb36d636cf33885459e5152842a/image.png\\\",\\n      \\\"height\\\": 85,\\n      \\\"width\\\": 150,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a034\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 111108,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/300x170/7bf7c8551d3ed495e2872a342df529c8/image.png\\\",\\n      \\\"height\\\": 170,\\n      \\\"width\\\": 300,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a033\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 418182,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/600x340/4fa1415ee1f63d7e0323a99cf9c4b070/image.png\\\",\\n      \\\"height\\\": 340,\\n      \\\"width\\\": 600,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a032\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 1351054,\\n      \\\"height\\\": 600,\\n      \\\"width\\\": 1060,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a031\\\",\\n      \\\"scaled\\\": true\\n    }\\n  ],\\n  \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n  \\\"pos\\\": 32768\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"attachments","type":"basic","title":"Attachments","__v":0,"updatedAt":"2019-06-10T14:28:52.557Z"},{"_id":"595170b3bb93f700353caa99","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:38:11.534Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Cards can have stickers applied to them. In addition to the default stickers, Business Class and Gold members can create custom stickers. Custom stickers are documented in the [members section](https://developers.trello.com/reference#membersidcustomstickers).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/46f3b1a-stickers.PNG\",\n        \"stickers.PNG\",\n        425,\n        339,\n        \"#3e96b9\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**image**\\nstring\",\n    \"2-0\": \"**imageScaled**\\narray of scaled image objects\",\n    \"3-0\": \"**imageUrl**\\nstring\",\n    \"3-1\": \"Direct URL to the image\",\n    \"4-0\": \"**left**\\nfloat\",\n    \"5-0\": \"**top**\\nfloat\",\n    \"6-0\": \"**rotate**\\nfloat\",\n    \"7-0\": \"**zIndex**\\ninteger\",\n    \"0-1\": \"The ID of the sticker\",\n    \"2-1\": \"An array of scaled versions of the sticker image\\n\\n```json\\n {\\n  \\\"width\\\": 140,\\n  \\\"height\\\": 140,\\n  \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n  \\\"scaled\\\": false,\\n  \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n}\\n```\",\n    \"4-1\": \"How far to the left of the card the sticker is placed\",\n    \"5-1\": \"How far from the top of the card the sticker is placed\",\n    \"7-1\": \"The ordering for display which tells you which sticker would show on top of another\",\n    \"6-1\": \"How much the sticker has been rotated\",\n    \"1-1\": \"The name of the sticker if it is a default sticker or a generated id if it is a custom sticker. See section below for the names of the default stickers.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\n`GET` `/1/cards/nqX2Cl8w/stickers/5807bedf4e4d6ba6ca02039f`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5807bedf4e4d6ba6ca02039f\\\",\\n  \\\"top\\\": 0,\\n  \\\"left\\\": 47.31,\\n  \\\"zIndex\\\": 1,\\n  \\\"rotate\\\": -7,\\n  \\\"image\\\": \\\"taco-alert\\\",\\n  \\\"imageUrl\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n  \\\"imageScaled\\\": [\\n    {\\n      \\\"width\\\": 140,\\n      \\\"height\\\": 140,\\n      \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n      \\\"scaled\\\": false,\\n      \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n    },\\n    {\\n      \\\"width\\\": 280,\\n      \\\"height\\\": 280,\\n      \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert@2x.png\\\",\\n      \\\"scaled\\\": false,\\n      \\\"_id\\\": \\\"5951704b646dd188a3aabbf1\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Default stickers\"\n}\n[/block]\nThe following stickers are built into Trello. When adding a sticker to a card, they can be added by setting the image parameter to the corresponding value. Note that Taco and Pete stickers, as well as custom stickers are only available for Business Class and Gold members.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"* check\\n* heart\\n* warning\\n* clock\\n* smile\\n* laugh\\n* huh\\n* frown\\n* thumbsup\\n* thumbsdown\\n* star\\n* rocketship\\n* taco-love\\n* taco-confused\\n* taco-cool\\n* taco-angry\\n* taco-celebrate\\n* taco-robot\\n* taco-alert\\n* taco-active\\n* taco-money\\n* taco-reading\",\n    \"0-1\": \"* taco-trophy\\n * taco-sleeping\\n * taco-pixel\\n * taco-proto\\n * taco-embarrassed\\n * taco-clean\\n * pete-happy\\n * pete-love\\n * pete-broken\\n * pete-alert\\n * pete-talk\\n * pete-vacation\\n * pete-confused\\n * pete-shipped\\n * pete-busy\\n * pete-completed\\n * pete-space\\n * pete-sketch\\n * pete-ghost\\n * pete-award\\n * pete-music\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"stickers","type":"basic","title":"Stickers","__v":0,"updatedAt":"2019-06-10T14:28:52.558Z"},{"_id":"59514b96a67f7b00556c851b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":["596e57f86b8da1001bf713ce"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T17:59:50.094Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ba5e3079400735c90ac","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59514c82634cc1003f74c0b1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of [fields](ref:card-object). **Defaults**: `badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl, url`","default":"","type":"string","name":"fields"},{"_id":"595280802080bf002bebff14","ref":"","in":"query","required":false,"desc":"See the [Actions Nested Resource](ref:actions-nested-resource)","default":"","type":"string","name":"actions"},{"_id":"5952809528e9ae004b965a73","ref":"","in":"query","required":false,"desc":"`true`, `false`, or `cover`","default":"false","type":"string","name":"attachments"},{"_id":"595280b8f8a1ac001b0f6a06","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"attachment_fields"},{"_id":"595280d69262c20041644c0b","ref":"","in":"query","required":false,"desc":"Whether to return member objects for members on the card","default":"false","type":"boolean","name":"members"},{"_id":"595280e2fc28ee004d046868","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object). **Defaults**: `avatarHash, fullName, initials, username`","default":"","type":"string","name":"member_fields"},{"_id":"59528111e9de4f0061237063","ref":"","in":"query","required":false,"desc":"Whether to return member objects for members who voted on the card","default":"false","type":"boolean","name":"membersVoted"},{"_id":"5952812ba0e05a0041b07357","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object). **Defaults**: `avatarHash, fullName, initials, username`","default":"","type":"string","name":"memberVoted_fields"},{"_id":"5952813a9262c20041644c0c","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"checkItemStates"},{"_id":"5952815f4731e4005d825561","ref":"","in":"query","required":false,"desc":"Whether to return the checklists on the card. `all` or `none`","default":"none","type":"string","name":"checklists"},{"_id":"59528173a6c9140033c80754","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `idBoard,idCard,name,pos`","default":"all","type":"string","name":"checklist_fields"},{"_id":"59528195fc28ee004d046869","ref":"","in":"query","required":false,"desc":"Whether to return the board object the card is on","default":"false","type":"boolean","name":"board"},{"_id":"596adbbad43aa90015ac0af1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object). **Defaults**: `name, desc, descData, closed, idOrganization, pinned, url, prefs`","default":"","type":"string","name":"board_fields"},{"_id":"595281bc4731e4005d825563","ref":"","in":"query","required":false,"desc":"See the [Lists Nested Resource](ref:lists-nested-resource)","default":"false","type":"boolean","name":"list"},{"_id":"595281d24731e4005d825564","ref":"","in":"query","required":false,"desc":"Whether to include pluginData on the card with the response","default":"false","type":"boolean","name":"pluginData"},{"_id":"595281e2a6c9140033c80755","ref":"","in":"query","required":false,"desc":"Whether to include sticker models with the response","default":"false","type":"boolean","name":"stickers"},{"_id":"5952820276da4b00292947f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"sticker_fields"},{"_id":"5bca5cdc685fb5001ead628e","ref":"","in":"query","required":false,"desc":"Whether to include the customFieldItems","default":"false","type":"boolean","name":"customFieldItems"}],"url":"/cards/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/cards/SDmaAwz9\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"58e800aa9ebaaa01c586f630\\\",\\n  \\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": false,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 0,\\n    \\\"attachments\\\": 1,\\n    \\\"description\\\": true,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  },\\n  \\\"checkItemStates\\\": [\\n    \\n  ],\\n  \\\"closed\\\": false,\\n  \\\"dateLastActivity\\\": \\\"2017-04-07T21:26:00.365Z\\\",\\n  \\\"desc\\\": \\\"Allows you to stay on top of the progress of any project by sending updates to Slack channels when activity occurs on Trello cards, lists, and boards. Customizable.\\\\n\\\\nRead more: http://blog.trello.com/slack-power-up-trello-alerts\\\",\\n  \\\"descData\\\": {\\n    \\\"emoji\\\": {\\n      \\n    }\\n  },\\n  \\\"due\\\": null,\\n  \\\"dueComplete\\\": false,\\n  \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n  \\\"idChecklists\\\": [\\n    \\n  ],\\n  \\\"idLabels\\\": [\\n    \\n  ],\\n  \\\"idList\\\": \\\"58e7fee3e06e4001f1cc3658\\\",\\n  \\\"idMembers\\\": [\\n    \\n  ],\\n  \\\"idShort\\\": 1579,\\n  \\\"idAttachmentCover\\\": \\\"58e801c30f51ca01a6dd6745\\\",\\n  \\\"manualCoverAttachment\\\": false,\\n  \\\"labels\\\": [\\n    \\n  ],\\n  \\\"name\\\": \\\"Trello Alerts for Slack\\\",\\n  \\\"pos\\\": 131071,\\n  \\\"shortUrl\\\": \\\"https://trello.com/c/SDmaAwz9\\\",\\n  \\\"url\\\": \\\"https://trello.com/c/SDmaAwz9/1579-trello-alerts-for-slack\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a card by its ID","slug":"cardsid","type":"endpoint","title":"/cards/{id}","__v":26,"updatedAt":"2019-06-10T14:28:52.558Z","swagger":{"path":"/cards/{id}"}},{"_id":"59514df1cc55510029d567ca","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5a687bdefe2e78001c26de4a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:09:53.469Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514e02e3079400735c90cf","ref":"","in":"path","required":false,"desc":"The id of the card","default":"","type":"string","name":"id"},{"_id":"59514e18cc55510029d567cb","ref":"","in":"path","required":false,"desc":"The desired field. One of [fields](ref:card-object)","default":"","type":"string","name":"field"}],"url":"/cards/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"`GET` `/1/cards/nqPiDKmw/name`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"_value\\\": \\\"Grand Canyon National Park\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a specific property of a card","slug":"cardsidfield","type":"endpoint","title":"/cards/{id}/{field}","__v":3,"updatedAt":"2019-06-10T14:28:52.559Z","swagger":{"path":"/cards/{id}/{field}"}},{"_id":"59514e53e3079400735c90d0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["598884ec467353000f686145","5996e4d5b6c6e900250f80ff","5b1574c1090faf0003917672"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:11:31.993Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f2b8eb072003d98aa81","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/actions","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"For all available query params, please see the [Actions Nested Resource](#actions-nested-resource)\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Default Actions Filter\",\n  \"body\": \"Keep in mind the default filter for actions is `commentCard, updateCard:idList`. If you want to see all of the actions for a single card, you'll need to add `filter=all` to the query.\"\n}\n[/block]\nFor Example:\n\n`GET` `/1/cards/NIRpzVDM/actions?limit=5`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"561f43cf9ee2b14c75583e6e\\\",\\n    \\\"idMemberCreator\\\": \\\"561f394aeb6a4b033754060e\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"Looking Forward to new support`\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-10-15T06:12:31.822Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"561f394aeb6a4b033754060e\\\",\\n      \\\"avatarHash\\\": \\\"f3d899950817ffcf32ca671cb793809d\\\",\\n      \\\"fullName\\\": \\\"Eric Chen\\\",\\n      \\\"initials\\\": \\\"EC\\\",\\n      \\\"username\\\": \\\"ericchen76\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"5605799c5a1b485d054e1135\\\",\\n    \\\"idMemberCreator\\\": \\\"4e70297a9618260000001a81\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"This has probably come up before, but can we please have due dates for checklist items? \\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-25T16:43:08.158Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4e70297a9618260000001a81\\\",\\n      \\\"avatarHash\\\": \\\"aaf480486554c8f329469e736f79420c\\\",\\n      \\\"fullName\\\": \\\"Ashish Bogawat\\\",\\n      \\\"initials\\\": \\\"AB\\\",\\n      \\\"username\\\": \\\"ashishbogawat\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560019007f0637ba5deda56a\\\",\\n    \\\"idMemberCreator\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"@constancedelgiudice I've been trying to keep this post up to date: http://trellostatus.tumblr.com/post/129567787933/investigating-delays-with-email-to-board\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T14:49:36.534Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n      \\\"avatarHash\\\": \\\"94527f5abac7de03a5ab541c14b49d11\\\",\\n      \\\"fullName\\\": \\\"Ben McCormack\\\",\\n      \\\"initials\\\": \\\"BRM\\\",\\n      \\\"username\\\": \\\"ben\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560015b435c347e254747ac0\\\",\\n    \\\"idMemberCreator\\\": \\\"55feef4242595b8ec2f5f197\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"Thank you so much for the quick response‚Ä¶. I guess I‚Äôll keep a look out for any news! \\\\n\\\\nConstance\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T13:52:34.000Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"55feef4242595b8ec2f5f197\\\",\\n      \\\"avatarHash\\\": \\\"d7d8a3e2bf16941ea0b460d347017ae1\\\",\\n      \\\"fullName\\\": \\\"Constance DelGiudice\\\",\\n      \\\"initials\\\": \\\"CD\\\",\\n      \\\"username\\\": \\\"constancedelgiudice\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560007f1da47d319e30a2034\\\",\\n    \\\"idMemberCreator\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"@constancedelgiudice we're noticing the delays as well. We're reaching out to our email service provider to figure out what's happening.\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T13:36:49.216Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n      \\\"avatarHash\\\": \\\"94527f5abac7de03a5ab541c14b49d11\\\",\\n      \\\"fullName\\\": \\\"Ben McCormack\\\",\\n      \\\"initials\\\": \\\"BRM\\\",\\n      \\\"username\\\": \\\"ben\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a card","slug":"cardsidactions","type":"endpoint","title":"/cards/{id}/actions","__v":5,"updatedAt":"2019-06-10T14:28:52.561Z","swagger":{"path":"/cards/{id}/actions"}},{"_id":"59514e650bc2d00015ec0b8b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:11:49.396Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514e737ba53e002beb8599","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516c1750feec002b5b9617","ref":"","in":"path","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"fields"},{"_id":"59516c9350feec002b5b9619","ref":"","in":"path","required":false,"desc":"Use `cover` to restrict to just the cover attachment","default":"false","type":"string","name":"filter"}],"url":"/cards/{id}/attachments","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/cards/SDmaAwz9/attachments\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"58e801c30f51ca01a6dd6745\\\",\\n    \\\"bytes\\\": 62103,\\n    \\\"date\\\": \\\"2017-04-07T21:16:51.346Z\\\",\\n    \\\"edgeColor\\\": \\\"#f0e9f1\\\",\\n    \\\"idMember\\\": \\\"57f2789b32d54fa10d99beb6\\\",\\n    \\\"isUpload\\\": true,\\n    \\\"mimeType\\\": null,\\n    \\\"name\\\": \\\"Screen Shot 2017-04-07 at 5.14.55 PM.png\\\",\\n    \\\"previews\\\": [\\n      {\\n        \\\"bytes\\\": 1811,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/70x50/e5ef494a0044dd7cd6b73c19955c8cfa/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 50,\\n        \\\"width\\\": 70,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e42\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"bytes\\\": 5285,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/250x150/6d59fba20fe4a2c431129b3c300b95a5/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 150,\\n        \\\"width\\\": 250,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e41\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"bytes\\\": 3431,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/150x77/ed52a061abdb26c84059f91e084f74a8/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 77,\\n        \\\"width\\\": 150,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e40\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 6229,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/300x154/c467423c26881a5210aca243bf0254af/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 154,\\n        \\\"width\\\": 300,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3f\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 13359,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/600x309/17f5babd64192bea9c29e96832bdc07f/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 309,\\n        \\\"width\\\": 600,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3e\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 35340,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/1200x617/6ff057c7801890c126228ce1fd70337c/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 617,\\n        \\\"width\\\": 1200,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3d\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 62103,\\n        \\\"height\\\": 663,\\n        \\\"width\\\": 1289,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4d5ea62fd76aa1136000000c/58e800aa9ebaaa01c586f630/1619f1fcd3065c9a2bccd318e9b7a154/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3c\\\",\\n        \\\"scaled\\\": true\\n      }\\n    ],\\n    \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4d5ea62fd76aa1136000000c/58e800aa9ebaaa01c586f630/1619f1fcd3065c9a2bccd318e9b7a154/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n    \\\"pos\\\": 16384\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the attachments on a card","slug":"cardsidattachments","type":"endpoint","title":"/cards/{id}/attachments","__v":3,"updatedAt":"2019-06-10T14:28:52.561Z","swagger":{"path":"/cards/{id}/attachments"}},{"_id":"59514e8f634cc1003f74c0b6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:12:31.225Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ea00085690081e9a62c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59514ea898e9e2004705bcbb","ref":"","in":"path","required":false,"desc":"The ID of the attachment","default":"","type":"string","name":"idAttachment"},{"_id":"59516ce7d331a7001596b19a","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/attachments/{idAttachment}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get a specific attachment on a card","slug":"cardsidattachmentsidattachment","type":"endpoint","title":"/cards/{id}/attachments/{idAttachment}","__v":3,"updatedAt":"2019-06-10T14:28:52.562Z","swagger":{"path":"/cards/{id}/attachments/{idAttachment}"}},{"_id":"59514eb97bfda600473af195","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:13:13.348Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f3b6e2e440047ce265a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"596ae9011ce50e0015b64827","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/board","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"`GET` `/1/cards/560bf4dd7139286471dc009c/board`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"US National Parks\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"577eb8850b41e08c3034aae2\\\",\\n  \\\"invited\\\": false,\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/b/tBmYPSYe/us-national-parks\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"560bfbb5176d070c67adc2b9\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/140x100/cf6ffdfac5ecf934ec324bf028b82686/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/256x192/2189d1f2d6c159c7de210412cc0e971f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/480x480/62bde347e629774a83378caf61f0fdb7/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/960x960/3102fa79837dfd37834cfaee02d1921c/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1024x1024/53a50ede7425af0b02a7b9bde783fe94/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1280x1280/491f54004976a4a81706caae613acf7f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1080,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09d\\\",\\n      \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"58ebc5d5abcedaf34a60800e\\\",\\n      \\\"idMember\\\": \\\"56fd3de8ba3cbeb22737fd55\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    }\\n  ],\\n  \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"Visited\\\",\\n    \\\"yellow\\\": \\\"\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [\\n    \\n  ],\\n  \\\"dateLastActivity\\\": \\\"2017-06-26T17:39:49.583Z\\\",\\n  \\\"dateLastView\\\": \\\"2017-06-26T17:43:56.319Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/tBmYPSYe\\\",\\n  \\\"idTags\\\": [\\n    \\n  ],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the board a card is on","slug":"cardsidboard","type":"endpoint","title":"/cards/{id}/board","__v":2,"updatedAt":"2019-06-10T14:28:52.562Z","swagger":{"path":"/cards/{id}/board"}},{"_id":"59514ed40085690081e9a62d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:13:40.162Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595173e0d331a7001596b1a7","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595173f78297ad0033c03d40","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `idCheckItem`, `state`","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/checkItemStates","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"`GET` `/1/cards/ndXbmEbO/checkItemStates`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"idCheckItem\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n    \\\"state\\\": \\\"complete\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the completed checklist items on a card","slug":"cardsidcheckitemstates","type":"endpoint","title":"/cards/{id}/checkItemStates","__v":2,"updatedAt":"2019-06-10T14:28:52.563Z","swagger":{"path":"/cards/{id}/checkItemStates"}},{"_id":"59514eebe706bd005ffb9fd7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:14:03.814Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ef9e706bd005ffb9fd8","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5952783eb1a12000672aed6c","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"all","type":"string","name":"checkItems"},{"_id":"595278614731e4005d825513","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `name,nameData,pos,state,type`","default":"name,nameData,pos,state","type":"string","name":"checkItem_fields"},{"_id":"5952786dd93ebe003ff33950","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"all","type":"string","name":"filter"},{"_id":"59527883f8a1ac001b0f69f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `idBoard,idCard,name,pos`","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/checklists","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"`GET` `/1/cards/ndXbmEbO/checklists`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5914b2923876e144b5cb6974\\\",\\n    \\\"name\\\": \\\"Awesomeness to come\\\",\\n    \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n    \\\"idCard\\\": \\\"5914b27920508fcb6bfd525f\\\",\\n    \\\"pos\\\": 16384,\\n    \\\"checkItems\\\": [\\n      {\\n        \\\"state\\\": \\\"complete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n        \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 16867\\n      },\\n      {\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b2a1ee4421b88542b59a\\\",\\n        \\\"name\\\": \\\"Custom Fields on mobile\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 34254\\n      },\\n      {\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b2b2e01e5b17afedf6fc\\\",\\n        \\\"name\\\": \\\"Working well across multiple boards\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 51540\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the checklists on a card","slug":"cardsidchecklists","type":"endpoint","title":"/cards/{id}/checklists","__v":5,"updatedAt":"2019-06-10T14:28:52.563Z","swagger":{"path":"/cards/{id}/checklists"}},{"_id":"59514f2b7bfda600473af196","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:07.502Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527895a0e05a0041b072ed","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595278b61579820035a6b073","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `name,nameData,pos,state,type`","default":"name,nameData,pos,state","type":"string","name":"fields"},{"_id":"5af9b2d68e3cc8000313327d","ref":"","in":"path","required":false,"desc":"The ID of the checkitem","default":"","type":"string","name":"idCheckItem"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"`GET` `/1/cards/ndXbmEbO/checkItem/5914b29abcbe09ab9478d156?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"state\\\": \\\"complete\\\",\\n  \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n  \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n  \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n  \\\"nameData\\\": null,\\n  \\\"type\\\": null,\\n  \\\"pos\\\": 16867\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a specific checkItem on a card","slug":"cardsidcheckitemidcheckitem","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":4,"updatedAt":"2019-06-10T14:28:52.564Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5ace617b851e340003da6766","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-04-11T19:26:51.437Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f3b6e2e440047ce265a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/customFieldItems","method":"get"},"isReference":true,"order":13,"body":"`GET https://api.trello.com/1/cards/5acbbe5d615f7dd1935b92f5/customFieldItems`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5acbd57f7160061ed10daa2c\\\",\\n    \\\"value\\\": {\\n      \\\"text\\\": \\\"High Priority\\\"\\n    },\\n    \\\"idCustomField\\\": \\\"5ab0f9f30c8780347a255463\\\",\\n    \\\"idModel\\\": \\\"5acbbe5d615f7dd1935b92f5\\\",\\n    \\\"modelType\\\": \\\"card\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the custom field items for a card.","slug":"cardsidcustomfielditems","type":"endpoint","title":"/cards/{id}/customFieldItems","__v":2,"updatedAt":"2019-06-10T14:28:52.564Z","swagger":{"path":"/cards/{id}/customFieldItems"}},{"_id":"59514f38cc55510029d567cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:20.391Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595172fb2f25a4001b90768e","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fe9b0406d00155a8e90","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/list","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"For all available query params, please see the [Lists Nested Resource](ref:lists-nested-resource)\n\nFor example\n\n`GET` `/1/cards/560bf4dd7139286471dc009c/list`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\",\\n  \\\"name\\\": \\\"Arizona\\\",\\n  \\\"closed\\\": false,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"pos\\\": 131071,\\n  \\\"subscribed\\\": false\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the list a card is in","slug":"cardsidlist","type":"endpoint","title":"/cards/{id}/list","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/list"}},{"_id":"59514f4b0bc2d00015ec0b8c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:39.331Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595279142080bf002bebfed2","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fb570084b001beca6db","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"fields"}],"url":"/cards/{id}/members","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Get the members on a card","slug":"cardsidmembers","type":"endpoint","title":"/cards/{id}/members","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/members"}},{"_id":"59514f5f98e9e2004705bcbc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:59.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952792d109f490029f6a2a2","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fce07ba77001b75bdd0","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"fields"}],"url":"/cards/{id}/membersVoted","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"Get the members who have voted on a card","slug":"cardsidmembersvoted","type":"endpoint","title":"/cards/{id}/membersVoted","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/membersVoted"}},{"_id":"59514f790085690081e9a62f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:25.197Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595279394731e4005d825514","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/pluginData","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"Get any shared pluginData on a card","slug":"cardsidplugindata","type":"endpoint","title":"/cards/{id}/pluginData","__v":1,"updatedAt":"2019-06-10T14:28:52.566Z","swagger":{"path":"/cards/{id}/pluginData"}},{"_id":"59514f8898e9e2004705bcbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:40.615Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59517085c471ab001b308910","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595170ae6e2e440047ce265b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/stickers","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"For Example:\n\n`GET` `/1/cards/nqX2Cl8w/stickers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5807bedf4e4d6ba6ca02039f\\\",\\n    \\\"top\\\": 0,\\n    \\\"left\\\": 47.31,\\n    \\\"zIndex\\\": 1,\\n    \\\"rotate\\\": -7,\\n    \\\"image\\\": \\\"taco-alert\\\",\\n    \\\"imageUrl\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n    \\\"imageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 140,\\n        \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n        \\\"scaled\\\": false,\\n        \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n      },\\n      {\\n        \\\"width\\\": 280,\\n        \\\"height\\\": 280,\\n        \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert@2x.png\\\",\\n        \\\"scaled\\\": false,\\n        \\\"_id\\\": \\\"5951704b646dd188a3aabbf1\\\"\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the stickers on a card","slug":"cardsidstickers","type":"endpoint","title":"/cards/{id}/stickers","__v":2,"updatedAt":"2019-06-10T14:28:52.566Z","swagger":{"path":"/cards/{id}/stickers"}},{"_id":"59514f96d5b36f004be3061d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:54.793Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595171d62f25a4001b90768b","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595171dcb88bfb001b5d5b8a","ref":"","in":"path","required":false,"desc":"The ID of the sticker","default":"","type":"string","name":"idSticker"},{"_id":"595171f06aff60001ba596d8","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/stickers/{idSticker}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Get a specific sticker on a card","slug":"cardsidstickersidsticker","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":3,"updatedAt":"2019-06-10T14:28:52.567Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"59514fae7bfda600473af197","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5b23672a80aeea000317e355","5c484acd2206ce0ea57be6e5","5cabb95e42f5b1000f3309e2"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:17:18.440Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514fbc0085690081e9a631","ref":"","in":"path","required":false,"desc":"The ID of the card to update","default":"","type":"string","name":"id"},{"_id":"59517532d331a7001596b1a9","ref":"","in":"query","required":false,"desc":"The new name for the card","default":"","type":"string","name":"name"},{"_id":"5951753a4e07bf001b77b9fc","ref":"","in":"query","required":false,"desc":"The new description for the card","default":"","type":"string","name":"desc"},{"_id":"595175922f25a4001b907690","ref":"","in":"query","required":false,"desc":"Whether the card should be archived (closed: true)","default":"","type":"boolean","name":"closed"},{"_id":"59527960f8a1ac001b0f69f8","ref":"","in":"query","required":false,"desc":"Comma-separated list of member IDs","default":"","type":"string","name":"idMembers"},{"_id":"59527979c86ac3003f370fdb","ref":"","in":"query","required":false,"desc":"The ID of the image attachment the card should use as its cover, or null for none","default":"","type":"string","name":"idAttachmentCover"},{"_id":"595279851579820035a6b074","ref":"","in":"query","required":false,"desc":"The ID of the list the card should be in","default":"","type":"string","name":"idList"},{"_id":"595279931579820035a6b075","ref":"","in":"query","required":false,"desc":"Comma-separated list of label IDs","default":"","type":"string","name":"idLabels"},{"_id":"5952799e28e9ae004b965a49","ref":"","in":"query","required":false,"desc":"The ID of the board the card should be on","default":"","type":"string","name":"idBoard"},{"_id":"595279b4f544fe0015385cd6","ref":"","in":"query","required":false,"desc":"The position of the card in its list. `top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"595279cb08a112006b18c9eb","ref":"","in":"query","required":false,"desc":"When the card is due, or `null`","default":"","type":"datetime","name":"due"},{"_id":"595279dce9de4f0061237037","ref":"","in":"query","required":false,"desc":"Whether the due date should be marked complete","default":"","type":"boolean","name":"dueComplete"},{"_id":"595279efa6c9140033c80749","ref":"","in":"query","required":false,"desc":"Whether the member is should be subscribed to the card","default":"","type":"boolean","name":"subscribed"}],"url":"/cards/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"This endpoint can be used to update one or more properties of the card at once. Alternatively, you can also update a single property of the card as the params for this method via:\n\n`PUT` `/1/cards/{id}/{property}?value={newValue}`\n\nSo for example, to archive a card:\n\n`PUT` `/1/cards/{id}/closed?value=true`\n\nOr to move the card to a different list:\n\n`PUT` `/1/cards/{id}/idList?value={new list ID}`\n\nIf you want to move a card across different boards, you should use the ID of the new board as well as ID of the target list:\n\n`PUT` `/1/cards/{id}/idBoard?value={new board ID}&idList={new list ID}`\n\nOn success, the endpoint returns a [JSON object](#page-cardsid) representing the updated card.","excerpt":"Update a card","slug":"cardsid-1","type":"endpoint","title":"/cards/{id}","__v":17,"updatedAt":"2019-06-10T14:28:52.567Z","swagger":{"path":"/cards/{id}"}},{"_id":"595150500085690081e9a632","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5b3381bb06aa32000399eeb8"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:20:00.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595150776aff60001ba5956a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515082e706bd005ffb9fda","ref":"","in":"path","required":false,"desc":"The ID of the comment action to update","default":"","type":"string","name":"idAction"},{"_id":"595150950bc2d00015ec0b8d","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"text"}],"url":"/cards/{id}/actions/{idAction}/comments","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Only the original author of a comment can update it.\",\n  \"title\": \"Note\"\n}\n[/block]","excerpt":"Update an existing comment","slug":"cardsidactionsidactioncomments","type":"endpoint","title":"/cards/{id}/actions/{idAction}/comments","__v":4,"updatedAt":"2019-06-10T14:28:52.568Z","swagger":{"path":"/cards/{id}/actions/{idAction}/comments"}},{"_id":"59515e6653920e0015947184","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:20:06.003Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59515e800bc2d00015ec0cc5","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515e8d4e07bf001b77b954","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to update","default":"","type":"string","name":"idCheckItem"},{"_id":"59515eadc2cc4200156eaa09","ref":"","in":"query","required":false,"desc":"The new name for the checklist item","default":"","type":"string","name":"name"},{"_id":"59515ed4470b3a0015ba15a6","ref":"","in":"query","required":false,"desc":"One of: `complete`, `incomplete`","default":"","type":"string","name":"state"},{"_id":"59515ee3d331a7001596b109","ref":"","in":"query","required":false,"desc":"The ID of the checklist this item is in","default":"","type":"string","name":"idChecklist"},{"_id":"59515ef4702f02001bf3d8cd","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You can only move a checkItem to a checklist on the same card. You can't move a checkItem from a checklist on one card to a checklist on a different card.\"\n}\n[/block]","excerpt":"Update an item in a checklist on a card.","slug":"cardsidcheckitemidcheckitem-1","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":8,"updatedAt":"2019-06-10T14:28:52.568Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5b0d4d8c20631300034cc067","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-05-29T12:54:36.425Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"59515e800bc2d00015ec0cc5","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"idCard"},{"_id":"59515e8d4e07bf001b77b954","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to update","default":"","type":"string","name":"idCheckItem"},{"_id":"59515ef4702f02001bf3d8cd","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"5b0d4d3e20631300034cc064","ref":"","in":"path","required":false,"desc":"The ID of the item to update.","default":"","type":"string","name":"idChecklist"}],"url":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}","method":"put"},"isReference":true,"order":23,"body":"","excerpt":"Update an item in a checklist on a card.","slug":"cardsidcardchecklistidchecklistcheckitemidcheckitem","type":"endpoint","title":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}","__v":0,"updatedAt":"2019-06-10T14:28:52.569Z","swagger":{"path":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}"}},{"_id":"59527b60d93ebe003ff33958","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:36:00.890Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527b6ba6c9140033c8074a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59527b72d93ebe003ff33959","ref":"","in":"path","required":false,"desc":"The ID of the sticker to update","default":"","type":"string","name":"idSticker"},{"_id":"59527b7df168f9001bba9a84","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"top"},{"_id":"59527b832080bf002bebfed9","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"left"},{"_id":"59527b8d1579820035a6b096","ref":"","in":"query","required":false,"desc":"","default":"","type":"int","name":"zIndex"},{"_id":"59527b95d93ebe003ff3395a","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"rotate"}],"url":"/cards/{id}/stickers/{idSticker}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Update a sticker on a card","slug":"cardsidstickersidsticker-2","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":6,"updatedAt":"2019-06-10T14:28:52.570Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"59515f47e706bd005ffba0e9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59dcd41baf484300303c2798","5c926d5ce0d7e600436ea9b4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:23:51.693Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527bcb9262c20041644bc2","ref":"","in":"query","required":false,"desc":"The name for the card","default":"","type":"string","name":"name"},{"_id":"59527bd32080bf002bebfedb","ref":"","in":"query","required":false,"desc":"The description for the card","default":"","type":"string","name":"desc"},{"_id":"59527be7f544fe0015385cfa","ref":"","in":"query","required":false,"desc":"The position of the new card. `top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"59527bf2f544fe0015385cfb","ref":"","in":"query","required":false,"desc":"A due date for the card","default":"","type":"datetime","name":"due"},{"_id":"59527bff2080bf002bebfedc","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"dueComplete"},{"_id":"59527c14b1a12000672aed91","ref":"","in":"query","required":true,"desc":"The ID of the list the card should be created in","default":"","type":"string","name":"idList"},{"_id":"59527c25f168f9001bba9a85","ref":"","in":"query","required":false,"desc":"Comma-separated list of member IDs to add to the card","default":"","type":"string","name":"idMembers"},{"_id":"59527c34f168f9001bba9a86","ref":"","in":"query","required":false,"desc":"Comma-separated list of label IDs to add to the card","default":"","type":"string","name":"idLabels"},{"_id":"59527c4a9262c20041644bc3","ref":"","in":"query","required":false,"desc":"A URL starting with `http://` or `https://`","default":"","type":"string","name":"urlSource"},{"_id":"59527c64e9de4f0061237039","ref":"","in":"query","required":false,"desc":"","default":"","type":"file","name":"fileSource"},{"_id":"59527c64e9de4f0061237038","ref":"","in":"query","required":false,"desc":"The ID of a card to copy into the new card","default":"","type":"string","name":"idCardSource"},{"_id":"59527caaf544fe0015385cfc","ref":"","in":"query","required":false,"desc":"If using `idCardSource` you can specify which properties to copy over. `all` or comma-separated list of: `attachments,checklists,comments,due,labels,members,stickers`","default":"all","type":"string","name":"keepFromSource"}],"url":"/cards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Copying Cards\",\n  \"body\": \"When copying an existing card into a new card with `idCardSource` checklist items are always unchecked and due dates are never marked as complete regardless of their corresponding values in the source card.\"\n}\n[/block]","excerpt":"Create a new card","slug":"cards-2","type":"endpoint","title":"/cards","__v":14,"updatedAt":"2019-06-10T14:28:52.570Z","swagger":{"path":"/cards"}},{"_id":"59515f686aff60001ba5967a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:24:24.644Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59515f7aeb8e31001bc9f381","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515f8a53920e00159471a5","ref":"","in":"query","required":true,"desc":"The comment","default":"","type":"string","name":"text"}],"url":"/cards/{id}/actions/comments","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Add a new comment to a card","slug":"cardsidactionscomments","type":"endpoint","title":"/cards/{id}/actions/comments","__v":2,"updatedAt":"2019-06-10T14:28:52.571Z","swagger":{"path":"/cards/{id}/actions/comments"}},{"_id":"59516013d331a7001596b10b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5ce3f676b89aab01871f086d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:27:15.586Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\":\"5bbce18fa4a337483b145a57\",\n\t\"bytes\":6654,\n  \"date\":\"2018-10-09T17:12:47.847Z\",  \t\n  \"edgeColor\":null,\n  \"idMember\":\"5589c3ea49b40cedc28cf70e\",\n  \"isUpload\":true,\n  \"mimeType\":null,\n  \"name\":\"test.pdf\",\n  \"previews\":[],\n  \"url\":\"https://trello-attachments.s3.amazonaws.com/5bbcda7a58bba713f1b18c10/5bbce0dbcac3a880704bc097/eca30e0de0a07563d870cd25d30e6fcb/test.pdf\",\n  \"pos\":32768,\n  \"limits\":{}\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595160910544650015752cb1","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595160a66aff60001ba5967d","ref":"","in":"query","required":false,"desc":"The name of the attachment. Max length 256.","default":"","type":"string","name":"name"},{"_id":"595160e1e00c6e0015b5ad28","ref":"","in":"query","required":false,"desc":"The file to attach, as multipart/form-data","default":"","type":"file","name":"file"},{"_id":"595160f7470b3a0015ba15cb","ref":"","in":"query","required":false,"desc":"The mimeType of the attachment. Max length 256","default":"","type":"string","name":"mimeType"},{"_id":"5951610a2f25a4001b90767a","ref":"","in":"query","required":false,"desc":"A URL to attach. Must start with `http://` or `https://`","default":"","type":"string","name":"url"}],"url":"/cards/{id}/attachments","method":"post","examples":{"codes":[{"code":"# Upload a file directly from a local path\ncurl -v -F token={TrelloToken} -F file=@test.pdf https://api.trello.com/1/cards/5bbce18fa4a337483b145a57/attachments\\?key\\={APIKey}\\&token\\={TrelloToken}\n# You can specify a path to the file: `file=@path/to/file/test.pdf`","language":"curl"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"There are two primary ways of adding attachments to cards:\n\n**Attaching a URL directly to a card:** \n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -d \\\"url={URL}&key={API_KEY}&token={API_TOKEN}\\\" -X POST https://api.trello.com/1/cards/{id}/attachments\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n**Attaching a file object to a card:** \n\nTrello expects that the file object is encoded as multipart/form-data. For examples demonstrating how to add attachments check out this [Glitch project](https://glitch.com/~trello-attachments-api) üöÄ.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"100 Attachments Per Card\",\n  \"body\": \"If you try to add an attachment to a card that already has 100 attachments, you will get a `422` `unprocessable entity` error.\"\n}\n[/block]\nReturn object\n```json\n{\n\"id\": \"\",\n\"bytes\": null,\n\"date\": \"\",\n\"edgeColor\": null,\n\"idMember\": \"\",\n\"isUpload\": false,\n\"mimeType\": \"\",\n\"name\": \"\",\n\"previews\": [],\n\"url\": \"\",\n\"pos\": 147456,\n\"limits\": {}\n}\n```","excerpt":"Add an attachment to a card","slug":"cardsidattachments-1","type":"endpoint","title":"/cards/{id}/attachments","__v":15,"updatedAt":"2019-06-10T14:28:52.571Z","swagger":{"path":"/cards/{id}/attachments"}},{"_id":"59516333b88bfb001b5d5af3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:40:35.775Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163440544650015752cb6","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516365c471ab001b3088bf","ref":"","in":"query","required":false,"desc":"The name of the checklist","default":"","type":"string","name":"name"},{"_id":"59516377e00c6e0015b5ad2d","ref":"","in":"query","required":false,"desc":"The ID of a source checklist to copy into the new one","default":"","type":"string","name":"idChecklistSource"},{"_id":"5acba19806a2ce0003f28ea0","ref":"","in":"query","required":false,"desc":"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"}],"url":"/cards/{id}/checklists","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Create a new checklist on a card","slug":"cardsidchecklists-1","type":"endpoint","title":"/cards/{id}/checklists","__v":4,"updatedAt":"2019-06-10T14:28:52.572Z","swagger":{"path":"/cards/{id}/checklists"}},{"_id":"595163a2b88bfb001b5d5af4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:42:26.358Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163b56aff60001ba59683","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595163c0b88bfb001b5d5af5","ref":"","in":"query","required":false,"desc":"The ID of the label to add","default":"","type":"string","name":"value"}],"url":"/cards/{id}/idLabels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Add a label to a card","slug":"cardsididlabels","type":"endpoint","title":"/cards/{id}/idLabels","__v":2,"updatedAt":"2019-06-10T14:28:52.572Z","swagger":{"path":"/cards/{id}/idLabels"}},{"_id":"595163d2470b3a0015ba15ce","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:43:14.707Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163e2702f02001bf3d917","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595163efeb8e31001bc9f3ab","ref":"","in":"query","required":false,"desc":"The ID of the member to add to the card","default":"","type":"string","name":"value"}],"url":"/cards/{id}/idMembers","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"","excerpt":"Add a member to a card","slug":"cardsididmembers","type":"endpoint","title":"/cards/{id}/idMembers","__v":2,"updatedAt":"2019-06-10T14:28:52.573Z","swagger":{"path":"/cards/{id}/idMembers"}},{"_id":"5951641fc2cc4200156eaa52","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:44:31.556Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5951642e702f02001bf3d918","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951644e4e07bf001b77b95d","ref":"","in":"query","required":true,"desc":"A valid label color or `null`. See [labels](ref:label-object)","default":"","type":"string","name":"color"},{"_id":"5951647e702f02001bf3d919","ref":"","in":"query","required":false,"desc":"A name for the label","default":"","type":"string","name":"name"}],"url":"/cards/{id}/labels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"","excerpt":"Add a new label to a card","slug":"cardsidlabels","type":"endpoint","title":"/cards/{id}/labels","__v":3,"updatedAt":"2019-06-10T14:28:52.573Z","swagger":{"path":"/cards/{id}/labels"}},{"_id":"595164964e07bf001b77b97f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:46:30.629Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595164a353920e00159471ea","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/markAssociatedNotificationsRead","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":32,"body":"","excerpt":"Mark notifications about this card as read","slug":"cardsidmarkassociatednotificationsread","type":"endpoint","title":"/cards/{id}/markAssociatedNotificationsRead","__v":1,"updatedAt":"2019-06-10T14:28:52.574Z","swagger":{"path":"/cards/{id}/markAssociatedNotificationsRead"}},{"_id":"595164c1d331a7001596b110","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:47:13.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595164f2829c660029e0fe85","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951650644e91b002904dbbb","ref":"","in":"query","required":true,"desc":"The ID of the member to vote 'yes' on the card","default":"","type":"string","name":"value"}],"url":"/cards/{id}/membersVoted","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Requires Voting Power-Up\",\n  \"body\": \"This route will only work if the Voting Power-Up is enabled on the board\"\n}\n[/block]","excerpt":"Vote on the card","slug":"cardsidmembersvoted-1","type":"endpoint","title":"/cards/{id}/membersVoted","__v":2,"updatedAt":"2019-06-10T14:28:52.574Z","swagger":{"path":"/cards/{id}/membersVoted"}},{"_id":"5cedc0b47765e1005cd0683e","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.574Z","createdAt":"2019-05-28T23:13:56.289Z","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl --request POST \\\n  --url https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1"},{"name":"Node","language":"javascript","code":"var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1' };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});"},{"name":null,"language":"ruby","code":"require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\n\nresponse = http.request(request)\nputs response.read_body"},{"language":"javascript","code":"var data = null;\n\nvar xhr = new XMLHttpRequest();\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\");\n\nxhr.send(data);"},{"language":"python","code":"import requests\n\nurl = \"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\"\n\nresponse = requests.request(\"POST\", url)\n\nprint(response.text)"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5cedc0b47765e1005cd06844","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5cedc0b47765e1005cd06843","ref":"","in":"query","required":true,"desc":"For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)","default":"","type":"string","name":"image"},{"_id":"5cedc0b47765e1005cd06842","ref":"","in":"query","required":true,"desc":"The top position of the sticker, from -60 to 100","default":"","type":"float","name":"top"},{"_id":"5cedc0b47765e1005cd06841","ref":"","in":"query","required":true,"desc":"The left position of the sticker, from -60 to 100","default":"","type":"float","name":"left"},{"_id":"5cedc0b47765e1005cd06840","ref":"","in":"query","required":true,"desc":"The z-index of the sticker","default":"","type":"int","name":"zIndex"},{"_id":"5cedc0b47765e1005cd0683f","ref":"","in":"query","required":false,"desc":"The rotation of the sticker","default":"0","type":"float","name":"rotate"}],"url":"/cards/{id}/stickers","method":"post"},"isReference":true,"order":34,"body":"[block:api-header]\n{\n  \"title\": \"Specifying sticker names\"\n}\n[/block]\nTrello has a set of built-in stickers that are available to members. For the full list, see the [Stickers section](https://developers.trello.com/reference#stickers).\n\nAdditionally, members can create custom stickers. Those are documented in the [members](https://developers.trello.com/reference?#membersidcustomstickers) section.","excerpt":"Add a sticker to a card","slug":"cardsidstickers-1","type":"endpoint","title":"/cards/{id}/stickers","__v":13,"swagger":{"path":"/cards/{id}/stickers"}},{"_id":"59516526207e1f00296b6ddf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:48:54.231Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516564829c660029e0fe86","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"This action is not reversible\",\n  \"body\": \"Deleting a card cannot be undone. Its safer to mark the card as `closed` (archived).\"\n}\n[/block]","excerpt":"Delete a card","slug":"delete-card","type":"endpoint","title":"/cards/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.575Z","swagger":{"path":"/cards/{id}"}},{"_id":"59516774470b3a0015ba1612","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59ae7b3b751330002fabf7dd","59ae7b3d751330002fabf7de"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:58:44.199Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516780c2cc4200156eaa5c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516789c471ab001b3088e3","ref":"","in":"path","required":false,"desc":"The ID of the comment action","default":"","type":"string","name":"idAction"}],"url":"/cards/{id}/actions/{idAction}/comments","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Note\",\n  \"body\": \"This can only be done by the original author of the comment, or someone with higher permissions than the original author.\"\n}\n[/block]","excerpt":"Delete a comment","slug":"cardsidactionsidactioncomments-1","type":"endpoint","title":"/cards/{id}/actions/{idAction}/comments","__v":4,"updatedAt":"2019-06-10T14:28:52.575Z","swagger":{"path":"/cards/{id}/actions/{idAction}/comments"}},{"_id":"595167b07c47dc0015d344d1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:59:44.133Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595167c053920e00159471ef","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595167e1561f66002bfbf888","ref":"","in":"path","required":false,"desc":"The ID of the attachment to delete","default":"","type":"string","name":"idAttachment"}],"url":"/cards/{id}/attachments/{idAttachment}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"Delete an attachment","slug":"cardsidattachmentsidattachment-1","type":"endpoint","title":"/cards/{id}/attachments/{idAttachment}","__v":2,"updatedAt":"2019-06-10T14:28:52.576Z","swagger":{"path":"/cards/{id}/attachments/{idAttachment}"}},{"_id":"59516809b88bfb001b5d5b1c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:01:12.999Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516814470b3a0015ba1613","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951681eb88bfb001b5d5b1d","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to delete","default":"","type":"string","name":"idCheckItem"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"Delete a checklist item","slug":"cardsidcheckitemidcheckitem-2","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":2,"updatedAt":"2019-06-10T14:28:52.576Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5951683fc2cc4200156eaa7d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:02:07.785Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595168492e17ad001bad70dc","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516853d331a7001596b153","ref":"","in":"path","required":false,"desc":"The ID of the checklist to delete","default":"","type":"string","name":"idChecklist"}],"url":"/cards/{id}/checklists/{idChecklist}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":39,"body":"","excerpt":"Delete a checklist from a card","slug":"cardsidchecklistsidchecklist","type":"endpoint","title":"/cards/{id}/checklists/{idChecklist}","__v":2,"updatedAt":"2019-06-10T14:28:52.577Z","swagger":{"path":"/cards/{id}/checklists/{idChecklist}"}},{"_id":"595169aa0544650015752cc1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:08:10.550Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595169b57c47dc0015d34517","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595169bc829c660029e0fe90","ref":"","in":"path","required":false,"desc":"The ID of the label to remove","default":"","type":"string","name":"idLabel"}],"url":"/cards/{id}/idLabels/{idLabel}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Remove a label from a card","slug":"cardsididlabelsidlabel","type":"endpoint","title":"/cards/{id}/idLabels/{idLabel}","__v":2,"updatedAt":"2019-06-10T14:28:52.578Z","swagger":{"path":"/cards/{id}/idLabels/{idLabel}"}},{"_id":"595169d67c47dc0015d34518","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:08:54.961Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595169e444e91b002904dbc3","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595169f1c2cc4200156eaa82","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the card","default":"","type":"string","name":"idMember"}],"url":"/cards/{id}/idMembers/{idMember}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"Remove a member from a card","slug":"cardsididmembersidmember","type":"endpoint","title":"/cards/{id}/idMembers/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.578Z","swagger":{"path":"/cards/{id}/idMembers/{idMember}"}},{"_id":"59516a08470b3a0015ba1617","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:09:44.633Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516a13b88bfb001b5d5b40","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516a1d561f66002bfbf88b","ref":"","in":"path","required":false,"desc":"The ID of the member whose vote to remove","default":"","type":"string","name":"idMember"}],"url":"/cards/{id}/membersVoted/{idMember}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Voting Power-Up Required\",\n  \"body\": \"The Voting Power-Up must be enabled on the board\"\n}\n[/block]","excerpt":"Remove a member's vote from a card","slug":"cardsidmembersvotedidmember","type":"endpoint","title":"/cards/{id}/membersVoted/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.581Z","swagger":{"path":"/cards/{id}/membersVoted/{idMember}"}},{"_id":"59516a45fafb63003375d54c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:10:45.180Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516a54561f66002bfbf88c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516a5fb88bfb001b5d5b41","ref":"","in":"path","required":false,"desc":"The ID of the sticker to remove from the card","default":"","type":"string","name":"idSticker"}],"url":"/cards/{id}/stickers/{idSticker}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":43,"body":"","excerpt":"Remove a sticker from the card","slug":"cardsidstickersidsticker-1","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":2,"updatedAt":"2019-06-10T14:28:52.581Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}}]},{"_id":"594d1946f45834003df50221","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59764dfc43e329001fb55804","5982b00a78b974002a9c3cab"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:36:06.473Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**badges**\\nObject\",\n    \"2-0\": \"**checkItemStates**\\narray\",\n    \"3-0\": \"**closed**\\nboolean\",\n    \"4-0\": \"**dateLastActivity**\\ndate\",\n    \"4-1\": \"The datetime of the last activity on the card. \\n\\nNote: There are activities that update dateLastActivity that do not create a corresponding action. For instance, updating the name field of a checklist item on a card does not create an action but does update the card and board's dateLastActivity value.\",\n    \"5-0\": \"**desc**\\nstring\",\n    \"6-0\": \"**descData**\",\n    \"7-0\": \"**due**\\ndate\",\n    \"8-0\": \"**dueComplete**\\nboolean\",\n    \"9-0\": \"**idAttachmentCover**\\nstring\",\n    \"9-1\": \"The id of the attachment selected as the cover image, if one exists\",\n    \"10-0\": \"**idBoard**\\nstring\",\n    \"10-1\": \"The ID of the board the card is on\",\n    \"11-0\": \"**idChecklists**\\narray of strings\",\n    \"11-1\": \"An array of checklist IDs that are on this card\",\n    \"12-0\": \"**idLabels**\\narray of strings\",\n    \"12-1\": \"An array of label IDs that are on this card\",\n    \"13-0\": \"**idList**\\nstring\",\n    \"13-1\": \"The ID of the list the card is in\",\n    \"14-0\": \"**idMembers**\\narray of strings\",\n    \"14-1\": \"An array of member IDs that are on this card\",\n    \"15-0\": \"**idMembersVoted**\\narray of strings\",\n    \"15-1\": \"An array of member IDs who have voted on this card\",\n    \"16-0\": \"**idShort**\\ninteger\",\n    \"16-1\": \"Numeric ID for the card on this board. Only unique to the board, and subject to change as the card moves\",\n    \"17-0\": \"**labels**\\narray of [Labels](ref:labels)\",\n    \"17-1\": \"Array of label objects on this card\",\n    \"18-0\": \"**manualCoverAttachment**\\nboolean\",\n    \"19-0\": \"**name**\\nstring\",\n    \"19-1\": \"Name of the card\",\n    \"20-0\": \"**pos**\\nfloat\",\n    \"20-1\": \"Position of the card in the list\",\n    \"21-0\": \"**shortLink**\\nstring\",\n    \"21-1\": \"The 8 character shortened ID for the card\",\n    \"22-0\": \"**shortUrl**\\nstring\",\n    \"22-1\": \"URL to the card without the name slug\",\n    \"23-0\": \"**subscribed**\\nboolean\",\n    \"23-1\": \"Whether this member is subscribed to the card\",\n    \"24-0\": \"**url**\\nstring\",\n    \"24-1\": \"Full URL to the card, with the name slug\",\n    \"0-1\": \"The ID of the card\",\n    \"3-1\": \"Whether the card is closed (archived). Note: Archived lists and boards do not cascade archives to cards. A card can have `closed: false` but be on an archived board.\",\n    \"5-1\": \"The description for the card. Up to 16384 chars.\",\n    \"7-1\": \"The due date on the card, if one exists\",\n    \"8-1\": \"Whether the due date has been marked complete\",\n    \"6-1\": \"If the description has custom emoji, this field will provide the data necessary to display them.\\n\\n```json\\n\\\"descData\\\": {\\n    \\\"emoji\\\": {\\n      \\\"morty\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\"\\n    }\\n  }\\n```\",\n    \"1-1\": \"Pieces of information about the card that are displayed on the front of the card.\\n\\n```json\\n\\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": true,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 1,\\n    \\\"attachments\\\": 2,\\n    \\\"description\\\": true,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  }\\n```\",\n    \"18-1\": \"Whether the card cover image was selected automatically by Trello, or manually by the user\",\n    \"25-0\": \"**address**\\nstring\",\n    \"26-0\": \"**locationName**\\nstring\",\n    \"27-0\": \"**coordinates**\\nobject\",\n    \"25-1\": \"Address of card location\",\n    \"26-1\": \"Name of card location\",\n    \"27-1\": \"Either a comma-separated string in the format latitude,longitude or an object containing keys for `latitude` and `longitude` whose values are numbers between -180 and 180.\"\n  },\n  \"cols\": 2,\n  \"rows\": 28\n}\n[/block]\nFor example:\n\n`GET` `/1/cards/560bf4dd7139286471dc009c?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n  \\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": true,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 0,\\n    \\\"attachments\\\": 2,\\n    \\\"description\\\": false,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  },\\n  \\\"checkItemStates\\\": [\\n    \\n  ],\\n  \\\"closed\\\": false,\\n  \\\"dueComplete\\\": false,\\n  \\\"dateLastActivity\\\": \\\"2017-06-26T17:39:49.583Z\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"due\\\": null,\\n  \\\"email\\\": null,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"idChecklists\\\": [\\n    \\n  ],\\n  \\\"idList\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\",\\n  \\\"idMembers\\\": [\\n    \\\"556c8537a1928ba745504dd8\\\"\\n  ],\\n  \\\"idMembersVoted\\\": [\\n    \\n  ],\\n  \\\"idShort\\\": 9,\\n  \\\"idAttachmentCover\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n  \\\"manualCoverAttachment\\\": false,\\n  \\\"labels\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n      \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n      \\\"name\\\": \\\"Visited\\\",\\n      \\\"color\\\": \\\"green\\\"\\n    }\\n  ],\\n  \\\"idLabels\\\": [\\n    \\\"560bf42919ad3a5dc29f33c5\\\"\\n  ],\\n  \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n  \\\"pos\\\": 16384,\\n  \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/c/nqPiDKmw\\\",\\n  \\\"subscribed\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/c/nqPiDKmw/9-grand-canyon-national-park\\\"\\n  \\\"address\\\": \\\"55 Broadway\\\\nSan Francisco CA 94111\\\\nUnited States\\\",\\n  \\\"locationName\\\": \\\"55 Broadway, NY 10280\\\",\\n  \\\"coordinates\\\": {\\n    \\\"latitude\\\": 37.7986712,\\n    \\\"longitude\\\": -122.3991514\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-object","type":"basic","title":"Card Object","__v":2,"updatedAt":"2019-06-10T14:28:52.556Z"},{"_id":"594d19c2612674001b2d2005","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"5b75d499c1398c0003dbf656","updates":["59784b3fc6bb2e0038448cb1","59b721a5f9c9e20010753a06","5a39363d33fb0d00344de8c4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:10.546Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Cards are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to cards as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Cards as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing cards as a nested resource via query params. For instance, the query params are available when you are accessing cards via:  `/object/{id}?cards=visible`.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Don't get confused!\",\n  \"body\": \"Cards can be nested as query params *and* as URL params. \\n\\nIf your route looks like `1/boards/{boardId}/cards` you're going to want to head down to [**Nested Cards as URL Params**](ref:section-nested-cards-as-url-params).\\n\\nIf your route looks like `1/boards/{boardId}?cards` you're in the right spot! The parameters directly below are available to you.\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**cards**\",\n    \"0-1\": \"Default: None\\nOptions: one of:\\n`all`\\n`closed`\\n`none`\\n`open` - Includes cards that are open in lists that have been archived.\\n`visible` - Only returns cards in lists that are not closed.\",\n    \"6-0\": \"**card_stickers**\",\n    \"6-1\": \"Default: `false`\\nOptions: `true` or `false`\",\n    \"5-0\": \"**card_attachment_fields**\",\n    \"5-1\": \"Default: `url,previews`\\nOptions: `all` or a comma-separated list of attachment [fields](ref:attachments)\",\n    \"4-0\": \"**card_attachments**\",\n    \"4-1\": \"Options: `true`, `false`, or `cover`\",\n    \"3-0\": \"**card_member_fields**\",\n    \"3-1\": \"Default: `id,avatarHash,avatarUrl,initials,fullName,username,confirmed,memberType`\\nOptions: `all` or a comma-separated list of member [fields](ref:member-object)\",\n    \"2-0\": \"**card_members**\",\n    \"2-1\": \"Default: `false`\\nOptions: `true` or `false`\",\n    \"1-0\": \"**card_fields**\",\n    \"1-1\": \"Default: `all`\\nOptions: `all` or a comma-separated list of card [fields](ref:card-object)\",\n    \"h-1\": \"Options\",\n    \"h-0\": \"Parameter\",\n    \"h-2\": \"Default\",\n    \"1-2\": \"`all`\",\n    \"2-2\": \"`false`\",\n    \"3-2\": \"\",\n    \"5-2\": \"`url,previews`\",\n    \"6-2\": \"`false`\",\n    \"0-2\": \"None\",\n    \"7-0\": \"**cards_modifiedSince**\",\n    \"7-1\": \"Default: none\\nOptions: ISO Timestamp (eg: `2018-08-07T17:02:24.030Z`\",\n    \"8-0\": \"**card_customFieldItems**\",\n    \"8-1\": \"Default: `false`\\nOptions: `false` or `true` to include [customFieldItems](ref:cardsidcustomfielditems)  in the response\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Cards as URL Params\"\n}\n[/block]\nCards are also available as nested resources via URL parameters. For instance, you may want just the cards belonging to a specific resource like a list or a board; in that case you'd use the route `/1/boards/{id}/cards` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**actions**\",\n    \"1-0\": \"**attachments**\",\n    \"1-1\": \"Default: `false`\\nEither a boolean value or `cover` for only cover attachments\",\n    \"2-0\": \"**attachment_fields**\",\n    \"4-0\": \"**stickers**\",\n    \"5-0\": \"**members**\",\n    \"6-0\": \"**member_fields**\",\n    \"7-0\": \"**checkItemStates**\",\n    \"8-0\": \"**checklists**\",\n    \"9-0\": \"**limit**\",\n    \"11-0\": \"**since**\",\n    \"12-0\": \"**before**\",\n    \"13-0\": \"**filter**\",\n    \"14-0\": \"**fields**\",\n    \"14-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- badges\\n- checkItemStates\\n- closed\\n- dateLastActivity\\n- desc\\n- descData\\n- due\\n- idAttachmentCover\\n- idBoard\\n- idChecklists\\n- idLabels\\n- idList\\n- idMembers\\n- idMembersVoted\\n- idShort\\n- labels\\n- limits\\n- manualCoverAttachment\\n- name\\n- pos\\n- shortLink\\n- shortUrl\\n- subscribed\\n- url\",\n    \"13-1\": \"Default: `visible`\\nOne of: `all`, `closed`, `none`, `open`, `visible`\",\n    \"12-1\": \"A date, or `null`\",\n    \"11-1\": \"A date, or `null`\",\n    \"9-1\": \"A number from `1` to `1000`\",\n    \"8-1\": \"Default: `none`\\nOne of: `all`, `none`\",\n    \"7-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"5-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"6-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of:\\n\\n- avatarHash\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\",\n    \"4-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"2-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- bytes\\n- date\\n- edgeColor\\n- idMember\\n- isUpload\\n- mimeType\\n- name\\n- previews\\n- url\",\n    \"0-1\": \"`all` or a comma-separated list of:\\n\\n- addAttachmentToCard\\n- addChecklistToCard\\n- addMemberToBoard\\n- addMemberToCard\\n- addMemberToOrganization\\n- addToOrganizationBoard\\n- commentCard\\n- convertToCardFromCheckItem\\n- copyBoard\\n- copyCard\\n- copyCommentCard\\n- createBoard\\n- createCard\\n- createList\\n- createOrganization\\n- deleteAttachmentFromCard\\n- deleteBoardInvitation\\n- deleteCard\\n- deleteOrganizationInvitation\\n- disablePowerUp\\n- emailCard\\n- enablePowerUp\\n- makeAdminOfBoard\\n- makeNormalMemberOfBoard\\n- makeNormalMemberOfOrganization\\n- makeObserverOfBoard\\n- memberJoinedTrello\\n- moveCardFromBoard\\n- moveCardToBoard\\n- moveListFromBoard\\n- moveListToBoard\\n- removeChecklistFromCard\\n- removeFromOrganizationBoard\\n- removeMemberFromCard\\n- unconfirmedBoardInvitation\\n- unconfirmedOrganizationInvitation\\n- updateBoard\\n- updateCard\\n- updateCard:closed\\n- updateCard:desc\\n- updateCard:idList\\n- updateCard:name\\n- updateCheckItemStateOnCard\\n- updateChecklist\\n- updateList\\n- updateList:closed\\n- updateList:name\\n- updateMember\\n- updateOrganization\",\n    \"15-0\": \"**pluginData**\",\n    \"15-1\": \"Default: `false`\\nOne of: `true`, `false`\",\n    \"10-0\": \"**sort**\",\n    \"10-1\": \"Default: `none`\\nOne of: `-id`\",\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"3-0\": \"**customFieldItems**\",\n    \"3-1\": \"Default: `false`\\nOne of: `true`, `false`\\n\\nCheck out [Getting Started With Custom Fields](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-getting-customfielditems-for-cards) for more on Custom Fields.\"\n  },\n  \"cols\": 2,\n  \"rows\": 16\n}\n[/block]\nHere's an example using the cards nested resource to get the visible cards in a list:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/lists/560bf44ea68b16bd0fc2a9a9/cards?fields=id,name,badges,labels\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n    \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 2,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\"\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n    \\\"name\\\": \\\"Petrified Forest National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      \\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n    \\\"name\\\": \\\"Saguaro National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\"\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"cards-nested-resource","type":"basic","title":"Cards Nested Resource","__v":3,"updatedAt":"2019-06-10T14:28:52.557Z"},{"_id":"59516d04fafb63003375d567","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:22:28.422Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Cards can have up to 100 attachments. Attachments can be either just URLs, images with previews, or arbitrary files.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**bytes**\\ninteger\",\n    \"2-0\": \"**date**\\ndate\",\n    \"3-0\": \"**edgeColor**\\nstring\",\n    \"4-0\": \"**idMember**\\nstring\",\n    \"5-0\": \"**isUpload**\\nboolean\",\n    \"6-0\": \"**mimeType**\\nstring\",\n    \"7-0\": \"**name**\\nstring\",\n    \"8-0\": \"**pos**\\nfloat\",\n    \"9-0\": \"**previews**\\narray of preview objects\",\n    \"10-0\": \"**url**\\nstring\",\n    \"0-1\": \"The ID of the attachment\",\n    \"1-1\": \"The size of the attachment in bytes\",\n    \"2-1\": \"The date the attachment was added\",\n    \"3-1\": \"For image attachments, the extracted edge color\",\n    \"4-1\": \"The ID of the member who attached the attachment\",\n    \"5-1\": \"Whether the attachment was uploaded\",\n    \"6-1\": \"The mimeType for the attachment. Default is null. mimeTypes are only stored/returned if it is sent when initially creating the attachment. The Trello web client does not set the mimeType when uploading attachments.\",\n    \"7-1\": \"The name of the attachment\",\n    \"8-1\": \"The position of the attachment in the attachments list\",\n    \"9-1\": \"If the image is an uploaded image, Trello will generate some various sized previews\",\n    \"10-1\": \"The URL to the attachment\"\n  },\n  \"cols\": 2,\n  \"rows\": 11\n}\n[/block]\n`GET` `/1/cards/nqPiDKmw/attachments/5944a06460ed0bee471ad8e0`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n  \\\"bytes\\\": 1351054,\\n  \\\"date\\\": \\\"2017-06-17T03:22:12.489Z\\\",\\n  \\\"edgeColor\\\": \\\"#603e3d\\\",\\n  \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n  \\\"isUpload\\\": true,\\n  \\\"mimeType\\\": null,\\n  \\\"name\\\": \\\"image.png\\\",\\n  \\\"previews\\\": [\\n    {\\n      \\\"bytes\\\": 7093,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/70x50/9a91dc761550dbbb658acaab6e82788f/image.png\\\",\\n      \\\"height\\\": 50,\\n      \\\"width\\\": 70,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a036\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"bytes\\\": 78708,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/250x150/a871bc785b48830941b619299f29a29c/image.png\\\",\\n      \\\"height\\\": 150,\\n      \\\"width\\\": 250,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a035\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"bytes\\\": 29621,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/150x85/1f6bfdb36d636cf33885459e5152842a/image.png\\\",\\n      \\\"height\\\": 85,\\n      \\\"width\\\": 150,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a034\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 111108,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/300x170/7bf7c8551d3ed495e2872a342df529c8/image.png\\\",\\n      \\\"height\\\": 170,\\n      \\\"width\\\": 300,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a033\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 418182,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/600x340/4fa1415ee1f63d7e0323a99cf9c4b070/image.png\\\",\\n      \\\"height\\\": 340,\\n      \\\"width\\\": 600,\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a032\\\",\\n      \\\"scaled\\\": true\\n    },\\n    {\\n      \\\"bytes\\\": 1351054,\\n      \\\"height\\\": 600,\\n      \\\"width\\\": 1060,\\n      \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n      \\\"_id\\\": \\\"5944a06599fcb2710ea8a031\\\",\\n      \\\"scaled\\\": true\\n    }\\n  ],\\n  \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n  \\\"pos\\\": 32768\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"attachments","type":"basic","title":"Attachments","__v":0,"updatedAt":"2019-06-10T14:28:52.557Z"},{"_id":"595170b3bb93f700353caa99","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:38:11.534Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Cards can have stickers applied to them. In addition to the default stickers, Business Class and Gold members can create custom stickers. Custom stickers are documented in the [members section](https://developers.trello.com/reference#membersidcustomstickers).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/46f3b1a-stickers.PNG\",\n        \"stickers.PNG\",\n        425,\n        339,\n        \"#3e96b9\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**image**\\nstring\",\n    \"2-0\": \"**imageScaled**\\narray of scaled image objects\",\n    \"3-0\": \"**imageUrl**\\nstring\",\n    \"3-1\": \"Direct URL to the image\",\n    \"4-0\": \"**left**\\nfloat\",\n    \"5-0\": \"**top**\\nfloat\",\n    \"6-0\": \"**rotate**\\nfloat\",\n    \"7-0\": \"**zIndex**\\ninteger\",\n    \"0-1\": \"The ID of the sticker\",\n    \"2-1\": \"An array of scaled versions of the sticker image\\n\\n```json\\n {\\n  \\\"width\\\": 140,\\n  \\\"height\\\": 140,\\n  \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n  \\\"scaled\\\": false,\\n  \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n}\\n```\",\n    \"4-1\": \"How far to the left of the card the sticker is placed\",\n    \"5-1\": \"How far from the top of the card the sticker is placed\",\n    \"7-1\": \"The ordering for display which tells you which sticker would show on top of another\",\n    \"6-1\": \"How much the sticker has been rotated\",\n    \"1-1\": \"The name of the sticker if it is a default sticker or a generated id if it is a custom sticker. See section below for the names of the default stickers.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\n`GET` `/1/cards/nqX2Cl8w/stickers/5807bedf4e4d6ba6ca02039f`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5807bedf4e4d6ba6ca02039f\\\",\\n  \\\"top\\\": 0,\\n  \\\"left\\\": 47.31,\\n  \\\"zIndex\\\": 1,\\n  \\\"rotate\\\": -7,\\n  \\\"image\\\": \\\"taco-alert\\\",\\n  \\\"imageUrl\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n  \\\"imageScaled\\\": [\\n    {\\n      \\\"width\\\": 140,\\n      \\\"height\\\": 140,\\n      \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n      \\\"scaled\\\": false,\\n      \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n    },\\n    {\\n      \\\"width\\\": 280,\\n      \\\"height\\\": 280,\\n      \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert@2x.png\\\",\\n      \\\"scaled\\\": false,\\n      \\\"_id\\\": \\\"5951704b646dd188a3aabbf1\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Default stickers\"\n}\n[/block]\nThe following stickers are built into Trello. When adding a sticker to a card, they can be added by setting the image parameter to the corresponding value. Note that Taco and Pete stickers, as well as custom stickers are only available for Business Class and Gold members.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"* check\\n* heart\\n* warning\\n* clock\\n* smile\\n* laugh\\n* huh\\n* frown\\n* thumbsup\\n* thumbsdown\\n* star\\n* rocketship\\n* taco-love\\n* taco-confused\\n* taco-cool\\n* taco-angry\\n* taco-celebrate\\n* taco-robot\\n* taco-alert\\n* taco-active\\n* taco-money\\n* taco-reading\",\n    \"0-1\": \"* taco-trophy\\n * taco-sleeping\\n * taco-pixel\\n * taco-proto\\n * taco-embarrassed\\n * taco-clean\\n * pete-happy\\n * pete-love\\n * pete-broken\\n * pete-alert\\n * pete-talk\\n * pete-vacation\\n * pete-confused\\n * pete-shipped\\n * pete-busy\\n * pete-completed\\n * pete-space\\n * pete-sketch\\n * pete-ghost\\n * pete-award\\n * pete-music\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"stickers","type":"basic","title":"Stickers","__v":0,"updatedAt":"2019-06-10T14:28:52.558Z"},{"_id":"59514b96a67f7b00556c851b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":["596e57f86b8da1001bf713ce"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T17:59:50.094Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ba5e3079400735c90ac","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59514c82634cc1003f74c0b1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of [fields](ref:card-object). **Defaults**: `badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl, url`","default":"","type":"string","name":"fields"},{"_id":"595280802080bf002bebff14","ref":"","in":"query","required":false,"desc":"See the [Actions Nested Resource](ref:actions-nested-resource)","default":"","type":"string","name":"actions"},{"_id":"5952809528e9ae004b965a73","ref":"","in":"query","required":false,"desc":"`true`, `false`, or `cover`","default":"false","type":"string","name":"attachments"},{"_id":"595280b8f8a1ac001b0f6a06","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"attachment_fields"},{"_id":"595280d69262c20041644c0b","ref":"","in":"query","required":false,"desc":"Whether to return member objects for members on the card","default":"false","type":"boolean","name":"members"},{"_id":"595280e2fc28ee004d046868","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object). **Defaults**: `avatarHash, fullName, initials, username`","default":"","type":"string","name":"member_fields"},{"_id":"59528111e9de4f0061237063","ref":"","in":"query","required":false,"desc":"Whether to return member objects for members who voted on the card","default":"false","type":"boolean","name":"membersVoted"},{"_id":"5952812ba0e05a0041b07357","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object). **Defaults**: `avatarHash, fullName, initials, username`","default":"","type":"string","name":"memberVoted_fields"},{"_id":"5952813a9262c20041644c0c","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"checkItemStates"},{"_id":"5952815f4731e4005d825561","ref":"","in":"query","required":false,"desc":"Whether to return the checklists on the card. `all` or `none`","default":"none","type":"string","name":"checklists"},{"_id":"59528173a6c9140033c80754","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `idBoard,idCard,name,pos`","default":"all","type":"string","name":"checklist_fields"},{"_id":"59528195fc28ee004d046869","ref":"","in":"query","required":false,"desc":"Whether to return the board object the card is on","default":"false","type":"boolean","name":"board"},{"_id":"596adbbad43aa90015ac0af1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object). **Defaults**: `name, desc, descData, closed, idOrganization, pinned, url, prefs`","default":"","type":"string","name":"board_fields"},{"_id":"595281bc4731e4005d825563","ref":"","in":"query","required":false,"desc":"See the [Lists Nested Resource](ref:lists-nested-resource)","default":"false","type":"boolean","name":"list"},{"_id":"595281d24731e4005d825564","ref":"","in":"query","required":false,"desc":"Whether to include pluginData on the card with the response","default":"false","type":"boolean","name":"pluginData"},{"_id":"595281e2a6c9140033c80755","ref":"","in":"query","required":false,"desc":"Whether to include sticker models with the response","default":"false","type":"boolean","name":"stickers"},{"_id":"5952820276da4b00292947f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"sticker_fields"},{"_id":"5bca5cdc685fb5001ead628e","ref":"","in":"query","required":false,"desc":"Whether to include the customFieldItems","default":"false","type":"boolean","name":"customFieldItems"}],"url":"/cards/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/cards/SDmaAwz9\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"58e800aa9ebaaa01c586f630\\\",\\n  \\\"badges\\\": {\\n    \\\"votes\\\": 0,\\n    \\\"viewingMemberVoted\\\": false,\\n    \\\"subscribed\\\": false,\\n    \\\"fogbugz\\\": \\\"\\\",\\n    \\\"checkItems\\\": 0,\\n    \\\"checkItemsChecked\\\": 0,\\n    \\\"comments\\\": 0,\\n    \\\"attachments\\\": 1,\\n    \\\"description\\\": true,\\n    \\\"due\\\": null,\\n    \\\"dueComplete\\\": false\\n  },\\n  \\\"checkItemStates\\\": [\\n    \\n  ],\\n  \\\"closed\\\": false,\\n  \\\"dateLastActivity\\\": \\\"2017-04-07T21:26:00.365Z\\\",\\n  \\\"desc\\\": \\\"Allows you to stay on top of the progress of any project by sending updates to Slack channels when activity occurs on Trello cards, lists, and boards. Customizable.\\\\n\\\\nRead more: http://blog.trello.com/slack-power-up-trello-alerts\\\",\\n  \\\"descData\\\": {\\n    \\\"emoji\\\": {\\n      \\n    }\\n  },\\n  \\\"due\\\": null,\\n  \\\"dueComplete\\\": false,\\n  \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n  \\\"idChecklists\\\": [\\n    \\n  ],\\n  \\\"idLabels\\\": [\\n    \\n  ],\\n  \\\"idList\\\": \\\"58e7fee3e06e4001f1cc3658\\\",\\n  \\\"idMembers\\\": [\\n    \\n  ],\\n  \\\"idShort\\\": 1579,\\n  \\\"idAttachmentCover\\\": \\\"58e801c30f51ca01a6dd6745\\\",\\n  \\\"manualCoverAttachment\\\": false,\\n  \\\"labels\\\": [\\n    \\n  ],\\n  \\\"name\\\": \\\"Trello Alerts for Slack\\\",\\n  \\\"pos\\\": 131071,\\n  \\\"shortUrl\\\": \\\"https://trello.com/c/SDmaAwz9\\\",\\n  \\\"url\\\": \\\"https://trello.com/c/SDmaAwz9/1579-trello-alerts-for-slack\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a card by its ID","slug":"cardsid","type":"endpoint","title":"/cards/{id}","__v":26,"updatedAt":"2019-06-10T14:28:52.558Z","swagger":{"path":"/cards/{id}"}},{"_id":"59514df1cc55510029d567ca","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5a687bdefe2e78001c26de4a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:09:53.469Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514e02e3079400735c90cf","ref":"","in":"path","required":false,"desc":"The id of the card","default":"","type":"string","name":"id"},{"_id":"59514e18cc55510029d567cb","ref":"","in":"path","required":false,"desc":"The desired field. One of [fields](ref:card-object)","default":"","type":"string","name":"field"}],"url":"/cards/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"`GET` `/1/cards/nqPiDKmw/name`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"_value\\\": \\\"Grand Canyon National Park\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a specific property of a card","slug":"cardsidfield","type":"endpoint","title":"/cards/{id}/{field}","__v":3,"updatedAt":"2019-06-10T14:28:52.559Z","swagger":{"path":"/cards/{id}/{field}"}},{"_id":"59514e53e3079400735c90d0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["598884ec467353000f686145","5996e4d5b6c6e900250f80ff","5b1574c1090faf0003917672"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:11:31.993Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f2b8eb072003d98aa81","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/actions","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"For all available query params, please see the [Actions Nested Resource](#actions-nested-resource)\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Default Actions Filter\",\n  \"body\": \"Keep in mind the default filter for actions is `commentCard, updateCard:idList`. If you want to see all of the actions for a single card, you'll need to add `filter=all` to the query.\"\n}\n[/block]\nFor Example:\n\n`GET` `/1/cards/NIRpzVDM/actions?limit=5`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"561f43cf9ee2b14c75583e6e\\\",\\n    \\\"idMemberCreator\\\": \\\"561f394aeb6a4b033754060e\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"Looking Forward to new support`\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-10-15T06:12:31.822Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"561f394aeb6a4b033754060e\\\",\\n      \\\"avatarHash\\\": \\\"f3d899950817ffcf32ca671cb793809d\\\",\\n      \\\"fullName\\\": \\\"Eric Chen\\\",\\n      \\\"initials\\\": \\\"EC\\\",\\n      \\\"username\\\": \\\"ericchen76\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"5605799c5a1b485d054e1135\\\",\\n    \\\"idMemberCreator\\\": \\\"4e70297a9618260000001a81\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"This has probably come up before, but can we please have due dates for checklist items? \\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-25T16:43:08.158Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4e70297a9618260000001a81\\\",\\n      \\\"avatarHash\\\": \\\"aaf480486554c8f329469e736f79420c\\\",\\n      \\\"fullName\\\": \\\"Ashish Bogawat\\\",\\n      \\\"initials\\\": \\\"AB\\\",\\n      \\\"username\\\": \\\"ashishbogawat\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560019007f0637ba5deda56a\\\",\\n    \\\"idMemberCreator\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"@constancedelgiudice I've been trying to keep this post up to date: http://trellostatus.tumblr.com/post/129567787933/investigating-delays-with-email-to-board\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T14:49:36.534Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n      \\\"avatarHash\\\": \\\"94527f5abac7de03a5ab541c14b49d11\\\",\\n      \\\"fullName\\\": \\\"Ben McCormack\\\",\\n      \\\"initials\\\": \\\"BRM\\\",\\n      \\\"username\\\": \\\"ben\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560015b435c347e254747ac0\\\",\\n    \\\"idMemberCreator\\\": \\\"55feef4242595b8ec2f5f197\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"Thank you so much for the quick response‚Ä¶. I guess I‚Äôll keep a look out for any news! \\\\n\\\\nConstance\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T13:52:34.000Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"55feef4242595b8ec2f5f197\\\",\\n      \\\"avatarHash\\\": \\\"d7d8a3e2bf16941ea0b460d347017ae1\\\",\\n      \\\"fullName\\\": \\\"Constance DelGiudice\\\",\\n      \\\"initials\\\": \\\"CD\\\",\\n      \\\"username\\\": \\\"constancedelgiudice\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560007f1da47d319e30a2034\\\",\\n    \\\"idMemberCreator\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Info\\\",\\n        \\\"id\\\": \\\"53f4c48a94f780435b611ce9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"nC8QJJoZ\\\",\\n        \\\"name\\\": \\\"Trello Development\\\",\\n        \\\"id\\\": \\\"4d5ea62fd76aa1136000000c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"NIRpzVDM\\\",\\n        \\\"idShort\\\": 1211,\\n        \\\"name\\\": \\\"What can you expect from this board?\\\",\\n        \\\"id\\\": \\\"4f7dcc310113192a307f347d\\\"\\n      },\\n      \\\"text\\\": \\\"@constancedelgiudice we're noticing the delays as well. We're reaching out to our email service provider to figure out what's happening.\\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2015-09-21T13:36:49.216Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4d713bcb37a18a4a1400697f\\\",\\n      \\\"avatarHash\\\": \\\"94527f5abac7de03a5ab541c14b49d11\\\",\\n      \\\"fullName\\\": \\\"Ben McCormack\\\",\\n      \\\"initials\\\": \\\"BRM\\\",\\n      \\\"username\\\": \\\"ben\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a card","slug":"cardsidactions","type":"endpoint","title":"/cards/{id}/actions","__v":5,"updatedAt":"2019-06-10T14:28:52.561Z","swagger":{"path":"/cards/{id}/actions"}},{"_id":"59514e650bc2d00015ec0b8b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:11:49.396Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514e737ba53e002beb8599","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516c1750feec002b5b9617","ref":"","in":"path","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"fields"},{"_id":"59516c9350feec002b5b9619","ref":"","in":"path","required":false,"desc":"Use `cover` to restrict to just the cover attachment","default":"false","type":"string","name":"filter"}],"url":"/cards/{id}/attachments","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/cards/SDmaAwz9/attachments\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"58e801c30f51ca01a6dd6745\\\",\\n    \\\"bytes\\\": 62103,\\n    \\\"date\\\": \\\"2017-04-07T21:16:51.346Z\\\",\\n    \\\"edgeColor\\\": \\\"#f0e9f1\\\",\\n    \\\"idMember\\\": \\\"57f2789b32d54fa10d99beb6\\\",\\n    \\\"isUpload\\\": true,\\n    \\\"mimeType\\\": null,\\n    \\\"name\\\": \\\"Screen Shot 2017-04-07 at 5.14.55 PM.png\\\",\\n    \\\"previews\\\": [\\n      {\\n        \\\"bytes\\\": 1811,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/70x50/e5ef494a0044dd7cd6b73c19955c8cfa/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 50,\\n        \\\"width\\\": 70,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e42\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"bytes\\\": 5285,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/250x150/6d59fba20fe4a2c431129b3c300b95a5/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 150,\\n        \\\"width\\\": 250,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e41\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"bytes\\\": 3431,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/150x77/ed52a061abdb26c84059f91e084f74a8/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 77,\\n        \\\"width\\\": 150,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e40\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 6229,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/300x154/c467423c26881a5210aca243bf0254af/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 154,\\n        \\\"width\\\": 300,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3f\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 13359,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/600x309/17f5babd64192bea9c29e96832bdc07f/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 309,\\n        \\\"width\\\": 600,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3e\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 35340,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/58e800aa9ebaaa01c586f630/1200x617/6ff057c7801890c126228ce1fd70337c/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"height\\\": 617,\\n        \\\"width\\\": 1200,\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3d\\\",\\n        \\\"scaled\\\": true\\n      },\\n      {\\n        \\\"bytes\\\": 62103,\\n        \\\"height\\\": 663,\\n        \\\"width\\\": 1289,\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4d5ea62fd76aa1136000000c/58e800aa9ebaaa01c586f630/1619f1fcd3065c9a2bccd318e9b7a154/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n        \\\"_id\\\": \\\"58e801c4456b715c478e1e3c\\\",\\n        \\\"scaled\\\": true\\n      }\\n    ],\\n    \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/4d5ea62fd76aa1136000000c/58e800aa9ebaaa01c586f630/1619f1fcd3065c9a2bccd318e9b7a154/Screen_Shot_2017-04-07_at_5.14.55_PM.png\\\",\\n    \\\"pos\\\": 16384\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the attachments on a card","slug":"cardsidattachments","type":"endpoint","title":"/cards/{id}/attachments","__v":3,"updatedAt":"2019-06-10T14:28:52.561Z","swagger":{"path":"/cards/{id}/attachments"}},{"_id":"59514e8f634cc1003f74c0b6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:12:31.225Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ea00085690081e9a62c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59514ea898e9e2004705bcbb","ref":"","in":"path","required":false,"desc":"The ID of the attachment","default":"","type":"string","name":"idAttachment"},{"_id":"59516ce7d331a7001596b19a","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of attachment [fields](ref:attachments)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/attachments/{idAttachment}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get a specific attachment on a card","slug":"cardsidattachmentsidattachment","type":"endpoint","title":"/cards/{id}/attachments/{idAttachment}","__v":3,"updatedAt":"2019-06-10T14:28:52.562Z","swagger":{"path":"/cards/{id}/attachments/{idAttachment}"}},{"_id":"59514eb97bfda600473af195","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:13:13.348Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f3b6e2e440047ce265a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"596ae9011ce50e0015b64827","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/board","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"`GET` `/1/cards/560bf4dd7139286471dc009c/board`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"US National Parks\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"577eb8850b41e08c3034aae2\\\",\\n  \\\"invited\\\": false,\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/b/tBmYPSYe/us-national-parks\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"560bfbb5176d070c67adc2b9\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/140x100/cf6ffdfac5ecf934ec324bf028b82686/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/256x192/2189d1f2d6c159c7de210412cc0e971f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/480x480/62bde347e629774a83378caf61f0fdb7/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/960x960/3102fa79837dfd37834cfaee02d1921c/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1024x1024/53a50ede7425af0b02a7b9bde783fe94/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1280x1280/491f54004976a4a81706caae613acf7f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1080,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09d\\\",\\n      \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"58ebc5d5abcedaf34a60800e\\\",\\n      \\\"idMember\\\": \\\"56fd3de8ba3cbeb22737fd55\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    }\\n  ],\\n  \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"Visited\\\",\\n    \\\"yellow\\\": \\\"\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [\\n    \\n  ],\\n  \\\"dateLastActivity\\\": \\\"2017-06-26T17:39:49.583Z\\\",\\n  \\\"dateLastView\\\": \\\"2017-06-26T17:43:56.319Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/tBmYPSYe\\\",\\n  \\\"idTags\\\": [\\n    \\n  ],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the board a card is on","slug":"cardsidboard","type":"endpoint","title":"/cards/{id}/board","__v":2,"updatedAt":"2019-06-10T14:28:52.562Z","swagger":{"path":"/cards/{id}/board"}},{"_id":"59514ed40085690081e9a62d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:13:40.162Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595173e0d331a7001596b1a7","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595173f78297ad0033c03d40","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `idCheckItem`, `state`","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/checkItemStates","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"`GET` `/1/cards/ndXbmEbO/checkItemStates`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"idCheckItem\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n    \\\"state\\\": \\\"complete\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the completed checklist items on a card","slug":"cardsidcheckitemstates","type":"endpoint","title":"/cards/{id}/checkItemStates","__v":2,"updatedAt":"2019-06-10T14:28:52.563Z","swagger":{"path":"/cards/{id}/checkItemStates"}},{"_id":"59514eebe706bd005ffb9fd7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:14:03.814Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514ef9e706bd005ffb9fd8","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5952783eb1a12000672aed6c","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"all","type":"string","name":"checkItems"},{"_id":"595278614731e4005d825513","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `name,nameData,pos,state,type`","default":"name,nameData,pos,state","type":"string","name":"checkItem_fields"},{"_id":"5952786dd93ebe003ff33950","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"all","type":"string","name":"filter"},{"_id":"59527883f8a1ac001b0f69f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `idBoard,idCard,name,pos`","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/checklists","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"`GET` `/1/cards/ndXbmEbO/checklists`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5914b2923876e144b5cb6974\\\",\\n    \\\"name\\\": \\\"Awesomeness to come\\\",\\n    \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n    \\\"idCard\\\": \\\"5914b27920508fcb6bfd525f\\\",\\n    \\\"pos\\\": 16384,\\n    \\\"checkItems\\\": [\\n      {\\n        \\\"state\\\": \\\"complete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n        \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 16867\\n      },\\n      {\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b2a1ee4421b88542b59a\\\",\\n        \\\"name\\\": \\\"Custom Fields on mobile\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 34254\\n      },\\n      {\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n        \\\"id\\\": \\\"5914b2b2e01e5b17afedf6fc\\\",\\n        \\\"name\\\": \\\"Working well across multiple boards\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 51540\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the checklists on a card","slug":"cardsidchecklists","type":"endpoint","title":"/cards/{id}/checklists","__v":5,"updatedAt":"2019-06-10T14:28:52.563Z","swagger":{"path":"/cards/{id}/checklists"}},{"_id":"59514f2b7bfda600473af196","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:07.502Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527895a0e05a0041b072ed","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595278b61579820035a6b073","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `name,nameData,pos,state,type`","default":"name,nameData,pos,state","type":"string","name":"fields"},{"_id":"5af9b2d68e3cc8000313327d","ref":"","in":"path","required":false,"desc":"The ID of the checkitem","default":"","type":"string","name":"idCheckItem"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"`GET` `/1/cards/ndXbmEbO/checkItem/5914b29abcbe09ab9478d156?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"state\\\": \\\"complete\\\",\\n  \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n  \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n  \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n  \\\"nameData\\\": null,\\n  \\\"type\\\": null,\\n  \\\"pos\\\": 16867\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a specific checkItem on a card","slug":"cardsidcheckitemidcheckitem","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":4,"updatedAt":"2019-06-10T14:28:52.564Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5ace617b851e340003da6766","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-04-11T19:26:51.437Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516f3b6e2e440047ce265a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/customFieldItems","method":"get"},"isReference":true,"order":13,"body":"`GET https://api.trello.com/1/cards/5acbbe5d615f7dd1935b92f5/customFieldItems`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5acbd57f7160061ed10daa2c\\\",\\n    \\\"value\\\": {\\n      \\\"text\\\": \\\"High Priority\\\"\\n    },\\n    \\\"idCustomField\\\": \\\"5ab0f9f30c8780347a255463\\\",\\n    \\\"idModel\\\": \\\"5acbbe5d615f7dd1935b92f5\\\",\\n    \\\"modelType\\\": \\\"card\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the custom field items for a card.","slug":"cardsidcustomfielditems","type":"endpoint","title":"/cards/{id}/customFieldItems","__v":2,"updatedAt":"2019-06-10T14:28:52.564Z","swagger":{"path":"/cards/{id}/customFieldItems"}},{"_id":"59514f38cc55510029d567cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:20.391Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595172fb2f25a4001b90768e","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fe9b0406d00155a8e90","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/list","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"For all available query params, please see the [Lists Nested Resource](ref:lists-nested-resource)\n\nFor example\n\n`GET` `/1/cards/560bf4dd7139286471dc009c/list`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\",\\n  \\\"name\\\": \\\"Arizona\\\",\\n  \\\"closed\\\": false,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"pos\\\": 131071,\\n  \\\"subscribed\\\": false\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the list a card is in","slug":"cardsidlist","type":"endpoint","title":"/cards/{id}/list","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/list"}},{"_id":"59514f4b0bc2d00015ec0b8c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:39.331Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595279142080bf002bebfed2","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fb570084b001beca6db","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"fields"}],"url":"/cards/{id}/members","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Get the members on a card","slug":"cardsidmembers","type":"endpoint","title":"/cards/{id}/members","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/members"}},{"_id":"59514f5f98e9e2004705bcbc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:15:59.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952792d109f490029f6a2a2","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59553fce07ba77001b75bdd0","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"fields"}],"url":"/cards/{id}/membersVoted","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"Get the members who have voted on a card","slug":"cardsidmembersvoted","type":"endpoint","title":"/cards/{id}/membersVoted","__v":2,"updatedAt":"2019-06-10T14:28:52.565Z","swagger":{"path":"/cards/{id}/membersVoted"}},{"_id":"59514f790085690081e9a62f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:25.197Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595279394731e4005d825514","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/pluginData","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"Get any shared pluginData on a card","slug":"cardsidplugindata","type":"endpoint","title":"/cards/{id}/pluginData","__v":1,"updatedAt":"2019-06-10T14:28:52.566Z","swagger":{"path":"/cards/{id}/pluginData"}},{"_id":"59514f8898e9e2004705bcbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:40.615Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59517085c471ab001b308910","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595170ae6e2e440047ce265b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/stickers","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"For Example:\n\n`GET` `/1/cards/nqX2Cl8w/stickers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5807bedf4e4d6ba6ca02039f\\\",\\n    \\\"top\\\": 0,\\n    \\\"left\\\": 47.31,\\n    \\\"zIndex\\\": 1,\\n    \\\"rotate\\\": -7,\\n    \\\"image\\\": \\\"taco-alert\\\",\\n    \\\"imageUrl\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n    \\\"imageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 140,\\n        \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert.png\\\",\\n        \\\"scaled\\\": false,\\n        \\\"_id\\\": \\\"5951704b646dd188a3aabbf2\\\"\\n      },\\n      {\\n        \\\"width\\\": 280,\\n        \\\"height\\\": 280,\\n        \\\"url\\\": \\\"https://d2k1ftgv7pobq7.cloudfront.net/images/stickers/taco-alert@2x.png\\\",\\n        \\\"scaled\\\": false,\\n        \\\"_id\\\": \\\"5951704b646dd188a3aabbf1\\\"\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the stickers on a card","slug":"cardsidstickers","type":"endpoint","title":"/cards/{id}/stickers","__v":2,"updatedAt":"2019-06-10T14:28:52.566Z","swagger":{"path":"/cards/{id}/stickers"}},{"_id":"59514f96d5b36f004be3061d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:16:54.793Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595171d62f25a4001b90768b","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595171dcb88bfb001b5d5b8a","ref":"","in":"path","required":false,"desc":"The ID of the sticker","default":"","type":"string","name":"idSticker"},{"_id":"595171f06aff60001ba596d8","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of sticker [fields](ref:stickers)","default":"all","type":"string","name":"fields"}],"url":"/cards/{id}/stickers/{idSticker}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Get a specific sticker on a card","slug":"cardsidstickersidsticker","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":3,"updatedAt":"2019-06-10T14:28:52.567Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"59514fae7bfda600473af197","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5b23672a80aeea000317e355","5c484acd2206ce0ea57be6e5","5cabb95e42f5b1000f3309e2"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:17:18.440Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59514fbc0085690081e9a631","ref":"","in":"path","required":false,"desc":"The ID of the card to update","default":"","type":"string","name":"id"},{"_id":"59517532d331a7001596b1a9","ref":"","in":"query","required":false,"desc":"The new name for the card","default":"","type":"string","name":"name"},{"_id":"5951753a4e07bf001b77b9fc","ref":"","in":"query","required":false,"desc":"The new description for the card","default":"","type":"string","name":"desc"},{"_id":"595175922f25a4001b907690","ref":"","in":"query","required":false,"desc":"Whether the card should be archived (closed: true)","default":"","type":"boolean","name":"closed"},{"_id":"59527960f8a1ac001b0f69f8","ref":"","in":"query","required":false,"desc":"Comma-separated list of member IDs","default":"","type":"string","name":"idMembers"},{"_id":"59527979c86ac3003f370fdb","ref":"","in":"query","required":false,"desc":"The ID of the image attachment the card should use as its cover, or null for none","default":"","type":"string","name":"idAttachmentCover"},{"_id":"595279851579820035a6b074","ref":"","in":"query","required":false,"desc":"The ID of the list the card should be in","default":"","type":"string","name":"idList"},{"_id":"595279931579820035a6b075","ref":"","in":"query","required":false,"desc":"Comma-separated list of label IDs","default":"","type":"string","name":"idLabels"},{"_id":"5952799e28e9ae004b965a49","ref":"","in":"query","required":false,"desc":"The ID of the board the card should be on","default":"","type":"string","name":"idBoard"},{"_id":"595279b4f544fe0015385cd6","ref":"","in":"query","required":false,"desc":"The position of the card in its list. `top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"595279cb08a112006b18c9eb","ref":"","in":"query","required":false,"desc":"When the card is due, or `null`","default":"","type":"datetime","name":"due"},{"_id":"595279dce9de4f0061237037","ref":"","in":"query","required":false,"desc":"Whether the due date should be marked complete","default":"","type":"boolean","name":"dueComplete"},{"_id":"595279efa6c9140033c80749","ref":"","in":"query","required":false,"desc":"Whether the member is should be subscribed to the card","default":"","type":"boolean","name":"subscribed"}],"url":"/cards/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"This endpoint can be used to update one or more properties of the card at once. Alternatively, you can also update a single property of the card as the params for this method via:\n\n`PUT` `/1/cards/{id}/{property}?value={newValue}`\n\nSo for example, to archive a card:\n\n`PUT` `/1/cards/{id}/closed?value=true`\n\nOr to move the card to a different list:\n\n`PUT` `/1/cards/{id}/idList?value={new list ID}`\n\nIf you want to move a card across different boards, you should use the ID of the new board as well as ID of the target list:\n\n`PUT` `/1/cards/{id}/idBoard?value={new board ID}&idList={new list ID}`\n\nOn success, the endpoint returns a [JSON object](#page-cardsid) representing the updated card.","excerpt":"Update a card","slug":"cardsid-1","type":"endpoint","title":"/cards/{id}","__v":17,"updatedAt":"2019-06-10T14:28:52.567Z","swagger":{"path":"/cards/{id}"}},{"_id":"595150500085690081e9a632","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5b3381bb06aa32000399eeb8"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T18:20:00.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595150776aff60001ba5956a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515082e706bd005ffb9fda","ref":"","in":"path","required":false,"desc":"The ID of the comment action to update","default":"","type":"string","name":"idAction"},{"_id":"595150950bc2d00015ec0b8d","ref":"","in":"query","required":true,"desc":"The new text for the comment","default":"","type":"string","name":"text"}],"url":"/cards/{id}/actions/{idAction}/comments","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Only the original author of a comment can update it.\",\n  \"title\": \"Note\"\n}\n[/block]","excerpt":"Update an existing comment","slug":"cardsidactionsidactioncomments","type":"endpoint","title":"/cards/{id}/actions/{idAction}/comments","__v":4,"updatedAt":"2019-06-10T14:28:52.568Z","swagger":{"path":"/cards/{id}/actions/{idAction}/comments"}},{"_id":"59515e6653920e0015947184","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:20:06.003Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59515e800bc2d00015ec0cc5","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515e8d4e07bf001b77b954","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to update","default":"","type":"string","name":"idCheckItem"},{"_id":"59515eadc2cc4200156eaa09","ref":"","in":"query","required":false,"desc":"The new name for the checklist item","default":"","type":"string","name":"name"},{"_id":"59515ed4470b3a0015ba15a6","ref":"","in":"query","required":false,"desc":"One of: `complete`, `incomplete`","default":"","type":"string","name":"state"},{"_id":"59515ee3d331a7001596b109","ref":"","in":"query","required":false,"desc":"The ID of the checklist this item is in","default":"","type":"string","name":"idChecklist"},{"_id":"59515ef4702f02001bf3d8cd","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"You can only move a checkItem to a checklist on the same card. You can't move a checkItem from a checklist on one card to a checklist on a different card.\"\n}\n[/block]","excerpt":"Update an item in a checklist on a card.","slug":"cardsidcheckitemidcheckitem-1","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":8,"updatedAt":"2019-06-10T14:28:52.568Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5b0d4d8c20631300034cc067","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594c1c9001cfe6000f40fde7","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-05-29T12:54:36.425Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"59515e800bc2d00015ec0cc5","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"idCard"},{"_id":"59515e8d4e07bf001b77b954","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to update","default":"","type":"string","name":"idCheckItem"},{"_id":"59515ef4702f02001bf3d8cd","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"5b0d4d3e20631300034cc064","ref":"","in":"path","required":false,"desc":"The ID of the item to update.","default":"","type":"string","name":"idChecklist"}],"url":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}","method":"put"},"isReference":true,"order":23,"body":"","excerpt":"Update an item in a checklist on a card.","slug":"cardsidcardchecklistidchecklistcheckitemidcheckitem","type":"endpoint","title":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}","__v":0,"updatedAt":"2019-06-10T14:28:52.569Z","swagger":{"path":"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}"}},{"_id":"59527b60d93ebe003ff33958","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T15:36:00.890Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527b6ba6c9140033c8074a","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59527b72d93ebe003ff33959","ref":"","in":"path","required":false,"desc":"The ID of the sticker to update","default":"","type":"string","name":"idSticker"},{"_id":"59527b7df168f9001bba9a84","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"top"},{"_id":"59527b832080bf002bebfed9","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"left"},{"_id":"59527b8d1579820035a6b096","ref":"","in":"query","required":false,"desc":"","default":"","type":"int","name":"zIndex"},{"_id":"59527b95d93ebe003ff3395a","ref":"","in":"query","required":false,"desc":"","default":"","type":"float","name":"rotate"}],"url":"/cards/{id}/stickers/{idSticker}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Update a sticker on a card","slug":"cardsidstickersidsticker-2","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":6,"updatedAt":"2019-06-10T14:28:52.570Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"59515f47e706bd005ffba0e9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59dcd41baf484300303c2798","5c926d5ce0d7e600436ea9b4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:23:51.693Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59527bcb9262c20041644bc2","ref":"","in":"query","required":false,"desc":"The name for the card","default":"","type":"string","name":"name"},{"_id":"59527bd32080bf002bebfedb","ref":"","in":"query","required":false,"desc":"The description for the card","default":"","type":"string","name":"desc"},{"_id":"59527be7f544fe0015385cfa","ref":"","in":"query","required":false,"desc":"The position of the new card. `top`, `bottom`, or a positive float","default":"","type":"string","name":"pos"},{"_id":"59527bf2f544fe0015385cfb","ref":"","in":"query","required":false,"desc":"A due date for the card","default":"","type":"datetime","name":"due"},{"_id":"59527bff2080bf002bebfedc","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"dueComplete"},{"_id":"59527c14b1a12000672aed91","ref":"","in":"query","required":true,"desc":"The ID of the list the card should be created in","default":"","type":"string","name":"idList"},{"_id":"59527c25f168f9001bba9a85","ref":"","in":"query","required":false,"desc":"Comma-separated list of member IDs to add to the card","default":"","type":"string","name":"idMembers"},{"_id":"59527c34f168f9001bba9a86","ref":"","in":"query","required":false,"desc":"Comma-separated list of label IDs to add to the card","default":"","type":"string","name":"idLabels"},{"_id":"59527c4a9262c20041644bc3","ref":"","in":"query","required":false,"desc":"A URL starting with `http://` or `https://`","default":"","type":"string","name":"urlSource"},{"_id":"59527c64e9de4f0061237039","ref":"","in":"query","required":false,"desc":"","default":"","type":"file","name":"fileSource"},{"_id":"59527c64e9de4f0061237038","ref":"","in":"query","required":false,"desc":"The ID of a card to copy into the new card","default":"","type":"string","name":"idCardSource"},{"_id":"59527caaf544fe0015385cfc","ref":"","in":"query","required":false,"desc":"If using `idCardSource` you can specify which properties to copy over. `all` or comma-separated list of: `attachments,checklists,comments,due,labels,members,stickers`","default":"all","type":"string","name":"keepFromSource"}],"url":"/cards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Copying Cards\",\n  \"body\": \"When copying an existing card into a new card with `idCardSource` checklist items are always unchecked and due dates are never marked as complete regardless of their corresponding values in the source card.\"\n}\n[/block]","excerpt":"Create a new card","slug":"cards-2","type":"endpoint","title":"/cards","__v":14,"updatedAt":"2019-06-10T14:28:52.570Z","swagger":{"path":"/cards"}},{"_id":"59515f686aff60001ba5967a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:24:24.644Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59515f7aeb8e31001bc9f381","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59515f8a53920e00159471a5","ref":"","in":"query","required":true,"desc":"The comment","default":"","type":"string","name":"text"}],"url":"/cards/{id}/actions/comments","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Add a new comment to a card","slug":"cardsidactionscomments","type":"endpoint","title":"/cards/{id}/actions/comments","__v":2,"updatedAt":"2019-06-10T14:28:52.571Z","swagger":{"path":"/cards/{id}/actions/comments"}},{"_id":"59516013d331a7001596b10b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["5ce3f676b89aab01871f086d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:27:15.586Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\":\"5bbce18fa4a337483b145a57\",\n\t\"bytes\":6654,\n  \"date\":\"2018-10-09T17:12:47.847Z\",  \t\n  \"edgeColor\":null,\n  \"idMember\":\"5589c3ea49b40cedc28cf70e\",\n  \"isUpload\":true,\n  \"mimeType\":null,\n  \"name\":\"test.pdf\",\n  \"previews\":[],\n  \"url\":\"https://trello-attachments.s3.amazonaws.com/5bbcda7a58bba713f1b18c10/5bbce0dbcac3a880704bc097/eca30e0de0a07563d870cd25d30e6fcb/test.pdf\",\n  \"pos\":32768,\n  \"limits\":{}\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595160910544650015752cb1","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595160a66aff60001ba5967d","ref":"","in":"query","required":false,"desc":"The name of the attachment. Max length 256.","default":"","type":"string","name":"name"},{"_id":"595160e1e00c6e0015b5ad28","ref":"","in":"query","required":false,"desc":"The file to attach, as multipart/form-data","default":"","type":"file","name":"file"},{"_id":"595160f7470b3a0015ba15cb","ref":"","in":"query","required":false,"desc":"The mimeType of the attachment. Max length 256","default":"","type":"string","name":"mimeType"},{"_id":"5951610a2f25a4001b90767a","ref":"","in":"query","required":false,"desc":"A URL to attach. Must start with `http://` or `https://`","default":"","type":"string","name":"url"}],"url":"/cards/{id}/attachments","method":"post","examples":{"codes":[{"code":"# Upload a file directly from a local path\ncurl -v -F token={TrelloToken} -F file=@test.pdf https://api.trello.com/1/cards/5bbce18fa4a337483b145a57/attachments\\?key\\={APIKey}\\&token\\={TrelloToken}\n# You can specify a path to the file: `file=@path/to/file/test.pdf`","language":"curl"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"There are two primary ways of adding attachments to cards:\n\n**Attaching a URL directly to a card:** \n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -d \\\"url={URL}&key={API_KEY}&token={API_TOKEN}\\\" -X POST https://api.trello.com/1/cards/{id}/attachments\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n**Attaching a file object to a card:** \n\nTrello expects that the file object is encoded as multipart/form-data. For examples demonstrating how to add attachments check out this [Glitch project](https://glitch.com/~trello-attachments-api) üöÄ.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"100 Attachments Per Card\",\n  \"body\": \"If you try to add an attachment to a card that already has 100 attachments, you will get a `422` `unprocessable entity` error.\"\n}\n[/block]\nReturn object\n```json\n{\n\"id\": \"\",\n\"bytes\": null,\n\"date\": \"\",\n\"edgeColor\": null,\n\"idMember\": \"\",\n\"isUpload\": false,\n\"mimeType\": \"\",\n\"name\": \"\",\n\"previews\": [],\n\"url\": \"\",\n\"pos\": 147456,\n\"limits\": {}\n}\n```","excerpt":"Add an attachment to a card","slug":"cardsidattachments-1","type":"endpoint","title":"/cards/{id}/attachments","__v":15,"updatedAt":"2019-06-10T14:28:52.571Z","swagger":{"path":"/cards/{id}/attachments"}},{"_id":"59516333b88bfb001b5d5af3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:40:35.775Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163440544650015752cb6","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516365c471ab001b3088bf","ref":"","in":"query","required":false,"desc":"The name of the checklist","default":"","type":"string","name":"name"},{"_id":"59516377e00c6e0015b5ad2d","ref":"","in":"query","required":false,"desc":"The ID of a source checklist to copy into the new one","default":"","type":"string","name":"idChecklistSource"},{"_id":"5acba19806a2ce0003f28ea0","ref":"","in":"query","required":false,"desc":"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"}],"url":"/cards/{id}/checklists","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Create a new checklist on a card","slug":"cardsidchecklists-1","type":"endpoint","title":"/cards/{id}/checklists","__v":4,"updatedAt":"2019-06-10T14:28:52.572Z","swagger":{"path":"/cards/{id}/checklists"}},{"_id":"595163a2b88bfb001b5d5af4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:42:26.358Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163b56aff60001ba59683","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595163c0b88bfb001b5d5af5","ref":"","in":"query","required":false,"desc":"The ID of the label to add","default":"","type":"string","name":"value"}],"url":"/cards/{id}/idLabels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Add a label to a card","slug":"cardsididlabels","type":"endpoint","title":"/cards/{id}/idLabels","__v":2,"updatedAt":"2019-06-10T14:28:52.572Z","swagger":{"path":"/cards/{id}/idLabels"}},{"_id":"595163d2470b3a0015ba15ce","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:43:14.707Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595163e2702f02001bf3d917","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595163efeb8e31001bc9f3ab","ref":"","in":"query","required":false,"desc":"The ID of the member to add to the card","default":"","type":"string","name":"value"}],"url":"/cards/{id}/idMembers","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"","excerpt":"Add a member to a card","slug":"cardsididmembers","type":"endpoint","title":"/cards/{id}/idMembers","__v":2,"updatedAt":"2019-06-10T14:28:52.573Z","swagger":{"path":"/cards/{id}/idMembers"}},{"_id":"5951641fc2cc4200156eaa52","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:44:31.556Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5951642e702f02001bf3d918","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951644e4e07bf001b77b95d","ref":"","in":"query","required":true,"desc":"A valid label color or `null`. See [labels](ref:label-object)","default":"","type":"string","name":"color"},{"_id":"5951647e702f02001bf3d919","ref":"","in":"query","required":false,"desc":"A name for the label","default":"","type":"string","name":"name"}],"url":"/cards/{id}/labels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"","excerpt":"Add a new label to a card","slug":"cardsidlabels","type":"endpoint","title":"/cards/{id}/labels","__v":3,"updatedAt":"2019-06-10T14:28:52.573Z","swagger":{"path":"/cards/{id}/labels"}},{"_id":"595164964e07bf001b77b97f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:46:30.629Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595164a353920e00159471ea","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}/markAssociatedNotificationsRead","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":32,"body":"","excerpt":"Mark notifications about this card as read","slug":"cardsidmarkassociatednotificationsread","type":"endpoint","title":"/cards/{id}/markAssociatedNotificationsRead","__v":1,"updatedAt":"2019-06-10T14:28:52.574Z","swagger":{"path":"/cards/{id}/markAssociatedNotificationsRead"}},{"_id":"595164c1d331a7001596b110","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:47:13.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595164f2829c660029e0fe85","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951650644e91b002904dbbb","ref":"","in":"query","required":true,"desc":"The ID of the member to vote 'yes' on the card","default":"","type":"string","name":"value"}],"url":"/cards/{id}/membersVoted","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Requires Voting Power-Up\",\n  \"body\": \"This route will only work if the Voting Power-Up is enabled on the board\"\n}\n[/block]","excerpt":"Vote on the card","slug":"cardsidmembersvoted-1","type":"endpoint","title":"/cards/{id}/membersVoted","__v":2,"updatedAt":"2019-06-10T14:28:52.574Z","swagger":{"path":"/cards/{id}/membersVoted"}},{"_id":"5cedc0b47765e1005cd0683e","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.574Z","createdAt":"2019-05-28T23:13:56.289Z","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl --request POST \\\n  --url https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1"},{"name":"Node","language":"javascript","code":"var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1' };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});"},{"name":null,"language":"ruby","code":"require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\n\nresponse = http.request(request)\nputs response.read_body"},{"language":"javascript","code":"var data = null;\n\nvar xhr = new XMLHttpRequest();\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\");\n\nxhr.send(data);"},{"language":"python","code":"import requests\n\nurl = \"https://api.trello.com/1/cards/id/stickers?image=taco-cool&top=50&left=50&zIndex=1\"\n\nresponse = requests.request(\"POST\", url)\n\nprint(response.text)"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5cedc0b47765e1005cd06844","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5cedc0b47765e1005cd06843","ref":"","in":"query","required":true,"desc":"For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)","default":"","type":"string","name":"image"},{"_id":"5cedc0b47765e1005cd06842","ref":"","in":"query","required":true,"desc":"The top position of the sticker, from -60 to 100","default":"","type":"float","name":"top"},{"_id":"5cedc0b47765e1005cd06841","ref":"","in":"query","required":true,"desc":"The left position of the sticker, from -60 to 100","default":"","type":"float","name":"left"},{"_id":"5cedc0b47765e1005cd06840","ref":"","in":"query","required":true,"desc":"The z-index of the sticker","default":"","type":"int","name":"zIndex"},{"_id":"5cedc0b47765e1005cd0683f","ref":"","in":"query","required":false,"desc":"The rotation of the sticker","default":"0","type":"float","name":"rotate"}],"url":"/cards/{id}/stickers","method":"post"},"isReference":true,"order":34,"body":"[block:api-header]\n{\n  \"title\": \"Specifying sticker names\"\n}\n[/block]\nTrello has a set of built-in stickers that are available to members. For the full list, see the [Stickers section](https://developers.trello.com/reference#stickers).\n\nAdditionally, members can create custom stickers. Those are documented in the [members](https://developers.trello.com/reference?#membersidcustomstickers) section.","excerpt":"Add a sticker to a card","slug":"cardsidstickers-1","type":"endpoint","title":"/cards/{id}/stickers","__v":13,"swagger":{"path":"/cards/{id}/stickers"}},{"_id":"59516526207e1f00296b6ddf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:48:54.231Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516564829c660029e0fe86","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"}],"url":"/cards/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"This action is not reversible\",\n  \"body\": \"Deleting a card cannot be undone. Its safer to mark the card as `closed` (archived).\"\n}\n[/block]","excerpt":"Delete a card","slug":"delete-card","type":"endpoint","title":"/cards/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.575Z","swagger":{"path":"/cards/{id}"}},{"_id":"59516774470b3a0015ba1612","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":["59ae7b3b751330002fabf7dd","59ae7b3d751330002fabf7de"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:58:44.199Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516780c2cc4200156eaa5c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516789c471ab001b3088e3","ref":"","in":"path","required":false,"desc":"The ID of the comment action","default":"","type":"string","name":"idAction"}],"url":"/cards/{id}/actions/{idAction}/comments","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Note\",\n  \"body\": \"This can only be done by the original author of the comment, or someone with higher permissions than the original author.\"\n}\n[/block]","excerpt":"Delete a comment","slug":"cardsidactionsidactioncomments-1","type":"endpoint","title":"/cards/{id}/actions/{idAction}/comments","__v":4,"updatedAt":"2019-06-10T14:28:52.575Z","swagger":{"path":"/cards/{id}/actions/{idAction}/comments"}},{"_id":"595167b07c47dc0015d344d1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T19:59:44.133Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595167c053920e00159471ef","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595167e1561f66002bfbf888","ref":"","in":"path","required":false,"desc":"The ID of the attachment to delete","default":"","type":"string","name":"idAttachment"}],"url":"/cards/{id}/attachments/{idAttachment}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"Delete an attachment","slug":"cardsidattachmentsidattachment-1","type":"endpoint","title":"/cards/{id}/attachments/{idAttachment}","__v":2,"updatedAt":"2019-06-10T14:28:52.576Z","swagger":{"path":"/cards/{id}/attachments/{idAttachment}"}},{"_id":"59516809b88bfb001b5d5b1c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:01:12.999Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516814470b3a0015ba1613","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"5951681eb88bfb001b5d5b1d","ref":"","in":"path","required":false,"desc":"The ID of the checklist item to delete","default":"","type":"string","name":"idCheckItem"}],"url":"/cards/{id}/checkItem/{idCheckItem}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"Delete a checklist item","slug":"cardsidcheckitemidcheckitem-2","type":"endpoint","title":"/cards/{id}/checkItem/{idCheckItem}","__v":2,"updatedAt":"2019-06-10T14:28:52.576Z","swagger":{"path":"/cards/{id}/checkItem/{idCheckItem}"}},{"_id":"5951683fc2cc4200156eaa7d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:02:07.785Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595168492e17ad001bad70dc","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516853d331a7001596b153","ref":"","in":"path","required":false,"desc":"The ID of the checklist to delete","default":"","type":"string","name":"idChecklist"}],"url":"/cards/{id}/checklists/{idChecklist}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":39,"body":"","excerpt":"Delete a checklist from a card","slug":"cardsidchecklistsidchecklist","type":"endpoint","title":"/cards/{id}/checklists/{idChecklist}","__v":2,"updatedAt":"2019-06-10T14:28:52.577Z","swagger":{"path":"/cards/{id}/checklists/{idChecklist}"}},{"_id":"595169aa0544650015752cc1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:08:10.550Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595169b57c47dc0015d34517","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595169bc829c660029e0fe90","ref":"","in":"path","required":false,"desc":"The ID of the label to remove","default":"","type":"string","name":"idLabel"}],"url":"/cards/{id}/idLabels/{idLabel}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Remove a label from a card","slug":"cardsididlabelsidlabel","type":"endpoint","title":"/cards/{id}/idLabels/{idLabel}","__v":2,"updatedAt":"2019-06-10T14:28:52.578Z","swagger":{"path":"/cards/{id}/idLabels/{idLabel}"}},{"_id":"595169d67c47dc0015d34518","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:08:54.961Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595169e444e91b002904dbc3","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"595169f1c2cc4200156eaa82","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the card","default":"","type":"string","name":"idMember"}],"url":"/cards/{id}/idMembers/{idMember}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"Remove a member from a card","slug":"cardsididmembersidmember","type":"endpoint","title":"/cards/{id}/idMembers/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.578Z","swagger":{"path":"/cards/{id}/idMembers/{idMember}"}},{"_id":"59516a08470b3a0015ba1617","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:09:44.633Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516a13b88bfb001b5d5b40","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516a1d561f66002bfbf88b","ref":"","in":"path","required":false,"desc":"The ID of the member whose vote to remove","default":"","type":"string","name":"idMember"}],"url":"/cards/{id}/membersVoted/{idMember}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Voting Power-Up Required\",\n  \"body\": \"The Voting Power-Up must be enabled on the board\"\n}\n[/block]","excerpt":"Remove a member's vote from a card","slug":"cardsidmembersvotedidmember","type":"endpoint","title":"/cards/{id}/membersVoted/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.581Z","swagger":{"path":"/cards/{id}/membersVoted/{idMember}"}},{"_id":"59516a45fafb63003375d54c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1c9001cfe6000f40fde7","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T20:10:45.180Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59516a54561f66002bfbf88c","ref":"","in":"path","required":false,"desc":"The ID of the card","default":"","type":"string","name":"id"},{"_id":"59516a5fb88bfb001b5d5b41","ref":"","in":"path","required":false,"desc":"The ID of the sticker to remove from the card","default":"","type":"string","name":"idSticker"}],"url":"/cards/{id}/stickers/{idSticker}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":43,"body":"","excerpt":"Remove a sticker from the card","slug":"cardsidstickersidsticker-1","type":"endpoint","title":"/cards/{id}/stickers/{idSticker}","__v":2,"updatedAt":"2019-06-10T14:28:52.581Z","swagger":{"path":"/cards/{id}/stickers/{idSticker}"}},{"_id":"594c1cae1c0e61000fecc602","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T19:38:22.054Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Cards can have zero or more checklists on them:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4d00855-checklists.PNG\",\n        \"checklists.PNG\",\n        1118,\n        1075,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklist","type":"basic","title":"Checklists","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.582Z","children":[{"_id":"594d19cd7ecb31003d92d326","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1cae1c0e61000fecc602","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:21.557Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the checklist\",\n    \"1-0\": \"**idBoard**\\nstring\",\n    \"1-1\": \"The ID of the board the checklist is on\",\n    \"2-0\": \"**idCard**\\nstring\",\n    \"2-1\": \"The ID of the card the checklist is on\",\n    \"3-0\": \"**name**\\nstring\",\n    \"3-1\": \"The name of the checklist\",\n    \"4-0\": \"**pos**\\nfloat\",\n    \"4-1\": \"The position of the checklist on the card (relative to any other checklists on the card)\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n`GET` `/1/checklists/5914b2923876e144b5cb6974`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5914b2923876e144b5cb6974\\\",\\n  \\\"name\\\": \\\"Awesomeness to come\\\",\\n  \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n  \\\"idCard\\\": \\\"5914b27920508fcb6bfd525f\\\",\\n  \\\"pos\\\": 16384,\\n  \\\"checkItems\\\": [\\n    {\\n      \\\"state\\\": \\\"complete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n      \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 16867\\n    },\\n    {\\n      \\\"state\\\": \\\"incomplete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b2a1ee4421b88542b59a\\\",\\n      \\\"name\\\": \\\"Custom Fields on mobile\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 34254\\n    },\\n    {\\n      \\\"state\\\": \\\"incomplete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b2b2e01e5b17afedf6fc\\\",\\n      \\\"name\\\": \\\"Working well across multiple boards\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 51540\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklist-object","type":"basic","title":"Checklist Object","__v":0,"updatedAt":"2019-06-10T14:28:52.582Z"},{"_id":"594d19e8ead5e5005369e432","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":["5c06d8beada3d40029fb7884"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:48.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Checklists are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to Checklists as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Checklists as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing cards as a nested resource via query params. For instance, the query params are available when you are accessing cards via:  `/object/{id}?checklists=all`.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**checklists**\",\n    \"0-1\": \"One of: `none` or `all`\",\n    \"3-0\": \"**checkItem_fields**\",\n    \"3-1\": \"Default: `name`, `nameData`, `pos`, `state`\\n`all` or a comma-separated list of:\\n`name`\\n`nameDat`\\n`type`\\n`pos`\\n`state`\\n`creationMethod`\",\n    \"1-0\": \"**checklist_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of checklist fields as documented on the [Checklist Object](ref:checklist-object).\",\n    \"2-0\": \"**checkItems**\",\n    \"2-1\": \"Default: `all`\\n*checkItems are always returned.*\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\nHere's an example using the checklists nested resource to get all of the checklists on a board:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/v5sRYGdh/?fields=name&checklists=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"544a947a60022d7de4d28187\\\",\\n  \\\"name\\\": \\\"Connor's 8th Birthday Bash\\\",\\n  \\\"checklists\\\": [\\n    {\\n      \\\"id\\\": \\\"544a947b60022d7de4d281f1\\\",\\n      \\\"name\\\": \\\"Chores\\\",\\n      \\\"idBoard\\\": \\\"544a947a60022d7de4d28187\\\",\\n      \\\"idCard\\\": \\\"544a947b60022d7de4d281aa\\\",\\n      \\\"pos\\\": 16384,\\n      \\\"checkItems\\\": [\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f2\\\",\\n          \\\"name\\\": \\\"Vacuum carpet\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 16683\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f3\\\",\\n          \\\"name\\\": \\\"Clean stove\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 33312\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f4\\\",\\n          \\\"name\\\": \\\"Arrange coat closet\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 50543\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f5\\\",\\n          \\\"name\\\": \\\"Clean out fridge\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 67424\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Checklists as URL Params\"\n}\n[/block]\nChecklists are also available as nested resources via URL parameters. For instance, you may want just the Checklists belonging to a specific resource like a list or a card; in that case you'd use the route `/1/cards/{id}/checklists` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**fields**\",\n    \"0-1\": \"Default: `all`\\n`all` or a comma separated list of checklist fields as documented on the [Checklist Object](ref:checklist-object).\",\n    \"1-0\": \"**cards**\",\n    \"1-1\": \"Values outlined in [Cards Nested Resource](ref:cards-nested-resource) documentation.\",\n    \"2-0\": \"**filter**\",\n    \"2-1\": \"Default: `all`\\nOne of: `none` or `all`\",\n    \"3-0\": \"**checkItems**\",\n    \"3-1\": \"Default: `all`\\nOne of: `none` or `all`\",\n    \"4-0\": \"**checkItem_fields**\",\n    \"4-1\": \"Default: `name`, `nameData`, `pos`, `state`\\n`all` or a comma-separated list of:\\n`name`\\n`nameDat`\\n`type`\\n`pos`\\n`state`\\n`creationMethod`\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nHere's an example using the checklists nested resource to get all of the checklists on a board:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/v5sRYGdh/checklists?fields=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"544a947b60022d7de4d281f1\\\",\\n    \\\"name\\\": \\\"Chores\\\",\\n    \\\"idBoard\\\": \\\"544a947a60022d7de4d28187\\\",\\n    \\\"idCard\\\": \\\"544a947b60022d7de4d281aa\\\",\\n    \\\"pos\\\": 16384,\\n    \\\"limits\\\": {\\n      \\\"checkItems\\\": {\\n        \\\"perChecklist\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 200,\\n          \\\"warnAt\\\": 180\\n        }\\n      }\\n    },\\n    \\\"creationMethod\\\": null,\\n    \\\"checkItems\\\": [\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f2\\\",\\n        \\\"name\\\": \\\"Vacuum carpet\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 16683\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f3\\\",\\n        \\\"name\\\": \\\"Clean stove\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 33312\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f4\\\",\\n        \\\"name\\\": \\\"Arrange coat closet\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 50543\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f5\\\",\\n        \\\"name\\\": \\\"Clean out fridge\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 67424\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklists-nested-resource","type":"basic","title":"Checklists Nested Resource","__v":1,"updatedAt":"2019-06-10T14:28:52.583Z"},{"_id":"59529975a6c9140033c8082b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:44:21.837Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/checklists/4eea6ae1a5da7f5a49000092?fields=name&cards=all&card_fields=name&key=[application_key]&token=[optional_auth_token]"}]},"results":{"codes":[{"name":"","code":"{\n    \"id\": \"4eea6ae1a5da7f5a49000092\",\n    \"name\": \"API Checklist\",\n    \"checkItems\": [{\n        \"state\": \"complete\",\n        \"id\": \"4eea6aeda5da7f5a490000b9\",\n        \"name\": \"See if there is a call\",\n        \"nameData\": null,\n        \"pos\": 16751\n    }, {\n        \"state\": \"incomplete\",\n        \"id\": \"4eea6af1a5da7f5a490000cc\",\n        \"name\": \"Figure out how to use the call\",\n        \"nameData\": null,\n        \"pos\": 33544\n    }, {\n        \"state\": \"incomplete\",\n        \"id\": \"4eea6af4a5da7f5a490000e1\",\n        \"name\": \"Add it to the code\",\n        \"nameData\": null,\n        \"pos\": 50647\n    }],\n    \"cards\": [{\n        \"id\": \"4eea522c91e31d174600027e\",\n        \"name\": \"Figure out how to read a user's board list\"\n    }]\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529b1956927300370394a9","ref":"","in":"query","required":false,"desc":"Valid values: `all`, `closed`, `none`, `open`, `visible`. Cards is a nested resource. The additional query params available are documented at [Cards Nested Resource](ref:cards-nested-resource).","default":"none","type":"string","name":"cards"},{"_id":"59529b1956927300370394a8","ref":"","in":"query","required":false,"desc":"The check items on the list to return. One of: `all`, `none`.","default":"all","type":"string","name":"checkItems"},{"_id":"59529b4ef544fe0015385d9c","ref":"","in":"query","required":false,"desc":"The fields on the checkItem to return if checkItems are being returned. `all` or a comma-separated list of: `name`, `nameData`, `pos`, `state`, `type`","default":"name, nameData, pos, state","type":"string","name":"checkItem_fields"},{"_id":"59529b75d93ebe003ff33a83","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of checklist [fields](ref:checklist-object)","default":"all","type":"string","name":"fields"}],"url":"/checklists/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"checklistsid","type":"endpoint","title":"/checklists/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.583Z","swagger":{"path":"/checklists/{id}"}},{"_id":"5952998d5692730037039480","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:44:45.883Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529bb128e9ae004b965b9e","ref":"","in":"path","required":false,"desc":"A checklist [field](ref:checklist-object)","default":"","type":"string","name":"field"}],"url":"/checklists/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"checklistsidfield","type":"endpoint","title":"/checklists/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.584Z","swagger":{"path":"/checklists/{id}/{field}"}},{"_id":"5952999c2080bf002bebffc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:00.158Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529d9687514c00630c85e6","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/checklists/{id}/board","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"Individual fields on a board can also be accessed via url parameters. For instance, to retrieve the board's name you could use:\n`GET https://api.trello.com/1/checklists/{id}/board?field=name`\nor\n`GET https://api.trello.com/1/checklists/{id}/board/name`","excerpt":"","slug":"checklistsidboard","type":"endpoint","title":"/checklists/{id}/board","__v":1,"updatedAt":"2019-06-10T14:28:52.584Z","swagger":{"path":"/checklists/{id}/board"}},{"_id":"595299b456927300370394a1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:24.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"}],"url":"/checklists/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"This is a nested resource for the cards object. To see all of the query parameters available check out the [Cards Nested Resource](ref:cards-nested-resource) documentation.","excerpt":"","slug":"checklistsidcards","type":"endpoint","title":"/checklists/{id}/cards","__v":2,"updatedAt":"2019-06-10T14:28:52.585Z","swagger":{"path":"/checklists/{id}/cards"}},{"_id":"595299d04731e4005d825635","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:52.151Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/checklists/4eea6ae1a5da7f5a49000092/checkItems?key=[application_key]&token=[optional_auth_token]"}]},"results":{"codes":[{"status":200,"language":"json","code":"[{\n    \"state\": \"complete\",\n    \"id\": \"4eea6aeda5da7f5a490000b9\",\n    \"name\": \"See if there is a call\",\n    \"nameData\": null,\n    \"pos\": 16751\n}, {\n    \"state\": \"incomplete\",\n    \"id\": \"4eea6af1a5da7f5a490000cc\",\n    \"name\": \"Figure out how to use the call\",\n    \"nameData\": null,\n    \"pos\": 33544\n}, {\n    \"state\": \"incomplete\",\n    \"id\": \"4eea6af4a5da7f5a490000e1\",\n    \"name\": \"Add it to the code\",\n    \"nameData\": null,\n    \"pos\": 50647\n}]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529e9387514c00630c85e9","ref":"","in":"query","required":false,"desc":"One of: `all`, `none`.","default":"all","type":"string","name":"filter"},{"_id":"59529e9387514c00630c85e8","ref":"","in":"query","required":false,"desc":"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.","default":"name, nameData, pos, state","type":"string","name":"fields"}],"url":"/checklists/{id}/checkItems","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"checklistsidcardscheckitems","type":"endpoint","title":"/checklists/{id}/checkItems","__v":1,"updatedAt":"2019-06-10T14:28:52.585Z","swagger":{"path":"/checklists/{id}/checkItems"}},{"_id":"595299de9262c20041644cfa","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:06.278Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529ed49262c20041644d23","ref":"","in":"query","required":false,"desc":"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.","default":"name, nameData, pos, state","type":"string","name":"fields"},{"_id":"59529efaf544fe0015385de2","ref":"","in":"path","required":false,"desc":"ID of the check item to retrieve.","default":"","type":"string","name":"idCheckItem"}],"url":"/checklists/{id}/checkItems/{idCheckItem}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"","slug":"checklistsidcardscheckitemscheckitemid","type":"endpoint","title":"/checklists/{id}/checkItems/{idCheckItem}","__v":5,"updatedAt":"2019-06-10T14:28:52.586Z","swagger":{"path":"/checklists/{id}/checkItems/{idCheckItem}"}},{"_id":"595299ead4f34000575e0717","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:18.543Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529f4da6c9140033c8083b","ref":"","in":"query","required":false,"desc":"Name of the new checklist being created. Should be length of 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"59529f4da6c9140033c8083a","ref":"","in":"query","required":false,"desc":"Determines the position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"}],"url":"/checklists/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"body\": \"To update `checkItems` in a checklist, check out [/cards/{id}/checkItem/{idCheckItem}](ref:cardsidcheckitemidcheckitem-1).\"\n}\n[/block]","excerpt":"Update an existing checklist.","slug":"checklistsid-1","type":"endpoint","title":"/checklists/{id}","__v":6,"updatedAt":"2019-06-10T14:28:52.586Z","swagger":{"path":"/checklists/{id}"}},{"_id":"595299fb56927300370394a5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:35.481Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529f99b1a12000672aeec8","ref":"","in":"query","required":true,"desc":"The value to change the checklist name to. Should be a string of length 1 to 16384.","default":"","type":"string","name":"value"}],"url":"/checklists/{id}/name","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"","slug":"checklistsidname","type":"endpoint","title":"/checklists/{id}/name","__v":1,"updatedAt":"2019-06-10T14:28:52.587Z","swagger":{"path":"/checklists/{id}/name"}},{"_id":"59529a1fd96c2900832c2efb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":["5ab5803a191c640012a58685"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:11.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a021d93ebe003ff33a94","ref":"","in":"query","required":true,"desc":"The ID of the card that the checklist should be added to.","default":"","type":"string","name":"idCard"},{"_id":"5952a021d93ebe003ff33a93","ref":"","in":"query","required":false,"desc":"The name of the checklist. Should be a string of length 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"5952a021d93ebe003ff33a92","ref":"","in":"query","required":false,"desc":"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"},{"_id":"5952a021d93ebe003ff33a91","ref":"","in":"query","required":false,"desc":"The ID of a checklist to copy into the new checklist.","default":"","type":"string","name":"idChecklistSource"}],"url":"/checklists","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"","slug":"checklists","type":"endpoint","title":"/checklists","__v":4,"updatedAt":"2019-06-10T14:28:52.588Z","swagger":{"path":"/checklists"}},{"_id":"59529a2ea0e05a0041b074a2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:26.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"5952a07d9262c20041644d27","ref":"","in":"query","required":true,"desc":"The name of the new check item on the checklist. Should be a string of length 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"5952a07d9262c20041644d26","ref":"","in":"query","required":false,"desc":"The position of the check item in the checklist. One of: `top`, `bottom`, or a positive number.","default":"bottom","type":"string","name":"pos"},{"_id":"5952a07d9262c20041644d25","ref":"","in":"query","required":false,"desc":"Determines whether the check item is already checked when created.","default":"false","type":"boolean","name":"checked"}],"url":"/checklists/{id}/checkItems","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"","slug":"checklistsidcheckitems","type":"endpoint","title":"/checklists/{id}/checkItems","__v":1,"updatedAt":"2019-06-10T14:28:52.588Z","swagger":{"path":"/checklists/{id}/checkItems"}},{"_id":"59529a4556927300370394a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:49.910Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"}],"url":"/checklists/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"This route is used to delete a checklist from a card.","excerpt":"Delete a checklist","slug":"checklistsid-2","type":"endpoint","title":"/checklists/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.589Z","swagger":{"path":"/checklists/{id}"}},{"_id":"59529a5487514c00630c85dc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:48:04.835Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529a6ff168f9001bba9bed","ref":"","in":"path","required":false,"desc":"ID of the checklist item to delete.","default":"","type":"string","name":"idCheckItem"}],"url":"/checklists/{id}/checkItems/{idCheckItem}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Remove an item from a checklist","slug":"checklistsidcheckitemsid","type":"endpoint","title":"/checklists/{id}/checkItems/{idCheckItem}","__v":1,"updatedAt":"2019-06-10T14:28:52.589Z","swagger":{"path":"/checklists/{id}/checkItems/{idCheckItem}"}}],"childrenPages":[{"_id":"594d19cd7ecb31003d92d326","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1cae1c0e61000fecc602","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:21.557Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the checklist\",\n    \"1-0\": \"**idBoard**\\nstring\",\n    \"1-1\": \"The ID of the board the checklist is on\",\n    \"2-0\": \"**idCard**\\nstring\",\n    \"2-1\": \"The ID of the card the checklist is on\",\n    \"3-0\": \"**name**\\nstring\",\n    \"3-1\": \"The name of the checklist\",\n    \"4-0\": \"**pos**\\nfloat\",\n    \"4-1\": \"The position of the checklist on the card (relative to any other checklists on the card)\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n`GET` `/1/checklists/5914b2923876e144b5cb6974`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5914b2923876e144b5cb6974\\\",\\n  \\\"name\\\": \\\"Awesomeness to come\\\",\\n  \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n  \\\"idCard\\\": \\\"5914b27920508fcb6bfd525f\\\",\\n  \\\"pos\\\": 16384,\\n  \\\"checkItems\\\": [\\n    {\\n      \\\"state\\\": \\\"complete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n      \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 16867\\n    },\\n    {\\n      \\\"state\\\": \\\"incomplete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b2a1ee4421b88542b59a\\\",\\n      \\\"name\\\": \\\"Custom Fields on mobile\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 34254\\n    },\\n    {\\n      \\\"state\\\": \\\"incomplete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b2b2e01e5b17afedf6fc\\\",\\n      \\\"name\\\": \\\"Working well across multiple boards\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 51540\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklist-object","type":"basic","title":"Checklist Object","__v":0,"updatedAt":"2019-06-10T14:28:52.582Z"},{"_id":"594d19e8ead5e5005369e432","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":["5c06d8beada3d40029fb7884"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:48.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Checklists are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to Checklists as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Checklists as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing cards as a nested resource via query params. For instance, the query params are available when you are accessing cards via:  `/object/{id}?checklists=all`.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**checklists**\",\n    \"0-1\": \"One of: `none` or `all`\",\n    \"3-0\": \"**checkItem_fields**\",\n    \"3-1\": \"Default: `name`, `nameData`, `pos`, `state`\\n`all` or a comma-separated list of:\\n`name`\\n`nameDat`\\n`type`\\n`pos`\\n`state`\\n`creationMethod`\",\n    \"1-0\": \"**checklist_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of checklist fields as documented on the [Checklist Object](ref:checklist-object).\",\n    \"2-0\": \"**checkItems**\",\n    \"2-1\": \"Default: `all`\\n*checkItems are always returned.*\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\nHere's an example using the checklists nested resource to get all of the checklists on a board:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/v5sRYGdh/?fields=name&checklists=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"544a947a60022d7de4d28187\\\",\\n  \\\"name\\\": \\\"Connor's 8th Birthday Bash\\\",\\n  \\\"checklists\\\": [\\n    {\\n      \\\"id\\\": \\\"544a947b60022d7de4d281f1\\\",\\n      \\\"name\\\": \\\"Chores\\\",\\n      \\\"idBoard\\\": \\\"544a947a60022d7de4d28187\\\",\\n      \\\"idCard\\\": \\\"544a947b60022d7de4d281aa\\\",\\n      \\\"pos\\\": 16384,\\n      \\\"checkItems\\\": [\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f2\\\",\\n          \\\"name\\\": \\\"Vacuum carpet\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 16683\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f3\\\",\\n          \\\"name\\\": \\\"Clean stove\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 33312\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f4\\\",\\n          \\\"name\\\": \\\"Arrange coat closet\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 50543\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f5\\\",\\n          \\\"name\\\": \\\"Clean out fridge\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 67424\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Checklists as URL Params\"\n}\n[/block]\nChecklists are also available as nested resources via URL parameters. For instance, you may want just the Checklists belonging to a specific resource like a list or a card; in that case you'd use the route `/1/cards/{id}/checklists` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**fields**\",\n    \"0-1\": \"Default: `all`\\n`all` or a comma separated list of checklist fields as documented on the [Checklist Object](ref:checklist-object).\",\n    \"1-0\": \"**cards**\",\n    \"1-1\": \"Values outlined in [Cards Nested Resource](ref:cards-nested-resource) documentation.\",\n    \"2-0\": \"**filter**\",\n    \"2-1\": \"Default: `all`\\nOne of: `none` or `all`\",\n    \"3-0\": \"**checkItems**\",\n    \"3-1\": \"Default: `all`\\nOne of: `none` or `all`\",\n    \"4-0\": \"**checkItem_fields**\",\n    \"4-1\": \"Default: `name`, `nameData`, `pos`, `state`\\n`all` or a comma-separated list of:\\n`name`\\n`nameDat`\\n`type`\\n`pos`\\n`state`\\n`creationMethod`\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nHere's an example using the checklists nested resource to get all of the checklists on a board:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/v5sRYGdh/checklists?fields=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"544a947b60022d7de4d281f1\\\",\\n    \\\"name\\\": \\\"Chores\\\",\\n    \\\"idBoard\\\": \\\"544a947a60022d7de4d28187\\\",\\n    \\\"idCard\\\": \\\"544a947b60022d7de4d281aa\\\",\\n    \\\"pos\\\": 16384,\\n    \\\"limits\\\": {\\n      \\\"checkItems\\\": {\\n        \\\"perChecklist\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 200,\\n          \\\"warnAt\\\": 180\\n        }\\n      }\\n    },\\n    \\\"creationMethod\\\": null,\\n    \\\"checkItems\\\": [\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f2\\\",\\n        \\\"name\\\": \\\"Vacuum carpet\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 16683\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f3\\\",\\n        \\\"name\\\": \\\"Clean stove\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 33312\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f4\\\",\\n        \\\"name\\\": \\\"Arrange coat closet\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 50543\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f5\\\",\\n        \\\"name\\\": \\\"Clean out fridge\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 67424\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklists-nested-resource","type":"basic","title":"Checklists Nested Resource","__v":1,"updatedAt":"2019-06-10T14:28:52.583Z"},{"_id":"59529975a6c9140033c8082b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:44:21.837Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/checklists/4eea6ae1a5da7f5a49000092?fields=name&cards=all&card_fields=name&key=[application_key]&token=[optional_auth_token]"}]},"results":{"codes":[{"name":"","code":"{\n    \"id\": \"4eea6ae1a5da7f5a49000092\",\n    \"name\": \"API Checklist\",\n    \"checkItems\": [{\n        \"state\": \"complete\",\n        \"id\": \"4eea6aeda5da7f5a490000b9\",\n        \"name\": \"See if there is a call\",\n        \"nameData\": null,\n        \"pos\": 16751\n    }, {\n        \"state\": \"incomplete\",\n        \"id\": \"4eea6af1a5da7f5a490000cc\",\n        \"name\": \"Figure out how to use the call\",\n        \"nameData\": null,\n        \"pos\": 33544\n    }, {\n        \"state\": \"incomplete\",\n        \"id\": \"4eea6af4a5da7f5a490000e1\",\n        \"name\": \"Add it to the code\",\n        \"nameData\": null,\n        \"pos\": 50647\n    }],\n    \"cards\": [{\n        \"id\": \"4eea522c91e31d174600027e\",\n        \"name\": \"Figure out how to read a user's board list\"\n    }]\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529b1956927300370394a9","ref":"","in":"query","required":false,"desc":"Valid values: `all`, `closed`, `none`, `open`, `visible`. Cards is a nested resource. The additional query params available are documented at [Cards Nested Resource](ref:cards-nested-resource).","default":"none","type":"string","name":"cards"},{"_id":"59529b1956927300370394a8","ref":"","in":"query","required":false,"desc":"The check items on the list to return. One of: `all`, `none`.","default":"all","type":"string","name":"checkItems"},{"_id":"59529b4ef544fe0015385d9c","ref":"","in":"query","required":false,"desc":"The fields on the checkItem to return if checkItems are being returned. `all` or a comma-separated list of: `name`, `nameData`, `pos`, `state`, `type`","default":"name, nameData, pos, state","type":"string","name":"checkItem_fields"},{"_id":"59529b75d93ebe003ff33a83","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of checklist [fields](ref:checklist-object)","default":"all","type":"string","name":"fields"}],"url":"/checklists/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"checklistsid","type":"endpoint","title":"/checklists/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.583Z","swagger":{"path":"/checklists/{id}"}},{"_id":"5952998d5692730037039480","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:44:45.883Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529bb128e9ae004b965b9e","ref":"","in":"path","required":false,"desc":"A checklist [field](ref:checklist-object)","default":"","type":"string","name":"field"}],"url":"/checklists/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"checklistsidfield","type":"endpoint","title":"/checklists/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.584Z","swagger":{"path":"/checklists/{id}/{field}"}},{"_id":"5952999c2080bf002bebffc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:00.158Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529d9687514c00630c85e6","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/checklists/{id}/board","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"Individual fields on a board can also be accessed via url parameters. For instance, to retrieve the board's name you could use:\n`GET https://api.trello.com/1/checklists/{id}/board?field=name`\nor\n`GET https://api.trello.com/1/checklists/{id}/board/name`","excerpt":"","slug":"checklistsidboard","type":"endpoint","title":"/checklists/{id}/board","__v":1,"updatedAt":"2019-06-10T14:28:52.584Z","swagger":{"path":"/checklists/{id}/board"}},{"_id":"595299b456927300370394a1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:24.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"}],"url":"/checklists/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"This is a nested resource for the cards object. To see all of the query parameters available check out the [Cards Nested Resource](ref:cards-nested-resource) documentation.","excerpt":"","slug":"checklistsidcards","type":"endpoint","title":"/checklists/{id}/cards","__v":2,"updatedAt":"2019-06-10T14:28:52.585Z","swagger":{"path":"/checklists/{id}/cards"}},{"_id":"595299d04731e4005d825635","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:52.151Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/checklists/4eea6ae1a5da7f5a49000092/checkItems?key=[application_key]&token=[optional_auth_token]"}]},"results":{"codes":[{"status":200,"language":"json","code":"[{\n    \"state\": \"complete\",\n    \"id\": \"4eea6aeda5da7f5a490000b9\",\n    \"name\": \"See if there is a call\",\n    \"nameData\": null,\n    \"pos\": 16751\n}, {\n    \"state\": \"incomplete\",\n    \"id\": \"4eea6af1a5da7f5a490000cc\",\n    \"name\": \"Figure out how to use the call\",\n    \"nameData\": null,\n    \"pos\": 33544\n}, {\n    \"state\": \"incomplete\",\n    \"id\": \"4eea6af4a5da7f5a490000e1\",\n    \"name\": \"Add it to the code\",\n    \"nameData\": null,\n    \"pos\": 50647\n}]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529e9387514c00630c85e9","ref":"","in":"query","required":false,"desc":"One of: `all`, `none`.","default":"all","type":"string","name":"filter"},{"_id":"59529e9387514c00630c85e8","ref":"","in":"query","required":false,"desc":"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.","default":"name, nameData, pos, state","type":"string","name":"fields"}],"url":"/checklists/{id}/checkItems","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"checklistsidcardscheckitems","type":"endpoint","title":"/checklists/{id}/checkItems","__v":1,"updatedAt":"2019-06-10T14:28:52.585Z","swagger":{"path":"/checklists/{id}/checkItems"}},{"_id":"595299de9262c20041644cfa","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:06.278Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529ed49262c20041644d23","ref":"","in":"query","required":false,"desc":"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.","default":"name, nameData, pos, state","type":"string","name":"fields"},{"_id":"59529efaf544fe0015385de2","ref":"","in":"path","required":false,"desc":"ID of the check item to retrieve.","default":"","type":"string","name":"idCheckItem"}],"url":"/checklists/{id}/checkItems/{idCheckItem}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"","slug":"checklistsidcardscheckitemscheckitemid","type":"endpoint","title":"/checklists/{id}/checkItems/{idCheckItem}","__v":5,"updatedAt":"2019-06-10T14:28:52.586Z","swagger":{"path":"/checklists/{id}/checkItems/{idCheckItem}"}},{"_id":"595299ead4f34000575e0717","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:18.543Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529f4da6c9140033c8083b","ref":"","in":"query","required":false,"desc":"Name of the new checklist being created. Should be length of 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"59529f4da6c9140033c8083a","ref":"","in":"query","required":false,"desc":"Determines the position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"}],"url":"/checklists/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"body\": \"To update `checkItems` in a checklist, check out [/cards/{id}/checkItem/{idCheckItem}](ref:cardsidcheckitemidcheckitem-1).\"\n}\n[/block]","excerpt":"Update an existing checklist.","slug":"checklistsid-1","type":"endpoint","title":"/checklists/{id}","__v":6,"updatedAt":"2019-06-10T14:28:52.586Z","swagger":{"path":"/checklists/{id}"}},{"_id":"595299fb56927300370394a5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:35.481Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529f99b1a12000672aeec8","ref":"","in":"query","required":true,"desc":"The value to change the checklist name to. Should be a string of length 1 to 16384.","default":"","type":"string","name":"value"}],"url":"/checklists/{id}/name","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"","slug":"checklistsidname","type":"endpoint","title":"/checklists/{id}/name","__v":1,"updatedAt":"2019-06-10T14:28:52.587Z","swagger":{"path":"/checklists/{id}/name"}},{"_id":"59529a1fd96c2900832c2efb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":["5ab5803a191c640012a58685"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:11.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a021d93ebe003ff33a94","ref":"","in":"query","required":true,"desc":"The ID of the card that the checklist should be added to.","default":"","type":"string","name":"idCard"},{"_id":"5952a021d93ebe003ff33a93","ref":"","in":"query","required":false,"desc":"The name of the checklist. Should be a string of length 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"5952a021d93ebe003ff33a92","ref":"","in":"query","required":false,"desc":"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"},{"_id":"5952a021d93ebe003ff33a91","ref":"","in":"query","required":false,"desc":"The ID of a checklist to copy into the new checklist.","default":"","type":"string","name":"idChecklistSource"}],"url":"/checklists","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"","slug":"checklists","type":"endpoint","title":"/checklists","__v":4,"updatedAt":"2019-06-10T14:28:52.588Z","swagger":{"path":"/checklists"}},{"_id":"59529a2ea0e05a0041b074a2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:26.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"5952a07d9262c20041644d27","ref":"","in":"query","required":true,"desc":"The name of the new check item on the checklist. Should be a string of length 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"5952a07d9262c20041644d26","ref":"","in":"query","required":false,"desc":"The position of the check item in the checklist. One of: `top`, `bottom`, or a positive number.","default":"bottom","type":"string","name":"pos"},{"_id":"5952a07d9262c20041644d25","ref":"","in":"query","required":false,"desc":"Determines whether the check item is already checked when created.","default":"false","type":"boolean","name":"checked"}],"url":"/checklists/{id}/checkItems","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"","slug":"checklistsidcheckitems","type":"endpoint","title":"/checklists/{id}/checkItems","__v":1,"updatedAt":"2019-06-10T14:28:52.588Z","swagger":{"path":"/checklists/{id}/checkItems"}},{"_id":"59529a4556927300370394a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:49.910Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"}],"url":"/checklists/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"This route is used to delete a checklist from a card.","excerpt":"Delete a checklist","slug":"checklistsid-2","type":"endpoint","title":"/checklists/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.589Z","swagger":{"path":"/checklists/{id}"}},{"_id":"59529a5487514c00630c85dc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:48:04.835Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529a6ff168f9001bba9bed","ref":"","in":"path","required":false,"desc":"ID of the checklist item to delete.","default":"","type":"string","name":"idCheckItem"}],"url":"/checklists/{id}/checkItems/{idCheckItem}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Remove an item from a checklist","slug":"checklistsidcheckitemsid","type":"endpoint","title":"/checklists/{id}/checkItems/{idCheckItem}","__v":1,"updatedAt":"2019-06-10T14:28:52.589Z","swagger":{"path":"/checklists/{id}/checkItems/{idCheckItem}"}}]},{"_id":"594d19cd7ecb31003d92d326","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594c1cae1c0e61000fecc602","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:21.557Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the checklist\",\n    \"1-0\": \"**idBoard**\\nstring\",\n    \"1-1\": \"The ID of the board the checklist is on\",\n    \"2-0\": \"**idCard**\\nstring\",\n    \"2-1\": \"The ID of the card the checklist is on\",\n    \"3-0\": \"**name**\\nstring\",\n    \"3-1\": \"The name of the checklist\",\n    \"4-0\": \"**pos**\\nfloat\",\n    \"4-1\": \"The position of the checklist on the card (relative to any other checklists on the card)\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n`GET` `/1/checklists/5914b2923876e144b5cb6974`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5914b2923876e144b5cb6974\\\",\\n  \\\"name\\\": \\\"Awesomeness to come\\\",\\n  \\\"idBoard\\\": \\\"4d5ea62fd76aa1136000000c\\\",\\n  \\\"idCard\\\": \\\"5914b27920508fcb6bfd525f\\\",\\n  \\\"pos\\\": 16384,\\n  \\\"checkItems\\\": [\\n    {\\n      \\\"state\\\": \\\"complete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b29abcbe09ab9478d156\\\",\\n      \\\"name\\\": \\\"Custom Fields in CSV exports\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 16867\\n    },\\n    {\\n      \\\"state\\\": \\\"incomplete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b2a1ee4421b88542b59a\\\",\\n      \\\"name\\\": \\\"Custom Fields on mobile\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 34254\\n    },\\n    {\\n      \\\"state\\\": \\\"incomplete\\\",\\n      \\\"idChecklist\\\": \\\"5914b2923876e144b5cb6974\\\",\\n      \\\"id\\\": \\\"5914b2b2e01e5b17afedf6fc\\\",\\n      \\\"name\\\": \\\"Working well across multiple boards\\\",\\n      \\\"nameData\\\": null,\\n      \\\"pos\\\": 51540\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklist-object","type":"basic","title":"Checklist Object","__v":0,"updatedAt":"2019-06-10T14:28:52.582Z"},{"_id":"594d19e8ead5e5005369e432","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":["5c06d8beada3d40029fb7884"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:48.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Checklists are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to Checklists as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Checklists as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing cards as a nested resource via query params. For instance, the query params are available when you are accessing cards via:  `/object/{id}?checklists=all`.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**checklists**\",\n    \"0-1\": \"One of: `none` or `all`\",\n    \"3-0\": \"**checkItem_fields**\",\n    \"3-1\": \"Default: `name`, `nameData`, `pos`, `state`\\n`all` or a comma-separated list of:\\n`name`\\n`nameDat`\\n`type`\\n`pos`\\n`state`\\n`creationMethod`\",\n    \"1-0\": \"**checklist_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of checklist fields as documented on the [Checklist Object](ref:checklist-object).\",\n    \"2-0\": \"**checkItems**\",\n    \"2-1\": \"Default: `all`\\n*checkItems are always returned.*\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\nHere's an example using the checklists nested resource to get all of the checklists on a board:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/v5sRYGdh/?fields=name&checklists=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"544a947a60022d7de4d28187\\\",\\n  \\\"name\\\": \\\"Connor's 8th Birthday Bash\\\",\\n  \\\"checklists\\\": [\\n    {\\n      \\\"id\\\": \\\"544a947b60022d7de4d281f1\\\",\\n      \\\"name\\\": \\\"Chores\\\",\\n      \\\"idBoard\\\": \\\"544a947a60022d7de4d28187\\\",\\n      \\\"idCard\\\": \\\"544a947b60022d7de4d281aa\\\",\\n      \\\"pos\\\": 16384,\\n      \\\"checkItems\\\": [\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f2\\\",\\n          \\\"name\\\": \\\"Vacuum carpet\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 16683\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f3\\\",\\n          \\\"name\\\": \\\"Clean stove\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 33312\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f4\\\",\\n          \\\"name\\\": \\\"Arrange coat closet\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 50543\\n        },\\n        {\\n          \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n          \\\"state\\\": \\\"incomplete\\\",\\n          \\\"id\\\": \\\"544a947b60022d7de4d281f5\\\",\\n          \\\"name\\\": \\\"Clean out fridge\\\",\\n          \\\"nameData\\\": null,\\n          \\\"pos\\\": 67424\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Checklists as URL Params\"\n}\n[/block]\nChecklists are also available as nested resources via URL parameters. For instance, you may want just the Checklists belonging to a specific resource like a list or a card; in that case you'd use the route `/1/cards/{id}/checklists` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**fields**\",\n    \"0-1\": \"Default: `all`\\n`all` or a comma separated list of checklist fields as documented on the [Checklist Object](ref:checklist-object).\",\n    \"1-0\": \"**cards**\",\n    \"1-1\": \"Values outlined in [Cards Nested Resource](ref:cards-nested-resource) documentation.\",\n    \"2-0\": \"**filter**\",\n    \"2-1\": \"Default: `all`\\nOne of: `none` or `all`\",\n    \"3-0\": \"**checkItems**\",\n    \"3-1\": \"Default: `all`\\nOne of: `none` or `all`\",\n    \"4-0\": \"**checkItem_fields**\",\n    \"4-1\": \"Default: `name`, `nameData`, `pos`, `state`\\n`all` or a comma-separated list of:\\n`name`\\n`nameDat`\\n`type`\\n`pos`\\n`state`\\n`creationMethod`\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nHere's an example using the checklists nested resource to get all of the checklists on a board:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/v5sRYGdh/checklists?fields=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"544a947b60022d7de4d281f1\\\",\\n    \\\"name\\\": \\\"Chores\\\",\\n    \\\"idBoard\\\": \\\"544a947a60022d7de4d28187\\\",\\n    \\\"idCard\\\": \\\"544a947b60022d7de4d281aa\\\",\\n    \\\"pos\\\": 16384,\\n    \\\"limits\\\": {\\n      \\\"checkItems\\\": {\\n        \\\"perChecklist\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 200,\\n          \\\"warnAt\\\": 180\\n        }\\n      }\\n    },\\n    \\\"creationMethod\\\": null,\\n    \\\"checkItems\\\": [\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f2\\\",\\n        \\\"name\\\": \\\"Vacuum carpet\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 16683\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f3\\\",\\n        \\\"name\\\": \\\"Clean stove\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 33312\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f4\\\",\\n        \\\"name\\\": \\\"Arrange coat closet\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 50543\\n      },\\n      {\\n        \\\"idChecklist\\\": \\\"544a947b60022d7de4d281f1\\\",\\n        \\\"state\\\": \\\"incomplete\\\",\\n        \\\"id\\\": \\\"544a947b60022d7de4d281f5\\\",\\n        \\\"name\\\": \\\"Clean out fridge\\\",\\n        \\\"nameData\\\": null,\\n        \\\"pos\\\": 67424\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"checklists-nested-resource","type":"basic","title":"Checklists Nested Resource","__v":1,"updatedAt":"2019-06-10T14:28:52.583Z"},{"_id":"59529975a6c9140033c8082b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:44:21.837Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/checklists/4eea6ae1a5da7f5a49000092?fields=name&cards=all&card_fields=name&key=[application_key]&token=[optional_auth_token]"}]},"results":{"codes":[{"name":"","code":"{\n    \"id\": \"4eea6ae1a5da7f5a49000092\",\n    \"name\": \"API Checklist\",\n    \"checkItems\": [{\n        \"state\": \"complete\",\n        \"id\": \"4eea6aeda5da7f5a490000b9\",\n        \"name\": \"See if there is a call\",\n        \"nameData\": null,\n        \"pos\": 16751\n    }, {\n        \"state\": \"incomplete\",\n        \"id\": \"4eea6af1a5da7f5a490000cc\",\n        \"name\": \"Figure out how to use the call\",\n        \"nameData\": null,\n        \"pos\": 33544\n    }, {\n        \"state\": \"incomplete\",\n        \"id\": \"4eea6af4a5da7f5a490000e1\",\n        \"name\": \"Add it to the code\",\n        \"nameData\": null,\n        \"pos\": 50647\n    }],\n    \"cards\": [{\n        \"id\": \"4eea522c91e31d174600027e\",\n        \"name\": \"Figure out how to read a user's board list\"\n    }]\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529b1956927300370394a9","ref":"","in":"query","required":false,"desc":"Valid values: `all`, `closed`, `none`, `open`, `visible`. Cards is a nested resource. The additional query params available are documented at [Cards Nested Resource](ref:cards-nested-resource).","default":"none","type":"string","name":"cards"},{"_id":"59529b1956927300370394a8","ref":"","in":"query","required":false,"desc":"The check items on the list to return. One of: `all`, `none`.","default":"all","type":"string","name":"checkItems"},{"_id":"59529b4ef544fe0015385d9c","ref":"","in":"query","required":false,"desc":"The fields on the checkItem to return if checkItems are being returned. `all` or a comma-separated list of: `name`, `nameData`, `pos`, `state`, `type`","default":"name, nameData, pos, state","type":"string","name":"checkItem_fields"},{"_id":"59529b75d93ebe003ff33a83","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of checklist [fields](ref:checklist-object)","default":"all","type":"string","name":"fields"}],"url":"/checklists/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"checklistsid","type":"endpoint","title":"/checklists/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.583Z","swagger":{"path":"/checklists/{id}"}},{"_id":"5952998d5692730037039480","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:44:45.883Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529bb128e9ae004b965b9e","ref":"","in":"path","required":false,"desc":"A checklist [field](ref:checklist-object)","default":"","type":"string","name":"field"}],"url":"/checklists/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"checklistsidfield","type":"endpoint","title":"/checklists/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.584Z","swagger":{"path":"/checklists/{id}/{field}"}},{"_id":"5952999c2080bf002bebffc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:00.158Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529d9687514c00630c85e6","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/checklists/{id}/board","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"Individual fields on a board can also be accessed via url parameters. For instance, to retrieve the board's name you could use:\n`GET https://api.trello.com/1/checklists/{id}/board?field=name`\nor\n`GET https://api.trello.com/1/checklists/{id}/board/name`","excerpt":"","slug":"checklistsidboard","type":"endpoint","title":"/checklists/{id}/board","__v":1,"updatedAt":"2019-06-10T14:28:52.584Z","swagger":{"path":"/checklists/{id}/board"}},{"_id":"595299b456927300370394a1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:24.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"}],"url":"/checklists/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"This is a nested resource for the cards object. To see all of the query parameters available check out the [Cards Nested Resource](ref:cards-nested-resource) documentation.","excerpt":"","slug":"checklistsidcards","type":"endpoint","title":"/checklists/{id}/cards","__v":2,"updatedAt":"2019-06-10T14:28:52.585Z","swagger":{"path":"/checklists/{id}/cards"}},{"_id":"595299d04731e4005d825635","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:45:52.151Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/checklists/4eea6ae1a5da7f5a49000092/checkItems?key=[application_key]&token=[optional_auth_token]"}]},"results":{"codes":[{"status":200,"language":"json","code":"[{\n    \"state\": \"complete\",\n    \"id\": \"4eea6aeda5da7f5a490000b9\",\n    \"name\": \"See if there is a call\",\n    \"nameData\": null,\n    \"pos\": 16751\n}, {\n    \"state\": \"incomplete\",\n    \"id\": \"4eea6af1a5da7f5a490000cc\",\n    \"name\": \"Figure out how to use the call\",\n    \"nameData\": null,\n    \"pos\": 33544\n}, {\n    \"state\": \"incomplete\",\n    \"id\": \"4eea6af4a5da7f5a490000e1\",\n    \"name\": \"Add it to the code\",\n    \"nameData\": null,\n    \"pos\": 50647\n}]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529e9387514c00630c85e9","ref":"","in":"query","required":false,"desc":"One of: `all`, `none`.","default":"all","type":"string","name":"filter"},{"_id":"59529e9387514c00630c85e8","ref":"","in":"query","required":false,"desc":"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.","default":"name, nameData, pos, state","type":"string","name":"fields"}],"url":"/checklists/{id}/checkItems","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"checklistsidcardscheckitems","type":"endpoint","title":"/checklists/{id}/checkItems","__v":1,"updatedAt":"2019-06-10T14:28:52.585Z","swagger":{"path":"/checklists/{id}/checkItems"}},{"_id":"595299de9262c20041644cfa","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:06.278Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529ed49262c20041644d23","ref":"","in":"query","required":false,"desc":"One of: `all`, `name`, `nameData`, `pos`, `state`, `type`.","default":"name, nameData, pos, state","type":"string","name":"fields"},{"_id":"59529efaf544fe0015385de2","ref":"","in":"path","required":false,"desc":"ID of the check item to retrieve.","default":"","type":"string","name":"idCheckItem"}],"url":"/checklists/{id}/checkItems/{idCheckItem}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"","slug":"checklistsidcardscheckitemscheckitemid","type":"endpoint","title":"/checklists/{id}/checkItems/{idCheckItem}","__v":5,"updatedAt":"2019-06-10T14:28:52.586Z","swagger":{"path":"/checklists/{id}/checkItems/{idCheckItem}"}},{"_id":"595299ead4f34000575e0717","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:18.543Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529f4da6c9140033c8083b","ref":"","in":"query","required":false,"desc":"Name of the new checklist being created. Should be length of 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"59529f4da6c9140033c8083a","ref":"","in":"query","required":false,"desc":"Determines the position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"}],"url":"/checklists/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"body\": \"To update `checkItems` in a checklist, check out [/cards/{id}/checkItem/{idCheckItem}](ref:cardsidcheckitemidcheckitem-1).\"\n}\n[/block]","excerpt":"Update an existing checklist.","slug":"checklistsid-1","type":"endpoint","title":"/checklists/{id}","__v":6,"updatedAt":"2019-06-10T14:28:52.586Z","swagger":{"path":"/checklists/{id}"}},{"_id":"595299fb56927300370394a5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:46:35.481Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529f99b1a12000672aeec8","ref":"","in":"query","required":true,"desc":"The value to change the checklist name to. Should be a string of length 1 to 16384.","default":"","type":"string","name":"value"}],"url":"/checklists/{id}/name","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"","slug":"checklistsidname","type":"endpoint","title":"/checklists/{id}/name","__v":1,"updatedAt":"2019-06-10T14:28:52.587Z","swagger":{"path":"/checklists/{id}/name"}},{"_id":"59529a1fd96c2900832c2efb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":["5ab5803a191c640012a58685"],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:11.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a021d93ebe003ff33a94","ref":"","in":"query","required":true,"desc":"The ID of the card that the checklist should be added to.","default":"","type":"string","name":"idCard"},{"_id":"5952a021d93ebe003ff33a93","ref":"","in":"query","required":false,"desc":"The name of the checklist. Should be a string of length 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"5952a021d93ebe003ff33a92","ref":"","in":"query","required":false,"desc":"The position of the checklist on the card. One of: `top`, `bottom`, or a positive number.","default":"","type":"string","name":"pos"},{"_id":"5952a021d93ebe003ff33a91","ref":"","in":"query","required":false,"desc":"The ID of a checklist to copy into the new checklist.","default":"","type":"string","name":"idChecklistSource"}],"url":"/checklists","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"","slug":"checklists","type":"endpoint","title":"/checklists","__v":4,"updatedAt":"2019-06-10T14:28:52.588Z","swagger":{"path":"/checklists"}},{"_id":"59529a2ea0e05a0041b074a2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:26.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"5952a07d9262c20041644d27","ref":"","in":"query","required":true,"desc":"The name of the new check item on the checklist. Should be a string of length 1 to 16384.","default":"","type":"string","name":"name"},{"_id":"5952a07d9262c20041644d26","ref":"","in":"query","required":false,"desc":"The position of the check item in the checklist. One of: `top`, `bottom`, or a positive number.","default":"bottom","type":"string","name":"pos"},{"_id":"5952a07d9262c20041644d25","ref":"","in":"query","required":false,"desc":"Determines whether the check item is already checked when created.","default":"false","type":"boolean","name":"checked"}],"url":"/checklists/{id}/checkItems","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"","slug":"checklistsidcheckitems","type":"endpoint","title":"/checklists/{id}/checkItems","__v":1,"updatedAt":"2019-06-10T14:28:52.588Z","swagger":{"path":"/checklists/{id}/checkItems"}},{"_id":"59529a4556927300370394a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:47:49.910Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"}],"url":"/checklists/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"This route is used to delete a checklist from a card.","excerpt":"Delete a checklist","slug":"checklistsid-2","type":"endpoint","title":"/checklists/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.589Z","swagger":{"path":"/checklists/{id}"}},{"_id":"59529a5487514c00630c85dc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cae1c0e61000fecc602","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T17:48:04.835Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59529975a6c9140033c8082c","ref":"","in":"path","required":false,"desc":"ID of a checklist.","default":"","type":"string","name":"id"},{"_id":"59529a6ff168f9001bba9bed","ref":"","in":"path","required":false,"desc":"ID of the checklist item to delete.","default":"","type":"string","name":"idCheckItem"}],"url":"/checklists/{id}/checkItems/{idCheckItem}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Remove an item from a checklist","slug":"checklistsidcheckitemsid","type":"endpoint","title":"/checklists/{id}/checkItems/{idCheckItem}","__v":1,"updatedAt":"2019-06-10T14:28:52.589Z","swagger":{"path":"/checklists/{id}/checkItems/{idCheckItem}"}},{"_id":"5981239a0b339f0035d3f927","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T00:58:02.120Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"Custom Fields are extra bits of structured data attached to cards when our users need a bit more than what Trello provides.\n\nTo use them users need to enable the [Custom Fields Power-Up](http://help.trello.com/article/1067-using-the-custom-fields-power-up).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/e61ecf6-low.gif\",\n        \"low.gif\",\n        640,\n        420,\n        \"#ced0d2\"\n      ]\n    }\n  ]\n}\n[/block]\nIf you want a guide to walk you through how Custom Fields work, check out the [Getting Started With Custom Fields](doc:getting-started-custom-fields) guide.","excerpt":"","slug":"custom-fields","type":"basic","title":"Custom Fields","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.590Z","children":[{"_id":"5ab0f688ade4f4003cf6aff5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5ac6c86d92aeaa000379380f","5c3d04ba689a50006369437e","5c9fab3cbf150900398c1827"],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T11:54:48.384Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"58b9cf0403b108d116c127d0\",\n  \"idPlugin\": \"58b9ce4e7bf0c030dc30bb0d\",\n  \"idModel\": \"58e5aee0e952bc6e910879eb\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"89cfd1a6a96f4258ac6ba5b165fb6a6cb8ed49381b2b392b885cb570fd2acfc3\",\n  \"name\": \"Brand\",\n  \"nameKey\": \"brand\",\n  \"type\": \"text\",\n  \"show\": \"badge\",\n  \"showWhenEmpty\": true,\n  \"editable\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":""}]},"apiSetting":"59812bc7302822002abfbc4f","auth":"required","params":[{"_id":"598128bc302822002abfbbc9","ref":"","in":"path","required":false,"desc":"ID of the customfield to retrieve.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"id\\n**string**\",\n    \"1-0\": \"idModel\\n**string**\",\n    \"2-0\": \"modelType\\n**string**\",\n    \"3-0\": \"fieldGroup\\n**string**\",\n    \"4-0\": \"name\\n**string**\",\n    \"5-0\": \"pos\\n**string**\",\n    \"6-0\": \"type\\n**string**\",\n    \"7-0\": \"options\\n**array**\",\n    \"0-1\": \"The ID of the Custom Field definition.\",\n    \"1-1\": \"The ID of the model that the Custom Field is defined on. This should always be an ID of a board.\",\n    \"2-1\": \"The type of model that the Custom Field is being defined for. This should always be `board`.\",\n    \"3-1\": \"A hash created from the fields of a Custom Field used to manage Custom Fields and values between boards. For more on its use, check out the [Grouping Custom Fields Across Boards](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-grouping-custom-fields-across-boards) section of the Custom Fields guide.\",\n    \"4-1\": \"The name of the Custom Field. This is displayed to the user in the Trello clients.\",\n    \"5-1\": \"The position of the Custom Field. This will be used to determine the order that Custom Fields should be listed when being shown to the user.\",\n    \"6-1\": \"Determines the type of values that can be used when setting values for Custom Fields on cards. Should be one of: `number`, `date`, `text`, `checkbox`, and `list`.\",\n    \"7-1\": \"An array of objects used for Custom Fields of the `list` type. The objects contain data about the options available for the dropdown.\",\n    \"8-0\": \"display\\n**object**\",\n    \"8-1\": \"An object that contains this custom fields display properties. `{ cardFront: true }`\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]\nBelow is an example request to get all of Custom Field definitions for a board and its response:\n\n`curl https://api.trello.com/1/boards/59e63d2744bf34022856c04a/customFields?key={APIkey}&token={APItoken}`\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n    \\\"idModel\\\": \\\"5a00adcebe1991022b4a4bb4\\\",\\n    \\\"modelType\\\": \\\"board\\\",\\n    \\\"fieldGroup\\\": \\\"a18e01ef877d1dba894dfce28e4aee373bd384a458417ab0558d1058825d3d91\\\",\\n    \\\"name\\\": \\\"My List\\\",\\n    \\\"pos\\\": 49152,\\n    \\\"display\\\": {\\n      \\\"cardFront\\\": true\\n    },\\n    \\\"options\\\": [\\n      {\\n        \\\"id\\\": \\\"5a6a23abf958725e1ac86c23\\\",\\n        \\\"idCustomField\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n        \\\"value\\\": {\\n          \\\"text\\\": \\\"First Option\\\"\\n        },\\n        \\\"color\\\": \\\"none\\\",\\n        \\\"pos\\\": 16384\\n      },\\n      {\\n        \\\"id\\\": \\\"5a6a23abf958725e1ac86c22\\\",\\n        \\\"idCustomField\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n        \\\"value\\\": {\\n          \\\"text\\\": \\\"Second Option\\\"\\n        },\\n        \\\"color\\\": \\\"none\\\",\\n        \\\"pos\\\": 32768\\n      }\\n    ],\\n    \\\"type\\\": \\\"list\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\nBelow are the routes used for interacting with individual Custom Fields. The route used above is documented under the boards resource [`1/boards/{idBoard}/customFields`](https://developers.trello.com/v1.0/reference#boardsidcustomfields).","excerpt":"","slug":"custom-fields-object","type":"basic","title":"Custom Fields Object","__v":18,"updatedAt":"2019-06-10T14:28:52.590Z"},{"_id":"5bca5441ee076d0013613f46","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-19T22:01:37.432Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Custom fields can be included as a [nested resource](#understanding-nested-resources). The only parameter is whether to include the custom fields.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**customFields** \",\n    \"0-1\": \"Default: `false`\\n`true`: include the custom fields.\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"custom-fields-nested-resource","type":"basic","title":"Custom Fields Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.591Z"},{"_id":"59812eae559ca6001e3b2496","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:45:18.904Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customFields/5a98670bd6afbd6de1c8c360"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"display\": {\n    \"cardFront\": true\n  },\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598128bc302822002abfbbc9","ref":"","in":"path","required":false,"desc":"ID of the customfield to retrieve.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"get"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"customfieldsid-3","type":"endpoint","title":"/customFields/{id}","__v":4,"updatedAt":"2019-06-10T14:28:52.591Z","swagger":{"path":"/customfields/{id}"}},{"_id":"59812eec0b339f0035d3f9b5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:46:20.827Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"display\": {\n    \"cardFront\": true\n  },\n  \"type\": \"text\"\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"curl","code":"curl -X PUT -H \"Content-Type: application/json\" \\ https://api.trello.com/1/customFields/5a98670bd6afbd6de1c8c360 \\\n-d '{\n  \"name\": \"üèîPriority\"\n}'\n\n\n"}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"598128ceda4e40003c9fb67f","ref":"","in":"path","required":false,"desc":"ID of the customfield to update.","default":"","type":"string","name":"id"},{"_id":"5ab0f9be73348d0062948d19","ref":"","in":"body","required":false,"desc":"The name of the Custom Field","default":"","type":"string","name":"name"},{"_id":"5af0ffa9988cda0003d5908e","ref":"","in":"body","required":false,"desc":"New position for the custom field. Can also be 'top' or 'bottom'","default":"","type":"float","name":"pos"},{"_id":"5af0ffa9988cda0003d5908d","ref":"","in":"body","required":false,"desc":"Whether to display this custom field on the front of cards","default":"","type":"boolean","name":"display/cardFront"}],"url":"/customfields/{id}","method":"put"},"isReference":true,"order":3,"body":"","excerpt":"Update a Custom Field definition.","slug":"customfieldsid","type":"endpoint","title":"/customFields/{id}","__v":4,"updatedAt":"2019-06-10T14:28:52.592Z","swagger":{"path":"/customfields/{id}"}},{"_id":"5ab109c15ea56a0012dced7c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T13:16:49.513Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X POST -H \"Content-Type: application/json\" \\\nhttps://api.trello.com/1/customFields \\\n-d '{\n  idModel: \"5a00adcebe1991022b4a4bb4\",\n  modelType: \"board\",\n  name: \"My Dropdown\",\n  options: [,\n    {\n      color: \"none\",\n      value: {\n        text: \"First Option\"\n      }, \n      pos: 1024\n    },\n    {\n      color: \"none\",\n      value: {\n        text: \"Second Option\"\n      }, \n      pos: 2048\n    }\n  ],\n  pos: \"bottom\",\n  type: \"list\",\n  display_cardFront: false\n}'"}]},"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5a6a2154751b045645255afd\",\n  \"idModel\": \"5a00adcebe1991022b4a4bb4\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"cd1bcb6b508ae631db98d9eae556a793ea34fa3fd2748e8a4085d705d4af1984\",\n  \"name\": \"checkbox3\",\n  \"pos\": 16384,\n  \"type\": \"checkbox\",\n  \"display\": {\n    \"cardFront\": false\n  }\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"5ab10a092459e0004e760764","ref":"","in":"body","required":true,"desc":"The ID of the model for which the Custom Field is being defined. This should always be the ID of a board.","default":"","type":"string","name":"idModel"},{"_id":"5ab10a639975050079733320","ref":"","in":"body","required":true,"desc":"The type of model that the Custom Field is being defined on. This should always be `board`.","default":"","type":"string","name":"modelType"},{"_id":"5ab10a63997505007973331f","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"name"},{"_id":"5ab10a63997505007973331e","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"type"},{"_id":"5ab10a63997505007973331d","ref":"","in":"body","required":false,"desc":"","default":"","type":"string","name":"options"},{"_id":"5ab10a63997505007973331c","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"pos"},{"_id":"5af0fffd4ca2730003cbc9f7","ref":"","in":"body","required":false,"desc":"Whether this custom field should be shown on the front of cards","default":"true","type":"boolean","name":"display_cardFront"}],"url":"/customFields","method":"post"},"isReference":true,"order":4,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Limits\",\n  \"body\": \"A board can have up to 50 Custom Fields defined on a board. Any number of cards on the board can have values set for each field.\"\n}\n[/block]","excerpt":"Create a new Custom Field on a board.","slug":"customfields","type":"endpoint","title":"/customFields","__v":6,"updatedAt":"2019-06-10T14:28:52.592Z","swagger":{"path":"/customFields"}},{"_id":"59812f114e869d0020c3c47a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:46:57.444Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598128e0302822002abfbbca","ref":"","in":"path","required":false,"desc":"ID of the customfield to delete.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"delete"},"isReference":true,"order":5,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"\",\n  \"body\": \"Deleting a custom field definition will also delete all of the values across all cards that have been set for that custom field. There is no way to get those values back after they have been deleted.\"\n}\n[/block]","excerpt":"Delete a Custom Field from a board.","slug":"customfieldsid-1","type":"endpoint","title":"/customFields/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.593Z","swagger":{"path":"/customfields/{id}"}},{"_id":"59812f550b339f0035d3f9b6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:05.166Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"value\": {\n      \"text\": \"Ok\"\n    },\n    \"_id\": \"5ab0faedb513dd379762c232\",\n    \"pos\": 16384,\n    \"color\": \"yellow\"\n  },\n  {\n    \"value\": {\n      \"text\": \"Good\"\n    },\n    \"_id\": \"5ab0fb60f13fc1bdc9ca739c\",\n    \"pos\": 32768,\n    \"color\": \"green\"\n  },\n  {\n    \"value\": {\n      \"text\": \"Bad\"\n    },\n    \"_id\": \"5ab0fb6293d6973bc184bc9a\",\n    \"pos\": 49152,\n    \"color\": \"red\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options"}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"59812a12302822002abfbc2c","ref":"","in":"path","required":false,"desc":"ID of the customfield.","default":"","type":"string","name":"id"}],"url":"/customFields/{id}/options","method":"get"},"isReference":true,"order":6,"body":"","excerpt":"Get the options of a drop down Custom Field","slug":"customfieldsidoptions-1","type":"endpoint","title":"/customFields/{id}/options","__v":1,"updatedAt":"2019-06-10T14:28:52.593Z","swagger":{"path":"/customFields/{id}/options"}},{"_id":"59812f6b559ca6001e3b24b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:27.164Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options/5ab0fb60f13fc1bdc9ca739c"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5ab0fb60f13fc1bdc9ca739c\",\n  \"idCustomField\": \"5ab0fae54cdab797ed6b206e\",\n  \"value\": {\n    \"text\": \"Good\"\n  },\n  \"color\": \"green\",\n  \"pos\": 32768\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59812a38559ca6001e3b2491","ref":"","in":"path","required":false,"desc":"ID of the customfielditem.","default":"","type":"string","name":"id"},{"_id":"59812a38559ca6001e3b2490","ref":"","in":"path","required":false,"desc":"ID of the customfieldoption to retrieve.","default":"","type":"string","name":"idCustomFieldOption"}],"url":"/customFields/{id}/options/{idCustomFieldOption}","method":"get"},"isReference":true,"order":7,"body":"","excerpt":"","slug":"customfieldsidoptionsidcustomfieldoption-3","type":"endpoint","title":"/customFields/{id}/options/{idCustomFieldOption}","__v":1,"updatedAt":"2019-06-10T14:28:52.594Z","swagger":{"path":"/customFields/{id}/options/{idCustomFieldOption}"}},{"_id":"59812f28da4e40003c9fb6ac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5c471be1138d190c350ad1a8"],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:47:20.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"code":"curl -X POST -H \"Content-Type: application/json\" \\ https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options \\ \n-d '{\n  \"value\": { \"text\": \"Bad\" },\n  \"color\": \"red\",\n  \"pos\": \"bottom\"\n}'\n\n","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5ab0fcdb436e2ce2061b862e\",\n  \"idCustomField\": \"5ab0fae54cdab797ed6b206e\",\n  \"value\": { \"text\": \"Bad\" },\n  \"color\": \"red\",\n  \"pos\": 65536\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598129fe66c4c700148ea3f6","ref":"","in":"path","required":false,"desc":"ID of the customfield.","default":"","type":"string","name":"id"}],"url":"/customFields/{id}/options","method":"post"},"isReference":true,"order":8,"body":"","excerpt":"Add an option to a dropdown Custom Field","slug":"customfieldsidoptions-2","type":"endpoint","title":"/customFields/{id}/options","__v":7,"updatedAt":"2019-06-10T14:28:52.595Z","swagger":{"path":"/customFields/{id}/options"}},{"_id":"59812f8a559ca6001e3b24ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:58.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X DELETE https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options/5ab0fcdb436e2ce2061b862e?key={APIKey}&token={APIToken}\n"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59812a38559ca6001e3b2491","ref":"","in":"path","required":false,"desc":"ID of the customfielditem.","default":"","type":"string","name":"id"},{"_id":"59812a38559ca6001e3b2490","ref":"","in":"path","required":false,"desc":"ID of the customfieldoption to delete.","default":"","type":"string","name":"idCustomFieldOption"}],"url":"/customfields/{id}/options/{idCustomFieldOption}","method":"delete"},"isReference":true,"order":9,"body":"","excerpt":"Delete an option from a Custom Field dropdown.","slug":"customfieldsidoptionsidcustomfieldoption-1","type":"endpoint","title":"/customfields/{id}/options/{idCustomFieldOption}","__v":3,"updatedAt":"2019-06-10T14:28:52.596Z","swagger":{"path":"/customfields/{id}/options/{idCustomFieldOption}"}},{"_id":"5ab0fe562459e0004e76024c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T12:28:06.538Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"Updating a card's values for Custom Fields is done via a nested route in the cards resource: `/1/cards/{idCard}/customField/{idCustomField}/item`.\n\nFor a walkthrough on getting cards and their Custom Field values, check out the [Custom Field Values On Cards](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-custom-field-values-on-cards) section of the Custom Fields guide.\n\nAlthough setting, updating, and deleting the value of a custom field on a card is done through the cards resource, we're documenting it below to keep it within the context of how Custom Fields works.","excerpt":"","slug":"setting-custom-field-values-on-cards","type":"basic","title":"Getting and Setting Custom Field Values On Cards","__v":0,"updatedAt":"2019-06-10T14:28:52.597Z"},{"_id":"59812fc00b339f0035d3f9b7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5ad4793e5ac8a60003101b1d","5b65fc665a917000030b83c7","5b65fd17b1906e000319f9e4"],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:49:52.417Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X PUT -H \"Content-Type: application/json\" \\\nhttps://api.trello.com/1/card/5a4d294ff7239936994177f3/customField/5a6a23abf958725e1ac86c21/item \\\n-d '{\n  \"value\": {\"text\": \"High\"},\n  \"key\": \"\",\n  \"token\": \"\"\n}'"}]},"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5ab0fe68bafbb318dd513280\",\n  \"value\": {\n    \"text\": \"High\"\n  },\n  \"idCustomField\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"5a849a1ee027c2956483fbf6\",\n  \"modelType\": \"card\"\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"598129294e869d0020c3c414","ref":"","in":"path","required":false,"desc":"ID of the card that the Custom Field value should be set/updated for","default":"","type":"string","name":"idCard"},{"_id":"5ab1001999bb810012dd97eb","ref":"","in":"path","required":false,"desc":"ID of the Custom Field on the card.","default":"","type":"string","name":"idCustomField"},{"_id":"5cd0a3f832cc5c00518e0b47","ref":"customFieldItemValue","in":"body","required":true,"desc":"An object containing the key and value to set for the card's Custom Field value. The key used to set the value should match the type of Custom Field defined.","default":"","type":"object","name":"value"}],"url":"/card/{idCard}/customField/{idCustomField}/item","method":"put"},"isReference":true,"order":11,"body":"Except for `list` type Custom Fields, the object you pass in as the `value` should be an object that has a key that matches the type of the Custom Field. For instance, if there is a Custom Field of type `number` that a value is being set for, the data you pass into the body should contain the following: `\"value\": {\"number\": \"3\"}`.\n\nWhen setting a `list` type Custom Field item, you only need pass in an `idValue` key that is the ID of the Custom Field's option that you want to set the value to.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Custom Field Type\",\n    \"h-1\": \"Expected Values\",\n    \"0-0\": \"Text\",\n    \"0-1\": \"`{ \\\"value\\\": { \\\"text\\\": \\\"Hello, world!\\\" } }`\",\n    \"1-0\": \"Number\",\n    \"1-1\": \"`{ \\\"value\\\": { \\\"number\\\": \\\"42\\\" } }`\",\n    \"2-0\": \"Date\",\n    \"2-1\": \"`{ \\\"value\\\": { \\\"date\\\": \\\"2018-03-13T16:00:00.000Z\\\" } }`\",\n    \"3-0\": \"Checkbox\",\n    \"3-1\": \"`{ \\\"value\\\": { \\\"checked\\\": \\\"true\\\" } }`\",\n    \"4-0\": \"List\",\n    \"4-1\": \"`{ \\\"idValue\\\": \\\"5ab10be237846c43015f108f\\\" }`\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Always Send Strings\",\n  \"body\": \"The value field expects the final value to always be a string, regardless of the type of field. For instance the following should be included in the body when updating a checkbox field:\\n`\\\"value\\\": { \\\"checked\\\": \\\"true\\\" }`\"\n}\n[/block]\nYou can't make a DELETE request to any custom field item. You can only clear out a card's custom field item value with an empty PUT request:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X PUT -H \\\"Content-Type: application/json\\\" \\\\\\nhttps://api.trello.com/1/card/5a300b5036c4681398d3dab1/customField/5a6a23abf958725e1ac86c21/item \\\\\\n-d '{\\n  \\\"value\\\": \\\"\\\",\\n  \\\"key\\\": \\\"\\\",\\n  \\\"token\\\": \\\"\\\"\\n}'\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd we get back an empty object in response - `{}`.\n\nAn example updating a custom field item using [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) in javascript:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var url = \\\"https://api.trello.com/1/cards/{idCard}/customField/{idCustomField}/item?token={yourToken}&key={yourKey}\\\";\\nvar data = {value: { number: \\\"42\\\" }};\\nfetch(url, { body: JSON.stringify(data), method: 'PUT', headers: {'content-type': 'application/json'}})\\n.then((resp) => resp.json())\\n.then((data) => console.log(JSON.stringify(data, null, 2)))\\n.catch((err) => console.log(JSON.stringify(err, null, 2)))\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe equivalent using Python's [requests](http://docs.python-requests.org/en/master/) library:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"import requests\\n\\napi_key = ''\\napi_token = ''\\n\\ncardId = ''\\ncustomFieldId = ''\\n\\nurl = f'https://api.trello.com/1/card/{cardId}/customField/{customFieldId}/item?&key={api_key}&token={api_token}'\\n\\n# Assuming the custom field is of type number\\ndata = { 'value': { 'number': '42' } }\\n\\nresponse = requests.put(url, json=data)\\n\\nprint(response.status_code)\\nprint(response.content)\",\n      \"language\": \"python\"\n    }\n  ]\n}\n[/block]","excerpt":"Setting, updating, and removing the value for a Custom Field on a card.","slug":"customfielditemsid","type":"endpoint","title":"/card/{idCard}/customField/{idCustomField}/item","__v":37,"updatedAt":"2019-06-10T14:28:52.598Z","swagger":{"path":"/card/{idCard}/customField/{idCustomField}/item"}},{"_id":"5c47432a0309ec0ea34116e7","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-22T16:22:02.970Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/customFields?token=[yourToken]&key=[yourKey]"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/customFields","method":"get"},"isReference":true,"order":12,"body":"","excerpt":"Get the Custom Field Definitions that exist on a board.","slug":"boardsidcustomfields-1","type":"endpoint","title":"/boards/{id}/customFields","__v":3,"updatedAt":"2019-06-10T14:28:52.599Z","swagger":{"path":"/boards/{id}/customFields"}}],"childrenPages":[{"_id":"5ab0f688ade4f4003cf6aff5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5ac6c86d92aeaa000379380f","5c3d04ba689a50006369437e","5c9fab3cbf150900398c1827"],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T11:54:48.384Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"58b9cf0403b108d116c127d0\",\n  \"idPlugin\": \"58b9ce4e7bf0c030dc30bb0d\",\n  \"idModel\": \"58e5aee0e952bc6e910879eb\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"89cfd1a6a96f4258ac6ba5b165fb6a6cb8ed49381b2b392b885cb570fd2acfc3\",\n  \"name\": \"Brand\",\n  \"nameKey\": \"brand\",\n  \"type\": \"text\",\n  \"show\": \"badge\",\n  \"showWhenEmpty\": true,\n  \"editable\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":""}]},"apiSetting":"59812bc7302822002abfbc4f","auth":"required","params":[{"_id":"598128bc302822002abfbbc9","ref":"","in":"path","required":false,"desc":"ID of the customfield to retrieve.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"id\\n**string**\",\n    \"1-0\": \"idModel\\n**string**\",\n    \"2-0\": \"modelType\\n**string**\",\n    \"3-0\": \"fieldGroup\\n**string**\",\n    \"4-0\": \"name\\n**string**\",\n    \"5-0\": \"pos\\n**string**\",\n    \"6-0\": \"type\\n**string**\",\n    \"7-0\": \"options\\n**array**\",\n    \"0-1\": \"The ID of the Custom Field definition.\",\n    \"1-1\": \"The ID of the model that the Custom Field is defined on. This should always be an ID of a board.\",\n    \"2-1\": \"The type of model that the Custom Field is being defined for. This should always be `board`.\",\n    \"3-1\": \"A hash created from the fields of a Custom Field used to manage Custom Fields and values between boards. For more on its use, check out the [Grouping Custom Fields Across Boards](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-grouping-custom-fields-across-boards) section of the Custom Fields guide.\",\n    \"4-1\": \"The name of the Custom Field. This is displayed to the user in the Trello clients.\",\n    \"5-1\": \"The position of the Custom Field. This will be used to determine the order that Custom Fields should be listed when being shown to the user.\",\n    \"6-1\": \"Determines the type of values that can be used when setting values for Custom Fields on cards. Should be one of: `number`, `date`, `text`, `checkbox`, and `list`.\",\n    \"7-1\": \"An array of objects used for Custom Fields of the `list` type. The objects contain data about the options available for the dropdown.\",\n    \"8-0\": \"display\\n**object**\",\n    \"8-1\": \"An object that contains this custom fields display properties. `{ cardFront: true }`\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]\nBelow is an example request to get all of Custom Field definitions for a board and its response:\n\n`curl https://api.trello.com/1/boards/59e63d2744bf34022856c04a/customFields?key={APIkey}&token={APItoken}`\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n    \\\"idModel\\\": \\\"5a00adcebe1991022b4a4bb4\\\",\\n    \\\"modelType\\\": \\\"board\\\",\\n    \\\"fieldGroup\\\": \\\"a18e01ef877d1dba894dfce28e4aee373bd384a458417ab0558d1058825d3d91\\\",\\n    \\\"name\\\": \\\"My List\\\",\\n    \\\"pos\\\": 49152,\\n    \\\"display\\\": {\\n      \\\"cardFront\\\": true\\n    },\\n    \\\"options\\\": [\\n      {\\n        \\\"id\\\": \\\"5a6a23abf958725e1ac86c23\\\",\\n        \\\"idCustomField\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n        \\\"value\\\": {\\n          \\\"text\\\": \\\"First Option\\\"\\n        },\\n        \\\"color\\\": \\\"none\\\",\\n        \\\"pos\\\": 16384\\n      },\\n      {\\n        \\\"id\\\": \\\"5a6a23abf958725e1ac86c22\\\",\\n        \\\"idCustomField\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n        \\\"value\\\": {\\n          \\\"text\\\": \\\"Second Option\\\"\\n        },\\n        \\\"color\\\": \\\"none\\\",\\n        \\\"pos\\\": 32768\\n      }\\n    ],\\n    \\\"type\\\": \\\"list\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\nBelow are the routes used for interacting with individual Custom Fields. The route used above is documented under the boards resource [`1/boards/{idBoard}/customFields`](https://developers.trello.com/v1.0/reference#boardsidcustomfields).","excerpt":"","slug":"custom-fields-object","type":"basic","title":"Custom Fields Object","__v":18,"updatedAt":"2019-06-10T14:28:52.590Z"},{"_id":"5bca5441ee076d0013613f46","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-19T22:01:37.432Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Custom fields can be included as a [nested resource](#understanding-nested-resources). The only parameter is whether to include the custom fields.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**customFields** \",\n    \"0-1\": \"Default: `false`\\n`true`: include the custom fields.\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"custom-fields-nested-resource","type":"basic","title":"Custom Fields Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.591Z"},{"_id":"59812eae559ca6001e3b2496","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:45:18.904Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customFields/5a98670bd6afbd6de1c8c360"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"display\": {\n    \"cardFront\": true\n  },\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598128bc302822002abfbbc9","ref":"","in":"path","required":false,"desc":"ID of the customfield to retrieve.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"get"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"customfieldsid-3","type":"endpoint","title":"/customFields/{id}","__v":4,"updatedAt":"2019-06-10T14:28:52.591Z","swagger":{"path":"/customfields/{id}"}},{"_id":"59812eec0b339f0035d3f9b5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:46:20.827Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"display\": {\n    \"cardFront\": true\n  },\n  \"type\": \"text\"\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"curl","code":"curl -X PUT -H \"Content-Type: application/json\" \\ https://api.trello.com/1/customFields/5a98670bd6afbd6de1c8c360 \\\n-d '{\n  \"name\": \"üèîPriority\"\n}'\n\n\n"}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"598128ceda4e40003c9fb67f","ref":"","in":"path","required":false,"desc":"ID of the customfield to update.","default":"","type":"string","name":"id"},{"_id":"5ab0f9be73348d0062948d19","ref":"","in":"body","required":false,"desc":"The name of the Custom Field","default":"","type":"string","name":"name"},{"_id":"5af0ffa9988cda0003d5908e","ref":"","in":"body","required":false,"desc":"New position for the custom field. Can also be 'top' or 'bottom'","default":"","type":"float","name":"pos"},{"_id":"5af0ffa9988cda0003d5908d","ref":"","in":"body","required":false,"desc":"Whether to display this custom field on the front of cards","default":"","type":"boolean","name":"display/cardFront"}],"url":"/customfields/{id}","method":"put"},"isReference":true,"order":3,"body":"","excerpt":"Update a Custom Field definition.","slug":"customfieldsid","type":"endpoint","title":"/customFields/{id}","__v":4,"updatedAt":"2019-06-10T14:28:52.592Z","swagger":{"path":"/customfields/{id}"}},{"_id":"5ab109c15ea56a0012dced7c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T13:16:49.513Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X POST -H \"Content-Type: application/json\" \\\nhttps://api.trello.com/1/customFields \\\n-d '{\n  idModel: \"5a00adcebe1991022b4a4bb4\",\n  modelType: \"board\",\n  name: \"My Dropdown\",\n  options: [,\n    {\n      color: \"none\",\n      value: {\n        text: \"First Option\"\n      }, \n      pos: 1024\n    },\n    {\n      color: \"none\",\n      value: {\n        text: \"Second Option\"\n      }, \n      pos: 2048\n    }\n  ],\n  pos: \"bottom\",\n  type: \"list\",\n  display_cardFront: false\n}'"}]},"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5a6a2154751b045645255afd\",\n  \"idModel\": \"5a00adcebe1991022b4a4bb4\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"cd1bcb6b508ae631db98d9eae556a793ea34fa3fd2748e8a4085d705d4af1984\",\n  \"name\": \"checkbox3\",\n  \"pos\": 16384,\n  \"type\": \"checkbox\",\n  \"display\": {\n    \"cardFront\": false\n  }\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"5ab10a092459e0004e760764","ref":"","in":"body","required":true,"desc":"The ID of the model for which the Custom Field is being defined. This should always be the ID of a board.","default":"","type":"string","name":"idModel"},{"_id":"5ab10a639975050079733320","ref":"","in":"body","required":true,"desc":"The type of model that the Custom Field is being defined on. This should always be `board`.","default":"","type":"string","name":"modelType"},{"_id":"5ab10a63997505007973331f","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"name"},{"_id":"5ab10a63997505007973331e","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"type"},{"_id":"5ab10a63997505007973331d","ref":"","in":"body","required":false,"desc":"","default":"","type":"string","name":"options"},{"_id":"5ab10a63997505007973331c","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"pos"},{"_id":"5af0fffd4ca2730003cbc9f7","ref":"","in":"body","required":false,"desc":"Whether this custom field should be shown on the front of cards","default":"true","type":"boolean","name":"display_cardFront"}],"url":"/customFields","method":"post"},"isReference":true,"order":4,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Limits\",\n  \"body\": \"A board can have up to 50 Custom Fields defined on a board. Any number of cards on the board can have values set for each field.\"\n}\n[/block]","excerpt":"Create a new Custom Field on a board.","slug":"customfields","type":"endpoint","title":"/customFields","__v":6,"updatedAt":"2019-06-10T14:28:52.592Z","swagger":{"path":"/customFields"}},{"_id":"59812f114e869d0020c3c47a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:46:57.444Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598128e0302822002abfbbca","ref":"","in":"path","required":false,"desc":"ID of the customfield to delete.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"delete"},"isReference":true,"order":5,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"\",\n  \"body\": \"Deleting a custom field definition will also delete all of the values across all cards that have been set for that custom field. There is no way to get those values back after they have been deleted.\"\n}\n[/block]","excerpt":"Delete a Custom Field from a board.","slug":"customfieldsid-1","type":"endpoint","title":"/customFields/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.593Z","swagger":{"path":"/customfields/{id}"}},{"_id":"59812f550b339f0035d3f9b6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:05.166Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"value\": {\n      \"text\": \"Ok\"\n    },\n    \"_id\": \"5ab0faedb513dd379762c232\",\n    \"pos\": 16384,\n    \"color\": \"yellow\"\n  },\n  {\n    \"value\": {\n      \"text\": \"Good\"\n    },\n    \"_id\": \"5ab0fb60f13fc1bdc9ca739c\",\n    \"pos\": 32768,\n    \"color\": \"green\"\n  },\n  {\n    \"value\": {\n      \"text\": \"Bad\"\n    },\n    \"_id\": \"5ab0fb6293d6973bc184bc9a\",\n    \"pos\": 49152,\n    \"color\": \"red\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options"}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"59812a12302822002abfbc2c","ref":"","in":"path","required":false,"desc":"ID of the customfield.","default":"","type":"string","name":"id"}],"url":"/customFields/{id}/options","method":"get"},"isReference":true,"order":6,"body":"","excerpt":"Get the options of a drop down Custom Field","slug":"customfieldsidoptions-1","type":"endpoint","title":"/customFields/{id}/options","__v":1,"updatedAt":"2019-06-10T14:28:52.593Z","swagger":{"path":"/customFields/{id}/options"}},{"_id":"59812f6b559ca6001e3b24b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:27.164Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options/5ab0fb60f13fc1bdc9ca739c"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5ab0fb60f13fc1bdc9ca739c\",\n  \"idCustomField\": \"5ab0fae54cdab797ed6b206e\",\n  \"value\": {\n    \"text\": \"Good\"\n  },\n  \"color\": \"green\",\n  \"pos\": 32768\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59812a38559ca6001e3b2491","ref":"","in":"path","required":false,"desc":"ID of the customfielditem.","default":"","type":"string","name":"id"},{"_id":"59812a38559ca6001e3b2490","ref":"","in":"path","required":false,"desc":"ID of the customfieldoption to retrieve.","default":"","type":"string","name":"idCustomFieldOption"}],"url":"/customFields/{id}/options/{idCustomFieldOption}","method":"get"},"isReference":true,"order":7,"body":"","excerpt":"","slug":"customfieldsidoptionsidcustomfieldoption-3","type":"endpoint","title":"/customFields/{id}/options/{idCustomFieldOption}","__v":1,"updatedAt":"2019-06-10T14:28:52.594Z","swagger":{"path":"/customFields/{id}/options/{idCustomFieldOption}"}},{"_id":"59812f28da4e40003c9fb6ac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5c471be1138d190c350ad1a8"],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:47:20.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"code":"curl -X POST -H \"Content-Type: application/json\" \\ https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options \\ \n-d '{\n  \"value\": { \"text\": \"Bad\" },\n  \"color\": \"red\",\n  \"pos\": \"bottom\"\n}'\n\n","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5ab0fcdb436e2ce2061b862e\",\n  \"idCustomField\": \"5ab0fae54cdab797ed6b206e\",\n  \"value\": { \"text\": \"Bad\" },\n  \"color\": \"red\",\n  \"pos\": 65536\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598129fe66c4c700148ea3f6","ref":"","in":"path","required":false,"desc":"ID of the customfield.","default":"","type":"string","name":"id"}],"url":"/customFields/{id}/options","method":"post"},"isReference":true,"order":8,"body":"","excerpt":"Add an option to a dropdown Custom Field","slug":"customfieldsidoptions-2","type":"endpoint","title":"/customFields/{id}/options","__v":7,"updatedAt":"2019-06-10T14:28:52.595Z","swagger":{"path":"/customFields/{id}/options"}},{"_id":"59812f8a559ca6001e3b24ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:58.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X DELETE https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options/5ab0fcdb436e2ce2061b862e?key={APIKey}&token={APIToken}\n"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59812a38559ca6001e3b2491","ref":"","in":"path","required":false,"desc":"ID of the customfielditem.","default":"","type":"string","name":"id"},{"_id":"59812a38559ca6001e3b2490","ref":"","in":"path","required":false,"desc":"ID of the customfieldoption to delete.","default":"","type":"string","name":"idCustomFieldOption"}],"url":"/customfields/{id}/options/{idCustomFieldOption}","method":"delete"},"isReference":true,"order":9,"body":"","excerpt":"Delete an option from a Custom Field dropdown.","slug":"customfieldsidoptionsidcustomfieldoption-1","type":"endpoint","title":"/customfields/{id}/options/{idCustomFieldOption}","__v":3,"updatedAt":"2019-06-10T14:28:52.596Z","swagger":{"path":"/customfields/{id}/options/{idCustomFieldOption}"}},{"_id":"5ab0fe562459e0004e76024c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T12:28:06.538Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"Updating a card's values for Custom Fields is done via a nested route in the cards resource: `/1/cards/{idCard}/customField/{idCustomField}/item`.\n\nFor a walkthrough on getting cards and their Custom Field values, check out the [Custom Field Values On Cards](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-custom-field-values-on-cards) section of the Custom Fields guide.\n\nAlthough setting, updating, and deleting the value of a custom field on a card is done through the cards resource, we're documenting it below to keep it within the context of how Custom Fields works.","excerpt":"","slug":"setting-custom-field-values-on-cards","type":"basic","title":"Getting and Setting Custom Field Values On Cards","__v":0,"updatedAt":"2019-06-10T14:28:52.597Z"},{"_id":"59812fc00b339f0035d3f9b7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5ad4793e5ac8a60003101b1d","5b65fc665a917000030b83c7","5b65fd17b1906e000319f9e4"],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:49:52.417Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X PUT -H \"Content-Type: application/json\" \\\nhttps://api.trello.com/1/card/5a4d294ff7239936994177f3/customField/5a6a23abf958725e1ac86c21/item \\\n-d '{\n  \"value\": {\"text\": \"High\"},\n  \"key\": \"\",\n  \"token\": \"\"\n}'"}]},"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5ab0fe68bafbb318dd513280\",\n  \"value\": {\n    \"text\": \"High\"\n  },\n  \"idCustomField\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"5a849a1ee027c2956483fbf6\",\n  \"modelType\": \"card\"\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"598129294e869d0020c3c414","ref":"","in":"path","required":false,"desc":"ID of the card that the Custom Field value should be set/updated for","default":"","type":"string","name":"idCard"},{"_id":"5ab1001999bb810012dd97eb","ref":"","in":"path","required":false,"desc":"ID of the Custom Field on the card.","default":"","type":"string","name":"idCustomField"},{"_id":"5cd0a3f832cc5c00518e0b47","ref":"customFieldItemValue","in":"body","required":true,"desc":"An object containing the key and value to set for the card's Custom Field value. The key used to set the value should match the type of Custom Field defined.","default":"","type":"object","name":"value"}],"url":"/card/{idCard}/customField/{idCustomField}/item","method":"put"},"isReference":true,"order":11,"body":"Except for `list` type Custom Fields, the object you pass in as the `value` should be an object that has a key that matches the type of the Custom Field. For instance, if there is a Custom Field of type `number` that a value is being set for, the data you pass into the body should contain the following: `\"value\": {\"number\": \"3\"}`.\n\nWhen setting a `list` type Custom Field item, you only need pass in an `idValue` key that is the ID of the Custom Field's option that you want to set the value to.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Custom Field Type\",\n    \"h-1\": \"Expected Values\",\n    \"0-0\": \"Text\",\n    \"0-1\": \"`{ \\\"value\\\": { \\\"text\\\": \\\"Hello, world!\\\" } }`\",\n    \"1-0\": \"Number\",\n    \"1-1\": \"`{ \\\"value\\\": { \\\"number\\\": \\\"42\\\" } }`\",\n    \"2-0\": \"Date\",\n    \"2-1\": \"`{ \\\"value\\\": { \\\"date\\\": \\\"2018-03-13T16:00:00.000Z\\\" } }`\",\n    \"3-0\": \"Checkbox\",\n    \"3-1\": \"`{ \\\"value\\\": { \\\"checked\\\": \\\"true\\\" } }`\",\n    \"4-0\": \"List\",\n    \"4-1\": \"`{ \\\"idValue\\\": \\\"5ab10be237846c43015f108f\\\" }`\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Always Send Strings\",\n  \"body\": \"The value field expects the final value to always be a string, regardless of the type of field. For instance the following should be included in the body when updating a checkbox field:\\n`\\\"value\\\": { \\\"checked\\\": \\\"true\\\" }`\"\n}\n[/block]\nYou can't make a DELETE request to any custom field item. You can only clear out a card's custom field item value with an empty PUT request:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X PUT -H \\\"Content-Type: application/json\\\" \\\\\\nhttps://api.trello.com/1/card/5a300b5036c4681398d3dab1/customField/5a6a23abf958725e1ac86c21/item \\\\\\n-d '{\\n  \\\"value\\\": \\\"\\\",\\n  \\\"key\\\": \\\"\\\",\\n  \\\"token\\\": \\\"\\\"\\n}'\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd we get back an empty object in response - `{}`.\n\nAn example updating a custom field item using [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) in javascript:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var url = \\\"https://api.trello.com/1/cards/{idCard}/customField/{idCustomField}/item?token={yourToken}&key={yourKey}\\\";\\nvar data = {value: { number: \\\"42\\\" }};\\nfetch(url, { body: JSON.stringify(data), method: 'PUT', headers: {'content-type': 'application/json'}})\\n.then((resp) => resp.json())\\n.then((data) => console.log(JSON.stringify(data, null, 2)))\\n.catch((err) => console.log(JSON.stringify(err, null, 2)))\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe equivalent using Python's [requests](http://docs.python-requests.org/en/master/) library:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"import requests\\n\\napi_key = ''\\napi_token = ''\\n\\ncardId = ''\\ncustomFieldId = ''\\n\\nurl = f'https://api.trello.com/1/card/{cardId}/customField/{customFieldId}/item?&key={api_key}&token={api_token}'\\n\\n# Assuming the custom field is of type number\\ndata = { 'value': { 'number': '42' } }\\n\\nresponse = requests.put(url, json=data)\\n\\nprint(response.status_code)\\nprint(response.content)\",\n      \"language\": \"python\"\n    }\n  ]\n}\n[/block]","excerpt":"Setting, updating, and removing the value for a Custom Field on a card.","slug":"customfielditemsid","type":"endpoint","title":"/card/{idCard}/customField/{idCustomField}/item","__v":37,"updatedAt":"2019-06-10T14:28:52.598Z","swagger":{"path":"/card/{idCard}/customField/{idCustomField}/item"}},{"_id":"5c47432a0309ec0ea34116e7","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-22T16:22:02.970Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/customFields?token=[yourToken]&key=[yourKey]"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/customFields","method":"get"},"isReference":true,"order":12,"body":"","excerpt":"Get the Custom Field Definitions that exist on a board.","slug":"boardsidcustomfields-1","type":"endpoint","title":"/boards/{id}/customFields","__v":3,"updatedAt":"2019-06-10T14:28:52.599Z","swagger":{"path":"/boards/{id}/customFields"}}]},{"_id":"5ab0f688ade4f4003cf6aff5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5ac6c86d92aeaa000379380f","5c3d04ba689a50006369437e","5c9fab3cbf150900398c1827"],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T11:54:48.384Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"58b9cf0403b108d116c127d0\",\n  \"idPlugin\": \"58b9ce4e7bf0c030dc30bb0d\",\n  \"idModel\": \"58e5aee0e952bc6e910879eb\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"89cfd1a6a96f4258ac6ba5b165fb6a6cb8ed49381b2b392b885cb570fd2acfc3\",\n  \"name\": \"Brand\",\n  \"nameKey\": \"brand\",\n  \"type\": \"text\",\n  \"show\": \"badge\",\n  \"showWhenEmpty\": true,\n  \"editable\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":""}]},"apiSetting":"59812bc7302822002abfbc4f","auth":"required","params":[{"_id":"598128bc302822002abfbbc9","ref":"","in":"path","required":false,"desc":"ID of the customfield to retrieve.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"id\\n**string**\",\n    \"1-0\": \"idModel\\n**string**\",\n    \"2-0\": \"modelType\\n**string**\",\n    \"3-0\": \"fieldGroup\\n**string**\",\n    \"4-0\": \"name\\n**string**\",\n    \"5-0\": \"pos\\n**string**\",\n    \"6-0\": \"type\\n**string**\",\n    \"7-0\": \"options\\n**array**\",\n    \"0-1\": \"The ID of the Custom Field definition.\",\n    \"1-1\": \"The ID of the model that the Custom Field is defined on. This should always be an ID of a board.\",\n    \"2-1\": \"The type of model that the Custom Field is being defined for. This should always be `board`.\",\n    \"3-1\": \"A hash created from the fields of a Custom Field used to manage Custom Fields and values between boards. For more on its use, check out the [Grouping Custom Fields Across Boards](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-grouping-custom-fields-across-boards) section of the Custom Fields guide.\",\n    \"4-1\": \"The name of the Custom Field. This is displayed to the user in the Trello clients.\",\n    \"5-1\": \"The position of the Custom Field. This will be used to determine the order that Custom Fields should be listed when being shown to the user.\",\n    \"6-1\": \"Determines the type of values that can be used when setting values for Custom Fields on cards. Should be one of: `number`, `date`, `text`, `checkbox`, and `list`.\",\n    \"7-1\": \"An array of objects used for Custom Fields of the `list` type. The objects contain data about the options available for the dropdown.\",\n    \"8-0\": \"display\\n**object**\",\n    \"8-1\": \"An object that contains this custom fields display properties. `{ cardFront: true }`\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]\nBelow is an example request to get all of Custom Field definitions for a board and its response:\n\n`curl https://api.trello.com/1/boards/59e63d2744bf34022856c04a/customFields?key={APIkey}&token={APItoken}`\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n    \\\"idModel\\\": \\\"5a00adcebe1991022b4a4bb4\\\",\\n    \\\"modelType\\\": \\\"board\\\",\\n    \\\"fieldGroup\\\": \\\"a18e01ef877d1dba894dfce28e4aee373bd384a458417ab0558d1058825d3d91\\\",\\n    \\\"name\\\": \\\"My List\\\",\\n    \\\"pos\\\": 49152,\\n    \\\"display\\\": {\\n      \\\"cardFront\\\": true\\n    },\\n    \\\"options\\\": [\\n      {\\n        \\\"id\\\": \\\"5a6a23abf958725e1ac86c23\\\",\\n        \\\"idCustomField\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n        \\\"value\\\": {\\n          \\\"text\\\": \\\"First Option\\\"\\n        },\\n        \\\"color\\\": \\\"none\\\",\\n        \\\"pos\\\": 16384\\n      },\\n      {\\n        \\\"id\\\": \\\"5a6a23abf958725e1ac86c22\\\",\\n        \\\"idCustomField\\\": \\\"5a6a23abf958725e1ac86c21\\\",\\n        \\\"value\\\": {\\n          \\\"text\\\": \\\"Second Option\\\"\\n        },\\n        \\\"color\\\": \\\"none\\\",\\n        \\\"pos\\\": 32768\\n      }\\n    ],\\n    \\\"type\\\": \\\"list\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\nBelow are the routes used for interacting with individual Custom Fields. The route used above is documented under the boards resource [`1/boards/{idBoard}/customFields`](https://developers.trello.com/v1.0/reference#boardsidcustomfields).","excerpt":"","slug":"custom-fields-object","type":"basic","title":"Custom Fields Object","__v":18,"updatedAt":"2019-06-10T14:28:52.590Z"},{"_id":"5bca5441ee076d0013613f46","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5b75d499c1398c0003dbf656","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-19T22:01:37.432Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Custom fields can be included as a [nested resource](#understanding-nested-resources). The only parameter is whether to include the custom fields.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**customFields** \",\n    \"0-1\": \"Default: `false`\\n`true`: include the custom fields.\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"custom-fields-nested-resource","type":"basic","title":"Custom Fields Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.591Z"},{"_id":"59812eae559ca6001e3b2496","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:45:18.904Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customFields/5a98670bd6afbd6de1c8c360"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"display\": {\n    \"cardFront\": true\n  },\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598128bc302822002abfbbc9","ref":"","in":"path","required":false,"desc":"ID of the customfield to retrieve.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"get"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"customfieldsid-3","type":"endpoint","title":"/customFields/{id}","__v":4,"updatedAt":"2019-06-10T14:28:52.591Z","swagger":{"path":"/customfields/{id}"}},{"_id":"59812eec0b339f0035d3f9b5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:46:20.827Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"display\": {\n    \"cardFront\": true\n  },\n  \"type\": \"text\"\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"examples":{"codes":[{"language":"curl","code":"curl -X PUT -H \"Content-Type: application/json\" \\ https://api.trello.com/1/customFields/5a98670bd6afbd6de1c8c360 \\\n-d '{\n  \"name\": \"üèîPriority\"\n}'\n\n\n"}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"598128ceda4e40003c9fb67f","ref":"","in":"path","required":false,"desc":"ID of the customfield to update.","default":"","type":"string","name":"id"},{"_id":"5ab0f9be73348d0062948d19","ref":"","in":"body","required":false,"desc":"The name of the Custom Field","default":"","type":"string","name":"name"},{"_id":"5af0ffa9988cda0003d5908e","ref":"","in":"body","required":false,"desc":"New position for the custom field. Can also be 'top' or 'bottom'","default":"","type":"float","name":"pos"},{"_id":"5af0ffa9988cda0003d5908d","ref":"","in":"body","required":false,"desc":"Whether to display this custom field on the front of cards","default":"","type":"boolean","name":"display/cardFront"}],"url":"/customfields/{id}","method":"put"},"isReference":true,"order":3,"body":"","excerpt":"Update a Custom Field definition.","slug":"customfieldsid","type":"endpoint","title":"/customFields/{id}","__v":4,"updatedAt":"2019-06-10T14:28:52.592Z","swagger":{"path":"/customfields/{id}"}},{"_id":"5ab109c15ea56a0012dced7c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T13:16:49.513Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X POST -H \"Content-Type: application/json\" \\\nhttps://api.trello.com/1/customFields \\\n-d '{\n  idModel: \"5a00adcebe1991022b4a4bb4\",\n  modelType: \"board\",\n  name: \"My Dropdown\",\n  options: [,\n    {\n      color: \"none\",\n      value: {\n        text: \"First Option\"\n      }, \n      pos: 1024\n    },\n    {\n      color: \"none\",\n      value: {\n        text: \"Second Option\"\n      }, \n      pos: 2048\n    }\n  ],\n  pos: \"bottom\",\n  type: \"list\",\n  display_cardFront: false\n}'"}]},"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5a6a2154751b045645255afd\",\n  \"idModel\": \"5a00adcebe1991022b4a4bb4\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"cd1bcb6b508ae631db98d9eae556a793ea34fa3fd2748e8a4085d705d4af1984\",\n  \"name\": \"checkbox3\",\n  \"pos\": 16384,\n  \"type\": \"checkbox\",\n  \"display\": {\n    \"cardFront\": false\n  }\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"5ab10a092459e0004e760764","ref":"","in":"body","required":true,"desc":"The ID of the model for which the Custom Field is being defined. This should always be the ID of a board.","default":"","type":"string","name":"idModel"},{"_id":"5ab10a639975050079733320","ref":"","in":"body","required":true,"desc":"The type of model that the Custom Field is being defined on. This should always be `board`.","default":"","type":"string","name":"modelType"},{"_id":"5ab10a63997505007973331f","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"name"},{"_id":"5ab10a63997505007973331e","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"type"},{"_id":"5ab10a63997505007973331d","ref":"","in":"body","required":false,"desc":"","default":"","type":"string","name":"options"},{"_id":"5ab10a63997505007973331c","ref":"","in":"body","required":true,"desc":"","default":"","type":"string","name":"pos"},{"_id":"5af0fffd4ca2730003cbc9f7","ref":"","in":"body","required":false,"desc":"Whether this custom field should be shown on the front of cards","default":"true","type":"boolean","name":"display_cardFront"}],"url":"/customFields","method":"post"},"isReference":true,"order":4,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Limits\",\n  \"body\": \"A board can have up to 50 Custom Fields defined on a board. Any number of cards on the board can have values set for each field.\"\n}\n[/block]","excerpt":"Create a new Custom Field on a board.","slug":"customfields","type":"endpoint","title":"/customFields","__v":6,"updatedAt":"2019-06-10T14:28:52.592Z","swagger":{"path":"/customFields"}},{"_id":"59812f114e869d0020c3c47a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:46:57.444Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598128e0302822002abfbbca","ref":"","in":"path","required":false,"desc":"ID of the customfield to delete.","default":"","type":"string","name":"id"}],"url":"/customfields/{id}","method":"delete"},"isReference":true,"order":5,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"\",\n  \"body\": \"Deleting a custom field definition will also delete all of the values across all cards that have been set for that custom field. There is no way to get those values back after they have been deleted.\"\n}\n[/block]","excerpt":"Delete a Custom Field from a board.","slug":"customfieldsid-1","type":"endpoint","title":"/customFields/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.593Z","swagger":{"path":"/customfields/{id}"}},{"_id":"59812f550b339f0035d3f9b6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:05.166Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n  {\n    \"value\": {\n      \"text\": \"Ok\"\n    },\n    \"_id\": \"5ab0faedb513dd379762c232\",\n    \"pos\": 16384,\n    \"color\": \"yellow\"\n  },\n  {\n    \"value\": {\n      \"text\": \"Good\"\n    },\n    \"_id\": \"5ab0fb60f13fc1bdc9ca739c\",\n    \"pos\": 32768,\n    \"color\": \"green\"\n  },\n  {\n    \"value\": {\n      \"text\": \"Bad\"\n    },\n    \"_id\": \"5ab0fb6293d6973bc184bc9a\",\n    \"pos\": 49152,\n    \"color\": \"red\"\n  }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options"}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"59812a12302822002abfbc2c","ref":"","in":"path","required":false,"desc":"ID of the customfield.","default":"","type":"string","name":"id"}],"url":"/customFields/{id}/options","method":"get"},"isReference":true,"order":6,"body":"","excerpt":"Get the options of a drop down Custom Field","slug":"customfieldsidoptions-1","type":"endpoint","title":"/customFields/{id}/options","__v":1,"updatedAt":"2019-06-10T14:28:52.593Z","swagger":{"path":"/customFields/{id}/options"}},{"_id":"59812f6b559ca6001e3b24b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:27.164Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options/5ab0fb60f13fc1bdc9ca739c"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5ab0fb60f13fc1bdc9ca739c\",\n  \"idCustomField\": \"5ab0fae54cdab797ed6b206e\",\n  \"value\": {\n    \"text\": \"Good\"\n  },\n  \"color\": \"green\",\n  \"pos\": 32768\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59812a38559ca6001e3b2491","ref":"","in":"path","required":false,"desc":"ID of the customfielditem.","default":"","type":"string","name":"id"},{"_id":"59812a38559ca6001e3b2490","ref":"","in":"path","required":false,"desc":"ID of the customfieldoption to retrieve.","default":"","type":"string","name":"idCustomFieldOption"}],"url":"/customFields/{id}/options/{idCustomFieldOption}","method":"get"},"isReference":true,"order":7,"body":"","excerpt":"","slug":"customfieldsidoptionsidcustomfieldoption-3","type":"endpoint","title":"/customFields/{id}/options/{idCustomFieldOption}","__v":1,"updatedAt":"2019-06-10T14:28:52.594Z","swagger":{"path":"/customFields/{id}/options/{idCustomFieldOption}"}},{"_id":"59812f28da4e40003c9fb6ac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5c471be1138d190c350ad1a8"],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:47:20.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"code":"curl -X POST -H \"Content-Type: application/json\" \\ https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options \\ \n-d '{\n  \"value\": { \"text\": \"Bad\" },\n  \"color\": \"red\",\n  \"pos\": \"bottom\"\n}'\n\n","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5ab0fcdb436e2ce2061b862e\",\n  \"idCustomField\": \"5ab0fae54cdab797ed6b206e\",\n  \"value\": { \"text\": \"Bad\" },\n  \"color\": \"red\",\n  \"pos\": 65536\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"598129fe66c4c700148ea3f6","ref":"","in":"path","required":false,"desc":"ID of the customfield.","default":"","type":"string","name":"id"}],"url":"/customFields/{id}/options","method":"post"},"isReference":true,"order":8,"body":"","excerpt":"Add an option to a dropdown Custom Field","slug":"customfieldsidoptions-2","type":"endpoint","title":"/customFields/{id}/options","__v":7,"updatedAt":"2019-06-10T14:28:52.595Z","swagger":{"path":"/customFields/{id}/options"}},{"_id":"59812f8a559ca6001e3b24ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:48:58.286Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X DELETE https://api.trello.com/1/customField/5ab0fae54cdab797ed6b206e/options/5ab0fcdb436e2ce2061b862e?key={APIKey}&token={APIToken}\n"}]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59812a38559ca6001e3b2491","ref":"","in":"path","required":false,"desc":"ID of the customfielditem.","default":"","type":"string","name":"id"},{"_id":"59812a38559ca6001e3b2490","ref":"","in":"path","required":false,"desc":"ID of the customfieldoption to delete.","default":"","type":"string","name":"idCustomFieldOption"}],"url":"/customfields/{id}/options/{idCustomFieldOption}","method":"delete"},"isReference":true,"order":9,"body":"","excerpt":"Delete an option from a Custom Field dropdown.","slug":"customfieldsidoptionsidcustomfieldoption-1","type":"endpoint","title":"/customfields/{id}/options/{idCustomFieldOption}","__v":3,"updatedAt":"2019-06-10T14:28:52.596Z","swagger":{"path":"/customfields/{id}/options/{idCustomFieldOption}"}},{"_id":"5ab0fe562459e0004e76024c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"5981239a0b339f0035d3f927","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-20T12:28:06.538Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"Updating a card's values for Custom Fields is done via a nested route in the cards resource: `/1/cards/{idCard}/customField/{idCustomField}/item`.\n\nFor a walkthrough on getting cards and their Custom Field values, check out the [Custom Field Values On Cards](https://developers.trello.com/v1.0/docs/getting-started-custom-fields#section-custom-field-values-on-cards) section of the Custom Fields guide.\n\nAlthough setting, updating, and deleting the value of a custom field on a card is done through the cards resource, we're documenting it below to keep it within the context of how Custom Fields works.","excerpt":"","slug":"setting-custom-field-values-on-cards","type":"basic","title":"Getting and Setting Custom Field Values On Cards","__v":0,"updatedAt":"2019-06-10T14:28:52.597Z"},{"_id":"59812fc00b339f0035d3f9b7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":["5ad4793e5ac8a60003101b1d","5b65fc665a917000030b83c7","5b65fd17b1906e000319f9e4"],"next":{"pages":[],"description":""},"createdAt":"2017-08-02T01:49:52.417Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X PUT -H \"Content-Type: application/json\" \\\nhttps://api.trello.com/1/card/5a4d294ff7239936994177f3/customField/5a6a23abf958725e1ac86c21/item \\\n-d '{\n  \"value\": {\"text\": \"High\"},\n  \"key\": \"\",\n  \"token\": \"\"\n}'"}]},"results":{"codes":[{"name":"","code":"{\n  \"id\": \"5ab0fe68bafbb318dd513280\",\n  \"value\": {\n    \"text\": \"High\"\n  },\n  \"idCustomField\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"5a849a1ee027c2956483fbf6\",\n  \"modelType\": \"card\"\n}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"598129294e869d0020c3c414","ref":"","in":"path","required":false,"desc":"ID of the card that the Custom Field value should be set/updated for","default":"","type":"string","name":"idCard"},{"_id":"5ab1001999bb810012dd97eb","ref":"","in":"path","required":false,"desc":"ID of the Custom Field on the card.","default":"","type":"string","name":"idCustomField"},{"_id":"5cd0a3f832cc5c00518e0b47","ref":"customFieldItemValue","in":"body","required":true,"desc":"An object containing the key and value to set for the card's Custom Field value. The key used to set the value should match the type of Custom Field defined.","default":"","type":"object","name":"value"}],"url":"/card/{idCard}/customField/{idCustomField}/item","method":"put"},"isReference":true,"order":11,"body":"Except for `list` type Custom Fields, the object you pass in as the `value` should be an object that has a key that matches the type of the Custom Field. For instance, if there is a Custom Field of type `number` that a value is being set for, the data you pass into the body should contain the following: `\"value\": {\"number\": \"3\"}`.\n\nWhen setting a `list` type Custom Field item, you only need pass in an `idValue` key that is the ID of the Custom Field's option that you want to set the value to.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Custom Field Type\",\n    \"h-1\": \"Expected Values\",\n    \"0-0\": \"Text\",\n    \"0-1\": \"`{ \\\"value\\\": { \\\"text\\\": \\\"Hello, world!\\\" } }`\",\n    \"1-0\": \"Number\",\n    \"1-1\": \"`{ \\\"value\\\": { \\\"number\\\": \\\"42\\\" } }`\",\n    \"2-0\": \"Date\",\n    \"2-1\": \"`{ \\\"value\\\": { \\\"date\\\": \\\"2018-03-13T16:00:00.000Z\\\" } }`\",\n    \"3-0\": \"Checkbox\",\n    \"3-1\": \"`{ \\\"value\\\": { \\\"checked\\\": \\\"true\\\" } }`\",\n    \"4-0\": \"List\",\n    \"4-1\": \"`{ \\\"idValue\\\": \\\"5ab10be237846c43015f108f\\\" }`\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Always Send Strings\",\n  \"body\": \"The value field expects the final value to always be a string, regardless of the type of field. For instance the following should be included in the body when updating a checkbox field:\\n`\\\"value\\\": { \\\"checked\\\": \\\"true\\\" }`\"\n}\n[/block]\nYou can't make a DELETE request to any custom field item. You can only clear out a card's custom field item value with an empty PUT request:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X PUT -H \\\"Content-Type: application/json\\\" \\\\\\nhttps://api.trello.com/1/card/5a300b5036c4681398d3dab1/customField/5a6a23abf958725e1ac86c21/item \\\\\\n-d '{\\n  \\\"value\\\": \\\"\\\",\\n  \\\"key\\\": \\\"\\\",\\n  \\\"token\\\": \\\"\\\"\\n}'\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd we get back an empty object in response - `{}`.\n\nAn example updating a custom field item using [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) in javascript:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var url = \\\"https://api.trello.com/1/cards/{idCard}/customField/{idCustomField}/item?token={yourToken}&key={yourKey}\\\";\\nvar data = {value: { number: \\\"42\\\" }};\\nfetch(url, { body: JSON.stringify(data), method: 'PUT', headers: {'content-type': 'application/json'}})\\n.then((resp) => resp.json())\\n.then((data) => console.log(JSON.stringify(data, null, 2)))\\n.catch((err) => console.log(JSON.stringify(err, null, 2)))\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe equivalent using Python's [requests](http://docs.python-requests.org/en/master/) library:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"import requests\\n\\napi_key = ''\\napi_token = ''\\n\\ncardId = ''\\ncustomFieldId = ''\\n\\nurl = f'https://api.trello.com/1/card/{cardId}/customField/{customFieldId}/item?&key={api_key}&token={api_token}'\\n\\n# Assuming the custom field is of type number\\ndata = { 'value': { 'number': '42' } }\\n\\nresponse = requests.put(url, json=data)\\n\\nprint(response.status_code)\\nprint(response.content)\",\n      \"language\": \"python\"\n    }\n  ]\n}\n[/block]","excerpt":"Setting, updating, and removing the value for a Custom Field on a card.","slug":"customfielditemsid","type":"endpoint","title":"/card/{idCard}/customField/{idCustomField}/item","__v":37,"updatedAt":"2019-06-10T14:28:52.598Z","swagger":{"path":"/card/{idCard}/customField/{idCustomField}/item"}},{"_id":"5c47432a0309ec0ea34116e7","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5981239a0b339f0035d3f927","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-22T16:22:02.970Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/boards/d2EnEWSY/customFields?token=[yourToken]&key=[yourKey]"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"5a98670bd6afbd6de1c8c360\",\n  \"idModel\": \"586e8f681d4fe9b06a928307\",\n  \"modelType\": \"board\",\n  \"fieldGroup\": \"ea4cea3f750322e7254bf9e27b8eb60b46ee16d1b1885c7183599e83f64691ff\",\n  \"name\": \"üèîPriority\",\n  \"pos\": 16384,\n  \"type\": \"text\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5931c3ae86334d000fcaabf4","ref":"","in":"path","required":false,"desc":"The ID of the board","default":"","type":"string","name":"id"}],"url":"/boards/{id}/customFields","method":"get"},"isReference":true,"order":12,"body":"","excerpt":"Get the Custom Field Definitions that exist on a board.","slug":"boardsidcustomfields-1","type":"endpoint","title":"/boards/{id}/customFields","__v":3,"updatedAt":"2019-06-10T14:28:52.599Z","swagger":{"path":"/boards/{id}/customFields"}},{"_id":"594c1cb911da36000fb482a5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":["595e3f5f8a119e001b4547c6","5b7c6e994f89e10003ed2297"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T19:38:33.447Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"","excerpt":"","slug":"enterprise","type":"basic","title":"Enterprises","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.599Z","children":[{"_id":"594d19f1596ccf00153357ac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1cb911da36000fb482a5","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:57.830Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**:\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**name**\\nstring\",\n    \"2-0\": \"**displayName**\\nstring\",\n    \"3-0\": \"**prefs**\\nobject\",\n    \"4-0\": \"**ssoActivationFailed**\\nboolean\",\n    \"5-0\": \"**idAdmins**\\narray\",\n    \"6-0\": \"**idMembers**\\narray\",\n    \"7-0\": \"**idOrganizations**\\narray\",\n    \"8-0\": \"**products**\\narray\",\n    \"9-0\": \"**userTypes**\\nobject\",\n    \"1-1\": \"Short-form name of the enterprise. Example: `test_enterprise`.\",\n    \"3-1\": \"JSON Object containing information about the preferences set within the enterprise. Example:\\n```\\n{\\n  \\\"ssoOnly\\\": false,\\n  \\\"signup\\\": {\\n    \\\"message\\\": \\\"üòÅ Howdy, friends.\\\",\\n    \\\"confirmation\\\": \\\"We're confirming that you are a üí´.\\\",\\n    \\\"banner\\\": \\\"Banner Text!\\\",\\n    \\\"bannerHtml\\\": \\\"<p>Banner Text!</p>\\\\n\\\",\\n    \\\"confirmationHtml\\\": \\\"<p>We're confirming that you are a üí´.</p>\\\\n\\\",\\n    \\\"messageHtml\\\": \\\"<p>üòÅ Howdy, friends.</p>\\\\n\\\"\\n  },\\n  \\\"mandatoryTransferDate\\\": null,\\n  \\\"maxMembers\\\": null\\n}\\n```\",\n    \"9-1\": \"Object containing keys for every member type (`all`, `member`, `collaborator`, `saml`, `none`) and values representing the count of each type of member.\\n\\nFor example:\\n```\\n{\\n  \\\"all\\\": 6,\\n  \\\"member\\\": 5,\\n  \\\"collaborator\\\": 0,\\n  \\\"saml\\\": 0,\\n  \\\"none\\\": 1\\n}\\n```\",\n    \"8-1\": \"Array of products that the enterprise has enabled.\",\n    \"7-1\": \"Array of [Organization](ref:organizations) IDs that belong to the enterprise.\",\n    \"6-1\": \"Array of [Member](ref:member) IDs that belong to the enterprise.\",\n    \"5-1\": \"Array of [Member](ref:member) IDs that are admins of the enterprise.\",\n    \"4-1\": \"Determines whether SSO successfully activated.\",\n    \"2-1\": \"Long-form name of the enterprise used when displaying the full name of the enterprise. Example: `Trello's Enterprise`\",\n    \"0-1\": \"The ID of the enterprise.\"\n  },\n  \"cols\": 2,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"enterprise-object","type":"basic","title":"Enterprise Object","__v":0,"updatedAt":"2019-06-10T14:28:52.600Z"},{"_id":"5952a2a728e9ae004b965c55","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:23:35.852Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"58c82319cd1381510982aa6b\",\n  \"name\": \"test_enterprise\",\n  \"displayName\": \"A Test Enterprise\",\n  \"prefs\": {\n    \"ssoOnly\": false,\n    \"signup\": {\n      \"message\": \"üòÅ Howdy, friends.\",\n      \"confirmation\": \"We're confirming that you are a üí´.\",\n      \"banner\": \"Banner Text!\",\n      \"bannerHtml\": \"<p>Banner Text!</p>\\n\",\n      \"confirmationHtml\": \"<p>We're confirming that you are a üí´.</p>\\n\",\n      \"messageHtml\": \"<p>üòÅ Howdy, friends.</p>\\n\"\n    },\n    \"mandatoryTransferDate\": null,\n    \"maxMembers\": null\n  },\n  \"ssoActivationFailed\": false,\n  \"idAdmins\": [\n    \"58cff1aih281ea1d77c4g02e\",\n    \"5589c3ea49b30cedcg8cf70e\",\n    \"5473527f204b1f224s7db5c0\",\n    \"58530f69bd282fbf0ff4a8fc\"\n  ],\n  \"idMembers\": [\n    \"3812694a8d747e8257efb80d\",\n    \"54cff1a9b280ea1d77c4002e\",\n    \"5189c3ea49b40cedc28cf70e\",\n    \"10095233f62adbe04d935195\",\n    \"58fe44d21e6f1c94014f015f\",\n    \"58530f69bd582fbf01f4a8fc\"\n  ],\n  \"idOrganizations\": [\n    \"58d3254ce396b2870d883bd6\",\n    \"58d3e90c7508222d67296e7d\"\n  ],\n  \"products\": [\n    100\n  ],\n  \"userTypes\": {\n    \"all\": 6,\n    \"member\": 5,\n    \"collaborator\": 0,\n    \"saml\": 0,\n    \"none\": 1\n  }\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a4c64731e4005d8256ac","ref":"","in":"query","required":false,"desc":"Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`","default":"all","type":"string","name":"fields"},{"_id":"5952a552b1a12000672aef47","ref":"","in":"query","required":false,"desc":"One of: `none`, `normal`, `admins`, `owners`, `all`","default":"none","type":"string","name":"members"},{"_id":"5952a552b1a12000672aef46","ref":"","in":"query","required":false,"desc":"One of: `avatarHash`, `fullName`, `initials`, `username`","default":"avatarHash, fullName, initials, username","type":"string","name":"member_fields"},{"_id":"5952a552b1a12000672aef45","ref":"","in":"query","required":false,"desc":"Pass a [SCIM-style query](https://developers.trello.com/v1.0/reference#section-parameters) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated.","default":"none","type":"string","name":"member_filter"},{"_id":"5b0efb1b748b2c0003ee49a0","ref":"","in":"query","required":false,"desc":"This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"","type":"string","name":"member_sort"},{"_id":"5952a552b1a12000672aef44","ref":"","in":"query","required":false,"desc":"Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](https://developers.trello.com/v1.0/reference#section-parameters). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state.","default":"none","type":"string","name":"member_sortBy"},{"_id":"5952a552b1a12000672aef43","ref":"","in":"query","required":false,"desc":"Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`","default":"id","type":"string","name":"member_sortOrder"},{"_id":"5952a642a6c9140033c808aa","ref":"","in":"query","required":false,"desc":"Any integer between 0 and 100.","default":"1","type":"int","name":"member_startIndex"},{"_id":"5952a642a6c9140033c808a9","ref":"","in":"query","required":false,"desc":"0 to 100","default":"10","type":"int","name":"member_count"},{"_id":"5952a642a6c9140033c808a8","ref":"","in":"query","required":false,"desc":"One of: `none`, `members`, `public`, `all`","default":"none","type":"string","name":"organizations"},{"_id":"5952a642a6c9140033c808a7","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource]() accepts.","default":"none","type":"string","name":"organization_fields"},{"_id":"5952a642a6c9140033c808a6","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"organization_paid_accounts"},{"_id":"5952a642a6c9140033c808a5","ref":"","in":"query","required":false,"desc":"Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`","default":"none","type":"string","name":"organization_memberships"}],"url":"/enterprises/{id}","method":"get","examples":{"codes":[{"name":null,"language":"curl","code":"GET https://api.trello.com/1/enterprises/58c82319cd1381510982aa6b&key=[yourKey]&token=[yourToken]"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Get an enterprise by its ID.","slug":"enterprisesid","type":"endpoint","title":"/enterprises/{id}","__v":11,"updatedAt":"2019-06-10T14:28:52.601Z","swagger":{"path":"/enterprises/{id}"}},{"_id":"5952a2cf4731e4005d8256a6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:15.301Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a668e9de4f006123713b","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested member field resource]() accepts.","default":"fullName, userName","type":"string","name":"fields"}],"url":"/enterprises/{id}/admins","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get an enterprise's admin members.","slug":"enterprisesidadmins","type":"endpoint","title":"/enterprises/{id}/admins","__v":1,"updatedAt":"2019-06-10T14:28:52.602Z","swagger":{"path":"/enterprises/{id}/admins"}},{"_id":"5952a2db87514c00630c85ec","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:27.354Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a69b56927300370394e8","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"authenticate"},{"_id":"5952a69b56927300370394e7","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"confirmationAccepted"},{"_id":"5952a69b56927300370394e6","ref":"","in":"query","required":false,"desc":"Any valid URL.","default":"none","type":"string","name":"returnUrl"},{"_id":"5b633d5181f64e00036a593a","ref":"","in":"query","required":false,"desc":"Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP.","default":"false","type":"boolean","name":"tosAccepted"}],"url":"/enterprises/{id}/signupUrl","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get the signup URL for an enterprise.","slug":"enterprisesidsignupurl","type":"endpoint","title":"/enterprises/{id}/signupUrl","__v":2,"updatedAt":"2019-06-10T14:28:52.604Z","swagger":{"path":"/enterprises/{id}/signupUrl"}},{"_id":"5952a2e656927300370394dc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:38.508Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a6d8a6c9140033c808ad","ref":"","in":"query","required":false,"desc":"A comma-seperated list of valid [member fields](member).","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a6d8a6c9140033c808ac","ref":"","in":"query","required":false,"desc":"Pass a [SCIM-style query](https://developers.trello.com/v1.0/reference#section-parameters) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated.","default":"none","type":"string","name":"filter"},{"_id":"5b100cc4c4e03800033730ea","ref":"","in":"query","required":false,"desc":"This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"","type":"string","name":"sort"},{"_id":"5952a6e956927300370394e9","ref":"","in":"query","required":false,"desc":"Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"none","type":"string","name":"sortBy"},{"_id":"5952a72056927300370394ec","ref":"","in":"query","required":false,"desc":"Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`.","default":"none","type":"string","name":"sortOrder"},{"_id":"5952a72056927300370394eb","ref":"","in":"query","required":false,"desc":"Any integer between 0 and 9999.","default":"none","type":"int","name":"startIndex"},{"_id":"5952a72056927300370394ea","ref":"","in":"query","required":false,"desc":"[SCIM-style filter](https://developers.trello.com/v1.0/reference#section-parameters).","default":"none","type":"string","name":"count"},{"_id":"5952a73356927300370394ed","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a742d4f34000575e0790","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get the members of an enterprise.","slug":"enterprisesidmembers","type":"endpoint","title":"/enterprises/{id}/members","__v":7,"updatedAt":"2019-06-10T14:28:52.605Z","swagger":{"path":"/enterprises/{id}/members"}},{"_id":"5952a2f4d93ebe003ff33a97","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:52.442Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a76de9de4f0061237141","ref":"","in":"query","required":false,"desc":"An ID of a member resource.","default":"none","type":"string","name":"idMember"},{"_id":"5952a76de9de4f0061237140","ref":"","in":"query","required":false,"desc":"A comma separated list of any valid values that the [nested member field resource]() accepts.","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a77e4731e4005d8256af","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a78f56927300370394ee","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members/{idMember}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get a specific member of an enterprise by ID.","slug":"enterprisesidmembersidmember","type":"endpoint","title":"/enterprises/{id}/members/{idMember}","__v":4,"updatedAt":"2019-06-10T14:28:52.606Z","swagger":{"path":"/enterprises/{id}/members/{idMember}"}},{"_id":"5952a30b4731e4005d8256a8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:25:15.720Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a7ccf168f9001bba9ca5","ref":"","in":"path","required":false,"desc":"An ID of an Organization resource.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/transferrable/organization/{idOrganization}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"This resource is used to determine if an organization can be transferred into the enterprise; if not ‚Äî returns the un-transferred members blocking that, if so‚Äîreports the number of net new enterprise members it will result in.","excerpt":"Get whether an organization can be transferred to an enterprise.","slug":"enterprisesidtransferrableorganizationidorganization","type":"endpoint","title":"/enterprises/{id}/transferrable/organization/{idOrganization}","__v":1,"updatedAt":"2019-06-10T14:28:52.607Z","swagger":{"path":"/enterprises/{id}/transferrable/organization/{idOrganization}"}},{"_id":"5952a835e9de4f0061237142","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:47:17.376Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a835e9de4f0061237143","ref":"","in":"path","required":false,"desc":"ID of the member to deactive.","default":"","type":"string","name":"idMember"},{"_id":"5a60b6081264b10026422781","ref":"","in":"query","required":true,"desc":"Determines whether the user is deactivated or not.","default":"","type":"boolean","name":"value"},{"_id":"5952a76de9de4f0061237140","ref":"","in":"query","required":false,"desc":"A comma separated list of any valid values that the [nested member field resource]() accepts.","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a77e4731e4005d8256af","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a78f56927300370394ee","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members/{idMember}/deactivated","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Deactivate a member of an enterprise.","slug":"enterprisesidmembersidmemberdeactivated-1","type":"endpoint","title":"/enterprises/{id}/members/{idMember}/deactivated","__v":2,"updatedAt":"2019-06-10T14:28:52.608Z","swagger":{"path":"/enterprises/{id}/members/{idMember}/deactivated"}},{"_id":"5952a45328e9ae004b965c79","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:30:43.819Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab21d93ebe003ff33b02","ref":"","in":"query","required":true,"desc":"ID of organization to be transferred to enterprise.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/organizations","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Transfer an organization to an enterprise.","slug":"enterprisesidadminsidmember","type":"endpoint","title":"/enterprises/{id}/organizations","__v":1,"updatedAt":"2019-06-10T14:28:52.609Z","swagger":{"path":"/enterprises/{id}/organizations"}},{"_id":"5952aae4d4f34000575e07ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:58:44.566Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of member to be made an admin of enterprise.","default":"","type":"string","name":"idMember"}],"url":"/enterprises/{id}/admins/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Make member an admin of enterprise.","slug":"enterprisesidadminsidmember-1","type":"endpoint","title":"/enterprises/{id}/admins/{idMember}","__v":1,"updatedAt":"2019-06-10T14:28:52.610Z","swagger":{"path":"/enterprises/{id}/admins/{idMember}"}},{"_id":"5952a31e2080bf002bebffdb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:25:34.288Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a7eba6be8e004bac93eb","ref":"","in":"query","required":false,"desc":"One of: `1hour`, `1day`, `30days`, `never`","default":"none","type":"string","name":"expiration"}],"url":"/enterprises/{id}/tokens","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Generate an auth token for an enterprise.","slug":"enterprisesidtokens","type":"endpoint","title":"/enterprises/{id}/tokens","__v":1,"updatedAt":"2019-06-10T14:28:52.611Z","swagger":{"path":"/enterprises/{id}/tokens"}},{"_id":"5952ab7ef544fe0015385e5f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T19:01:18.847Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of the organization to be removed from the enterprise.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/organizations/{idOrganization}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Remove an organization from an enterprise.","slug":"enterprisesidorganizationsidorganization","type":"endpoint","title":"/enterprises/{id}/organizations/{idOrganization}","__v":0,"updatedAt":"2019-06-10T14:28:52.611Z","swagger":{"path":"/enterprises/{id}/organizations/{idOrganization}"}},{"_id":"5952ab9db1a12000672aeff5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T19:01:49.264Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of the member to be removed as an admin from enterprise.","default":"","type":"string","name":"idMember"}],"url":"/enterprises/{id}/organizations/{idOrganization}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Remove an member as admin from an enterprise.","slug":"enterprisesidadminsidmember-2","type":"endpoint","title":"/enterprises/{id}/admins/{idMember}","__v":0,"updatedAt":"2019-06-10T14:28:52.612Z","swagger":{"path":"/enterprises/{id}/organizations/{idOrganization}"}}],"childrenPages":[{"_id":"594d19f1596ccf00153357ac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1cb911da36000fb482a5","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:57.830Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**:\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**name**\\nstring\",\n    \"2-0\": \"**displayName**\\nstring\",\n    \"3-0\": \"**prefs**\\nobject\",\n    \"4-0\": \"**ssoActivationFailed**\\nboolean\",\n    \"5-0\": \"**idAdmins**\\narray\",\n    \"6-0\": \"**idMembers**\\narray\",\n    \"7-0\": \"**idOrganizations**\\narray\",\n    \"8-0\": \"**products**\\narray\",\n    \"9-0\": \"**userTypes**\\nobject\",\n    \"1-1\": \"Short-form name of the enterprise. Example: `test_enterprise`.\",\n    \"3-1\": \"JSON Object containing information about the preferences set within the enterprise. Example:\\n```\\n{\\n  \\\"ssoOnly\\\": false,\\n  \\\"signup\\\": {\\n    \\\"message\\\": \\\"üòÅ Howdy, friends.\\\",\\n    \\\"confirmation\\\": \\\"We're confirming that you are a üí´.\\\",\\n    \\\"banner\\\": \\\"Banner Text!\\\",\\n    \\\"bannerHtml\\\": \\\"<p>Banner Text!</p>\\\\n\\\",\\n    \\\"confirmationHtml\\\": \\\"<p>We're confirming that you are a üí´.</p>\\\\n\\\",\\n    \\\"messageHtml\\\": \\\"<p>üòÅ Howdy, friends.</p>\\\\n\\\"\\n  },\\n  \\\"mandatoryTransferDate\\\": null,\\n  \\\"maxMembers\\\": null\\n}\\n```\",\n    \"9-1\": \"Object containing keys for every member type (`all`, `member`, `collaborator`, `saml`, `none`) and values representing the count of each type of member.\\n\\nFor example:\\n```\\n{\\n  \\\"all\\\": 6,\\n  \\\"member\\\": 5,\\n  \\\"collaborator\\\": 0,\\n  \\\"saml\\\": 0,\\n  \\\"none\\\": 1\\n}\\n```\",\n    \"8-1\": \"Array of products that the enterprise has enabled.\",\n    \"7-1\": \"Array of [Organization](ref:organizations) IDs that belong to the enterprise.\",\n    \"6-1\": \"Array of [Member](ref:member) IDs that belong to the enterprise.\",\n    \"5-1\": \"Array of [Member](ref:member) IDs that are admins of the enterprise.\",\n    \"4-1\": \"Determines whether SSO successfully activated.\",\n    \"2-1\": \"Long-form name of the enterprise used when displaying the full name of the enterprise. Example: `Trello's Enterprise`\",\n    \"0-1\": \"The ID of the enterprise.\"\n  },\n  \"cols\": 2,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"enterprise-object","type":"basic","title":"Enterprise Object","__v":0,"updatedAt":"2019-06-10T14:28:52.600Z"},{"_id":"5952a2a728e9ae004b965c55","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:23:35.852Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"58c82319cd1381510982aa6b\",\n  \"name\": \"test_enterprise\",\n  \"displayName\": \"A Test Enterprise\",\n  \"prefs\": {\n    \"ssoOnly\": false,\n    \"signup\": {\n      \"message\": \"üòÅ Howdy, friends.\",\n      \"confirmation\": \"We're confirming that you are a üí´.\",\n      \"banner\": \"Banner Text!\",\n      \"bannerHtml\": \"<p>Banner Text!</p>\\n\",\n      \"confirmationHtml\": \"<p>We're confirming that you are a üí´.</p>\\n\",\n      \"messageHtml\": \"<p>üòÅ Howdy, friends.</p>\\n\"\n    },\n    \"mandatoryTransferDate\": null,\n    \"maxMembers\": null\n  },\n  \"ssoActivationFailed\": false,\n  \"idAdmins\": [\n    \"58cff1aih281ea1d77c4g02e\",\n    \"5589c3ea49b30cedcg8cf70e\",\n    \"5473527f204b1f224s7db5c0\",\n    \"58530f69bd282fbf0ff4a8fc\"\n  ],\n  \"idMembers\": [\n    \"3812694a8d747e8257efb80d\",\n    \"54cff1a9b280ea1d77c4002e\",\n    \"5189c3ea49b40cedc28cf70e\",\n    \"10095233f62adbe04d935195\",\n    \"58fe44d21e6f1c94014f015f\",\n    \"58530f69bd582fbf01f4a8fc\"\n  ],\n  \"idOrganizations\": [\n    \"58d3254ce396b2870d883bd6\",\n    \"58d3e90c7508222d67296e7d\"\n  ],\n  \"products\": [\n    100\n  ],\n  \"userTypes\": {\n    \"all\": 6,\n    \"member\": 5,\n    \"collaborator\": 0,\n    \"saml\": 0,\n    \"none\": 1\n  }\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a4c64731e4005d8256ac","ref":"","in":"query","required":false,"desc":"Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`","default":"all","type":"string","name":"fields"},{"_id":"5952a552b1a12000672aef47","ref":"","in":"query","required":false,"desc":"One of: `none`, `normal`, `admins`, `owners`, `all`","default":"none","type":"string","name":"members"},{"_id":"5952a552b1a12000672aef46","ref":"","in":"query","required":false,"desc":"One of: `avatarHash`, `fullName`, `initials`, `username`","default":"avatarHash, fullName, initials, username","type":"string","name":"member_fields"},{"_id":"5952a552b1a12000672aef45","ref":"","in":"query","required":false,"desc":"Pass a [SCIM-style query](https://developers.trello.com/v1.0/reference#section-parameters) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated.","default":"none","type":"string","name":"member_filter"},{"_id":"5b0efb1b748b2c0003ee49a0","ref":"","in":"query","required":false,"desc":"This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"","type":"string","name":"member_sort"},{"_id":"5952a552b1a12000672aef44","ref":"","in":"query","required":false,"desc":"Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](https://developers.trello.com/v1.0/reference#section-parameters). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state.","default":"none","type":"string","name":"member_sortBy"},{"_id":"5952a552b1a12000672aef43","ref":"","in":"query","required":false,"desc":"Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`","default":"id","type":"string","name":"member_sortOrder"},{"_id":"5952a642a6c9140033c808aa","ref":"","in":"query","required":false,"desc":"Any integer between 0 and 100.","default":"1","type":"int","name":"member_startIndex"},{"_id":"5952a642a6c9140033c808a9","ref":"","in":"query","required":false,"desc":"0 to 100","default":"10","type":"int","name":"member_count"},{"_id":"5952a642a6c9140033c808a8","ref":"","in":"query","required":false,"desc":"One of: `none`, `members`, `public`, `all`","default":"none","type":"string","name":"organizations"},{"_id":"5952a642a6c9140033c808a7","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource]() accepts.","default":"none","type":"string","name":"organization_fields"},{"_id":"5952a642a6c9140033c808a6","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"organization_paid_accounts"},{"_id":"5952a642a6c9140033c808a5","ref":"","in":"query","required":false,"desc":"Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`","default":"none","type":"string","name":"organization_memberships"}],"url":"/enterprises/{id}","method":"get","examples":{"codes":[{"name":null,"language":"curl","code":"GET https://api.trello.com/1/enterprises/58c82319cd1381510982aa6b&key=[yourKey]&token=[yourToken]"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Get an enterprise by its ID.","slug":"enterprisesid","type":"endpoint","title":"/enterprises/{id}","__v":11,"updatedAt":"2019-06-10T14:28:52.601Z","swagger":{"path":"/enterprises/{id}"}},{"_id":"5952a2cf4731e4005d8256a6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:15.301Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a668e9de4f006123713b","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested member field resource]() accepts.","default":"fullName, userName","type":"string","name":"fields"}],"url":"/enterprises/{id}/admins","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get an enterprise's admin members.","slug":"enterprisesidadmins","type":"endpoint","title":"/enterprises/{id}/admins","__v":1,"updatedAt":"2019-06-10T14:28:52.602Z","swagger":{"path":"/enterprises/{id}/admins"}},{"_id":"5952a2db87514c00630c85ec","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:27.354Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a69b56927300370394e8","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"authenticate"},{"_id":"5952a69b56927300370394e7","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"confirmationAccepted"},{"_id":"5952a69b56927300370394e6","ref":"","in":"query","required":false,"desc":"Any valid URL.","default":"none","type":"string","name":"returnUrl"},{"_id":"5b633d5181f64e00036a593a","ref":"","in":"query","required":false,"desc":"Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP.","default":"false","type":"boolean","name":"tosAccepted"}],"url":"/enterprises/{id}/signupUrl","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get the signup URL for an enterprise.","slug":"enterprisesidsignupurl","type":"endpoint","title":"/enterprises/{id}/signupUrl","__v":2,"updatedAt":"2019-06-10T14:28:52.604Z","swagger":{"path":"/enterprises/{id}/signupUrl"}},{"_id":"5952a2e656927300370394dc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:38.508Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a6d8a6c9140033c808ad","ref":"","in":"query","required":false,"desc":"A comma-seperated list of valid [member fields](member).","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a6d8a6c9140033c808ac","ref":"","in":"query","required":false,"desc":"Pass a [SCIM-style query](https://developers.trello.com/v1.0/reference#section-parameters) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated.","default":"none","type":"string","name":"filter"},{"_id":"5b100cc4c4e03800033730ea","ref":"","in":"query","required":false,"desc":"This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"","type":"string","name":"sort"},{"_id":"5952a6e956927300370394e9","ref":"","in":"query","required":false,"desc":"Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"none","type":"string","name":"sortBy"},{"_id":"5952a72056927300370394ec","ref":"","in":"query","required":false,"desc":"Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`.","default":"none","type":"string","name":"sortOrder"},{"_id":"5952a72056927300370394eb","ref":"","in":"query","required":false,"desc":"Any integer between 0 and 9999.","default":"none","type":"int","name":"startIndex"},{"_id":"5952a72056927300370394ea","ref":"","in":"query","required":false,"desc":"[SCIM-style filter](https://developers.trello.com/v1.0/reference#section-parameters).","default":"none","type":"string","name":"count"},{"_id":"5952a73356927300370394ed","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a742d4f34000575e0790","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get the members of an enterprise.","slug":"enterprisesidmembers","type":"endpoint","title":"/enterprises/{id}/members","__v":7,"updatedAt":"2019-06-10T14:28:52.605Z","swagger":{"path":"/enterprises/{id}/members"}},{"_id":"5952a2f4d93ebe003ff33a97","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:52.442Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a76de9de4f0061237141","ref":"","in":"query","required":false,"desc":"An ID of a member resource.","default":"none","type":"string","name":"idMember"},{"_id":"5952a76de9de4f0061237140","ref":"","in":"query","required":false,"desc":"A comma separated list of any valid values that the [nested member field resource]() accepts.","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a77e4731e4005d8256af","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a78f56927300370394ee","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members/{idMember}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get a specific member of an enterprise by ID.","slug":"enterprisesidmembersidmember","type":"endpoint","title":"/enterprises/{id}/members/{idMember}","__v":4,"updatedAt":"2019-06-10T14:28:52.606Z","swagger":{"path":"/enterprises/{id}/members/{idMember}"}},{"_id":"5952a30b4731e4005d8256a8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:25:15.720Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a7ccf168f9001bba9ca5","ref":"","in":"path","required":false,"desc":"An ID of an Organization resource.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/transferrable/organization/{idOrganization}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"This resource is used to determine if an organization can be transferred into the enterprise; if not ‚Äî returns the un-transferred members blocking that, if so‚Äîreports the number of net new enterprise members it will result in.","excerpt":"Get whether an organization can be transferred to an enterprise.","slug":"enterprisesidtransferrableorganizationidorganization","type":"endpoint","title":"/enterprises/{id}/transferrable/organization/{idOrganization}","__v":1,"updatedAt":"2019-06-10T14:28:52.607Z","swagger":{"path":"/enterprises/{id}/transferrable/organization/{idOrganization}"}},{"_id":"5952a835e9de4f0061237142","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:47:17.376Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a835e9de4f0061237143","ref":"","in":"path","required":false,"desc":"ID of the member to deactive.","default":"","type":"string","name":"idMember"},{"_id":"5a60b6081264b10026422781","ref":"","in":"query","required":true,"desc":"Determines whether the user is deactivated or not.","default":"","type":"boolean","name":"value"},{"_id":"5952a76de9de4f0061237140","ref":"","in":"query","required":false,"desc":"A comma separated list of any valid values that the [nested member field resource]() accepts.","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a77e4731e4005d8256af","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a78f56927300370394ee","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members/{idMember}/deactivated","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Deactivate a member of an enterprise.","slug":"enterprisesidmembersidmemberdeactivated-1","type":"endpoint","title":"/enterprises/{id}/members/{idMember}/deactivated","__v":2,"updatedAt":"2019-06-10T14:28:52.608Z","swagger":{"path":"/enterprises/{id}/members/{idMember}/deactivated"}},{"_id":"5952a45328e9ae004b965c79","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:30:43.819Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab21d93ebe003ff33b02","ref":"","in":"query","required":true,"desc":"ID of organization to be transferred to enterprise.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/organizations","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Transfer an organization to an enterprise.","slug":"enterprisesidadminsidmember","type":"endpoint","title":"/enterprises/{id}/organizations","__v":1,"updatedAt":"2019-06-10T14:28:52.609Z","swagger":{"path":"/enterprises/{id}/organizations"}},{"_id":"5952aae4d4f34000575e07ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:58:44.566Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of member to be made an admin of enterprise.","default":"","type":"string","name":"idMember"}],"url":"/enterprises/{id}/admins/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Make member an admin of enterprise.","slug":"enterprisesidadminsidmember-1","type":"endpoint","title":"/enterprises/{id}/admins/{idMember}","__v":1,"updatedAt":"2019-06-10T14:28:52.610Z","swagger":{"path":"/enterprises/{id}/admins/{idMember}"}},{"_id":"5952a31e2080bf002bebffdb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:25:34.288Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a7eba6be8e004bac93eb","ref":"","in":"query","required":false,"desc":"One of: `1hour`, `1day`, `30days`, `never`","default":"none","type":"string","name":"expiration"}],"url":"/enterprises/{id}/tokens","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Generate an auth token for an enterprise.","slug":"enterprisesidtokens","type":"endpoint","title":"/enterprises/{id}/tokens","__v":1,"updatedAt":"2019-06-10T14:28:52.611Z","swagger":{"path":"/enterprises/{id}/tokens"}},{"_id":"5952ab7ef544fe0015385e5f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T19:01:18.847Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of the organization to be removed from the enterprise.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/organizations/{idOrganization}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Remove an organization from an enterprise.","slug":"enterprisesidorganizationsidorganization","type":"endpoint","title":"/enterprises/{id}/organizations/{idOrganization}","__v":0,"updatedAt":"2019-06-10T14:28:52.611Z","swagger":{"path":"/enterprises/{id}/organizations/{idOrganization}"}},{"_id":"5952ab9db1a12000672aeff5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T19:01:49.264Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of the member to be removed as an admin from enterprise.","default":"","type":"string","name":"idMember"}],"url":"/enterprises/{id}/organizations/{idOrganization}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Remove an member as admin from an enterprise.","slug":"enterprisesidadminsidmember-2","type":"endpoint","title":"/enterprises/{id}/admins/{idMember}","__v":0,"updatedAt":"2019-06-10T14:28:52.612Z","swagger":{"path":"/enterprises/{id}/organizations/{idOrganization}"}}]},{"_id":"594d19f1596ccf00153357ac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594c1cb911da36000fb482a5","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:38:57.830Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**:\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**name**\\nstring\",\n    \"2-0\": \"**displayName**\\nstring\",\n    \"3-0\": \"**prefs**\\nobject\",\n    \"4-0\": \"**ssoActivationFailed**\\nboolean\",\n    \"5-0\": \"**idAdmins**\\narray\",\n    \"6-0\": \"**idMembers**\\narray\",\n    \"7-0\": \"**idOrganizations**\\narray\",\n    \"8-0\": \"**products**\\narray\",\n    \"9-0\": \"**userTypes**\\nobject\",\n    \"1-1\": \"Short-form name of the enterprise. Example: `test_enterprise`.\",\n    \"3-1\": \"JSON Object containing information about the preferences set within the enterprise. Example:\\n```\\n{\\n  \\\"ssoOnly\\\": false,\\n  \\\"signup\\\": {\\n    \\\"message\\\": \\\"üòÅ Howdy, friends.\\\",\\n    \\\"confirmation\\\": \\\"We're confirming that you are a üí´.\\\",\\n    \\\"banner\\\": \\\"Banner Text!\\\",\\n    \\\"bannerHtml\\\": \\\"<p>Banner Text!</p>\\\\n\\\",\\n    \\\"confirmationHtml\\\": \\\"<p>We're confirming that you are a üí´.</p>\\\\n\\\",\\n    \\\"messageHtml\\\": \\\"<p>üòÅ Howdy, friends.</p>\\\\n\\\"\\n  },\\n  \\\"mandatoryTransferDate\\\": null,\\n  \\\"maxMembers\\\": null\\n}\\n```\",\n    \"9-1\": \"Object containing keys for every member type (`all`, `member`, `collaborator`, `saml`, `none`) and values representing the count of each type of member.\\n\\nFor example:\\n```\\n{\\n  \\\"all\\\": 6,\\n  \\\"member\\\": 5,\\n  \\\"collaborator\\\": 0,\\n  \\\"saml\\\": 0,\\n  \\\"none\\\": 1\\n}\\n```\",\n    \"8-1\": \"Array of products that the enterprise has enabled.\",\n    \"7-1\": \"Array of [Organization](ref:organizations) IDs that belong to the enterprise.\",\n    \"6-1\": \"Array of [Member](ref:member) IDs that belong to the enterprise.\",\n    \"5-1\": \"Array of [Member](ref:member) IDs that are admins of the enterprise.\",\n    \"4-1\": \"Determines whether SSO successfully activated.\",\n    \"2-1\": \"Long-form name of the enterprise used when displaying the full name of the enterprise. Example: `Trello's Enterprise`\",\n    \"0-1\": \"The ID of the enterprise.\"\n  },\n  \"cols\": 2,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"enterprise-object","type":"basic","title":"Enterprise Object","__v":0,"updatedAt":"2019-06-10T14:28:52.600Z"},{"_id":"5952a2a728e9ae004b965c55","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:23:35.852Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"58c82319cd1381510982aa6b\",\n  \"name\": \"test_enterprise\",\n  \"displayName\": \"A Test Enterprise\",\n  \"prefs\": {\n    \"ssoOnly\": false,\n    \"signup\": {\n      \"message\": \"üòÅ Howdy, friends.\",\n      \"confirmation\": \"We're confirming that you are a üí´.\",\n      \"banner\": \"Banner Text!\",\n      \"bannerHtml\": \"<p>Banner Text!</p>\\n\",\n      \"confirmationHtml\": \"<p>We're confirming that you are a üí´.</p>\\n\",\n      \"messageHtml\": \"<p>üòÅ Howdy, friends.</p>\\n\"\n    },\n    \"mandatoryTransferDate\": null,\n    \"maxMembers\": null\n  },\n  \"ssoActivationFailed\": false,\n  \"idAdmins\": [\n    \"58cff1aih281ea1d77c4g02e\",\n    \"5589c3ea49b30cedcg8cf70e\",\n    \"5473527f204b1f224s7db5c0\",\n    \"58530f69bd282fbf0ff4a8fc\"\n  ],\n  \"idMembers\": [\n    \"3812694a8d747e8257efb80d\",\n    \"54cff1a9b280ea1d77c4002e\",\n    \"5189c3ea49b40cedc28cf70e\",\n    \"10095233f62adbe04d935195\",\n    \"58fe44d21e6f1c94014f015f\",\n    \"58530f69bd582fbf01f4a8fc\"\n  ],\n  \"idOrganizations\": [\n    \"58d3254ce396b2870d883bd6\",\n    \"58d3e90c7508222d67296e7d\"\n  ],\n  \"products\": [\n    100\n  ],\n  \"userTypes\": {\n    \"all\": 6,\n    \"member\": 5,\n    \"collaborator\": 0,\n    \"saml\": 0,\n    \"none\": 1\n  }\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a4c64731e4005d8256ac","ref":"","in":"query","required":false,"desc":"Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`","default":"all","type":"string","name":"fields"},{"_id":"5952a552b1a12000672aef47","ref":"","in":"query","required":false,"desc":"One of: `none`, `normal`, `admins`, `owners`, `all`","default":"none","type":"string","name":"members"},{"_id":"5952a552b1a12000672aef46","ref":"","in":"query","required":false,"desc":"One of: `avatarHash`, `fullName`, `initials`, `username`","default":"avatarHash, fullName, initials, username","type":"string","name":"member_fields"},{"_id":"5952a552b1a12000672aef45","ref":"","in":"query","required":false,"desc":"Pass a [SCIM-style query](https://developers.trello.com/v1.0/reference#section-parameters) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated.","default":"none","type":"string","name":"member_filter"},{"_id":"5b0efb1b748b2c0003ee49a0","ref":"","in":"query","required":false,"desc":"This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"","type":"string","name":"member_sort"},{"_id":"5952a552b1a12000672aef44","ref":"","in":"query","required":false,"desc":"Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](https://developers.trello.com/v1.0/reference#section-parameters). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state.","default":"none","type":"string","name":"member_sortBy"},{"_id":"5952a552b1a12000672aef43","ref":"","in":"query","required":false,"desc":"Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`","default":"id","type":"string","name":"member_sortOrder"},{"_id":"5952a642a6c9140033c808aa","ref":"","in":"query","required":false,"desc":"Any integer between 0 and 100.","default":"1","type":"int","name":"member_startIndex"},{"_id":"5952a642a6c9140033c808a9","ref":"","in":"query","required":false,"desc":"0 to 100","default":"10","type":"int","name":"member_count"},{"_id":"5952a642a6c9140033c808a8","ref":"","in":"query","required":false,"desc":"One of: `none`, `members`, `public`, `all`","default":"none","type":"string","name":"organizations"},{"_id":"5952a642a6c9140033c808a7","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource]() accepts.","default":"none","type":"string","name":"organization_fields"},{"_id":"5952a642a6c9140033c808a6","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"organization_paid_accounts"},{"_id":"5952a642a6c9140033c808a5","ref":"","in":"query","required":false,"desc":"Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`","default":"none","type":"string","name":"organization_memberships"}],"url":"/enterprises/{id}","method":"get","examples":{"codes":[{"name":null,"language":"curl","code":"GET https://api.trello.com/1/enterprises/58c82319cd1381510982aa6b&key=[yourKey]&token=[yourToken]"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Get an enterprise by its ID.","slug":"enterprisesid","type":"endpoint","title":"/enterprises/{id}","__v":11,"updatedAt":"2019-06-10T14:28:52.601Z","swagger":{"path":"/enterprises/{id}"}},{"_id":"5952a2cf4731e4005d8256a6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:15.301Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a668e9de4f006123713b","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested member field resource]() accepts.","default":"fullName, userName","type":"string","name":"fields"}],"url":"/enterprises/{id}/admins","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get an enterprise's admin members.","slug":"enterprisesidadmins","type":"endpoint","title":"/enterprises/{id}/admins","__v":1,"updatedAt":"2019-06-10T14:28:52.602Z","swagger":{"path":"/enterprises/{id}/admins"}},{"_id":"5952a2db87514c00630c85ec","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:27.354Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a69b56927300370394e8","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"authenticate"},{"_id":"5952a69b56927300370394e7","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"confirmationAccepted"},{"_id":"5952a69b56927300370394e6","ref":"","in":"query","required":false,"desc":"Any valid URL.","default":"none","type":"string","name":"returnUrl"},{"_id":"5b633d5181f64e00036a593a","ref":"","in":"query","required":false,"desc":"Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP.","default":"false","type":"boolean","name":"tosAccepted"}],"url":"/enterprises/{id}/signupUrl","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get the signup URL for an enterprise.","slug":"enterprisesidsignupurl","type":"endpoint","title":"/enterprises/{id}/signupUrl","__v":2,"updatedAt":"2019-06-10T14:28:52.604Z","swagger":{"path":"/enterprises/{id}/signupUrl"}},{"_id":"5952a2e656927300370394dc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:38.508Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a6d8a6c9140033c808ad","ref":"","in":"query","required":false,"desc":"A comma-seperated list of valid [member fields](member).","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a6d8a6c9140033c808ac","ref":"","in":"query","required":false,"desc":"Pass a [SCIM-style query](https://developers.trello.com/v1.0/reference#section-parameters) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated.","default":"none","type":"string","name":"filter"},{"_id":"5b100cc4c4e03800033730ea","ref":"","in":"query","required":false,"desc":"This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"","type":"string","name":"sort"},{"_id":"5952a6e956927300370394e9","ref":"","in":"query","required":false,"desc":"Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](https://developers.trello.com/v1.0/reference#section-parameters) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.","default":"none","type":"string","name":"sortBy"},{"_id":"5952a72056927300370394ec","ref":"","in":"query","required":false,"desc":"Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`.","default":"none","type":"string","name":"sortOrder"},{"_id":"5952a72056927300370394eb","ref":"","in":"query","required":false,"desc":"Any integer between 0 and 9999.","default":"none","type":"int","name":"startIndex"},{"_id":"5952a72056927300370394ea","ref":"","in":"query","required":false,"desc":"[SCIM-style filter](https://developers.trello.com/v1.0/reference#section-parameters).","default":"none","type":"string","name":"count"},{"_id":"5952a73356927300370394ed","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a742d4f34000575e0790","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get the members of an enterprise.","slug":"enterprisesidmembers","type":"endpoint","title":"/enterprises/{id}/members","__v":7,"updatedAt":"2019-06-10T14:28:52.605Z","swagger":{"path":"/enterprises/{id}/members"}},{"_id":"5952a2f4d93ebe003ff33a97","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:24:52.442Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a76de9de4f0061237141","ref":"","in":"query","required":false,"desc":"An ID of a member resource.","default":"none","type":"string","name":"idMember"},{"_id":"5952a76de9de4f0061237140","ref":"","in":"query","required":false,"desc":"A comma separated list of any valid values that the [nested member field resource]() accepts.","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a77e4731e4005d8256af","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization field resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a78f56927300370394ee","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members/{idMember}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get a specific member of an enterprise by ID.","slug":"enterprisesidmembersidmember","type":"endpoint","title":"/enterprises/{id}/members/{idMember}","__v":4,"updatedAt":"2019-06-10T14:28:52.606Z","swagger":{"path":"/enterprises/{id}/members/{idMember}"}},{"_id":"5952a30b4731e4005d8256a8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:25:15.720Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a7ccf168f9001bba9ca5","ref":"","in":"path","required":false,"desc":"An ID of an Organization resource.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/transferrable/organization/{idOrganization}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"This resource is used to determine if an organization can be transferred into the enterprise; if not ‚Äî returns the un-transferred members blocking that, if so‚Äîreports the number of net new enterprise members it will result in.","excerpt":"Get whether an organization can be transferred to an enterprise.","slug":"enterprisesidtransferrableorganizationidorganization","type":"endpoint","title":"/enterprises/{id}/transferrable/organization/{idOrganization}","__v":1,"updatedAt":"2019-06-10T14:28:52.607Z","swagger":{"path":"/enterprises/{id}/transferrable/organization/{idOrganization}"}},{"_id":"5952a835e9de4f0061237142","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:47:17.376Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a835e9de4f0061237143","ref":"","in":"path","required":false,"desc":"ID of the member to deactive.","default":"","type":"string","name":"idMember"},{"_id":"5a60b6081264b10026422781","ref":"","in":"query","required":true,"desc":"Determines whether the user is deactivated or not.","default":"","type":"boolean","name":"value"},{"_id":"5952a76de9de4f0061237140","ref":"","in":"query","required":false,"desc":"A comma separated list of any valid values that the [nested member field resource]() accepts.","default":"avatarHash, fullName, initials, username","type":"string","name":"fields"},{"_id":"5952a77e4731e4005d8256af","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested organization resource](https://developers.trello.com/v1.0/reference#organizations-nested-resource) accepts.","default":"displayName","type":"string","name":"organization_fields"},{"_id":"5952a78f56927300370394ee","ref":"","in":"query","required":false,"desc":"Any valid value that the [nested board resource](https://developers.trello.com/v1.0/reference#boards-nested-resource) accepts.","default":"name","type":"string","name":"board_fields"}],"url":"/enterprises/{id}/members/{idMember}/deactivated","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Deactivate a member of an enterprise.","slug":"enterprisesidmembersidmemberdeactivated-1","type":"endpoint","title":"/enterprises/{id}/members/{idMember}/deactivated","__v":2,"updatedAt":"2019-06-10T14:28:52.608Z","swagger":{"path":"/enterprises/{id}/members/{idMember}/deactivated"}},{"_id":"5952a45328e9ae004b965c79","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:30:43.819Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab21d93ebe003ff33b02","ref":"","in":"query","required":true,"desc":"ID of organization to be transferred to enterprise.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/organizations","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Transfer an organization to an enterprise.","slug":"enterprisesidadminsidmember","type":"endpoint","title":"/enterprises/{id}/organizations","__v":1,"updatedAt":"2019-06-10T14:28:52.609Z","swagger":{"path":"/enterprises/{id}/organizations"}},{"_id":"5952aae4d4f34000575e07ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:58:44.566Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of member to be made an admin of enterprise.","default":"","type":"string","name":"idMember"}],"url":"/enterprises/{id}/admins/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Make member an admin of enterprise.","slug":"enterprisesidadminsidmember-1","type":"endpoint","title":"/enterprises/{id}/admins/{idMember}","__v":1,"updatedAt":"2019-06-10T14:28:52.610Z","swagger":{"path":"/enterprises/{id}/admins/{idMember}"}},{"_id":"5952a31e2080bf002bebffdb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T18:25:34.288Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952a7eba6be8e004bac93eb","ref":"","in":"query","required":false,"desc":"One of: `1hour`, `1day`, `30days`, `never`","default":"none","type":"string","name":"expiration"}],"url":"/enterprises/{id}/tokens","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Generate an auth token for an enterprise.","slug":"enterprisesidtokens","type":"endpoint","title":"/enterprises/{id}/tokens","__v":1,"updatedAt":"2019-06-10T14:28:52.611Z","swagger":{"path":"/enterprises/{id}/tokens"}},{"_id":"5952ab7ef544fe0015385e5f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T19:01:18.847Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of the organization to be removed from the enterprise.","default":"","type":"string","name":"idOrganization"}],"url":"/enterprises/{id}/organizations/{idOrganization}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Remove an organization from an enterprise.","slug":"enterprisesidorganizationsidorganization","type":"endpoint","title":"/enterprises/{id}/organizations/{idOrganization}","__v":0,"updatedAt":"2019-06-10T14:28:52.611Z","swagger":{"path":"/enterprises/{id}/organizations/{idOrganization}"}},{"_id":"5952ab9db1a12000672aeff5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594c1cb911da36000fb482a5","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-27T19:01:49.264Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5952a2c2b1a12000672aef19","ref":"","in":"path","required":false,"desc":"ID of the enterprise to retrieve.","default":"","type":"string","name":"id"},{"_id":"5952ab49e9de4f0061237168","ref":"","in":"path","required":false,"desc":"ID of the member to be removed as an admin from enterprise.","default":"","type":"string","name":"idMember"}],"url":"/enterprises/{id}/organizations/{idOrganization}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Remove an member as admin from an enterprise.","slug":"enterprisesidadminsidmember-2","type":"endpoint","title":"/enterprises/{id}/admins/{idMember}","__v":0,"updatedAt":"2019-06-10T14:28:52.612Z","swagger":{"path":"/enterprises/{id}/organizations/{idOrganization}"}},{"_id":"59447a6526bbe6000f2b6bd9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:40:05.982Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"Labels are defined per board, and can be applied to the cards on that board.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/2ddba07-labels.png\",\n        \"labels.png\",\n        1744,\n        979,\n        \"#4e6072\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"labels","type":"basic","title":"Labels","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.613Z","children":[{"_id":"594ab2ac3830a000248d1e60","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":["5c3cf5dd7e305a001f6a039a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-21T17:53:48.588Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**idBoard**\\nstring\",\n    \"2-0\": \"**name**\\nstring\",\n    \"3-0\": \"**color**\\nstring\",\n    \"0-1\": \"The ID of the label\",\n    \"1-1\": \"The ID of the board the label is on\",\n    \"2-1\": \"The optional name of the label (0 - 16384 chars)\",\n    \"3-1\": \"The color of the label. One of:\\n\\n`yellow`, `purple`, `blue`, `red`, `green`, `orange`, `black`, `sky`, `pink`, `lime`, `null`\\n\\n(`null` means no color, and the label will not show on the front of cards)\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\nHere's an example request and response:\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/labels/560bf42919ad3a5dc29f33c5\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"Visited\\\",\\n  \\\"color\\\": \\\"green\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"label-object","type":"basic","title":"Label Object","__v":1,"updatedAt":"2019-06-10T14:28:52.614Z"},{"_id":"594d1a070c08330049443f28","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59447a6526bbe6000f2b6bd9","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:19.786Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Labels are often included as a [nested resource](ref:understanding-nested-resources) in Trello. Below you will find parameters available when working with labels as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Labels as Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"labels\",\n    \"0-1\": \"none\",\n    \"0-2\": \"One of: `all` or `none`\",\n    \"h-0\": \"Query Param\",\n    \"h-1\": \"Default\",\n    \"h-2\": \"Valid Values\",\n    \"1-0\": \"label_fields\",\n    \"1-1\": \"all\",\n    \"1-2\": \"`all` or a comma-seperated list of: `color`, `idBoard`, `name`, `uses`.\",\n    \"2-0\": \"labels_limit\",\n    \"2-1\": \"50\",\n    \"2-2\": \"A number from `0` to `1000`.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/kpPww9qv/?labels=all&label_fields=color&labels_limit=2&fields=id\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"543efd0c05d2a3ebc06a6534\\\",\\n  \\\"labels\\\": [\\n    {\\n      \\\"id\\\": \\\"546689ef74d650d567ffdd87\\\",\\n      \\\"color\\\": \\\"green\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"546689ef74d650d567ffdd8a\\\",\\n      \\\"color\\\": \\\"purple\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Labels as URL Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"label_fields\",\n    \"0-1\": \"all\",\n    \"0-2\": \"`all` or a comma-seperated list of: `color`, `idBoard`, `name`, `uses`.\",\n    \"1-0\": \"labels_limit\",\n    \"1-1\": \"50\",\n    \"1-2\": \"A number from `0` to `1000`.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/kpPww9qv/labels/?fields=color&limit=2\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"546689ef74d650d567ffdd87\\\",\\n    \\\"color\\\": \\\"green\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"546689ef74d650d567ffdd8a\\\",\\n    \\\"color\\\": \\\"purple\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"labels-nested-resource","type":"basic","title":"Labels Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.615Z"},{"_id":"59447a9cbc74a3000f35f33f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:41:00.333Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447b219b82a9000f9eca73","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of [fields](#label-object)","default":"all","type":"string","name":"fields"},{"_id":"59447bdcbc74a3000f35f380","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"}],"url":"/labels/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get information about a label by ID.","slug":"id","type":"endpoint","title":"/labels/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.615Z","swagger":{"path":"/labels/{id}"}},{"_id":"59447cb5f05080000f5ef402","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:49:57.207Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447d7120a546000ffc38af","ref":"","in":"path","required":false,"desc":"The id of the label to update","default":"","type":"string","name":"id"},{"_id":"59447d7120a546000ffc38ae","ref":"","in":"query","required":false,"desc":"The new name for the label","default":"","type":"string","name":"name"},{"_id":"59447d7120a546000ffc38ad","ref":"","in":"query","required":false,"desc":"The new color for the label. See: [fields](#label-object) for color options","default":"","type":"string","name":"color"}],"url":"/labels/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Update a label by ID.","slug":"id-1","type":"endpoint","title":"/labels/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.616Z","swagger":{"path":"/labels/{id}"}},{"_id":"59447e3526bbe6000f2b6bdc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:21.224Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447f36f05080000f5ef408","ref":"","in":"path","required":false,"desc":"The id of the label","default":"","type":"string","name":"id"},{"_id":"59447f36f05080000f5ef407","ref":"","in":"query","required":true,"desc":"The new color for the label. See: [fields](#label-object) for color options.","default":"","type":"string","name":"value"}],"url":"/labels/{id}/color","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Update the color of a label by ID.","slug":"idcolor","type":"endpoint","title":"/labels/{id}/color","__v":1,"updatedAt":"2019-06-10T14:28:52.617Z","swagger":{"path":"/labels/{id}/color"}},{"_id":"59447e3b9b82a9000f9ecaf7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:27.700Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447f4f9b82a9000f9ecafa","ref":"","in":"path","required":false,"desc":"The id of the label to update","default":"","type":"string","name":"id"},{"_id":"59447f6d20a546000ffc38b1","ref":"","in":"query","required":true,"desc":"The new name for the label","default":"","type":"string","name":"value"}],"url":"/labels/{id}/name","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Update the name of a label by ID.","slug":"idname","type":"endpoint","title":"/labels/{id}/name","__v":2,"updatedAt":"2019-06-10T14:28:52.618Z","swagger":{"path":"/labels/{id}/name"}},{"_id":"59447e419b82a9000f9ecaf8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:33.287Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447ee5f05080000f5ef406","ref":"","in":"query","required":true,"desc":"Name for the label","default":"","type":"string","name":"name"},{"_id":"59447ee5f05080000f5ef405","ref":"","in":"query","required":true,"desc":"The color for the label. See [fields](#label-object) for color options.","default":"","type":"string","name":"color"},{"_id":"59447efe26bbe6000f2b6bdd","ref":"","in":"query","required":true,"desc":"The ID of the board to create the label on.","default":"","type":"string","name":"idBoard"}],"url":"/labels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Create a new label on a board.","slug":"page-1","type":"endpoint","title":"/labels","__v":2,"updatedAt":"2019-06-10T14:28:52.620Z","swagger":{"path":"/labels"}},{"_id":"59447e48bc74a3000f35f3c2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:40.767Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447e9c9b82a9000f9ecaf9","ref":"","in":"path","required":false,"desc":"The ID of the label to delete.","default":"","type":"string","name":"id"}],"url":"/labels/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Delete a label by ID.","slug":"id-2","type":"endpoint","title":"/labels/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.621Z","swagger":{"path":"/labels/{id}"}}],"childrenPages":[{"_id":"594ab2ac3830a000248d1e60","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":["5c3cf5dd7e305a001f6a039a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-21T17:53:48.588Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**idBoard**\\nstring\",\n    \"2-0\": \"**name**\\nstring\",\n    \"3-0\": \"**color**\\nstring\",\n    \"0-1\": \"The ID of the label\",\n    \"1-1\": \"The ID of the board the label is on\",\n    \"2-1\": \"The optional name of the label (0 - 16384 chars)\",\n    \"3-1\": \"The color of the label. One of:\\n\\n`yellow`, `purple`, `blue`, `red`, `green`, `orange`, `black`, `sky`, `pink`, `lime`, `null`\\n\\n(`null` means no color, and the label will not show on the front of cards)\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\nHere's an example request and response:\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/labels/560bf42919ad3a5dc29f33c5\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"Visited\\\",\\n  \\\"color\\\": \\\"green\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"label-object","type":"basic","title":"Label Object","__v":1,"updatedAt":"2019-06-10T14:28:52.614Z"},{"_id":"594d1a070c08330049443f28","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59447a6526bbe6000f2b6bd9","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:19.786Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Labels are often included as a [nested resource](ref:understanding-nested-resources) in Trello. Below you will find parameters available when working with labels as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Labels as Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"labels\",\n    \"0-1\": \"none\",\n    \"0-2\": \"One of: `all` or `none`\",\n    \"h-0\": \"Query Param\",\n    \"h-1\": \"Default\",\n    \"h-2\": \"Valid Values\",\n    \"1-0\": \"label_fields\",\n    \"1-1\": \"all\",\n    \"1-2\": \"`all` or a comma-seperated list of: `color`, `idBoard`, `name`, `uses`.\",\n    \"2-0\": \"labels_limit\",\n    \"2-1\": \"50\",\n    \"2-2\": \"A number from `0` to `1000`.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/kpPww9qv/?labels=all&label_fields=color&labels_limit=2&fields=id\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"543efd0c05d2a3ebc06a6534\\\",\\n  \\\"labels\\\": [\\n    {\\n      \\\"id\\\": \\\"546689ef74d650d567ffdd87\\\",\\n      \\\"color\\\": \\\"green\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"546689ef74d650d567ffdd8a\\\",\\n      \\\"color\\\": \\\"purple\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Labels as URL Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"label_fields\",\n    \"0-1\": \"all\",\n    \"0-2\": \"`all` or a comma-seperated list of: `color`, `idBoard`, `name`, `uses`.\",\n    \"1-0\": \"labels_limit\",\n    \"1-1\": \"50\",\n    \"1-2\": \"A number from `0` to `1000`.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/kpPww9qv/labels/?fields=color&limit=2\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"546689ef74d650d567ffdd87\\\",\\n    \\\"color\\\": \\\"green\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"546689ef74d650d567ffdd8a\\\",\\n    \\\"color\\\": \\\"purple\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"labels-nested-resource","type":"basic","title":"Labels Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.615Z"},{"_id":"59447a9cbc74a3000f35f33f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:41:00.333Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447b219b82a9000f9eca73","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of [fields](#label-object)","default":"all","type":"string","name":"fields"},{"_id":"59447bdcbc74a3000f35f380","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"}],"url":"/labels/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get information about a label by ID.","slug":"id","type":"endpoint","title":"/labels/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.615Z","swagger":{"path":"/labels/{id}"}},{"_id":"59447cb5f05080000f5ef402","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:49:57.207Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447d7120a546000ffc38af","ref":"","in":"path","required":false,"desc":"The id of the label to update","default":"","type":"string","name":"id"},{"_id":"59447d7120a546000ffc38ae","ref":"","in":"query","required":false,"desc":"The new name for the label","default":"","type":"string","name":"name"},{"_id":"59447d7120a546000ffc38ad","ref":"","in":"query","required":false,"desc":"The new color for the label. See: [fields](#label-object) for color options","default":"","type":"string","name":"color"}],"url":"/labels/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Update a label by ID.","slug":"id-1","type":"endpoint","title":"/labels/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.616Z","swagger":{"path":"/labels/{id}"}},{"_id":"59447e3526bbe6000f2b6bdc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:21.224Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447f36f05080000f5ef408","ref":"","in":"path","required":false,"desc":"The id of the label","default":"","type":"string","name":"id"},{"_id":"59447f36f05080000f5ef407","ref":"","in":"query","required":true,"desc":"The new color for the label. See: [fields](#label-object) for color options.","default":"","type":"string","name":"value"}],"url":"/labels/{id}/color","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Update the color of a label by ID.","slug":"idcolor","type":"endpoint","title":"/labels/{id}/color","__v":1,"updatedAt":"2019-06-10T14:28:52.617Z","swagger":{"path":"/labels/{id}/color"}},{"_id":"59447e3b9b82a9000f9ecaf7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:27.700Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447f4f9b82a9000f9ecafa","ref":"","in":"path","required":false,"desc":"The id of the label to update","default":"","type":"string","name":"id"},{"_id":"59447f6d20a546000ffc38b1","ref":"","in":"query","required":true,"desc":"The new name for the label","default":"","type":"string","name":"value"}],"url":"/labels/{id}/name","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Update the name of a label by ID.","slug":"idname","type":"endpoint","title":"/labels/{id}/name","__v":2,"updatedAt":"2019-06-10T14:28:52.618Z","swagger":{"path":"/labels/{id}/name"}},{"_id":"59447e419b82a9000f9ecaf8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:33.287Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447ee5f05080000f5ef406","ref":"","in":"query","required":true,"desc":"Name for the label","default":"","type":"string","name":"name"},{"_id":"59447ee5f05080000f5ef405","ref":"","in":"query","required":true,"desc":"The color for the label. See [fields](#label-object) for color options.","default":"","type":"string","name":"color"},{"_id":"59447efe26bbe6000f2b6bdd","ref":"","in":"query","required":true,"desc":"The ID of the board to create the label on.","default":"","type":"string","name":"idBoard"}],"url":"/labels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Create a new label on a board.","slug":"page-1","type":"endpoint","title":"/labels","__v":2,"updatedAt":"2019-06-10T14:28:52.620Z","swagger":{"path":"/labels"}},{"_id":"59447e48bc74a3000f35f3c2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:40.767Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447e9c9b82a9000f9ecaf9","ref":"","in":"path","required":false,"desc":"The ID of the label to delete.","default":"","type":"string","name":"id"}],"url":"/labels/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Delete a label by ID.","slug":"id-2","type":"endpoint","title":"/labels/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.621Z","swagger":{"path":"/labels/{id}"}}]},{"_id":"594ab2ac3830a000248d1e60","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":["5c3cf5dd7e305a001f6a039a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-21T17:53:48.588Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**idBoard**\\nstring\",\n    \"2-0\": \"**name**\\nstring\",\n    \"3-0\": \"**color**\\nstring\",\n    \"0-1\": \"The ID of the label\",\n    \"1-1\": \"The ID of the board the label is on\",\n    \"2-1\": \"The optional name of the label (0 - 16384 chars)\",\n    \"3-1\": \"The color of the label. One of:\\n\\n`yellow`, `purple`, `blue`, `red`, `green`, `orange`, `black`, `sky`, `pink`, `lime`, `null`\\n\\n(`null` means no color, and the label will not show on the front of cards)\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\nHere's an example request and response:\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"GET https://api.trello.com/1/labels/560bf42919ad3a5dc29f33c5\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"Visited\\\",\\n  \\\"color\\\": \\\"green\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"label-object","type":"basic","title":"Label Object","__v":1,"updatedAt":"2019-06-10T14:28:52.614Z"},{"_id":"594d1a070c08330049443f28","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"59447a6526bbe6000f2b6bd9","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:19.786Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Labels are often included as a [nested resource](ref:understanding-nested-resources) in Trello. Below you will find parameters available when working with labels as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Labels as Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"labels\",\n    \"0-1\": \"none\",\n    \"0-2\": \"One of: `all` or `none`\",\n    \"h-0\": \"Query Param\",\n    \"h-1\": \"Default\",\n    \"h-2\": \"Valid Values\",\n    \"1-0\": \"label_fields\",\n    \"1-1\": \"all\",\n    \"1-2\": \"`all` or a comma-seperated list of: `color`, `idBoard`, `name`, `uses`.\",\n    \"2-0\": \"labels_limit\",\n    \"2-1\": \"50\",\n    \"2-2\": \"A number from `0` to `1000`.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/kpPww9qv/?labels=all&label_fields=color&labels_limit=2&fields=id\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"543efd0c05d2a3ebc06a6534\\\",\\n  \\\"labels\\\": [\\n    {\\n      \\\"id\\\": \\\"546689ef74d650d567ffdd87\\\",\\n      \\\"color\\\": \\\"green\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"546689ef74d650d567ffdd8a\\\",\\n      \\\"color\\\": \\\"purple\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Labels as URL Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"label_fields\",\n    \"0-1\": \"all\",\n    \"0-2\": \"`all` or a comma-seperated list of: `color`, `idBoard`, `name`, `uses`.\",\n    \"1-0\": \"labels_limit\",\n    \"1-1\": \"50\",\n    \"1-2\": \"A number from `0` to `1000`.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://api.trello.com/1/boards/kpPww9qv/labels/?fields=color&limit=2\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"546689ef74d650d567ffdd87\\\",\\n    \\\"color\\\": \\\"green\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"546689ef74d650d567ffdd8a\\\",\\n    \\\"color\\\": \\\"purple\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"labels-nested-resource","type":"basic","title":"Labels Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.615Z"},{"_id":"59447a9cbc74a3000f35f33f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:41:00.333Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447b219b82a9000f9eca73","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of [fields](#label-object)","default":"all","type":"string","name":"fields"},{"_id":"59447bdcbc74a3000f35f380","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"id"}],"url":"/labels/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get information about a label by ID.","slug":"id","type":"endpoint","title":"/labels/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.615Z","swagger":{"path":"/labels/{id}"}},{"_id":"59447cb5f05080000f5ef402","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:49:57.207Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447d7120a546000ffc38af","ref":"","in":"path","required":false,"desc":"The id of the label to update","default":"","type":"string","name":"id"},{"_id":"59447d7120a546000ffc38ae","ref":"","in":"query","required":false,"desc":"The new name for the label","default":"","type":"string","name":"name"},{"_id":"59447d7120a546000ffc38ad","ref":"","in":"query","required":false,"desc":"The new color for the label. See: [fields](#label-object) for color options","default":"","type":"string","name":"color"}],"url":"/labels/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Update a label by ID.","slug":"id-1","type":"endpoint","title":"/labels/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.616Z","swagger":{"path":"/labels/{id}"}},{"_id":"59447e3526bbe6000f2b6bdc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:21.224Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447f36f05080000f5ef408","ref":"","in":"path","required":false,"desc":"The id of the label","default":"","type":"string","name":"id"},{"_id":"59447f36f05080000f5ef407","ref":"","in":"query","required":true,"desc":"The new color for the label. See: [fields](#label-object) for color options.","default":"","type":"string","name":"value"}],"url":"/labels/{id}/color","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Update the color of a label by ID.","slug":"idcolor","type":"endpoint","title":"/labels/{id}/color","__v":1,"updatedAt":"2019-06-10T14:28:52.617Z","swagger":{"path":"/labels/{id}/color"}},{"_id":"59447e3b9b82a9000f9ecaf7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:27.700Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447f4f9b82a9000f9ecafa","ref":"","in":"path","required":false,"desc":"The id of the label to update","default":"","type":"string","name":"id"},{"_id":"59447f6d20a546000ffc38b1","ref":"","in":"query","required":true,"desc":"The new name for the label","default":"","type":"string","name":"value"}],"url":"/labels/{id}/name","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Update the name of a label by ID.","slug":"idname","type":"endpoint","title":"/labels/{id}/name","__v":2,"updatedAt":"2019-06-10T14:28:52.618Z","swagger":{"path":"/labels/{id}/name"}},{"_id":"59447e419b82a9000f9ecaf8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:33.287Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447ee5f05080000f5ef406","ref":"","in":"query","required":true,"desc":"Name for the label","default":"","type":"string","name":"name"},{"_id":"59447ee5f05080000f5ef405","ref":"","in":"query","required":true,"desc":"The color for the label. See [fields](#label-object) for color options.","default":"","type":"string","name":"color"},{"_id":"59447efe26bbe6000f2b6bdd","ref":"","in":"query","required":true,"desc":"The ID of the board to create the label on.","default":"","type":"string","name":"idBoard"}],"url":"/labels","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Create a new label on a board.","slug":"page-1","type":"endpoint","title":"/labels","__v":2,"updatedAt":"2019-06-10T14:28:52.620Z","swagger":{"path":"/labels"}},{"_id":"59447e48bc74a3000f35f3c2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447a6526bbe6000f2b6bd9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T00:56:40.767Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59447e9c9b82a9000f9ecaf9","ref":"","in":"path","required":false,"desc":"The ID of the label to delete.","default":"","type":"string","name":"id"}],"url":"/labels/{id}","method":"delete","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Delete a label by ID.","slug":"id-2","type":"endpoint","title":"/labels/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.621Z","swagger":{"path":"/labels/{id}"}},{"_id":"594d11b80c08330049443f26","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":["5a20152e681312001e23bbcf"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:03:52.389Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"A board can have many lists:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4276b29-Screen_Shot_2017-06-26_at_10.50.34_AM.png\",\n        \"Screen Shot 2017-06-26 at 10.50.34 AM.png\",\n        2004,\n        1444,\n        \"#d0c9c3\"\n      ]\n    }\n  ]\n}\n[/block]\nLists can be either `closed: false` meaning they show up normally on the board or `closed: true` (archived) meaning they only show up in the archive.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/919f638-Screen_Shot_2017-06-26_at_10.51.58_AM.png\",\n        \"Screen Shot 2017-06-26 at 10.51.58 AM.png\",\n        2008,\n        1444,\n        \"#414244\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"lists","type":"basic","title":"Lists","__v":1,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.621Z","children":[{"_id":"594d1a2bae68a2001533f6f3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:55.007Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**name**\\nstring\",\n    \"2-0\": \"**closed**\\nboolean\",\n    \"3-0\": \"**idBoard**\\nstring\",\n    \"4-0\": \"**pos**\\nfloat\",\n    \"5-0\": \"**subscribed**\\nboolean\",\n    \"5-1\": \"Whether the member is subscribed to this list\",\n    \"4-1\": \"The position of the list on the board\",\n    \"3-1\": \"The ID of the board the list is on\",\n    \"2-1\": \"Whether the list is closed (archived)\",\n    \"1-1\": \"The name of the list\",\n    \"0-1\": \"The ID of the list\",\n    \"6-0\": \"**softLimit**\\ninteger | null\",\n    \"6-1\": \"A soft limit for number of open cards in the list used by the [List Limits Power-Up](https://trello.com/power-ups/5c2462c384ab8949b1724a20)\"\n  },\n  \"cols\": 2,\n  \"rows\": 7\n}\n[/block]\nHere's an example response from `GET` `/1/lists/560bf48efe2771efe9b45997?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf48efe2771efe9b45997\\\",\\n  \\\"name\\\": \\\"Washington\\\",\\n  \\\"closed\\\": false,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"pos\\\": 1638399,\\n  \\\"subscribed\\\": false,\\n  \\\"softLimit\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"list-object","type":"basic","title":"List Object","__v":0,"updatedAt":"2019-06-10T14:33:51.828Z"},{"_id":"594d1a50ae68a2001533f6f4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11b80c08330049443f26","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:40:32.863Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Lists are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to lists as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Lists as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing lists as a nested resource via query params. For instance, the query params are available when you are accessing lists via:  `/object/{id}?lists=open`.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**lists**\",\n    \"0-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\\n\\nWhich types lists should be returned.\",\n    \"1-0\": \"**list_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of [fields](#list-object)\",\n    \"h-0\": \"Query Param\",\n    \"h-1\": \"Value\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\nHere is an example of using the lists nested resource on the `boards` endpoint:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/k7hfpqQm/?fields=name&lists=all&list_fields=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n  \\\"name\\\": \\\"VR Education Academic Paper Tracker\\\",\\n  \\\"lists\\\": [\\n    {\\n      \\\"id\\\": \\\"5ac61a2e05fae550b0d45c94\\\",\\n      \\\"name\\\": \\\"Prompts\\\",\\n      \\\"closed\\\": false,\\n      \\\"idBoard\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n      \\\"pos\\\": 98303,\\n      \\\"subscribed\\\": false,\\n      \\\"limits\\\": {\\n        \\\"cards\\\": {\\n          \\\"openPerList\\\": {\\n            \\\"status\\\": \\\"ok\\\",\\n            \\\"disableAt\\\": 5000,\\n            \\\"warnAt\\\": 4500\\n          },\\n          \\\"totalPerList\\\": {\\n            \\\"status\\\": \\\"ok\\\",\\n            \\\"disableAt\\\": 1000000,\\n            \\\"warnAt\\\": 900000\\n          }\\n        }\\n      },\\n      \\\"creationMethod\\\": null\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Cards as URL Params\"\n}\n[/block]\nLists are also available as nested resources via URL parameters. For instance, you may want just the lists belonging to a specific resource like a board; in that case you'd use the route `/1/boards/{id}/lists` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"0-0\": \"**filter**\",\n    \"0-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\\n\\nWhich types lists should be returned.\",\n    \"1-0\": \"**list_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of [fields](#list-object)\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\nHere is an example of using the lists nested resource on the `boards` endpoint:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/k7hfpqQm/lists?fields=all&filter=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5ac61a2e05fae550b0d45c94\\\",\\n    \\\"name\\\": \\\"Prompts\\\",\\n    \\\"closed\\\": false,\\n    \\\"idBoard\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n    \\\"pos\\\": 98303,\\n    \\\"subscribed\\\": null,\\n    \\\"limits\\\": {\\n      \\\"cards\\\": {\\n        \\\"openPerList\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 5000,\\n          \\\"warnAt\\\": 4500\\n        },\\n        \\\"totalPerList\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 1000000,\\n          \\\"warnAt\\\": 900000\\n        }\\n      }\\n    },\\n    \\\"creationMethod\\\": null\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"lists-nested-resource","type":"basic","title":"Lists Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.622Z"},{"_id":"595112c898e9e2004705b9e4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:57:28.060Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511317a85ca3001bfaa6e5","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"595117fe98e9e2004705b9e9","ref":"","in":"query","required":false,"desc":"`all` or a comma separated list of [fields](#list-object)","default":"name,closed,idBoard,pos","type":"string","name":"fields"}],"url":"/lists/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get information about a list","slug":"listsid","type":"endpoint","title":"/lists/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.623Z","swagger":{"path":"/lists/{id}"}},{"_id":"59512b0005000f0053afb4c3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T15:40:48.472Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59512b0dd071a00069704a8f","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59512b20535714007d5acb71","ref":"","in":"path","required":false,"desc":"The field to return. See [fields](#list-object)","default":"","type":"string","name":"field"}],"url":"/lists/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a specific property of a list","slug":"listsidfield","type":"endpoint","title":"/lists/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.623Z","swagger":{"path":"/lists/{id}/{field}"}},{"_id":"59511e0da85ca3001bfaa7a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:45:33.846Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511e1bcc55510029d566ae","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/actions","method":"get","examples":{"codes":[{"code":"","language":"http"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5944a06460ed0bee471ad8e3\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      },\\n      \\\"attachment\\\": {\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n        \\\"name\\\": \\\"image.png\\\",\\n        \\\"id\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/600x340/4fa1415ee1f63d7e0323a99cf9c4b070/image.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"addAttachmentToCard\\\",\\n    \\\"date\\\": \\\"2017-06-17T03:22:12.853Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf69b834e48100c5e6bd2\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"ZyN4ipZ0\\\",\\n        \\\"idShort\\\": 11,\\n        \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n        \\\"name\\\": \\\"Saguaro National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Saguaro National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:50:03.406Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf6963433ed4467e4c157\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"4VeG442p\\\",\\n        \\\"idShort\\\": 10,\\n        \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n        \\\"name\\\": \\\"Petrified Forest National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Petrified Forest National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:49:58.755Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf693c431e22711a874b3\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Grand Canyon National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:49:55.369Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd842\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"ZyN4ipZ0\\\",\\n        \\\"idShort\\\": 11,\\n        \\\"name\\\": \\\"Saguaro National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:45.261Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e5\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"4VeG442p\\\",\\n        \\\"idShort\\\": 10,\\n        \\\"name\\\": \\\"Petrified Forest National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:42.849Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4df7139286471dc009e\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:39.559Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9aa\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createList\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:40:14.095Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a list","slug":"listsidactions","type":"endpoint","title":"/lists/{id}/actions","__v":1,"updatedAt":"2019-06-10T14:28:52.624Z","swagger":{"path":"/lists/{id}/actions"}},{"_id":"59511e2c89187e005de7af67","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:46:04.719Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511e3d2175e0001547e541","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"596ae8d8d3b666001a2ed9f1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object)","default":"all","type":"string","name":"fields"}],"url":"/lists/{id}/board","method":"get","examples":{"codes":[{"language":"http","code":""}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/board`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"US National Parks\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"577eb8850b41e08c3034aae2\\\",\\n  \\\"invited\\\": false,\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/b/tBmYPSYe/us-national-parks\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"560bfbb5176d070c67adc2b9\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/140x100/cf6ffdfac5ecf934ec324bf028b82686/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/256x192/2189d1f2d6c159c7de210412cc0e971f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/480x480/62bde347e629774a83378caf61f0fdb7/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/960x960/3102fa79837dfd37834cfaee02d1921c/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1024x1024/53a50ede7425af0b02a7b9bde783fe94/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1280x1280/491f54004976a4a81706caae613acf7f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1080,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09d\\\",\\n      \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"58ebc5d5abcedaf34a60800e\\\",\\n      \\\"idMember\\\": \\\"56fd3de8ba3cbeb22737fd55\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    }\\n  ],\\n  \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"Visited\\\",\\n    \\\"yellow\\\": \\\"\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [\\n    \\n  ],\\n  \\\"dateLastActivity\\\": \\\"2017-06-17T03:22:12.853Z\\\",\\n  \\\"dateLastView\\\": \\\"2017-06-26T14:58:10.989Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/tBmYPSYe\\\",\\n  \\\"idTags\\\": [\\n    \\n  ],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the board a list is on","slug":"listsidboard","type":"endpoint","title":"/lists/{id}/board","__v":2,"updatedAt":"2019-06-10T14:28:52.628Z","swagger":{"path":"/lists/{id}/board"}},{"_id":"59511e4a426f16003338d13f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:46:34.834Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"59511e5705000f0053afb48a","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/cards","method":"get","examples":{"codes":[{"language":"http","code":""}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"For all available query params, please see the [Cards Nested Resource](ref:cards-nested-resource)\n\nFor example:\n\n`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/cards?fields=id,name,badges,labels`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n    \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 2,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\",\\n        \\\"uses\\\": 15\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n    \\\"name\\\": \\\"Petrified Forest National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      \\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n    \\\"name\\\": \\\"Saguaro National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\",\\n        \\\"uses\\\": 15\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the cards in a list","slug":"listsidcards","type":"endpoint","title":"/lists/{id}/cards","__v":2,"updatedAt":"2019-06-10T14:28:52.629Z","swagger":{"path":"/lists/{id}/cards"}},{"_id":"595112f889187e005de7ae94","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:58:16.256Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595113265143cb00516284c6","ref":"","in":"path","required":false,"desc":"The ID of the list to update","default":"","type":"string","name":"id"},{"_id":"59511b815143cb00516284ec","ref":"","in":"query","required":false,"desc":"New name for the list","default":"","type":"string","name":"name"},{"_id":"59511b9f426f16003338d0db","ref":"","in":"query","required":false,"desc":"Whether the list should be closed (archived)","default":"","type":"boolean","name":"closed"},{"_id":"59511baffa8e91003f48d622","ref":"","in":"query","required":false,"desc":"ID of a board the list should be moved to","default":"","type":"string","name":"idBoard"},{"_id":"59511bcb426f16003338d0dc","ref":"","in":"query","required":false,"desc":"New position for the list: `top`, `bottom`, or a positive floating point number","default":"","type":"string","name":"pos"},{"_id":"59511be05143cb005162850d","ref":"","in":"query","required":false,"desc":"Whether the active member is subscribed to this list","default":"","type":"boolean","name":"subscribed"}],"url":"/lists/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Update the properties of a list","slug":"listsid-1","type":"endpoint","title":"/lists/{id}","__v":6,"updatedAt":"2019-06-10T14:28:52.630Z","swagger":{"path":"/lists/{id}"}},{"_id":"59511c8a2175e0001547e53e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:39:06.643Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511ca35143cb0051628550","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511cc398e9e2004705bab4","ref":"","in":"query","required":false,"desc":"Set to true to close (archive) the list","default":"","type":"boolean","name":"value"}],"url":"/lists/{id}/closed","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Archive or unarchive a list","slug":"listsidclosed","type":"endpoint","title":"/lists/{id}/closed","__v":2,"updatedAt":"2019-06-10T14:28:52.631Z","swagger":{"path":"/lists/{id}/closed"}},{"_id":"59511cee2a4052005b80499d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11b80c08330049443f26","updates":["5989273e8bd82e000f581709"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:40:46.780Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511cf92a4052005b80499e","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d04deb1f400495099bb","ref":"","in":"query","required":false,"desc":"The ID of the board to move the list to","default":"","type":"string","name":"value"}],"url":"/lists/{id}/idBoard","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Move a list to a new board","slug":"listsididboard","type":"endpoint","title":"/lists/{id}/idBoard","__v":4,"updatedAt":"2019-06-10T14:28:52.632Z","swagger":{"path":"/lists/{id}/idBoard"}},{"_id":"59511d132175e0001547e53f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:41:23.859Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d23426f16003338d13d","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d29d19745003dae87bf","ref":"","in":"query","required":false,"desc":"The new name for the list","default":"","type":"string","name":"value"}],"url":"/lists/{id}/name","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Rename a list","slug":"listsidname","type":"endpoint","title":"/lists/{id}/name","__v":2,"updatedAt":"2019-06-10T14:28:52.632Z","swagger":{"path":"/lists/{id}/name"}},{"_id":"59511d4205000f0053afb489","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:42:10.609Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d507227b70033d3c011","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d647227b70033d3c012","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"value"}],"url":"/lists/{id}/pos","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Change the position of a list","slug":"listsidpos","type":"endpoint","title":"/lists/{id}/pos","__v":2,"updatedAt":"2019-06-10T14:28:52.633Z","swagger":{"path":"/lists/{id}/pos"}},{"_id":"5cfe690b3d7129000e3e4df4","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.633Z","createdAt":"2019-06-10T14:28:27.221Z","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11b80c08330049443f26","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d8a2175e0001547e540","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511da57227b70033d3c013","ref":"","in":"query","required":false,"desc":"A number between `0` and `5000` or empty to remove the limit","default":"","type":"int","name":"value"}],"url":"/lists/{id}/softLimit","method":"put"},"isReference":true,"order":12,"body":"Alters the soft limit for number of cards in the list. This is used in conjunction with the [List Limits](https://trello.com/power-ups/5c2462c384ab8949b1724a20) Power-Up which will highlight lists that go over their set limit.","excerpt":"Set a soft limit for number of cards in the list","slug":"listsidsoftlimit","type":"endpoint","title":"/lists/{id}/softLimit","__v":1,"swagger":{"path":"/lists/{id}/softLimit"}},{"_id":"59511d79a85ca3001bfaa7a0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:43:05.076Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d8a2175e0001547e540","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511da57227b70033d3c013","ref":"","in":"query","required":false,"desc":"`true` to subscribe, `false` to unsubscribe","default":"","type":"boolean","name":"value"}],"url":"/lists/{id}/subscribed","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"Subscribe or unsubscribe from a list","slug":"listsidsubscribed","type":"endpoint","title":"/lists/{id}/subscribed","__v":2,"updatedAt":"2019-06-10T14:28:52.634Z","swagger":{"path":"/lists/{id}/subscribed"}},{"_id":"5951133aa92c7e003df187ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11b80c08330049443f26","updates":["5979bedb27ab43001f28e542","5c126a996ab977003805828a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:59:22.012Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511430cc55510029d56645","ref":"","in":"query","required":true,"desc":"Name for the list","default":"","type":"string","name":"name"},{"_id":"5951144998e9e2004705b9e8","ref":"","in":"query","required":true,"desc":"The long ID of the board the list should be created on","default":"","type":"string","name":"idBoard"},{"_id":"59511464a92c7e003df187f0","ref":"","in":"query","required":false,"desc":"ID of the list to copy into the new list","default":"","type":"string","name":"idListSource"},{"_id":"59511483d19745003dae8759","ref":"","in":"query","required":false,"desc":"Position of the list. `top`, `bottom`, or a positive floating point number","default":"","type":"string","name":"pos"}],"url":"/lists","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"","excerpt":"Create a new list on a board","slug":"lists-1","type":"endpoint","title":"/lists","__v":7,"updatedAt":"2019-06-10T14:28:52.634Z","swagger":{"path":"/lists"}},{"_id":"5951150b2175e0001547e4b7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:07:07.096Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5951151f05000f0053afb461","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/archiveAllCards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Archive all cards in a list","slug":"listsidarchiveallcards","type":"endpoint","title":"/lists/{id}/archiveAllCards","__v":1,"updatedAt":"2019-06-10T14:28:52.635Z","swagger":{"path":"/lists/{id}/archiveAllCards"}},{"_id":"59511551cc55510029d56646","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:08:17.687Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511563a85ca3001bfaa6f5","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511573deb1f4004950994f","ref":"","in":"query","required":true,"desc":"The ID of the board the cards should be moved to","default":"","type":"string","name":"idBoard"},{"_id":"59511583a85ca3001bfaa6f6","ref":"","in":"query","required":true,"desc":"The ID of the list that the cards should be moved to","default":"","type":"string","name":"idList"}],"url":"/lists/{id}/moveAllCards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"Move all cards in a list","slug":"listsidmoveallcards","type":"endpoint","title":"/lists/{id}/moveAllCards","__v":3,"updatedAt":"2019-06-10T14:28:52.635Z","swagger":{"path":"/lists/{id}/moveAllCards"}}],"childrenPages":[{"_id":"594d1a2bae68a2001533f6f3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:55.007Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**name**\\nstring\",\n    \"2-0\": \"**closed**\\nboolean\",\n    \"3-0\": \"**idBoard**\\nstring\",\n    \"4-0\": \"**pos**\\nfloat\",\n    \"5-0\": \"**subscribed**\\nboolean\",\n    \"5-1\": \"Whether the member is subscribed to this list\",\n    \"4-1\": \"The position of the list on the board\",\n    \"3-1\": \"The ID of the board the list is on\",\n    \"2-1\": \"Whether the list is closed (archived)\",\n    \"1-1\": \"The name of the list\",\n    \"0-1\": \"The ID of the list\",\n    \"6-0\": \"**softLimit**\\ninteger | null\",\n    \"6-1\": \"A soft limit for number of open cards in the list used by the [List Limits Power-Up](https://trello.com/power-ups/5c2462c384ab8949b1724a20)\"\n  },\n  \"cols\": 2,\n  \"rows\": 7\n}\n[/block]\nHere's an example response from `GET` `/1/lists/560bf48efe2771efe9b45997?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf48efe2771efe9b45997\\\",\\n  \\\"name\\\": \\\"Washington\\\",\\n  \\\"closed\\\": false,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"pos\\\": 1638399,\\n  \\\"subscribed\\\": false,\\n  \\\"softLimit\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"list-object","type":"basic","title":"List Object","__v":0,"updatedAt":"2019-06-10T14:33:51.828Z"},{"_id":"594d1a50ae68a2001533f6f4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11b80c08330049443f26","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:40:32.863Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Lists are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to lists as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Lists as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing lists as a nested resource via query params. For instance, the query params are available when you are accessing lists via:  `/object/{id}?lists=open`.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**lists**\",\n    \"0-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\\n\\nWhich types lists should be returned.\",\n    \"1-0\": \"**list_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of [fields](#list-object)\",\n    \"h-0\": \"Query Param\",\n    \"h-1\": \"Value\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\nHere is an example of using the lists nested resource on the `boards` endpoint:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/k7hfpqQm/?fields=name&lists=all&list_fields=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n  \\\"name\\\": \\\"VR Education Academic Paper Tracker\\\",\\n  \\\"lists\\\": [\\n    {\\n      \\\"id\\\": \\\"5ac61a2e05fae550b0d45c94\\\",\\n      \\\"name\\\": \\\"Prompts\\\",\\n      \\\"closed\\\": false,\\n      \\\"idBoard\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n      \\\"pos\\\": 98303,\\n      \\\"subscribed\\\": false,\\n      \\\"limits\\\": {\\n        \\\"cards\\\": {\\n          \\\"openPerList\\\": {\\n            \\\"status\\\": \\\"ok\\\",\\n            \\\"disableAt\\\": 5000,\\n            \\\"warnAt\\\": 4500\\n          },\\n          \\\"totalPerList\\\": {\\n            \\\"status\\\": \\\"ok\\\",\\n            \\\"disableAt\\\": 1000000,\\n            \\\"warnAt\\\": 900000\\n          }\\n        }\\n      },\\n      \\\"creationMethod\\\": null\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Cards as URL Params\"\n}\n[/block]\nLists are also available as nested resources via URL parameters. For instance, you may want just the lists belonging to a specific resource like a board; in that case you'd use the route `/1/boards/{id}/lists` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"0-0\": \"**filter**\",\n    \"0-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\\n\\nWhich types lists should be returned.\",\n    \"1-0\": \"**list_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of [fields](#list-object)\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\nHere is an example of using the lists nested resource on the `boards` endpoint:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/k7hfpqQm/lists?fields=all&filter=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5ac61a2e05fae550b0d45c94\\\",\\n    \\\"name\\\": \\\"Prompts\\\",\\n    \\\"closed\\\": false,\\n    \\\"idBoard\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n    \\\"pos\\\": 98303,\\n    \\\"subscribed\\\": null,\\n    \\\"limits\\\": {\\n      \\\"cards\\\": {\\n        \\\"openPerList\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 5000,\\n          \\\"warnAt\\\": 4500\\n        },\\n        \\\"totalPerList\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 1000000,\\n          \\\"warnAt\\\": 900000\\n        }\\n      }\\n    },\\n    \\\"creationMethod\\\": null\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"lists-nested-resource","type":"basic","title":"Lists Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.622Z"},{"_id":"595112c898e9e2004705b9e4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:57:28.060Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511317a85ca3001bfaa6e5","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"595117fe98e9e2004705b9e9","ref":"","in":"query","required":false,"desc":"`all` or a comma separated list of [fields](#list-object)","default":"name,closed,idBoard,pos","type":"string","name":"fields"}],"url":"/lists/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get information about a list","slug":"listsid","type":"endpoint","title":"/lists/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.623Z","swagger":{"path":"/lists/{id}"}},{"_id":"59512b0005000f0053afb4c3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T15:40:48.472Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59512b0dd071a00069704a8f","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59512b20535714007d5acb71","ref":"","in":"path","required":false,"desc":"The field to return. See [fields](#list-object)","default":"","type":"string","name":"field"}],"url":"/lists/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a specific property of a list","slug":"listsidfield","type":"endpoint","title":"/lists/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.623Z","swagger":{"path":"/lists/{id}/{field}"}},{"_id":"59511e0da85ca3001bfaa7a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:45:33.846Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511e1bcc55510029d566ae","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/actions","method":"get","examples":{"codes":[{"code":"","language":"http"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5944a06460ed0bee471ad8e3\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      },\\n      \\\"attachment\\\": {\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n        \\\"name\\\": \\\"image.png\\\",\\n        \\\"id\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/600x340/4fa1415ee1f63d7e0323a99cf9c4b070/image.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"addAttachmentToCard\\\",\\n    \\\"date\\\": \\\"2017-06-17T03:22:12.853Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf69b834e48100c5e6bd2\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"ZyN4ipZ0\\\",\\n        \\\"idShort\\\": 11,\\n        \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n        \\\"name\\\": \\\"Saguaro National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Saguaro National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:50:03.406Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf6963433ed4467e4c157\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"4VeG442p\\\",\\n        \\\"idShort\\\": 10,\\n        \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n        \\\"name\\\": \\\"Petrified Forest National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Petrified Forest National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:49:58.755Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf693c431e22711a874b3\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Grand Canyon National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:49:55.369Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd842\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"ZyN4ipZ0\\\",\\n        \\\"idShort\\\": 11,\\n        \\\"name\\\": \\\"Saguaro National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:45.261Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e5\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"4VeG442p\\\",\\n        \\\"idShort\\\": 10,\\n        \\\"name\\\": \\\"Petrified Forest National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:42.849Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4df7139286471dc009e\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:39.559Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9aa\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createList\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:40:14.095Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a list","slug":"listsidactions","type":"endpoint","title":"/lists/{id}/actions","__v":1,"updatedAt":"2019-06-10T14:28:52.624Z","swagger":{"path":"/lists/{id}/actions"}},{"_id":"59511e2c89187e005de7af67","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:46:04.719Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511e3d2175e0001547e541","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"596ae8d8d3b666001a2ed9f1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object)","default":"all","type":"string","name":"fields"}],"url":"/lists/{id}/board","method":"get","examples":{"codes":[{"language":"http","code":""}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/board`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"US National Parks\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"577eb8850b41e08c3034aae2\\\",\\n  \\\"invited\\\": false,\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/b/tBmYPSYe/us-national-parks\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"560bfbb5176d070c67adc2b9\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/140x100/cf6ffdfac5ecf934ec324bf028b82686/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/256x192/2189d1f2d6c159c7de210412cc0e971f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/480x480/62bde347e629774a83378caf61f0fdb7/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/960x960/3102fa79837dfd37834cfaee02d1921c/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1024x1024/53a50ede7425af0b02a7b9bde783fe94/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1280x1280/491f54004976a4a81706caae613acf7f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1080,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09d\\\",\\n      \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"58ebc5d5abcedaf34a60800e\\\",\\n      \\\"idMember\\\": \\\"56fd3de8ba3cbeb22737fd55\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    }\\n  ],\\n  \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"Visited\\\",\\n    \\\"yellow\\\": \\\"\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [\\n    \\n  ],\\n  \\\"dateLastActivity\\\": \\\"2017-06-17T03:22:12.853Z\\\",\\n  \\\"dateLastView\\\": \\\"2017-06-26T14:58:10.989Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/tBmYPSYe\\\",\\n  \\\"idTags\\\": [\\n    \\n  ],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the board a list is on","slug":"listsidboard","type":"endpoint","title":"/lists/{id}/board","__v":2,"updatedAt":"2019-06-10T14:28:52.628Z","swagger":{"path":"/lists/{id}/board"}},{"_id":"59511e4a426f16003338d13f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:46:34.834Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"59511e5705000f0053afb48a","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/cards","method":"get","examples":{"codes":[{"language":"http","code":""}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"For all available query params, please see the [Cards Nested Resource](ref:cards-nested-resource)\n\nFor example:\n\n`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/cards?fields=id,name,badges,labels`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n    \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 2,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\",\\n        \\\"uses\\\": 15\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n    \\\"name\\\": \\\"Petrified Forest National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      \\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n    \\\"name\\\": \\\"Saguaro National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\",\\n        \\\"uses\\\": 15\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the cards in a list","slug":"listsidcards","type":"endpoint","title":"/lists/{id}/cards","__v":2,"updatedAt":"2019-06-10T14:28:52.629Z","swagger":{"path":"/lists/{id}/cards"}},{"_id":"595112f889187e005de7ae94","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:58:16.256Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595113265143cb00516284c6","ref":"","in":"path","required":false,"desc":"The ID of the list to update","default":"","type":"string","name":"id"},{"_id":"59511b815143cb00516284ec","ref":"","in":"query","required":false,"desc":"New name for the list","default":"","type":"string","name":"name"},{"_id":"59511b9f426f16003338d0db","ref":"","in":"query","required":false,"desc":"Whether the list should be closed (archived)","default":"","type":"boolean","name":"closed"},{"_id":"59511baffa8e91003f48d622","ref":"","in":"query","required":false,"desc":"ID of a board the list should be moved to","default":"","type":"string","name":"idBoard"},{"_id":"59511bcb426f16003338d0dc","ref":"","in":"query","required":false,"desc":"New position for the list: `top`, `bottom`, or a positive floating point number","default":"","type":"string","name":"pos"},{"_id":"59511be05143cb005162850d","ref":"","in":"query","required":false,"desc":"Whether the active member is subscribed to this list","default":"","type":"boolean","name":"subscribed"}],"url":"/lists/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Update the properties of a list","slug":"listsid-1","type":"endpoint","title":"/lists/{id}","__v":6,"updatedAt":"2019-06-10T14:28:52.630Z","swagger":{"path":"/lists/{id}"}},{"_id":"59511c8a2175e0001547e53e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:39:06.643Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511ca35143cb0051628550","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511cc398e9e2004705bab4","ref":"","in":"query","required":false,"desc":"Set to true to close (archive) the list","default":"","type":"boolean","name":"value"}],"url":"/lists/{id}/closed","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Archive or unarchive a list","slug":"listsidclosed","type":"endpoint","title":"/lists/{id}/closed","__v":2,"updatedAt":"2019-06-10T14:28:52.631Z","swagger":{"path":"/lists/{id}/closed"}},{"_id":"59511cee2a4052005b80499d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11b80c08330049443f26","updates":["5989273e8bd82e000f581709"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:40:46.780Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511cf92a4052005b80499e","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d04deb1f400495099bb","ref":"","in":"query","required":false,"desc":"The ID of the board to move the list to","default":"","type":"string","name":"value"}],"url":"/lists/{id}/idBoard","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Move a list to a new board","slug":"listsididboard","type":"endpoint","title":"/lists/{id}/idBoard","__v":4,"updatedAt":"2019-06-10T14:28:52.632Z","swagger":{"path":"/lists/{id}/idBoard"}},{"_id":"59511d132175e0001547e53f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:41:23.859Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d23426f16003338d13d","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d29d19745003dae87bf","ref":"","in":"query","required":false,"desc":"The new name for the list","default":"","type":"string","name":"value"}],"url":"/lists/{id}/name","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Rename a list","slug":"listsidname","type":"endpoint","title":"/lists/{id}/name","__v":2,"updatedAt":"2019-06-10T14:28:52.632Z","swagger":{"path":"/lists/{id}/name"}},{"_id":"59511d4205000f0053afb489","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:42:10.609Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d507227b70033d3c011","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d647227b70033d3c012","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"value"}],"url":"/lists/{id}/pos","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Change the position of a list","slug":"listsidpos","type":"endpoint","title":"/lists/{id}/pos","__v":2,"updatedAt":"2019-06-10T14:28:52.633Z","swagger":{"path":"/lists/{id}/pos"}},{"_id":"5cfe690b3d7129000e3e4df4","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.633Z","createdAt":"2019-06-10T14:28:27.221Z","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11b80c08330049443f26","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d8a2175e0001547e540","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511da57227b70033d3c013","ref":"","in":"query","required":false,"desc":"A number between `0` and `5000` or empty to remove the limit","default":"","type":"int","name":"value"}],"url":"/lists/{id}/softLimit","method":"put"},"isReference":true,"order":12,"body":"Alters the soft limit for number of cards in the list. This is used in conjunction with the [List Limits](https://trello.com/power-ups/5c2462c384ab8949b1724a20) Power-Up which will highlight lists that go over their set limit.","excerpt":"Set a soft limit for number of cards in the list","slug":"listsidsoftlimit","type":"endpoint","title":"/lists/{id}/softLimit","__v":1,"swagger":{"path":"/lists/{id}/softLimit"}},{"_id":"59511d79a85ca3001bfaa7a0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:43:05.076Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d8a2175e0001547e540","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511da57227b70033d3c013","ref":"","in":"query","required":false,"desc":"`true` to subscribe, `false` to unsubscribe","default":"","type":"boolean","name":"value"}],"url":"/lists/{id}/subscribed","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"Subscribe or unsubscribe from a list","slug":"listsidsubscribed","type":"endpoint","title":"/lists/{id}/subscribed","__v":2,"updatedAt":"2019-06-10T14:28:52.634Z","swagger":{"path":"/lists/{id}/subscribed"}},{"_id":"5951133aa92c7e003df187ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11b80c08330049443f26","updates":["5979bedb27ab43001f28e542","5c126a996ab977003805828a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:59:22.012Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511430cc55510029d56645","ref":"","in":"query","required":true,"desc":"Name for the list","default":"","type":"string","name":"name"},{"_id":"5951144998e9e2004705b9e8","ref":"","in":"query","required":true,"desc":"The long ID of the board the list should be created on","default":"","type":"string","name":"idBoard"},{"_id":"59511464a92c7e003df187f0","ref":"","in":"query","required":false,"desc":"ID of the list to copy into the new list","default":"","type":"string","name":"idListSource"},{"_id":"59511483d19745003dae8759","ref":"","in":"query","required":false,"desc":"Position of the list. `top`, `bottom`, or a positive floating point number","default":"","type":"string","name":"pos"}],"url":"/lists","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"","excerpt":"Create a new list on a board","slug":"lists-1","type":"endpoint","title":"/lists","__v":7,"updatedAt":"2019-06-10T14:28:52.634Z","swagger":{"path":"/lists"}},{"_id":"5951150b2175e0001547e4b7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:07:07.096Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5951151f05000f0053afb461","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/archiveAllCards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Archive all cards in a list","slug":"listsidarchiveallcards","type":"endpoint","title":"/lists/{id}/archiveAllCards","__v":1,"updatedAt":"2019-06-10T14:28:52.635Z","swagger":{"path":"/lists/{id}/archiveAllCards"}},{"_id":"59511551cc55510029d56646","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:08:17.687Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511563a85ca3001bfaa6f5","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511573deb1f4004950994f","ref":"","in":"query","required":true,"desc":"The ID of the board the cards should be moved to","default":"","type":"string","name":"idBoard"},{"_id":"59511583a85ca3001bfaa6f6","ref":"","in":"query","required":true,"desc":"The ID of the list that the cards should be moved to","default":"","type":"string","name":"idList"}],"url":"/lists/{id}/moveAllCards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"Move all cards in a list","slug":"listsidmoveallcards","type":"endpoint","title":"/lists/{id}/moveAllCards","__v":3,"updatedAt":"2019-06-10T14:28:52.635Z","swagger":{"path":"/lists/{id}/moveAllCards"}}]},{"_id":"594d1a2bae68a2001533f6f3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:39:55.007Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**name**\\nstring\",\n    \"2-0\": \"**closed**\\nboolean\",\n    \"3-0\": \"**idBoard**\\nstring\",\n    \"4-0\": \"**pos**\\nfloat\",\n    \"5-0\": \"**subscribed**\\nboolean\",\n    \"5-1\": \"Whether the member is subscribed to this list\",\n    \"4-1\": \"The position of the list on the board\",\n    \"3-1\": \"The ID of the board the list is on\",\n    \"2-1\": \"Whether the list is closed (archived)\",\n    \"1-1\": \"The name of the list\",\n    \"0-1\": \"The ID of the list\",\n    \"6-0\": \"**softLimit**\\ninteger | null\",\n    \"6-1\": \"A soft limit for number of open cards in the list used by the [List Limits Power-Up](https://trello.com/power-ups/5c2462c384ab8949b1724a20)\"\n  },\n  \"cols\": 2,\n  \"rows\": 7\n}\n[/block]\nHere's an example response from `GET` `/1/lists/560bf48efe2771efe9b45997?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf48efe2771efe9b45997\\\",\\n  \\\"name\\\": \\\"Washington\\\",\\n  \\\"closed\\\": false,\\n  \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"pos\\\": 1638399,\\n  \\\"subscribed\\\": false,\\n  \\\"softLimit\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"list-object","type":"basic","title":"List Object","__v":0,"updatedAt":"2019-06-10T14:33:51.828Z"},{"_id":"594d1a50ae68a2001533f6f4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11b80c08330049443f26","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:40:32.863Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Lists are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to lists as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Lists as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing lists as a nested resource via query params. For instance, the query params are available when you are accessing lists via:  `/object/{id}?lists=open`.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**lists**\",\n    \"0-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\\n\\nWhich types lists should be returned.\",\n    \"1-0\": \"**list_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of [fields](#list-object)\",\n    \"h-0\": \"Query Param\",\n    \"h-1\": \"Value\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\nHere is an example of using the lists nested resource on the `boards` endpoint:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/k7hfpqQm/?fields=name&lists=all&list_fields=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n  \\\"name\\\": \\\"VR Education Academic Paper Tracker\\\",\\n  \\\"lists\\\": [\\n    {\\n      \\\"id\\\": \\\"5ac61a2e05fae550b0d45c94\\\",\\n      \\\"name\\\": \\\"Prompts\\\",\\n      \\\"closed\\\": false,\\n      \\\"idBoard\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n      \\\"pos\\\": 98303,\\n      \\\"subscribed\\\": false,\\n      \\\"limits\\\": {\\n        \\\"cards\\\": {\\n          \\\"openPerList\\\": {\\n            \\\"status\\\": \\\"ok\\\",\\n            \\\"disableAt\\\": 5000,\\n            \\\"warnAt\\\": 4500\\n          },\\n          \\\"totalPerList\\\": {\\n            \\\"status\\\": \\\"ok\\\",\\n            \\\"disableAt\\\": 1000000,\\n            \\\"warnAt\\\": 900000\\n          }\\n        }\\n      },\\n      \\\"creationMethod\\\": null\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Cards as URL Params\"\n}\n[/block]\nLists are also available as nested resources via URL parameters. For instance, you may want just the lists belonging to a specific resource like a board; in that case you'd use the route `/1/boards/{id}/lists` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"0-0\": \"**filter**\",\n    \"0-1\": \"Default: `none`\\nOne of: `all`, `closed`, `none`, `open`\\n\\nWhich types lists should be returned.\",\n    \"1-0\": \"**list_fields**\",\n    \"1-1\": \"Default: `all`\\n`all` or a comma separated list of [fields](#list-object)\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\nHere is an example of using the lists nested resource on the `boards` endpoint:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/boards/k7hfpqQm/lists?fields=all&filter=all\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5ac61a2e05fae550b0d45c94\\\",\\n    \\\"name\\\": \\\"Prompts\\\",\\n    \\\"closed\\\": false,\\n    \\\"idBoard\\\": \\\"5ac61a2e05fae550b0d45c93\\\",\\n    \\\"pos\\\": 98303,\\n    \\\"subscribed\\\": null,\\n    \\\"limits\\\": {\\n      \\\"cards\\\": {\\n        \\\"openPerList\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 5000,\\n          \\\"warnAt\\\": 4500\\n        },\\n        \\\"totalPerList\\\": {\\n          \\\"status\\\": \\\"ok\\\",\\n          \\\"disableAt\\\": 1000000,\\n          \\\"warnAt\\\": 900000\\n        }\\n      }\\n    },\\n    \\\"creationMethod\\\": null\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"lists-nested-resource","type":"basic","title":"Lists Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.622Z"},{"_id":"595112c898e9e2004705b9e4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:57:28.060Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511317a85ca3001bfaa6e5","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"595117fe98e9e2004705b9e9","ref":"","in":"query","required":false,"desc":"`all` or a comma separated list of [fields](#list-object)","default":"name,closed,idBoard,pos","type":"string","name":"fields"}],"url":"/lists/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get information about a list","slug":"listsid","type":"endpoint","title":"/lists/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.623Z","swagger":{"path":"/lists/{id}"}},{"_id":"59512b0005000f0053afb4c3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T15:40:48.472Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59512b0dd071a00069704a8f","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59512b20535714007d5acb71","ref":"","in":"path","required":false,"desc":"The field to return. See [fields](#list-object)","default":"","type":"string","name":"field"}],"url":"/lists/{id}/{field}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a specific property of a list","slug":"listsidfield","type":"endpoint","title":"/lists/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.623Z","swagger":{"path":"/lists/{id}/{field}"}},{"_id":"59511e0da85ca3001bfaa7a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:45:33.846Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511e1bcc55510029d566ae","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/actions","method":"get","examples":{"codes":[{"code":"","language":"http"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5944a06460ed0bee471ad8e3\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      },\\n      \\\"attachment\\\": {\\n        \\\"url\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\",\\n        \\\"name\\\": \\\"image.png\\\",\\n        \\\"id\\\": \\\"5944a06460ed0bee471ad8e0\\\",\\n        \\\"previewUrl\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4dd7139286471dc009c/600x340/4fa1415ee1f63d7e0323a99cf9c4b070/image.png\\\",\\n        \\\"previewUrl2x\\\": \\\"https://trello-attachments.s3.amazonaws.com/560bf4298b3dda300c18d09c/560bf4dd7139286471dc009c/1d9626a92755602d80e42faeb2de1ef8/image.png\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"addAttachmentToCard\\\",\\n    \\\"date\\\": \\\"2017-06-17T03:22:12.853Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf69b834e48100c5e6bd2\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"ZyN4ipZ0\\\",\\n        \\\"idShort\\\": 11,\\n        \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n        \\\"name\\\": \\\"Saguaro National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Saguaro National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:50:03.406Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf6963433ed4467e4c157\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"4VeG442p\\\",\\n        \\\"idShort\\\": 10,\\n        \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n        \\\"name\\\": \\\"Petrified Forest National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Petrified Forest National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:49:58.755Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf693c431e22711a874b3\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"name\\\": \\\"Grand Canyon National Park | MapQuest National Parks\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:49:55.369Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd842\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"ZyN4ipZ0\\\",\\n        \\\"idShort\\\": 11,\\n        \\\"name\\\": \\\"Saguaro National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:45.261Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e5\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"4VeG442p\\\",\\n        \\\"idShort\\\": 10,\\n        \\\"name\\\": \\\"Petrified Forest National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:42.849Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4df7139286471dc009e\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park | MapQuest National Parks\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createCard\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:42:39.559Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9aa\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"createList\\\",\\n    \\\"date\\\": \\\"2015-09-30T14:40:14.095Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a list","slug":"listsidactions","type":"endpoint","title":"/lists/{id}/actions","__v":1,"updatedAt":"2019-06-10T14:28:52.624Z","swagger":{"path":"/lists/{id}/actions"}},{"_id":"59511e2c89187e005de7af67","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:46:04.719Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511e3d2175e0001547e541","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"596ae8d8d3b666001a2ed9f1","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](#board-object)","default":"all","type":"string","name":"fields"}],"url":"/lists/{id}/board","method":"get","examples":{"codes":[{"language":"http","code":""}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/board`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n  \\\"name\\\": \\\"US National Parks\\\",\\n  \\\"desc\\\": \\\"\\\",\\n  \\\"descData\\\": null,\\n  \\\"closed\\\": false,\\n  \\\"idOrganization\\\": \\\"577eb8850b41e08c3034aae2\\\",\\n  \\\"invited\\\": false,\\n  \\\"pinned\\\": false,\\n  \\\"starred\\\": true,\\n  \\\"url\\\": \\\"https://trello.com/b/tBmYPSYe/us-national-parks\\\",\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"voting\\\": \\\"disabled\\\",\\n    \\\"comments\\\": \\\"members\\\",\\n    \\\"invitations\\\": \\\"members\\\",\\n    \\\"selfJoin\\\": true,\\n    \\\"cardCovers\\\": true,\\n    \\\"cardAging\\\": \\\"regular\\\",\\n    \\\"calendarFeedEnabled\\\": false,\\n    \\\"background\\\": \\\"560bfbb5176d070c67adc2b9\\\",\\n    \\\"backgroundImage\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\",\\n    \\\"backgroundImageScaled\\\": [\\n      {\\n        \\\"width\\\": 140,\\n        \\\"height\\\": 100,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/140x100/cf6ffdfac5ecf934ec324bf028b82686/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 256,\\n        \\\"height\\\": 192,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/256x192/2189d1f2d6c159c7de210412cc0e971f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 480,\\n        \\\"height\\\": 480,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/480x480/62bde347e629774a83378caf61f0fdb7/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 960,\\n        \\\"height\\\": 960,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/960x960/3102fa79837dfd37834cfaee02d1921c/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1024,\\n        \\\"height\\\": 1024,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1024x1024/53a50ede7425af0b02a7b9bde783fe94/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1280,\\n        \\\"height\\\": 1280,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1280x1280/491f54004976a4a81706caae613acf7f/Bryce_Canyon.jpg\\\"\\n      },\\n      {\\n        \\\"width\\\": 1920,\\n        \\\"height\\\": 1080,\\n        \\\"url\\\": \\\"https://trello-backgrounds.s3.amazonaws.com/556c8537a1928ba745504dd8/1920x1080/b5ab43954a54880e455d3b4e5109644c/Bryce_Canyon.jpg\\\"\\n      }\\n    ],\\n    \\\"backgroundTile\\\": false,\\n    \\\"backgroundBrightness\\\": \\\"light\\\",\\n    \\\"canBePublic\\\": false,\\n    \\\"canBeOrg\\\": false,\\n    \\\"canBePrivate\\\": false,\\n    \\\"canInvite\\\": true\\n  },\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09d\\\",\\n      \\\"idMember\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"58ebc5d5abcedaf34a60800e\\\",\\n      \\\"idMember\\\": \\\"56fd3de8ba3cbeb22737fd55\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false,\\n      \\\"deactivated\\\": false\\n    }\\n  ],\\n  \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n  \\\"subscribed\\\": false,\\n  \\\"labelNames\\\": {\\n    \\\"green\\\": \\\"Visited\\\",\\n    \\\"yellow\\\": \\\"\\\",\\n    \\\"orange\\\": \\\"\\\",\\n    \\\"red\\\": \\\"\\\",\\n    \\\"purple\\\": \\\"\\\",\\n    \\\"blue\\\": \\\"\\\",\\n    \\\"sky\\\": \\\"\\\",\\n    \\\"lime\\\": \\\"\\\",\\n    \\\"pink\\\": \\\"\\\",\\n    \\\"black\\\": \\\"\\\"\\n  },\\n  \\\"powerUps\\\": [\\n    \\n  ],\\n  \\\"dateLastActivity\\\": \\\"2017-06-17T03:22:12.853Z\\\",\\n  \\\"dateLastView\\\": \\\"2017-06-26T14:58:10.989Z\\\",\\n  \\\"shortUrl\\\": \\\"https://trello.com/b/tBmYPSYe\\\",\\n  \\\"idTags\\\": [\\n    \\n  ],\\n  \\\"datePluginDisable\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get the board a list is on","slug":"listsidboard","type":"endpoint","title":"/lists/{id}/board","__v":2,"updatedAt":"2019-06-10T14:28:52.628Z","swagger":{"path":"/lists/{id}/board"}},{"_id":"59511e4a426f16003338d13f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:46:34.834Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"59511e5705000f0053afb48a","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/cards","method":"get","examples":{"codes":[{"language":"http","code":""}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"For all available query params, please see the [Cards Nested Resource](ref:cards-nested-resource)\n\nFor example:\n\n`GET` `/1/lists/560bf44ea68b16bd0fc2a9a9/cards?fields=id,name,badges,labels`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n    \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 2,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\",\\n        \\\"uses\\\": 15\\n      }\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e25d93437b729482e0\\\",\\n    \\\"name\\\": \\\"Petrified Forest National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      \\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"560bf4e5ea91d2880f5dd840\\\",\\n    \\\"name\\\": \\\"Saguaro National Park\\\",\\n    \\\"badges\\\": {\\n      \\\"votes\\\": 0,\\n      \\\"viewingMemberVoted\\\": false,\\n      \\\"subscribed\\\": false,\\n      \\\"fogbugz\\\": \\\"\\\",\\n      \\\"checkItems\\\": 0,\\n      \\\"checkItemsChecked\\\": 0,\\n      \\\"comments\\\": 0,\\n      \\\"attachments\\\": 1,\\n      \\\"description\\\": false,\\n      \\\"due\\\": null,\\n      \\\"dueComplete\\\": false\\n    },\\n    \\\"labels\\\": [\\n      {\\n        \\\"id\\\": \\\"560bf42919ad3a5dc29f33c5\\\",\\n        \\\"idBoard\\\": \\\"560bf4298b3dda300c18d09c\\\",\\n        \\\"name\\\": \\\"Visited\\\",\\n        \\\"color\\\": \\\"green\\\",\\n        \\\"uses\\\": 15\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the cards in a list","slug":"listsidcards","type":"endpoint","title":"/lists/{id}/cards","__v":2,"updatedAt":"2019-06-10T14:28:52.629Z","swagger":{"path":"/lists/{id}/cards"}},{"_id":"595112f889187e005de7ae94","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:58:16.256Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595113265143cb00516284c6","ref":"","in":"path","required":false,"desc":"The ID of the list to update","default":"","type":"string","name":"id"},{"_id":"59511b815143cb00516284ec","ref":"","in":"query","required":false,"desc":"New name for the list","default":"","type":"string","name":"name"},{"_id":"59511b9f426f16003338d0db","ref":"","in":"query","required":false,"desc":"Whether the list should be closed (archived)","default":"","type":"boolean","name":"closed"},{"_id":"59511baffa8e91003f48d622","ref":"","in":"query","required":false,"desc":"ID of a board the list should be moved to","default":"","type":"string","name":"idBoard"},{"_id":"59511bcb426f16003338d0dc","ref":"","in":"query","required":false,"desc":"New position for the list: `top`, `bottom`, or a positive floating point number","default":"","type":"string","name":"pos"},{"_id":"59511be05143cb005162850d","ref":"","in":"query","required":false,"desc":"Whether the active member is subscribed to this list","default":"","type":"boolean","name":"subscribed"}],"url":"/lists/{id}","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Update the properties of a list","slug":"listsid-1","type":"endpoint","title":"/lists/{id}","__v":6,"updatedAt":"2019-06-10T14:28:52.630Z","swagger":{"path":"/lists/{id}"}},{"_id":"59511c8a2175e0001547e53e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:39:06.643Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511ca35143cb0051628550","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511cc398e9e2004705bab4","ref":"","in":"query","required":false,"desc":"Set to true to close (archive) the list","default":"","type":"boolean","name":"value"}],"url":"/lists/{id}/closed","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Archive or unarchive a list","slug":"listsidclosed","type":"endpoint","title":"/lists/{id}/closed","__v":2,"updatedAt":"2019-06-10T14:28:52.631Z","swagger":{"path":"/lists/{id}/closed"}},{"_id":"59511cee2a4052005b80499d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11b80c08330049443f26","updates":["5989273e8bd82e000f581709"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:40:46.780Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511cf92a4052005b80499e","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d04deb1f400495099bb","ref":"","in":"query","required":false,"desc":"The ID of the board to move the list to","default":"","type":"string","name":"value"}],"url":"/lists/{id}/idBoard","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Move a list to a new board","slug":"listsididboard","type":"endpoint","title":"/lists/{id}/idBoard","__v":4,"updatedAt":"2019-06-10T14:28:52.632Z","swagger":{"path":"/lists/{id}/idBoard"}},{"_id":"59511d132175e0001547e53f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:41:23.859Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d23426f16003338d13d","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d29d19745003dae87bf","ref":"","in":"query","required":false,"desc":"The new name for the list","default":"","type":"string","name":"value"}],"url":"/lists/{id}/name","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Rename a list","slug":"listsidname","type":"endpoint","title":"/lists/{id}/name","__v":2,"updatedAt":"2019-06-10T14:28:52.632Z","swagger":{"path":"/lists/{id}/name"}},{"_id":"59511d4205000f0053afb489","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:42:10.609Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d507227b70033d3c011","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511d647227b70033d3c012","ref":"","in":"query","required":false,"desc":"`top`, `bottom`, or a positive float","default":"","type":"string","name":"value"}],"url":"/lists/{id}/pos","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Change the position of a list","slug":"listsidpos","type":"endpoint","title":"/lists/{id}/pos","__v":2,"updatedAt":"2019-06-10T14:28:52.633Z","swagger":{"path":"/lists/{id}/pos"}},{"_id":"5cfe690b3d7129000e3e4df4","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.633Z","createdAt":"2019-06-10T14:28:27.221Z","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11b80c08330049443f26","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d8a2175e0001547e540","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511da57227b70033d3c013","ref":"","in":"query","required":false,"desc":"A number between `0` and `5000` or empty to remove the limit","default":"","type":"int","name":"value"}],"url":"/lists/{id}/softLimit","method":"put"},"isReference":true,"order":12,"body":"Alters the soft limit for number of cards in the list. This is used in conjunction with the [List Limits](https://trello.com/power-ups/5c2462c384ab8949b1724a20) Power-Up which will highlight lists that go over their set limit.","excerpt":"Set a soft limit for number of cards in the list","slug":"listsidsoftlimit","type":"endpoint","title":"/lists/{id}/softLimit","__v":1,"swagger":{"path":"/lists/{id}/softLimit"}},{"_id":"59511d79a85ca3001bfaa7a0","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:43:05.076Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511d8a2175e0001547e540","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511da57227b70033d3c013","ref":"","in":"query","required":false,"desc":"`true` to subscribe, `false` to unsubscribe","default":"","type":"boolean","name":"value"}],"url":"/lists/{id}/subscribed","method":"put","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"Subscribe or unsubscribe from a list","slug":"listsidsubscribed","type":"endpoint","title":"/lists/{id}/subscribed","__v":2,"updatedAt":"2019-06-10T14:28:52.634Z","swagger":{"path":"/lists/{id}/subscribed"}},{"_id":"5951133aa92c7e003df187ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11b80c08330049443f26","updates":["5979bedb27ab43001f28e542","5c126a996ab977003805828a"],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T13:59:22.012Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511430cc55510029d56645","ref":"","in":"query","required":true,"desc":"Name for the list","default":"","type":"string","name":"name"},{"_id":"5951144998e9e2004705b9e8","ref":"","in":"query","required":true,"desc":"The long ID of the board the list should be created on","default":"","type":"string","name":"idBoard"},{"_id":"59511464a92c7e003df187f0","ref":"","in":"query","required":false,"desc":"ID of the list to copy into the new list","default":"","type":"string","name":"idListSource"},{"_id":"59511483d19745003dae8759","ref":"","in":"query","required":false,"desc":"Position of the list. `top`, `bottom`, or a positive floating point number","default":"","type":"string","name":"pos"}],"url":"/lists","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"","excerpt":"Create a new list on a board","slug":"lists-1","type":"endpoint","title":"/lists","__v":7,"updatedAt":"2019-06-10T14:28:52.634Z","swagger":{"path":"/lists"}},{"_id":"5951150b2175e0001547e4b7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:07:07.096Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5951151f05000f0053afb461","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"}],"url":"/lists/{id}/archiveAllCards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"","excerpt":"Archive all cards in a list","slug":"listsidarchiveallcards","type":"endpoint","title":"/lists/{id}/archiveAllCards","__v":1,"updatedAt":"2019-06-10T14:28:52.635Z","swagger":{"path":"/lists/{id}/archiveAllCards"}},{"_id":"59511551cc55510029d56646","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11b80c08330049443f26","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-26T14:08:17.687Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59511563a85ca3001bfaa6f5","ref":"","in":"path","required":false,"desc":"The ID of the list","default":"","type":"string","name":"id"},{"_id":"59511573deb1f4004950994f","ref":"","in":"query","required":true,"desc":"The ID of the board the cards should be moved to","default":"","type":"string","name":"idBoard"},{"_id":"59511583a85ca3001bfaa6f6","ref":"","in":"query","required":true,"desc":"The ID of the list that the cards should be moved to","default":"","type":"string","name":"idList"}],"url":"/lists/{id}/moveAllCards","method":"post","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"Move all cards in a list","slug":"listsidmoveallcards","type":"endpoint","title":"/lists/{id}/moveAllCards","__v":3,"updatedAt":"2019-06-10T14:28:52.635Z","swagger":{"path":"/lists/{id}/moveAllCards"}},{"_id":"594d11c65589520033080f38","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:04:06.611Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"Everyone with a Trello account is called a member. Here we see Taco's Trello account.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/e3fb325-Screen_Shot_2017-06-27_at_12.35.14_PM.png\",\n        \"Screen Shot 2017-06-27 at 12.35.14 PM.png\",\n        1660,\n        778,\n        \"#e8e9ee\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"member","type":"basic","title":"Members","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.636Z","children":[{"_id":"594d1a7dc804570021d221dd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11c65589520033080f38","updates":["5c3e3cbf9d6c5d003273f240","5c3eb6e7c8306e004ad346c1"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:17.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**avatarHash**\\nstring\",\n    \"3-0\": \"**avatarSource**\",\n    \"4-0\": \"**bio**\\nstring\",\n    \"5-0\": \"**bioData**\\nobject\",\n    \"6-0\": \"**confirmed**\\nboolean\",\n    \"7-0\": \"**email**\\nstring\",\n    \"8-0\": \"**fullName**\\nstring\",\n    \"9-0\": \"**gravatarHash**\\nstring\",\n    \"9-1\": \"Same as **avatarHash** above; member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{gravatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\\nstring.\",\n    \"10-0\": \"**idBoards**\\narray of strings\",\n    \"11-0\": \"**idBoardsPinned**\\narray of strings\",\n    \"12-0\": \"**idOrganizations**\\narray of strings\",\n    \"15-0\": \"**initials**\\nstring\",\n    \"16-0\": \"**loginTypes**\\narray of strings\",\n    \"17-0\": \"**memberType**\",\n    \"18-0\": \"**oneTimeMessagesDismissed**\\narray of strings\",\n    \"19-0\": \"**prefs**\\nobject\",\n    \"20-0\": \"**premiumFeatures**\",\n    \"21-0\": \"**products**\\narray of integers\",\n    \"22-0\": \"**status**\\nstring\",\n    \"23-0\": \"**trophies**\\narray\",\n    \"24-0\": \"**uploadedAvatarHash**\\nstring\",\n    \"26-0\": \"**url**\\nstring\",\n    \"27-0\": \"**username**\\nstring\",\n    \"13-0\": \"**idEnterprisesAdmin**\\narray of strings\",\n    \"14-0\": \"**idPremOrgsAdmin**\\narray of strings\",\n    \"5-1\": \"If the bio includes custom emoji, this object will contain the information necessary to display them.\",\n    \"4-1\": \"Optional bio for the member\",\n    \"0-1\": \"The ID of the member\",\n    \"1-1\": \"Member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{avatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\",\n    \"6-1\": \"Whether the member has confirmed their email address after signing up\",\n    \"7-1\": \"The primary email address for the member. You can only read your own.\",\n    \"8-1\": \"The full display name for the member\",\n    \"10-1\": \"An array of board IDs this member is on\",\n    \"12-1\": \"An array of organization IDs this member is in\",\n    \"13-1\": \"An array of enterprise IDs this member is an admin of\",\n    \"15-1\": \"The member's initials, used for display when there isn't an avatar set\",\n    \"22-1\": \"**deprecated**\",\n    \"23-1\": \"**deprecated**\",\n    \"26-1\": \"The URL to the member's profile page\",\n    \"27-1\": \"The username for the member. What is shown in @mentions for example\",\n    \"11-1\": \"**deprecated**\",\n    \"21-1\": \"`10` - member has Trello Gold as a result of being in a Business Class team\\n`37` - member has monthly Trello Gold\\n`38` - member has annual Trello Gold\",\n    \"19-1\": \"```json\\n\\\"prefs\\\": {\\n  \\\"sendSummaries\\\": true,\\n  \\\"minutesBetweenSummaries\\\": -1,\\n  \\\"minutesBeforeDeadlineToNotify\\\": 1440,\\n  \\\"colorBlind\\\": false,\\n  \\\"locale\\\": \\\"en-US\\\",\\n  \\\"timezoneInfo\\\": {\\n    \\\"timezoneNext\\\": \\\"EST\\\",\\n    \\\"dateNext\\\": \\\"2017-11-05T06:00:00.000Z\\\",\\n    \\\"offsetNext\\\": 300,\\n    \\\"timezoneCurrent\\\": \\\"EDT\\\",\\n    \\\"offsetCurrent\\\": 240\\n  },\\n  \\\"twoFactor\\\": {\\n    \\\"enabled\\\": true,\\n    \\\"needsNewBackups\\\": false\\n  },\\n  \\\"privacy\\\": {\\n    \\\"fullName\\\": \\\"public\\\",\\n    \\\"avatar\\\": \\\"public\\\"\\n  },\\n}\\n```\",\n    \"3-1\": \"The source of the user's avatar - either via \\\"upload\\\" or \\\"gravatar\\\".\",\n    \"2-0\": \"**avatarUrl**\\nstring\",\n    \"2-1\": \"The URL of the current avatar being used, regardless of whether it is a gravatar or uploaded avatar.\",\n    \"16-1\": \"The types of logins a user can use:\\n`password`, `saml`, `google`, or `android`\",\n    \"17-1\": \"One of: \\\"normal\\\", \\\"ghost\\\"\\n\\nA `ghost` is an individual who has been invited to join but has not yet created a Trello account.\",\n    \"25-0\": \"**uploadedAvatarUrl**\\nstring\",\n    \"24-1\": \"Same as **avatarHash** - member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{uploadedAvatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\",\n    \"25-1\": \"The URL of the uploaded avatar if one has been uploaded.\",\n    \"14-1\": \"An array of organization IDs this member is an admin of\"\n  },\n  \"cols\": 2,\n  \"rows\": 28\n}\n[/block]\n`GET` `/1/members/taco?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"50095233f62adbe04d935195\\\",\\n  \\\"avatarHash\\\": \\\"10e3fec8aee92d177b22290b7cff669d\\\",\\n  \\\"bio\\\": \\\"\\\",\\n  \\\"bioData\\\": null,\\n  \\\"confirmed\\\": true,\\n  \\\"fullName\\\": \\\"Taco\\\",\\n  \\\"idPremOrgsAdmin\\\": [\\n    \\n  ],\\n  \\\"initials\\\": \\\"T\\\",\\n  \\\"memberType\\\": \\\"normal\\\",\\n  \\\"products\\\": [\\n    \\n  ],\\n  \\\"status\\\": \\\"disconnected\\\",\\n  \\\"url\\\": \\\"https://trello.com/taco\\\",\\n  \\\"username\\\": \\\"taco\\\",\\n  \\\"avatarSource\\\": null,\\n  \\\"email\\\": null,\\n  \\\"gravatarHash\\\": null,\\n  \\\"idBoards\\\": [\\n    \\\"5824e427857eea92ad0a93fc\\\",\\n    \\\"58f7becd7a76210902b2f846\\\",\\n    \\\"50e1d37994dd425b620035ff\\\",\\n    \\\"51227842c0cb5a7d740002cb\\\",\\n    \\\"512e491a6d7fc071590043a6\\\",\\n    \\\"58f7b25fcf2a8696f734edfc\\\",\\n    \\\"58fa50037361735963976675\\\",\\n    \\\"592db6c67e4c126659137b88\\\",\\n    \\\"592f28ad8271344b504b016d\\\"\\n  ],\\n  \\\"idEnterprise\\\": null,\\n  \\\"idOrganizations\\\": [\\n    \\n  ],\\n  \\\"idEnterprisesAdmin\\\": [\\n    \\n  ],\\n  \\\"loginTypes\\\": null,\\n  \\\"oneTimeMessagesDismissed\\\": null,\\n  \\\"prefs\\\": null,\\n  \\\"trophies\\\": [\\n    \\n  ],\\n  \\\"uploadedAvatarHash\\\": null,\\n  \\\"premiumFeatures\\\": [\\n    \\n  ],\\n  \\\"idBoardsPinned\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"me\",\n  \"body\": \"When using any `/1/members/` route, you can specify `me` in place of the username or id, to get back information about the user associated with the token used to make the request\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Member Fields and Privacy Controls\"\n}\n[/block]\nSome fields on the member object can be put under privacy controls by the Trello user. Initially, only `avatar` and `fullName` will be able to be put under privacy controls by some Trello users.\n\nFrom a user's perspective, they will be able to choose whether the fields are public or private while editing their account settings.\n\nFrom an API perspective, if a field is under privacy control, it will be included in the `privacy` object inside of the `prefs` object on a member. For instance:\n\n```\n\"privacy\": {\n  \"fullName\": \"public\",\n  \"avatar\": \"public\"\n}\n```\n\nIf `fullName` is set to anything other than `public`, the value returned in the API will be the same as the `username` field.\n\nIf `avatar` is set to anything other than `public`, the value for `avatarHash` will be an empty string `\"\"` and `avatarUrl` will be `null`. This is the same response you'd receive currently if the user did not have an avatar set.\n\n### Privacy Controlled Member fields In Power-Up Client Library\n\nSimilar to above, when a user selects a privacy setting other than `public` for their `avatar` or `fullName`, calls to `t.member` asking for either of those fields will change.\n\nIf `fullName` is set to anything other than `public`, the value returned from `t.member('fullName')` will be the same as `t.member('username')`.\n\nIf `avatar` is set to anything other than `public`, calls to `t.member('avatar')` will return `null`. This is the same response you'd receive currently if the user did not have an avatar set.","excerpt":"","slug":"member-object","type":"basic","title":"Member Object","__v":2,"updatedAt":"2019-06-10T14:28:52.636Z"},{"_id":"594d1a87d5fdcb0033512b84","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:27.729Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Members are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to members as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Members as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing members as a nested resource via query params. For instance, the query params are available when you are accessing boards via:  `/1/boards/{id}?members=all`.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"h-2\": \"Default\",\n    \"0-0\": \"**members**\",\n    \"0-1\": \"Default: None\\nOptions: one of:\\n`none`\\n`normal`\\n`admins`\\n`owners`\\n`all`\",\n    \"1-0\": \"**member_fields**\",\n    \"1-1\": \"Default: Default: `id,avatarHash,avatarUrl,initials,fullName,username,confirmed,memberType`\\nOptions: `all` or a comma-separated list of card [fields](ref:member-object)\",\n    \"0-2\": \"\",\n    \"1-2\": \"`id`, `avatarHash`, `avatarUrl`, `initials`, `fullName`, `username`, `confirmed`, `memberType`\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Members on cards\",\n  \"body\": \"When accessing members on cards, there is no differentiation and you will instead want to use `?members=true` to include them in the response.\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Members as URL Params\"\n}\n[/block]\nMembers are also available as nested resources via URL parameters. For instance, you may want just the members belonging to a specific board; in that case you'd use the route `/1/boards/{id}/members` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**fields**\",\n    \"0-1\": \"Default: `id,fullName,username`\\nOptions: `all` or a comma-separated list of:\\n- avatarHash\\n- avatarUrl\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idEnterprisesDeactivated\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"members-nested-resource","type":"basic","title":"Members Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.637Z"},{"_id":"5954012d070f4c001b255a10","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11c65589520033080f38","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:19:09.927Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59551d73fddb250029241a9c","ref":"","in":"query","required":false,"desc":"See the [Actions Nested Resource](ref:actions-nested-resource)","default":"","type":"string","name":"actions"},{"_id":"59551dd2be8877001b6dd087","ref":"","in":"query","required":false,"desc":"See the [Boards Nested Resource](ref:section-objectidboardsopen)","default":"","type":"string","name":"boards"},{"_id":"595526433e9508001b4808f8","ref":"","in":"query","required":false,"desc":"One of: `all`, `custom`, `default`, `none`, `premium`","default":"none","type":"string","name":"boardBackgrounds"},{"_id":"59552107fddb250029241abf","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned","default":"","type":"string","name":"boardsInvited"},{"_id":"5955211fcb31f200158a2d89","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"name,closed,idOrganization,pinned","type":"string","name":"boardsInvited_fields"},{"_id":"5955212ebe8877001b6dd090","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"boardStars"},{"_id":"59551d95b30dac001bea4745","ref":"","in":"query","required":false,"desc":"See the [Cards Nested Resource](ref:cards-nested-resource) for additional options","default":"none","type":"string","name":"cards"},{"_id":"59552651ee9aea00157d8bc9","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customBoardBackgrounds"},{"_id":"5955266bcb31f200158a2db7","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customEmoji"},{"_id":"5955265fb30dac001bea4792","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customStickers"},{"_id":"5955267f792b10001baf9689","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"},{"_id":"595526093ebaea002bf7721b","ref":"","in":"query","required":false,"desc":"See the [Notifications Nested Resource](ref:section-objectidnotificationsall)","default":"","type":"string","name":"notifications"},{"_id":"595521513e9508001b4808ac","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public`","default":"none","type":"string","name":"organizations"},{"_id":"59552171e06192001597a281","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"organization_fields"},{"_id":"59552194cf1c05001b2c0fdf","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"organization_paid_account"},{"_id":"595521a6e06192001597a282","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public`","default":"none","type":"string","name":"organizationsInvited"},{"_id":"595521c0434c040015f35d4b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"organizationsInvited_fields"},{"_id":"595526263ebaea002bf7721c","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"paid_account"},{"_id":"59552135cf1c05001b2c0fdd","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"savedSearches"},{"_id":"595526186ea25b003577ed69","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"tokens"}],"url":"/members/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get a member","slug":"membersid","type":"endpoint","title":"/members/{id}","__v":23,"updatedAt":"2019-06-10T14:28:52.637Z","swagger":{"path":"/members/{id}"}},{"_id":"59540191070f4c001b255a11","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:20:49.013Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"language":"text","code":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540191070f4c001b255a12","ref":"","in":"path","required":false,"desc":"One of the member [fields](ref:member-object)","default":"","type":"string","name":"field"}],"url":"/members/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a particular property of a member","slug":"membersidfield","type":"endpoint","title":"/members/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/{field}"}},{"_id":"595401aab24177002bbe11eb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:21:14.899Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/actions","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/members/mattcowan/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5953f998623825ee16496891\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      },\\n      \\\"textData\\\": {\\n        \\\"emoji\\\": {\\n          \\\"morty\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\"\\n        }\\n      },\\n      \\\"text\\\": \\\":morty: \\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2017-06-28T18:46:48.532Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"5953f89e8aee8fb628b78a48\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n        \\\"desc\\\": \\\":heart:\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"desc\\\": \\\"\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2017-06-28T18:42:38.229Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"59531f8674fc80b0b3728809\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToBoard\\\",\\n    \\\"date\\\": \\\"2017-06-28T03:16:22.628Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n      \\\"avatarHash\\\": \\\"653d92fdd433e65bf8ff199a9c486f08\\\",\\n      \\\"fullName\\\": \\\"Morty Smith\\\",\\n      \\\"initials\\\": \\\"MS\\\",\\n      \\\"username\\\": \\\"mortysmith1\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions for a member","slug":"membersidactions","type":"endpoint","title":"/members/{id}/actions","__v":0,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/actions"}},{"_id":"5954047c070f4c001b255a1a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":["5ad045e605210d000302ef0f","5c63bc50be19bf005c750885"],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:33:16.741Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"5954047c070f4c001b255a1b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`","default":"all","type":"string","name":"filter"},{"_id":"59540495b24177002bbe11f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"},{"_id":"5954054974ea3e001518da9e","ref":"","in":"query","required":false,"desc":"Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`","default":"none","type":"string","name":"lists"},{"_id":"5954056ad59525002b2617c0","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `active`, `admin`, `deactivated`, `me`, `normal`","default":"none","type":"string","name":"memberships"},{"_id":"59540511a5bbca002d27aeb5","ref":"","in":"query","required":false,"desc":"Whether to include the organization object with the boards","default":"false","type":"boolean","name":"organization"},{"_id":"59540529b6f511002d075db5","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"name,displayName","type":"string","name":"organization_fields"}],"url":"/members/{id}/boards","method":"get"},"isReference":true,"order":5,"body":"This endpoint is used to list all of the boards that the user is a member of. It will not return all of the boards the the member has access to.","excerpt":"Lists the boards that the user is a member of.","slug":"membersidboards","type":"endpoint","title":"/members/{id}/boards","__v":11,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/boards"}},{"_id":"595402b0b24177002bbe11ed","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:25:36.611Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595402cea5bbca002d27ae90","ref":"","in":"query","required":false,"desc":"One of: `all`, `custom`, `default`, `none`, `premium`","default":"all","type":"string","name":"filter"}],"url":"/members/{id}/boardBackgrounds","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get a member's custom board backgrounds","slug":"membersidboardbackgrounds","type":"endpoint","title":"/members/{id}/boardBackgrounds","__v":1,"updatedAt":"2019-06-10T14:28:52.639Z","swagger":{"path":"/members/{id}/boardBackgrounds"}},{"_id":"595402f1070f4c001b255a13","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:26:41.420Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595402cea5bbca002d27ae90","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `brightness`, `fullSizeUrl`, `scaled`, `tile`","default":"all","type":"string","name":"fields"},{"_id":"5954031eb24177002bbe11ef","ref":"","in":"path","required":false,"desc":"The ID of the board background","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get a member's board background","slug":"membersidboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":1,"updatedAt":"2019-06-10T14:28:52.639Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59540344341432001554ebac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:28:04.700Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/boardStars","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"Board Stars are used to determine the order in which to display a user's starred boards. There are various times throughout the Trello clients that users are able to drag and drop to re-order their starred boards.\n\nExample request:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/members/me/boardstars?key={yourKey}&token={yourToken}\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"58502089add56d6d23e0fa57\\\",\\n    \\\"idBoard\\\": \\\"57c4aac0bea72cca6d3ed608\\\",\\n    \\\"pos\\\": 16384\\n  },\\n  {\\n    \\\"id\\\": \\\"585063850027165010be15a8\\\",\\n    \\\"idBoard\\\": \\\"57f7df684f1ca8c2877162e0\\\",\\n    \\\"pos\\\": 32768\\n  },\\n  {\\n    \\\"id\\\": \\\"585063a35d4db49ff65ccfc9\\\",\\n    \\\"idBoard\\\": \\\"57f53f3bf85527b1389acd08\\\",\\n    \\\"pos\\\": 65536\\n  },\\n  {\\n    \\\"id\\\": \\\"585063a932fbd311ac75b511\\\",\\n    \\\"idBoard\\\": \\\"57c477432ea981b66f3c7bef\\\",\\n    \\\"pos\\\": 147456\\n  },\\n  {\\n    \\\"id\\\": \\\"585063ec582d6c1f5f992153\\\",\\n    \\\"idBoard\\\": \\\"57c467a050472389ad8ca7c0\\\",\\n    \\\"pos\\\": 131072\\n  },\\n  {\\n    \\\"id\\\": \\\"58514b6cdeb7bed28dbc3c48\\\",\\n    \\\"idBoard\\\": \\\"569810be3d5d84d40a936105\\\",\\n    \\\"pos\\\": 196608\\n  },\\n  {\\n    \\\"id\\\": \\\"585455c118a1e26506d5471a\\\",\\n    \\\"idBoard\\\": \\\"57f39ce1b2dc643ce0568f41\\\",\\n    \\\"pos\\\": 212992\\n  }\\n]\",\n      \"language\": \"text\"\n    }\n  ]\n}\n[/block]","excerpt":"List a member's board stars","slug":"membersidboardstars","type":"endpoint","title":"/members/{id}/boardStars","__v":2,"updatedAt":"2019-06-10T14:28:52.640Z","swagger":{"path":"/members/{id}/boardStars"}},{"_id":"59540369d361840035930a30","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:28:41.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540369d361840035930a31","ref":"","in":"path","required":false,"desc":"The ID of the board star","default":"","type":"string","name":"idStar"}],"url":"/members/{id}/boardStars/{idStar}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Get a specific boardStar","slug":"membersidboardstarsidstar","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":0,"updatedAt":"2019-06-10T14:28:52.640Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"595405b0439bc9001b4ad5e4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:38:24.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595405b0439bc9001b4ad5e5","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/boardsInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Get the boards the member has been invited to","slug":"membersidboardsinvited","type":"endpoint","title":"/members/{id}/boardsInvited","__v":0,"updatedAt":"2019-06-10T14:28:52.641Z","swagger":{"path":"/members/{id}/boardsInvited"}},{"_id":"595405f2070f4c001b255a1e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:39:30.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595405f2070f4c001b255a1f","ref":"","in":"query","required":false,"desc":"One of: `all`, `closed`, `none`, `open`, `visible`","default":"visible","type":"string","name":"filter"}],"url":"/members/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"For a full list of available query params, see [Cards Nested Resource](ref:cards-nested-resource) \n\n`GET` `/1/members/mortysmith1/cards?fields=id,name,idBoard,idList,idMembers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"588272fe292c44fba787a306\\\",\\n    \\\"name\\\": \\\"Card Created in Shared Channel\\\",\\n    \\\"idBoard\\\": \\\"5812a2bfd2ce1283caaca31e\\\",\\n    \\\"idList\\\": \\\"5812a2c9a9327e675ec3e412\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"5888e7583d8e8de13dcda225\\\",\\n    \\\"name\\\": \\\"Buy Hot Dogs\\\",\\n    \\\"idBoard\\\": \\\"5888e7583d8e8de13dcda1f1\\\",\\n    \\\"idList\\\": \\\"5888e7583d8e8de13dcda1f3\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"5888e7583d8e8de13dcda226\\\",\\n    \\\"name\\\": \\\"Grill Hot Dogs\\\",\\n    \\\"idBoard\\\": \\\"5888e7583d8e8de13dcda1f1\\\",\\n    \\\"idList\\\": \\\"5888e7583d8e8de13dcda1f3\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Gets the cards a member is on","slug":"membersidcards","type":"endpoint","title":"/members/{id}/cards","__v":0,"updatedAt":"2019-06-10T14:28:52.641Z","swagger":{"path":"/members/{id}/cards"}},{"_id":"595406edb6f511002d075db8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:43:41.635Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customBoardBackgrounds","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Get a member's custom board backgrounds","slug":"membersidcustomboardbackgrounds","type":"endpoint","title":"/members/{id}/customBoardBackgrounds","__v":1,"updatedAt":"2019-06-10T14:28:52.642Z","swagger":{"path":"/members/{id}/customBoardBackgrounds"}},{"_id":"5954071bb6f511002d075dbb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:44:27.374Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595406edb6f511002d075db9","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `brightness`, `fullSizeUrl`, `scaled`, `tile`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customBoardBackgrounds/{idBackground}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"Get a specific custom board background","slug":"membersidcustomboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":0,"updatedAt":"2019-06-10T14:28:52.642Z","swagger":{"path":"/members/{id}/customBoardBackgrounds/{idBackground}"}},{"_id":"595407490a2348002d1d47c4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:45:13.888Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customEmoji","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"`GET` `/1/members/mattcowan/customEmoji`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5953f98c4c308ae5c720065f\\\",\\n    \\\"url\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\",\\n    \\\"name\\\": \\\"morty\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a member's uploaded custom emoji","slug":"membersidcustomemoji","type":"endpoint","title":"/members/{id}/customEmoji","__v":0,"updatedAt":"2019-06-10T14:28:52.643Z","swagger":{"path":"/members/{id}/customEmoji"}},{"_id":"595407a70a2348002d1d47c5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:46:47.942Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595407a70a2348002d1d47c6","ref":"","in":"path","required":false,"desc":"The ID of the custom emoji","default":"","type":"string","name":"idEmoji"},{"_id":"595407b9b330760037c4c74c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `name`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customEmoji/{idEmoji}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"`GET` `/1/members/mattcowan/customEmoji/5953f98c4c308ae5c720065f`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5953f98c4c308ae5c720065f\\\",\\n  \\\"url\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\",\\n  \\\"name\\\": \\\"morty\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a custom emoji","slug":"membersidcustomemojiidemoji","type":"endpoint","title":"/members/{id}/customEmoji/{idEmoji}","__v":1,"updatedAt":"2019-06-10T14:28:52.643Z","swagger":{"path":"/members/{id}/customEmoji/{idEmoji}"}},{"_id":"595407eb73082700156d6714","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:47:55.261Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customStickers","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"`GET` `/1/members/mattcowan/customStickers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57bf3f1f3a45044fd30f7ddb\\\",\\n    \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n    \\\"scaled\\\": [\\n      {\\n        \\\"width\\\": 80,\\n        \\\"height\\\": 80,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/80x80/5101f7d835919f08cb9fade961d2eb40/shipped.png\\\",\\n        \\\"bytes\\\": 13664,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7dde\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"width\\\": 160,\\n        \\\"height\\\": 160,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/160x160/7ed0455c19aca774c48fb4f24e0dffbe/shipped.png\\\",\\n        \\\"bytes\\\": 40079,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddd\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"width\\\": 124,\\n        \\\"height\\\": 124,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n        \\\"bytes\\\": 14800,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddc\\\",\\n        \\\"scaled\\\": true\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a member's uploaded stickers","slug":"membersidcustomstickers","type":"endpoint","title":"/members/{id}/customStickers","__v":0,"updatedAt":"2019-06-10T14:28:52.644Z","swagger":{"path":"/members/{id}/customStickers"}},{"_id":"59540859b24177002bbe11ff","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:49:45.165Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540859b24177002bbe1200","ref":"","in":"path","required":false,"desc":"The ID of the uploaded sticker","default":"","type":"string","name":"idSticker"},{"_id":"5954086a439bc9001b4ad60c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `scaled`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customStickers/{idSticker}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"`GET` `/1/members/mattcowan/customStickers/57bf3f1f3a45044fd30f7ddb`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"57bf3f1f3a45044fd30f7ddb\\\",\\n  \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n  \\\"scaled\\\": [\\n    {\\n      \\\"width\\\": 80,\\n      \\\"height\\\": 80,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/80x80/5101f7d835919f08cb9fade961d2eb40/shipped.png\\\",\\n      \\\"bytes\\\": 13664,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7dde\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"width\\\": 160,\\n      \\\"height\\\": 160,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/160x160/7ed0455c19aca774c48fb4f24e0dffbe/shipped.png\\\",\\n      \\\"bytes\\\": 40079,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddd\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"width\\\": 124,\\n      \\\"height\\\": 124,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n      \\\"bytes\\\": 14800,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddc\\\",\\n      \\\"scaled\\\": true\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get an uploaded sticker","slug":"membersidcustomstickersidsticker","type":"endpoint","title":"/members/{id}/customStickers/{idSticker}","__v":1,"updatedAt":"2019-06-10T14:28:52.644Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"5966371cb6f9e9004923801d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":["596662e9e46c850065e5889f"],"next":{"pages":[],"description":""},"createdAt":"2017-07-12T14:50:04.345Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540859b24177002bbe1200","ref":"","in":"path","required":false,"desc":"The ID of the uploaded sticker","default":"","type":"string","name":"idSticker"},{"_id":"5954086a439bc9001b4ad60c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `scaled`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customStickers/{idSticker}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"**`GET` `/1/members/:id/enterprises`**\n\nGet the enterprises that a member **is associated with**\n[block:api-header]\n{\n  \"title\": \"PATH PARAMS\"\n}\n[/block]\n- id\n  - type: string\n  - required: true\n  - description: The ID or username of the member\n[block:api-header]\n{\n  \"title\": \"QUERY PARAMS\"\n}\n[/block]\n- fields\n  - type: string\n  - required: false\n  - default value: `displayName`\n  - possible values: ['name', 'displayName', 'prefs', 'ssoActivationFailed', 'ssoDateDelayed', 'idAdmins']\n  - description: `all` or a comma-separated list of some of the enterprise fields listed above\n\n-filter\n  - type: string\n  - require: false\n  - default value: `all`\n  - possible values: [\"member\", \"collaborator\", \"saml\", \"none\", \"member-unconfirmed\", \"collaborator-unconfirmed\", \"all\"]\n  - description: `all` or one of the `userType`s listed above. If different from `all` only enterprises where the member has that specific kind of user type will be returned\n[block:api-header]\n{\n  \"title\": \"Example of response\"\n}\n[/block]\n`GET` `/1/members/me/enterprises`\n\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n    {\\n        \\\"id\\\": \\\"58fe4a04c2636718461c90e3\\\",\\n        \\\"displayName\\\": \\\"Some Enterprise\\\",\\n        \\\"userType\\\": \\\"member\\\"\\n    },\\n    {\\n        \\\"id\\\": \\\"590257482515060e06b69162\\\",\\n        \\\"displayName\\\": \\\"Some other Enterprise\\\",\\n        \\\"userType\\\": \\\"collaborator\\\"\\n    }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"\",\n  \"body\": \"You can only read the enterprises for the member associated with the supplied token.\"\n}\n[/block]","excerpt":"Get the enterprises that a member belongs to.","slug":"membersidenterprises","type":"endpoint","title":"/members/{id}/enterprises/","__v":1,"updatedAt":"2019-06-10T14:28:52.645Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"595408c174ea3e001518daa9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:51:29.287Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540a8b341432001554ebd5","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"entities"},{"_id":"59540a93d59525002b2617c8","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"display"},{"_id":"59540ab7f135e5001be8e557","ref":"","in":"query","required":false,"desc":"","default":"all","type":"string","name":"filter"},{"_id":"59540ac9d361840035930a7f","ref":"","in":"query","required":false,"desc":"One of: `all`, `read`, `unread`","default":"all","type":"string","name":"read_filter"},{"_id":"59540ae4f135e5001be8e558","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of notification [fields](ref:notification-object)","default":"all","type":"string","name":"fields"},{"_id":"59540af4c356e9001b1251f6","ref":"","in":"query","required":false,"desc":"Max 1000","default":"50","type":"int","name":"limit"},{"_id":"59540aff341432001554ebd6","ref":"","in":"query","required":false,"desc":"Max 100","default":"0","type":"int","name":"page"},{"_id":"59540b27b330760037c4c752","ref":"","in":"query","required":false,"desc":"A notification ID","default":"","type":"string","name":"before"},{"_id":"59540b27b330760037c4c751","ref":"","in":"query","required":false,"desc":"A notification ID","default":"","type":"string","name":"since"},{"_id":"59540b4c341432001554ebf8","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"memberCreator"},{"_id":"59540b4c341432001554ebf7","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"}],"url":"/members/{id}/notifications","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"You can only read the notifications for the member associated with the supplied token\"\n}\n[/block]","excerpt":"Get a member's notifications","slug":"membersidnotifications","type":"endpoint","title":"/members/{id}/notifications","__v":9,"updatedAt":"2019-06-10T14:28:52.646Z","swagger":{"path":"/members/{id}/notifications"}},{"_id":"59540b64439bc9001b4ad652","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:02:44.369Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540b7ed59525002b2617cc","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public` (Note: `members` filters to only private teams)","default":"all","type":"string","name":"filter"},{"_id":"59540b94c356e9001b1251f8","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"},{"_id":"59540b9f439bc9001b4ad653","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"paid_account"}],"url":"/members/{id}/organizations","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Get a member's teams","slug":"membersidorganizations","type":"endpoint","title":"/members/{id}/organizations","__v":4,"updatedAt":"2019-06-10T14:28:52.647Z","swagger":{"path":"/members/{id}/organizations"}},{"_id":"59540bc6070f4c001b255a49","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:04:22.449Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540be1a5bbca002d27aee6","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/organizationsInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"","excerpt":"Get a member's teams they have been invited to","slug":"membersidorganizationsinvited","type":"endpoint","title":"/members/{id}/organizationsInvited","__v":1,"updatedAt":"2019-06-10T14:28:52.648Z","swagger":{"path":"/members/{id}/organizationsInvited"}},{"_id":"59540bfcb24177002bbe1204","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:05:16.678Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/savedSearches","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"","excerpt":"List the saved searches of a member","slug":"membersidsavedsearches","type":"endpoint","title":"/members/{id}/savedSearches","__v":0,"updatedAt":"2019-06-10T14:28:52.648Z","swagger":{"path":"/members/{id}/savedSearches"}},{"_id":"59540c170a2348002d1d47cd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:05:43.912Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"","excerpt":"Get a saved search","slug":"membersidsavedsearchesidsearch","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":0,"updatedAt":"2019-06-10T14:28:52.649Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"59540d6274ea3e001518dad2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:11:14.093Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540d6274ea3e001518dad3","ref":"","in":"query","required":false,"desc":"Whether to include webhooks","default":"false","type":"boolean","name":"webhooks"}],"url":"/members/{id}/tokens","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"List a members app tokens","slug":"membersidtokens","type":"endpoint","title":"/members/{id}/tokens","__v":0,"updatedAt":"2019-06-10T14:28:52.649Z","swagger":{"path":"/members/{id}/tokens"}},{"_id":"59540d7fd361840035930a8a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:11:43.372Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540d95b24177002bbe120b","ref":"","in":"query","required":false,"desc":"New name for the member. Cannot begin or end with a space.","default":"","type":"string","name":"fullName"},{"_id":"59540da874ea3e001518dad5","ref":"","in":"query","required":false,"desc":"New initials for the member. 1-4 characters long.","default":"","type":"string","name":"initials"},{"_id":"59540dc7439bc9001b4ad677","ref":"","in":"query","required":false,"desc":"New username for the member. At least 3 characters long, only lowercase letters, underscores, and numbers. Must be unique.","default":"","type":"string","name":"username"},{"_id":"59540e09070f4c001b255a6d","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"bio"},{"_id":"59540e09070f4c001b255a6c","ref":"","in":"query","required":false,"desc":"One of: `gravatar`, `none`, `upload`","default":"","type":"string","name":"avatarSource"},{"_id":"59540e136ed4d9001b3e7b14","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"prefs/colorBlind"},{"_id":"59540e26654fb9002b95bd07","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"prefs/locale"},{"_id":"59540f6174ea3e001518dad8","ref":"","in":"query","required":false,"desc":"`-1` for disabled, `1`, or `60`","default":"","type":"int","name":"prefs/minutesBetweenSummaries"}],"url":"/members/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"This route lets you update one or more properties of a member.\n\nAlternatively, you can update a specific property like:\n\n`PUT` `/1/members/{id}/{property}?value={new value}`\n\nSo to update a member's bio, you could also do:\n\n`PUT` `/1/members/{id}/bio?value=Hi%20There`","excerpt":"Update a member","slug":"membersid-1","type":"endpoint","title":"/members/{id}","__v":7,"updatedAt":"2019-06-10T14:28:52.650Z","swagger":{"path":"/members/{id}"}},{"_id":"595528c66ea25b003577ed71","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:20:22.296Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595528c66ea25b003577ed72","ref":"","in":"path","required":false,"desc":"The ID of the board background to update","default":"","type":"string","name":"idBackground"},{"_id":"595528e2be8877001b6dd0be","ref":"","in":"query","required":false,"desc":"One of: `dark`, `light`, `unknown`","default":"","type":"string","name":"brightness"},{"_id":"595528d41eb56d0029fcdba5","ref":"","in":"query","required":false,"desc":"Whether the background should be tiled","default":"","type":"boolean","name":"tile"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Update a board background","slug":"membersidboardbackgroundsidbackground-1","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":3,"updatedAt":"2019-06-10T14:28:52.650Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59552936cf1c05001b2c102d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:22:14.332Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552936cf1c05001b2c102e","ref":"","in":"path","required":false,"desc":"The ID of the board star to update","default":"","type":"string","name":"idStar"},{"_id":"5955294a95aa76002de6cbea","ref":"","in":"query","required":false,"desc":"New position for the starred board. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/boardStars/{idStar}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Update the position of a starred board","slug":"membersidboardstarsidstar-1","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":1,"updatedAt":"2019-06-10T14:28:52.651Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"5955296f17710f0015656933","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:23:11.562Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595529bb3ebaea002bf77247","ref":"","in":"query","required":false,"desc":"One of: `dark`, `light`, `unknown`","default":"","type":"string","name":"brightness"},{"_id":"595529ae3e9508001b480927","ref":"","in":"query","required":false,"desc":"Whether to tile the background","default":"","type":"boolean","name":"tile"}],"url":"/members/{id}//customBoardBackgrounds/{idBackground}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"","slug":"put-membersidcustomboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":3,"updatedAt":"2019-06-10T14:28:52.651Z","swagger":{"path":"/members/{id}//customBoardBackgrounds/{idBackground}"}},{"_id":"595529d8be8877001b6dd0bf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:24:56.086Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595529f2cb31f200158a2e00","ref":"","in":"query","required":false,"desc":"The new name for the saved search","default":"","type":"string","name":"name"},{"_id":"59552a01be8877001b6dd0c1","ref":"","in":"query","required":false,"desc":"The new search query","default":"","type":"string","name":"query"},{"_id":"59552a16be8877001b6dd0c2","ref":"","in":"query","required":false,"desc":"New position for saves search. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Update a saved search","slug":"membersidsavedsearchesidsearch-1","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":3,"updatedAt":"2019-06-10T14:28:52.652Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"59552b86cb31f200158a2e09","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:32:06.521Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552b86cb31f200158a2e0a","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/avatar","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"The `file` parameter is required to be passed in as [multipart/form-data](https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2) - it cannot be a URL.","excerpt":"Create a new avatar for a member","slug":"membersidavatar","type":"endpoint","title":"/members/{id}/avatar","__v":0,"updatedAt":"2019-06-10T14:28:52.652Z","swagger":{"path":"/members/{id}/avatar"}},{"_id":"59552ba3fddb250029241ad9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:32:35.517Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552ba3fddb250029241ada","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/boardBackgrounds","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"","excerpt":"Upload a new boardBackground","slug":"membersidboardbackgrounds-1","type":"endpoint","title":"/members/{id}/boardBackgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.655Z","swagger":{"path":"/members/{id}/boardBackgrounds"}},{"_id":"59552bcc17710f0015656937","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:33:16.768Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552bcc17710f0015656939","ref":"","in":"query","required":true,"desc":"The ID of the board to star","default":"","type":"string","name":"idBoard"},{"_id":"59552bcc17710f0015656938","ref":"","in":"query","required":true,"desc":"The position of the newly starred board. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/boardStars","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":32,"body":"","excerpt":"Star a new board","slug":"membersidboardstars-1","type":"endpoint","title":"/members/{id}/boardStars","__v":0,"updatedAt":"2019-06-10T14:28:52.655Z","swagger":{"path":"/members/{id}/boardStars"}},{"_id":"59552be9be8877001b6dd105","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:33:45.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552be9be8877001b6dd106","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/customBoardBackgrounds","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"","excerpt":"Upload a new custom board background","slug":"membersidcustomboardbackgrounds-1","type":"endpoint","title":"/members/{id}/customBoardBackgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customBoardBackgrounds"}},{"_id":"59552c18be8877001b6dd107","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:34:32.496Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552c18be8877001b6dd109","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"},{"_id":"59552c18be8877001b6dd108","ref":"","in":"query","required":true,"desc":"Name for the emoji. 2 - 64 characters","default":"","type":"string","name":"name"}],"url":"/members/{id}/customEmoji","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":34,"body":"","excerpt":"Upload a new custom emoji","slug":"membersidcustomemoji-1","type":"endpoint","title":"/members/{id}/customEmoji","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customEmoji"}},{"_id":"59552cdcee9aea00157d8bcd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:37:48.736Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552cdcee9aea00157d8bce","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/customStickers","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"","excerpt":"Upload a new custom sticker","slug":"membersidcustomstickers-1","type":"endpoint","title":"/members/{id}/customStickers","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customStickers"}},{"_id":"59552cf2d9f60e002dfc26c6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:38:10.890Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552cffd9f60e002dfc26c7","ref":"","in":"query","required":true,"desc":"The message to dismiss","default":"","type":"string","name":"value"}],"url":"/members/{id}/oneTimeMessagesDismissed","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"","excerpt":"Dismiss a message","slug":"membersidonetimemessagesdismissed","type":"endpoint","title":"/members/{id}/oneTimeMessagesDismissed","__v":1,"updatedAt":"2019-06-10T14:28:52.657Z","swagger":{"path":"/members/{id}/oneTimeMessagesDismissed"}},{"_id":"59552d2417710f001565693c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:39:00.586Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552d2417710f001565693e","ref":"","in":"query","required":true,"desc":"The name for the saved search","default":"","type":"string","name":"name"},{"_id":"59552d2417710f001565693d","ref":"","in":"query","required":true,"desc":"The search query","default":"","type":"string","name":"query"},{"_id":"59552d3bee9aea00157d8bcf","ref":"","in":"query","required":true,"desc":"The position of the saved search. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/savedSearches","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"Create a new saved search","slug":"membersidsavedsearches-1","type":"endpoint","title":"/members/{id}/savedSearches","__v":1,"updatedAt":"2019-06-10T14:28:52.657Z","swagger":{"path":"/members/{id}/savedSearches"}},{"_id":"59552e2cd9f60e002dfc26ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:43:24.599Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e3bee9aea00157d8bf5","ref":"","in":"path","required":false,"desc":"The ID of the board background to delete","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"Delete a board background","slug":"membersidboardbackgroundsidbackground-2","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":1,"updatedAt":"2019-06-10T14:28:52.659Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59552e5f95aa76002de6cc11","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:44:15.525Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e5f95aa76002de6cc12","ref":"","in":"path","required":false,"desc":"The ID of the board star to remove","default":"","type":"string","name":"idStar"}],"url":"/members/{id}/boardStars/{idStar}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":39,"body":"","excerpt":"Unstar a board","slug":"membersidboardstarsidstar-2","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"59552e7a3ebaea002bf7726f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:44:42.961Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e7a3ebaea002bf77270","ref":"","in":"path","required":false,"desc":"The ID of the custom board background to delete","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/customBoardBackgrounds/{idBackground}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Delete a custom board background","slug":"membersidcustomboardbackgroundsidbackground-1","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/customBoardBackgrounds/{idBackground}"}},{"_id":"59552e9f17710f0015656964","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:45:19.508Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e9f17710f0015656965","ref":"","in":"path","required":false,"desc":"The ID of the custom sticker to delete","default":"","type":"string","name":"idSticker"}],"url":"/members/{id}/customStickers/{idSticker}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"Delete a custom sticker","slug":"membersidcustomstickersidsticker-1","type":"endpoint","title":"/members/{id}/customStickers/{idSticker}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"59552ebd3ebaea002bf77292","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:45:49.480Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552ebd3ebaea002bf77293","ref":"","in":"path","required":false,"desc":"The ID of the saved search to delete","default":"","type":"string","name":"idSearch"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"","excerpt":"Delete a saved search","slug":"membersidsavedsearchesidsearch-2","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":0,"updatedAt":"2019-06-10T14:28:52.661Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}}],"childrenPages":[{"_id":"594d1a7dc804570021d221dd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11c65589520033080f38","updates":["5c3e3cbf9d6c5d003273f240","5c3eb6e7c8306e004ad346c1"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:17.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**avatarHash**\\nstring\",\n    \"3-0\": \"**avatarSource**\",\n    \"4-0\": \"**bio**\\nstring\",\n    \"5-0\": \"**bioData**\\nobject\",\n    \"6-0\": \"**confirmed**\\nboolean\",\n    \"7-0\": \"**email**\\nstring\",\n    \"8-0\": \"**fullName**\\nstring\",\n    \"9-0\": \"**gravatarHash**\\nstring\",\n    \"9-1\": \"Same as **avatarHash** above; member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{gravatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\\nstring.\",\n    \"10-0\": \"**idBoards**\\narray of strings\",\n    \"11-0\": \"**idBoardsPinned**\\narray of strings\",\n    \"12-0\": \"**idOrganizations**\\narray of strings\",\n    \"15-0\": \"**initials**\\nstring\",\n    \"16-0\": \"**loginTypes**\\narray of strings\",\n    \"17-0\": \"**memberType**\",\n    \"18-0\": \"**oneTimeMessagesDismissed**\\narray of strings\",\n    \"19-0\": \"**prefs**\\nobject\",\n    \"20-0\": \"**premiumFeatures**\",\n    \"21-0\": \"**products**\\narray of integers\",\n    \"22-0\": \"**status**\\nstring\",\n    \"23-0\": \"**trophies**\\narray\",\n    \"24-0\": \"**uploadedAvatarHash**\\nstring\",\n    \"26-0\": \"**url**\\nstring\",\n    \"27-0\": \"**username**\\nstring\",\n    \"13-0\": \"**idEnterprisesAdmin**\\narray of strings\",\n    \"14-0\": \"**idPremOrgsAdmin**\\narray of strings\",\n    \"5-1\": \"If the bio includes custom emoji, this object will contain the information necessary to display them.\",\n    \"4-1\": \"Optional bio for the member\",\n    \"0-1\": \"The ID of the member\",\n    \"1-1\": \"Member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{avatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\",\n    \"6-1\": \"Whether the member has confirmed their email address after signing up\",\n    \"7-1\": \"The primary email address for the member. You can only read your own.\",\n    \"8-1\": \"The full display name for the member\",\n    \"10-1\": \"An array of board IDs this member is on\",\n    \"12-1\": \"An array of organization IDs this member is in\",\n    \"13-1\": \"An array of enterprise IDs this member is an admin of\",\n    \"15-1\": \"The member's initials, used for display when there isn't an avatar set\",\n    \"22-1\": \"**deprecated**\",\n    \"23-1\": \"**deprecated**\",\n    \"26-1\": \"The URL to the member's profile page\",\n    \"27-1\": \"The username for the member. What is shown in @mentions for example\",\n    \"11-1\": \"**deprecated**\",\n    \"21-1\": \"`10` - member has Trello Gold as a result of being in a Business Class team\\n`37` - member has monthly Trello Gold\\n`38` - member has annual Trello Gold\",\n    \"19-1\": \"```json\\n\\\"prefs\\\": {\\n  \\\"sendSummaries\\\": true,\\n  \\\"minutesBetweenSummaries\\\": -1,\\n  \\\"minutesBeforeDeadlineToNotify\\\": 1440,\\n  \\\"colorBlind\\\": false,\\n  \\\"locale\\\": \\\"en-US\\\",\\n  \\\"timezoneInfo\\\": {\\n    \\\"timezoneNext\\\": \\\"EST\\\",\\n    \\\"dateNext\\\": \\\"2017-11-05T06:00:00.000Z\\\",\\n    \\\"offsetNext\\\": 300,\\n    \\\"timezoneCurrent\\\": \\\"EDT\\\",\\n    \\\"offsetCurrent\\\": 240\\n  },\\n  \\\"twoFactor\\\": {\\n    \\\"enabled\\\": true,\\n    \\\"needsNewBackups\\\": false\\n  },\\n  \\\"privacy\\\": {\\n    \\\"fullName\\\": \\\"public\\\",\\n    \\\"avatar\\\": \\\"public\\\"\\n  },\\n}\\n```\",\n    \"3-1\": \"The source of the user's avatar - either via \\\"upload\\\" or \\\"gravatar\\\".\",\n    \"2-0\": \"**avatarUrl**\\nstring\",\n    \"2-1\": \"The URL of the current avatar being used, regardless of whether it is a gravatar or uploaded avatar.\",\n    \"16-1\": \"The types of logins a user can use:\\n`password`, `saml`, `google`, or `android`\",\n    \"17-1\": \"One of: \\\"normal\\\", \\\"ghost\\\"\\n\\nA `ghost` is an individual who has been invited to join but has not yet created a Trello account.\",\n    \"25-0\": \"**uploadedAvatarUrl**\\nstring\",\n    \"24-1\": \"Same as **avatarHash** - member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{uploadedAvatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\",\n    \"25-1\": \"The URL of the uploaded avatar if one has been uploaded.\",\n    \"14-1\": \"An array of organization IDs this member is an admin of\"\n  },\n  \"cols\": 2,\n  \"rows\": 28\n}\n[/block]\n`GET` `/1/members/taco?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"50095233f62adbe04d935195\\\",\\n  \\\"avatarHash\\\": \\\"10e3fec8aee92d177b22290b7cff669d\\\",\\n  \\\"bio\\\": \\\"\\\",\\n  \\\"bioData\\\": null,\\n  \\\"confirmed\\\": true,\\n  \\\"fullName\\\": \\\"Taco\\\",\\n  \\\"idPremOrgsAdmin\\\": [\\n    \\n  ],\\n  \\\"initials\\\": \\\"T\\\",\\n  \\\"memberType\\\": \\\"normal\\\",\\n  \\\"products\\\": [\\n    \\n  ],\\n  \\\"status\\\": \\\"disconnected\\\",\\n  \\\"url\\\": \\\"https://trello.com/taco\\\",\\n  \\\"username\\\": \\\"taco\\\",\\n  \\\"avatarSource\\\": null,\\n  \\\"email\\\": null,\\n  \\\"gravatarHash\\\": null,\\n  \\\"idBoards\\\": [\\n    \\\"5824e427857eea92ad0a93fc\\\",\\n    \\\"58f7becd7a76210902b2f846\\\",\\n    \\\"50e1d37994dd425b620035ff\\\",\\n    \\\"51227842c0cb5a7d740002cb\\\",\\n    \\\"512e491a6d7fc071590043a6\\\",\\n    \\\"58f7b25fcf2a8696f734edfc\\\",\\n    \\\"58fa50037361735963976675\\\",\\n    \\\"592db6c67e4c126659137b88\\\",\\n    \\\"592f28ad8271344b504b016d\\\"\\n  ],\\n  \\\"idEnterprise\\\": null,\\n  \\\"idOrganizations\\\": [\\n    \\n  ],\\n  \\\"idEnterprisesAdmin\\\": [\\n    \\n  ],\\n  \\\"loginTypes\\\": null,\\n  \\\"oneTimeMessagesDismissed\\\": null,\\n  \\\"prefs\\\": null,\\n  \\\"trophies\\\": [\\n    \\n  ],\\n  \\\"uploadedAvatarHash\\\": null,\\n  \\\"premiumFeatures\\\": [\\n    \\n  ],\\n  \\\"idBoardsPinned\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"me\",\n  \"body\": \"When using any `/1/members/` route, you can specify `me` in place of the username or id, to get back information about the user associated with the token used to make the request\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Member Fields and Privacy Controls\"\n}\n[/block]\nSome fields on the member object can be put under privacy controls by the Trello user. Initially, only `avatar` and `fullName` will be able to be put under privacy controls by some Trello users.\n\nFrom a user's perspective, they will be able to choose whether the fields are public or private while editing their account settings.\n\nFrom an API perspective, if a field is under privacy control, it will be included in the `privacy` object inside of the `prefs` object on a member. For instance:\n\n```\n\"privacy\": {\n  \"fullName\": \"public\",\n  \"avatar\": \"public\"\n}\n```\n\nIf `fullName` is set to anything other than `public`, the value returned in the API will be the same as the `username` field.\n\nIf `avatar` is set to anything other than `public`, the value for `avatarHash` will be an empty string `\"\"` and `avatarUrl` will be `null`. This is the same response you'd receive currently if the user did not have an avatar set.\n\n### Privacy Controlled Member fields In Power-Up Client Library\n\nSimilar to above, when a user selects a privacy setting other than `public` for their `avatar` or `fullName`, calls to `t.member` asking for either of those fields will change.\n\nIf `fullName` is set to anything other than `public`, the value returned from `t.member('fullName')` will be the same as `t.member('username')`.\n\nIf `avatar` is set to anything other than `public`, calls to `t.member('avatar')` will return `null`. This is the same response you'd receive currently if the user did not have an avatar set.","excerpt":"","slug":"member-object","type":"basic","title":"Member Object","__v":2,"updatedAt":"2019-06-10T14:28:52.636Z"},{"_id":"594d1a87d5fdcb0033512b84","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:27.729Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Members are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to members as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Members as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing members as a nested resource via query params. For instance, the query params are available when you are accessing boards via:  `/1/boards/{id}?members=all`.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"h-2\": \"Default\",\n    \"0-0\": \"**members**\",\n    \"0-1\": \"Default: None\\nOptions: one of:\\n`none`\\n`normal`\\n`admins`\\n`owners`\\n`all`\",\n    \"1-0\": \"**member_fields**\",\n    \"1-1\": \"Default: Default: `id,avatarHash,avatarUrl,initials,fullName,username,confirmed,memberType`\\nOptions: `all` or a comma-separated list of card [fields](ref:member-object)\",\n    \"0-2\": \"\",\n    \"1-2\": \"`id`, `avatarHash`, `avatarUrl`, `initials`, `fullName`, `username`, `confirmed`, `memberType`\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Members on cards\",\n  \"body\": \"When accessing members on cards, there is no differentiation and you will instead want to use `?members=true` to include them in the response.\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Members as URL Params\"\n}\n[/block]\nMembers are also available as nested resources via URL parameters. For instance, you may want just the members belonging to a specific board; in that case you'd use the route `/1/boards/{id}/members` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**fields**\",\n    \"0-1\": \"Default: `id,fullName,username`\\nOptions: `all` or a comma-separated list of:\\n- avatarHash\\n- avatarUrl\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idEnterprisesDeactivated\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"members-nested-resource","type":"basic","title":"Members Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.637Z"},{"_id":"5954012d070f4c001b255a10","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11c65589520033080f38","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:19:09.927Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59551d73fddb250029241a9c","ref":"","in":"query","required":false,"desc":"See the [Actions Nested Resource](ref:actions-nested-resource)","default":"","type":"string","name":"actions"},{"_id":"59551dd2be8877001b6dd087","ref":"","in":"query","required":false,"desc":"See the [Boards Nested Resource](ref:section-objectidboardsopen)","default":"","type":"string","name":"boards"},{"_id":"595526433e9508001b4808f8","ref":"","in":"query","required":false,"desc":"One of: `all`, `custom`, `default`, `none`, `premium`","default":"none","type":"string","name":"boardBackgrounds"},{"_id":"59552107fddb250029241abf","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned","default":"","type":"string","name":"boardsInvited"},{"_id":"5955211fcb31f200158a2d89","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"name,closed,idOrganization,pinned","type":"string","name":"boardsInvited_fields"},{"_id":"5955212ebe8877001b6dd090","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"boardStars"},{"_id":"59551d95b30dac001bea4745","ref":"","in":"query","required":false,"desc":"See the [Cards Nested Resource](ref:cards-nested-resource) for additional options","default":"none","type":"string","name":"cards"},{"_id":"59552651ee9aea00157d8bc9","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customBoardBackgrounds"},{"_id":"5955266bcb31f200158a2db7","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customEmoji"},{"_id":"5955265fb30dac001bea4792","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customStickers"},{"_id":"5955267f792b10001baf9689","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"},{"_id":"595526093ebaea002bf7721b","ref":"","in":"query","required":false,"desc":"See the [Notifications Nested Resource](ref:section-objectidnotificationsall)","default":"","type":"string","name":"notifications"},{"_id":"595521513e9508001b4808ac","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public`","default":"none","type":"string","name":"organizations"},{"_id":"59552171e06192001597a281","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"organization_fields"},{"_id":"59552194cf1c05001b2c0fdf","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"organization_paid_account"},{"_id":"595521a6e06192001597a282","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public`","default":"none","type":"string","name":"organizationsInvited"},{"_id":"595521c0434c040015f35d4b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"organizationsInvited_fields"},{"_id":"595526263ebaea002bf7721c","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"paid_account"},{"_id":"59552135cf1c05001b2c0fdd","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"savedSearches"},{"_id":"595526186ea25b003577ed69","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"tokens"}],"url":"/members/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get a member","slug":"membersid","type":"endpoint","title":"/members/{id}","__v":23,"updatedAt":"2019-06-10T14:28:52.637Z","swagger":{"path":"/members/{id}"}},{"_id":"59540191070f4c001b255a11","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:20:49.013Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"language":"text","code":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540191070f4c001b255a12","ref":"","in":"path","required":false,"desc":"One of the member [fields](ref:member-object)","default":"","type":"string","name":"field"}],"url":"/members/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a particular property of a member","slug":"membersidfield","type":"endpoint","title":"/members/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/{field}"}},{"_id":"595401aab24177002bbe11eb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:21:14.899Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/actions","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/members/mattcowan/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5953f998623825ee16496891\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      },\\n      \\\"textData\\\": {\\n        \\\"emoji\\\": {\\n          \\\"morty\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\"\\n        }\\n      },\\n      \\\"text\\\": \\\":morty: \\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2017-06-28T18:46:48.532Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"5953f89e8aee8fb628b78a48\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n        \\\"desc\\\": \\\":heart:\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"desc\\\": \\\"\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2017-06-28T18:42:38.229Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"59531f8674fc80b0b3728809\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToBoard\\\",\\n    \\\"date\\\": \\\"2017-06-28T03:16:22.628Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n      \\\"avatarHash\\\": \\\"653d92fdd433e65bf8ff199a9c486f08\\\",\\n      \\\"fullName\\\": \\\"Morty Smith\\\",\\n      \\\"initials\\\": \\\"MS\\\",\\n      \\\"username\\\": \\\"mortysmith1\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions for a member","slug":"membersidactions","type":"endpoint","title":"/members/{id}/actions","__v":0,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/actions"}},{"_id":"5954047c070f4c001b255a1a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":["5ad045e605210d000302ef0f","5c63bc50be19bf005c750885"],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:33:16.741Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"5954047c070f4c001b255a1b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`","default":"all","type":"string","name":"filter"},{"_id":"59540495b24177002bbe11f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"},{"_id":"5954054974ea3e001518da9e","ref":"","in":"query","required":false,"desc":"Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`","default":"none","type":"string","name":"lists"},{"_id":"5954056ad59525002b2617c0","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `active`, `admin`, `deactivated`, `me`, `normal`","default":"none","type":"string","name":"memberships"},{"_id":"59540511a5bbca002d27aeb5","ref":"","in":"query","required":false,"desc":"Whether to include the organization object with the boards","default":"false","type":"boolean","name":"organization"},{"_id":"59540529b6f511002d075db5","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"name,displayName","type":"string","name":"organization_fields"}],"url":"/members/{id}/boards","method":"get"},"isReference":true,"order":5,"body":"This endpoint is used to list all of the boards that the user is a member of. It will not return all of the boards the the member has access to.","excerpt":"Lists the boards that the user is a member of.","slug":"membersidboards","type":"endpoint","title":"/members/{id}/boards","__v":11,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/boards"}},{"_id":"595402b0b24177002bbe11ed","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:25:36.611Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595402cea5bbca002d27ae90","ref":"","in":"query","required":false,"desc":"One of: `all`, `custom`, `default`, `none`, `premium`","default":"all","type":"string","name":"filter"}],"url":"/members/{id}/boardBackgrounds","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get a member's custom board backgrounds","slug":"membersidboardbackgrounds","type":"endpoint","title":"/members/{id}/boardBackgrounds","__v":1,"updatedAt":"2019-06-10T14:28:52.639Z","swagger":{"path":"/members/{id}/boardBackgrounds"}},{"_id":"595402f1070f4c001b255a13","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:26:41.420Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595402cea5bbca002d27ae90","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `brightness`, `fullSizeUrl`, `scaled`, `tile`","default":"all","type":"string","name":"fields"},{"_id":"5954031eb24177002bbe11ef","ref":"","in":"path","required":false,"desc":"The ID of the board background","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get a member's board background","slug":"membersidboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":1,"updatedAt":"2019-06-10T14:28:52.639Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59540344341432001554ebac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:28:04.700Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/boardStars","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"Board Stars are used to determine the order in which to display a user's starred boards. There are various times throughout the Trello clients that users are able to drag and drop to re-order their starred boards.\n\nExample request:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/members/me/boardstars?key={yourKey}&token={yourToken}\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"58502089add56d6d23e0fa57\\\",\\n    \\\"idBoard\\\": \\\"57c4aac0bea72cca6d3ed608\\\",\\n    \\\"pos\\\": 16384\\n  },\\n  {\\n    \\\"id\\\": \\\"585063850027165010be15a8\\\",\\n    \\\"idBoard\\\": \\\"57f7df684f1ca8c2877162e0\\\",\\n    \\\"pos\\\": 32768\\n  },\\n  {\\n    \\\"id\\\": \\\"585063a35d4db49ff65ccfc9\\\",\\n    \\\"idBoard\\\": \\\"57f53f3bf85527b1389acd08\\\",\\n    \\\"pos\\\": 65536\\n  },\\n  {\\n    \\\"id\\\": \\\"585063a932fbd311ac75b511\\\",\\n    \\\"idBoard\\\": \\\"57c477432ea981b66f3c7bef\\\",\\n    \\\"pos\\\": 147456\\n  },\\n  {\\n    \\\"id\\\": \\\"585063ec582d6c1f5f992153\\\",\\n    \\\"idBoard\\\": \\\"57c467a050472389ad8ca7c0\\\",\\n    \\\"pos\\\": 131072\\n  },\\n  {\\n    \\\"id\\\": \\\"58514b6cdeb7bed28dbc3c48\\\",\\n    \\\"idBoard\\\": \\\"569810be3d5d84d40a936105\\\",\\n    \\\"pos\\\": 196608\\n  },\\n  {\\n    \\\"id\\\": \\\"585455c118a1e26506d5471a\\\",\\n    \\\"idBoard\\\": \\\"57f39ce1b2dc643ce0568f41\\\",\\n    \\\"pos\\\": 212992\\n  }\\n]\",\n      \"language\": \"text\"\n    }\n  ]\n}\n[/block]","excerpt":"List a member's board stars","slug":"membersidboardstars","type":"endpoint","title":"/members/{id}/boardStars","__v":2,"updatedAt":"2019-06-10T14:28:52.640Z","swagger":{"path":"/members/{id}/boardStars"}},{"_id":"59540369d361840035930a30","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:28:41.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540369d361840035930a31","ref":"","in":"path","required":false,"desc":"The ID of the board star","default":"","type":"string","name":"idStar"}],"url":"/members/{id}/boardStars/{idStar}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Get a specific boardStar","slug":"membersidboardstarsidstar","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":0,"updatedAt":"2019-06-10T14:28:52.640Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"595405b0439bc9001b4ad5e4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:38:24.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595405b0439bc9001b4ad5e5","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/boardsInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Get the boards the member has been invited to","slug":"membersidboardsinvited","type":"endpoint","title":"/members/{id}/boardsInvited","__v":0,"updatedAt":"2019-06-10T14:28:52.641Z","swagger":{"path":"/members/{id}/boardsInvited"}},{"_id":"595405f2070f4c001b255a1e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:39:30.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595405f2070f4c001b255a1f","ref":"","in":"query","required":false,"desc":"One of: `all`, `closed`, `none`, `open`, `visible`","default":"visible","type":"string","name":"filter"}],"url":"/members/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"For a full list of available query params, see [Cards Nested Resource](ref:cards-nested-resource) \n\n`GET` `/1/members/mortysmith1/cards?fields=id,name,idBoard,idList,idMembers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"588272fe292c44fba787a306\\\",\\n    \\\"name\\\": \\\"Card Created in Shared Channel\\\",\\n    \\\"idBoard\\\": \\\"5812a2bfd2ce1283caaca31e\\\",\\n    \\\"idList\\\": \\\"5812a2c9a9327e675ec3e412\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"5888e7583d8e8de13dcda225\\\",\\n    \\\"name\\\": \\\"Buy Hot Dogs\\\",\\n    \\\"idBoard\\\": \\\"5888e7583d8e8de13dcda1f1\\\",\\n    \\\"idList\\\": \\\"5888e7583d8e8de13dcda1f3\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"5888e7583d8e8de13dcda226\\\",\\n    \\\"name\\\": \\\"Grill Hot Dogs\\\",\\n    \\\"idBoard\\\": \\\"5888e7583d8e8de13dcda1f1\\\",\\n    \\\"idList\\\": \\\"5888e7583d8e8de13dcda1f3\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Gets the cards a member is on","slug":"membersidcards","type":"endpoint","title":"/members/{id}/cards","__v":0,"updatedAt":"2019-06-10T14:28:52.641Z","swagger":{"path":"/members/{id}/cards"}},{"_id":"595406edb6f511002d075db8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:43:41.635Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customBoardBackgrounds","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Get a member's custom board backgrounds","slug":"membersidcustomboardbackgrounds","type":"endpoint","title":"/members/{id}/customBoardBackgrounds","__v":1,"updatedAt":"2019-06-10T14:28:52.642Z","swagger":{"path":"/members/{id}/customBoardBackgrounds"}},{"_id":"5954071bb6f511002d075dbb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:44:27.374Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595406edb6f511002d075db9","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `brightness`, `fullSizeUrl`, `scaled`, `tile`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customBoardBackgrounds/{idBackground}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"Get a specific custom board background","slug":"membersidcustomboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":0,"updatedAt":"2019-06-10T14:28:52.642Z","swagger":{"path":"/members/{id}/customBoardBackgrounds/{idBackground}"}},{"_id":"595407490a2348002d1d47c4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:45:13.888Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customEmoji","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"`GET` `/1/members/mattcowan/customEmoji`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5953f98c4c308ae5c720065f\\\",\\n    \\\"url\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\",\\n    \\\"name\\\": \\\"morty\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a member's uploaded custom emoji","slug":"membersidcustomemoji","type":"endpoint","title":"/members/{id}/customEmoji","__v":0,"updatedAt":"2019-06-10T14:28:52.643Z","swagger":{"path":"/members/{id}/customEmoji"}},{"_id":"595407a70a2348002d1d47c5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:46:47.942Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595407a70a2348002d1d47c6","ref":"","in":"path","required":false,"desc":"The ID of the custom emoji","default":"","type":"string","name":"idEmoji"},{"_id":"595407b9b330760037c4c74c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `name`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customEmoji/{idEmoji}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"`GET` `/1/members/mattcowan/customEmoji/5953f98c4c308ae5c720065f`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5953f98c4c308ae5c720065f\\\",\\n  \\\"url\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\",\\n  \\\"name\\\": \\\"morty\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a custom emoji","slug":"membersidcustomemojiidemoji","type":"endpoint","title":"/members/{id}/customEmoji/{idEmoji}","__v":1,"updatedAt":"2019-06-10T14:28:52.643Z","swagger":{"path":"/members/{id}/customEmoji/{idEmoji}"}},{"_id":"595407eb73082700156d6714","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:47:55.261Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customStickers","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"`GET` `/1/members/mattcowan/customStickers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57bf3f1f3a45044fd30f7ddb\\\",\\n    \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n    \\\"scaled\\\": [\\n      {\\n        \\\"width\\\": 80,\\n        \\\"height\\\": 80,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/80x80/5101f7d835919f08cb9fade961d2eb40/shipped.png\\\",\\n        \\\"bytes\\\": 13664,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7dde\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"width\\\": 160,\\n        \\\"height\\\": 160,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/160x160/7ed0455c19aca774c48fb4f24e0dffbe/shipped.png\\\",\\n        \\\"bytes\\\": 40079,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddd\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"width\\\": 124,\\n        \\\"height\\\": 124,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n        \\\"bytes\\\": 14800,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddc\\\",\\n        \\\"scaled\\\": true\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a member's uploaded stickers","slug":"membersidcustomstickers","type":"endpoint","title":"/members/{id}/customStickers","__v":0,"updatedAt":"2019-06-10T14:28:52.644Z","swagger":{"path":"/members/{id}/customStickers"}},{"_id":"59540859b24177002bbe11ff","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:49:45.165Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540859b24177002bbe1200","ref":"","in":"path","required":false,"desc":"The ID of the uploaded sticker","default":"","type":"string","name":"idSticker"},{"_id":"5954086a439bc9001b4ad60c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `scaled`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customStickers/{idSticker}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"`GET` `/1/members/mattcowan/customStickers/57bf3f1f3a45044fd30f7ddb`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"57bf3f1f3a45044fd30f7ddb\\\",\\n  \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n  \\\"scaled\\\": [\\n    {\\n      \\\"width\\\": 80,\\n      \\\"height\\\": 80,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/80x80/5101f7d835919f08cb9fade961d2eb40/shipped.png\\\",\\n      \\\"bytes\\\": 13664,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7dde\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"width\\\": 160,\\n      \\\"height\\\": 160,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/160x160/7ed0455c19aca774c48fb4f24e0dffbe/shipped.png\\\",\\n      \\\"bytes\\\": 40079,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddd\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"width\\\": 124,\\n      \\\"height\\\": 124,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n      \\\"bytes\\\": 14800,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddc\\\",\\n      \\\"scaled\\\": true\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get an uploaded sticker","slug":"membersidcustomstickersidsticker","type":"endpoint","title":"/members/{id}/customStickers/{idSticker}","__v":1,"updatedAt":"2019-06-10T14:28:52.644Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"5966371cb6f9e9004923801d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":["596662e9e46c850065e5889f"],"next":{"pages":[],"description":""},"createdAt":"2017-07-12T14:50:04.345Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540859b24177002bbe1200","ref":"","in":"path","required":false,"desc":"The ID of the uploaded sticker","default":"","type":"string","name":"idSticker"},{"_id":"5954086a439bc9001b4ad60c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `scaled`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customStickers/{idSticker}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"**`GET` `/1/members/:id/enterprises`**\n\nGet the enterprises that a member **is associated with**\n[block:api-header]\n{\n  \"title\": \"PATH PARAMS\"\n}\n[/block]\n- id\n  - type: string\n  - required: true\n  - description: The ID or username of the member\n[block:api-header]\n{\n  \"title\": \"QUERY PARAMS\"\n}\n[/block]\n- fields\n  - type: string\n  - required: false\n  - default value: `displayName`\n  - possible values: ['name', 'displayName', 'prefs', 'ssoActivationFailed', 'ssoDateDelayed', 'idAdmins']\n  - description: `all` or a comma-separated list of some of the enterprise fields listed above\n\n-filter\n  - type: string\n  - require: false\n  - default value: `all`\n  - possible values: [\"member\", \"collaborator\", \"saml\", \"none\", \"member-unconfirmed\", \"collaborator-unconfirmed\", \"all\"]\n  - description: `all` or one of the `userType`s listed above. If different from `all` only enterprises where the member has that specific kind of user type will be returned\n[block:api-header]\n{\n  \"title\": \"Example of response\"\n}\n[/block]\n`GET` `/1/members/me/enterprises`\n\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n    {\\n        \\\"id\\\": \\\"58fe4a04c2636718461c90e3\\\",\\n        \\\"displayName\\\": \\\"Some Enterprise\\\",\\n        \\\"userType\\\": \\\"member\\\"\\n    },\\n    {\\n        \\\"id\\\": \\\"590257482515060e06b69162\\\",\\n        \\\"displayName\\\": \\\"Some other Enterprise\\\",\\n        \\\"userType\\\": \\\"collaborator\\\"\\n    }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"\",\n  \"body\": \"You can only read the enterprises for the member associated with the supplied token.\"\n}\n[/block]","excerpt":"Get the enterprises that a member belongs to.","slug":"membersidenterprises","type":"endpoint","title":"/members/{id}/enterprises/","__v":1,"updatedAt":"2019-06-10T14:28:52.645Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"595408c174ea3e001518daa9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:51:29.287Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540a8b341432001554ebd5","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"entities"},{"_id":"59540a93d59525002b2617c8","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"display"},{"_id":"59540ab7f135e5001be8e557","ref":"","in":"query","required":false,"desc":"","default":"all","type":"string","name":"filter"},{"_id":"59540ac9d361840035930a7f","ref":"","in":"query","required":false,"desc":"One of: `all`, `read`, `unread`","default":"all","type":"string","name":"read_filter"},{"_id":"59540ae4f135e5001be8e558","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of notification [fields](ref:notification-object)","default":"all","type":"string","name":"fields"},{"_id":"59540af4c356e9001b1251f6","ref":"","in":"query","required":false,"desc":"Max 1000","default":"50","type":"int","name":"limit"},{"_id":"59540aff341432001554ebd6","ref":"","in":"query","required":false,"desc":"Max 100","default":"0","type":"int","name":"page"},{"_id":"59540b27b330760037c4c752","ref":"","in":"query","required":false,"desc":"A notification ID","default":"","type":"string","name":"before"},{"_id":"59540b27b330760037c4c751","ref":"","in":"query","required":false,"desc":"A notification ID","default":"","type":"string","name":"since"},{"_id":"59540b4c341432001554ebf8","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"memberCreator"},{"_id":"59540b4c341432001554ebf7","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"}],"url":"/members/{id}/notifications","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"You can only read the notifications for the member associated with the supplied token\"\n}\n[/block]","excerpt":"Get a member's notifications","slug":"membersidnotifications","type":"endpoint","title":"/members/{id}/notifications","__v":9,"updatedAt":"2019-06-10T14:28:52.646Z","swagger":{"path":"/members/{id}/notifications"}},{"_id":"59540b64439bc9001b4ad652","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:02:44.369Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540b7ed59525002b2617cc","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public` (Note: `members` filters to only private teams)","default":"all","type":"string","name":"filter"},{"_id":"59540b94c356e9001b1251f8","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"},{"_id":"59540b9f439bc9001b4ad653","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"paid_account"}],"url":"/members/{id}/organizations","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Get a member's teams","slug":"membersidorganizations","type":"endpoint","title":"/members/{id}/organizations","__v":4,"updatedAt":"2019-06-10T14:28:52.647Z","swagger":{"path":"/members/{id}/organizations"}},{"_id":"59540bc6070f4c001b255a49","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:04:22.449Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540be1a5bbca002d27aee6","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/organizationsInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"","excerpt":"Get a member's teams they have been invited to","slug":"membersidorganizationsinvited","type":"endpoint","title":"/members/{id}/organizationsInvited","__v":1,"updatedAt":"2019-06-10T14:28:52.648Z","swagger":{"path":"/members/{id}/organizationsInvited"}},{"_id":"59540bfcb24177002bbe1204","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:05:16.678Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/savedSearches","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"","excerpt":"List the saved searches of a member","slug":"membersidsavedsearches","type":"endpoint","title":"/members/{id}/savedSearches","__v":0,"updatedAt":"2019-06-10T14:28:52.648Z","swagger":{"path":"/members/{id}/savedSearches"}},{"_id":"59540c170a2348002d1d47cd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:05:43.912Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"","excerpt":"Get a saved search","slug":"membersidsavedsearchesidsearch","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":0,"updatedAt":"2019-06-10T14:28:52.649Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"59540d6274ea3e001518dad2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:11:14.093Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540d6274ea3e001518dad3","ref":"","in":"query","required":false,"desc":"Whether to include webhooks","default":"false","type":"boolean","name":"webhooks"}],"url":"/members/{id}/tokens","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"List a members app tokens","slug":"membersidtokens","type":"endpoint","title":"/members/{id}/tokens","__v":0,"updatedAt":"2019-06-10T14:28:52.649Z","swagger":{"path":"/members/{id}/tokens"}},{"_id":"59540d7fd361840035930a8a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:11:43.372Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540d95b24177002bbe120b","ref":"","in":"query","required":false,"desc":"New name for the member. Cannot begin or end with a space.","default":"","type":"string","name":"fullName"},{"_id":"59540da874ea3e001518dad5","ref":"","in":"query","required":false,"desc":"New initials for the member. 1-4 characters long.","default":"","type":"string","name":"initials"},{"_id":"59540dc7439bc9001b4ad677","ref":"","in":"query","required":false,"desc":"New username for the member. At least 3 characters long, only lowercase letters, underscores, and numbers. Must be unique.","default":"","type":"string","name":"username"},{"_id":"59540e09070f4c001b255a6d","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"bio"},{"_id":"59540e09070f4c001b255a6c","ref":"","in":"query","required":false,"desc":"One of: `gravatar`, `none`, `upload`","default":"","type":"string","name":"avatarSource"},{"_id":"59540e136ed4d9001b3e7b14","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"prefs/colorBlind"},{"_id":"59540e26654fb9002b95bd07","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"prefs/locale"},{"_id":"59540f6174ea3e001518dad8","ref":"","in":"query","required":false,"desc":"`-1` for disabled, `1`, or `60`","default":"","type":"int","name":"prefs/minutesBetweenSummaries"}],"url":"/members/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"This route lets you update one or more properties of a member.\n\nAlternatively, you can update a specific property like:\n\n`PUT` `/1/members/{id}/{property}?value={new value}`\n\nSo to update a member's bio, you could also do:\n\n`PUT` `/1/members/{id}/bio?value=Hi%20There`","excerpt":"Update a member","slug":"membersid-1","type":"endpoint","title":"/members/{id}","__v":7,"updatedAt":"2019-06-10T14:28:52.650Z","swagger":{"path":"/members/{id}"}},{"_id":"595528c66ea25b003577ed71","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:20:22.296Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595528c66ea25b003577ed72","ref":"","in":"path","required":false,"desc":"The ID of the board background to update","default":"","type":"string","name":"idBackground"},{"_id":"595528e2be8877001b6dd0be","ref":"","in":"query","required":false,"desc":"One of: `dark`, `light`, `unknown`","default":"","type":"string","name":"brightness"},{"_id":"595528d41eb56d0029fcdba5","ref":"","in":"query","required":false,"desc":"Whether the background should be tiled","default":"","type":"boolean","name":"tile"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Update a board background","slug":"membersidboardbackgroundsidbackground-1","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":3,"updatedAt":"2019-06-10T14:28:52.650Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59552936cf1c05001b2c102d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:22:14.332Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552936cf1c05001b2c102e","ref":"","in":"path","required":false,"desc":"The ID of the board star to update","default":"","type":"string","name":"idStar"},{"_id":"5955294a95aa76002de6cbea","ref":"","in":"query","required":false,"desc":"New position for the starred board. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/boardStars/{idStar}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Update the position of a starred board","slug":"membersidboardstarsidstar-1","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":1,"updatedAt":"2019-06-10T14:28:52.651Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"5955296f17710f0015656933","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:23:11.562Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595529bb3ebaea002bf77247","ref":"","in":"query","required":false,"desc":"One of: `dark`, `light`, `unknown`","default":"","type":"string","name":"brightness"},{"_id":"595529ae3e9508001b480927","ref":"","in":"query","required":false,"desc":"Whether to tile the background","default":"","type":"boolean","name":"tile"}],"url":"/members/{id}//customBoardBackgrounds/{idBackground}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"","slug":"put-membersidcustomboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":3,"updatedAt":"2019-06-10T14:28:52.651Z","swagger":{"path":"/members/{id}//customBoardBackgrounds/{idBackground}"}},{"_id":"595529d8be8877001b6dd0bf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:24:56.086Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595529f2cb31f200158a2e00","ref":"","in":"query","required":false,"desc":"The new name for the saved search","default":"","type":"string","name":"name"},{"_id":"59552a01be8877001b6dd0c1","ref":"","in":"query","required":false,"desc":"The new search query","default":"","type":"string","name":"query"},{"_id":"59552a16be8877001b6dd0c2","ref":"","in":"query","required":false,"desc":"New position for saves search. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Update a saved search","slug":"membersidsavedsearchesidsearch-1","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":3,"updatedAt":"2019-06-10T14:28:52.652Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"59552b86cb31f200158a2e09","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:32:06.521Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552b86cb31f200158a2e0a","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/avatar","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"The `file` parameter is required to be passed in as [multipart/form-data](https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2) - it cannot be a URL.","excerpt":"Create a new avatar for a member","slug":"membersidavatar","type":"endpoint","title":"/members/{id}/avatar","__v":0,"updatedAt":"2019-06-10T14:28:52.652Z","swagger":{"path":"/members/{id}/avatar"}},{"_id":"59552ba3fddb250029241ad9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:32:35.517Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552ba3fddb250029241ada","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/boardBackgrounds","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"","excerpt":"Upload a new boardBackground","slug":"membersidboardbackgrounds-1","type":"endpoint","title":"/members/{id}/boardBackgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.655Z","swagger":{"path":"/members/{id}/boardBackgrounds"}},{"_id":"59552bcc17710f0015656937","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:33:16.768Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552bcc17710f0015656939","ref":"","in":"query","required":true,"desc":"The ID of the board to star","default":"","type":"string","name":"idBoard"},{"_id":"59552bcc17710f0015656938","ref":"","in":"query","required":true,"desc":"The position of the newly starred board. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/boardStars","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":32,"body":"","excerpt":"Star a new board","slug":"membersidboardstars-1","type":"endpoint","title":"/members/{id}/boardStars","__v":0,"updatedAt":"2019-06-10T14:28:52.655Z","swagger":{"path":"/members/{id}/boardStars"}},{"_id":"59552be9be8877001b6dd105","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:33:45.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552be9be8877001b6dd106","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/customBoardBackgrounds","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"","excerpt":"Upload a new custom board background","slug":"membersidcustomboardbackgrounds-1","type":"endpoint","title":"/members/{id}/customBoardBackgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customBoardBackgrounds"}},{"_id":"59552c18be8877001b6dd107","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:34:32.496Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552c18be8877001b6dd109","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"},{"_id":"59552c18be8877001b6dd108","ref":"","in":"query","required":true,"desc":"Name for the emoji. 2 - 64 characters","default":"","type":"string","name":"name"}],"url":"/members/{id}/customEmoji","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":34,"body":"","excerpt":"Upload a new custom emoji","slug":"membersidcustomemoji-1","type":"endpoint","title":"/members/{id}/customEmoji","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customEmoji"}},{"_id":"59552cdcee9aea00157d8bcd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:37:48.736Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552cdcee9aea00157d8bce","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/customStickers","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"","excerpt":"Upload a new custom sticker","slug":"membersidcustomstickers-1","type":"endpoint","title":"/members/{id}/customStickers","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customStickers"}},{"_id":"59552cf2d9f60e002dfc26c6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:38:10.890Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552cffd9f60e002dfc26c7","ref":"","in":"query","required":true,"desc":"The message to dismiss","default":"","type":"string","name":"value"}],"url":"/members/{id}/oneTimeMessagesDismissed","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"","excerpt":"Dismiss a message","slug":"membersidonetimemessagesdismissed","type":"endpoint","title":"/members/{id}/oneTimeMessagesDismissed","__v":1,"updatedAt":"2019-06-10T14:28:52.657Z","swagger":{"path":"/members/{id}/oneTimeMessagesDismissed"}},{"_id":"59552d2417710f001565693c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:39:00.586Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552d2417710f001565693e","ref":"","in":"query","required":true,"desc":"The name for the saved search","default":"","type":"string","name":"name"},{"_id":"59552d2417710f001565693d","ref":"","in":"query","required":true,"desc":"The search query","default":"","type":"string","name":"query"},{"_id":"59552d3bee9aea00157d8bcf","ref":"","in":"query","required":true,"desc":"The position of the saved search. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/savedSearches","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"Create a new saved search","slug":"membersidsavedsearches-1","type":"endpoint","title":"/members/{id}/savedSearches","__v":1,"updatedAt":"2019-06-10T14:28:52.657Z","swagger":{"path":"/members/{id}/savedSearches"}},{"_id":"59552e2cd9f60e002dfc26ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:43:24.599Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e3bee9aea00157d8bf5","ref":"","in":"path","required":false,"desc":"The ID of the board background to delete","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"Delete a board background","slug":"membersidboardbackgroundsidbackground-2","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":1,"updatedAt":"2019-06-10T14:28:52.659Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59552e5f95aa76002de6cc11","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:44:15.525Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e5f95aa76002de6cc12","ref":"","in":"path","required":false,"desc":"The ID of the board star to remove","default":"","type":"string","name":"idStar"}],"url":"/members/{id}/boardStars/{idStar}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":39,"body":"","excerpt":"Unstar a board","slug":"membersidboardstarsidstar-2","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"59552e7a3ebaea002bf7726f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:44:42.961Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e7a3ebaea002bf77270","ref":"","in":"path","required":false,"desc":"The ID of the custom board background to delete","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/customBoardBackgrounds/{idBackground}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Delete a custom board background","slug":"membersidcustomboardbackgroundsidbackground-1","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/customBoardBackgrounds/{idBackground}"}},{"_id":"59552e9f17710f0015656964","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:45:19.508Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e9f17710f0015656965","ref":"","in":"path","required":false,"desc":"The ID of the custom sticker to delete","default":"","type":"string","name":"idSticker"}],"url":"/members/{id}/customStickers/{idSticker}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"Delete a custom sticker","slug":"membersidcustomstickersidsticker-1","type":"endpoint","title":"/members/{id}/customStickers/{idSticker}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"59552ebd3ebaea002bf77292","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:45:49.480Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552ebd3ebaea002bf77293","ref":"","in":"path","required":false,"desc":"The ID of the saved search to delete","default":"","type":"string","name":"idSearch"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"","excerpt":"Delete a saved search","slug":"membersidsavedsearchesidsearch-2","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":0,"updatedAt":"2019-06-10T14:28:52.661Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}}]},{"_id":"594d1a7dc804570021d221dd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11c65589520033080f38","updates":["5c3e3cbf9d6c5d003273f240","5c3eb6e7c8306e004ad346c1"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:17.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"1-0\": \"**avatarHash**\\nstring\",\n    \"3-0\": \"**avatarSource**\",\n    \"4-0\": \"**bio**\\nstring\",\n    \"5-0\": \"**bioData**\\nobject\",\n    \"6-0\": \"**confirmed**\\nboolean\",\n    \"7-0\": \"**email**\\nstring\",\n    \"8-0\": \"**fullName**\\nstring\",\n    \"9-0\": \"**gravatarHash**\\nstring\",\n    \"9-1\": \"Same as **avatarHash** above; member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{gravatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\\nstring.\",\n    \"10-0\": \"**idBoards**\\narray of strings\",\n    \"11-0\": \"**idBoardsPinned**\\narray of strings\",\n    \"12-0\": \"**idOrganizations**\\narray of strings\",\n    \"15-0\": \"**initials**\\nstring\",\n    \"16-0\": \"**loginTypes**\\narray of strings\",\n    \"17-0\": \"**memberType**\",\n    \"18-0\": \"**oneTimeMessagesDismissed**\\narray of strings\",\n    \"19-0\": \"**prefs**\\nobject\",\n    \"20-0\": \"**premiumFeatures**\",\n    \"21-0\": \"**products**\\narray of integers\",\n    \"22-0\": \"**status**\\nstring\",\n    \"23-0\": \"**trophies**\\narray\",\n    \"24-0\": \"**uploadedAvatarHash**\\nstring\",\n    \"26-0\": \"**url**\\nstring\",\n    \"27-0\": \"**username**\\nstring\",\n    \"13-0\": \"**idEnterprisesAdmin**\\narray of strings\",\n    \"14-0\": \"**idPremOrgsAdmin**\\narray of strings\",\n    \"5-1\": \"If the bio includes custom emoji, this object will contain the information necessary to display them.\",\n    \"4-1\": \"Optional bio for the member\",\n    \"0-1\": \"The ID of the member\",\n    \"1-1\": \"Member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{avatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\",\n    \"6-1\": \"Whether the member has confirmed their email address after signing up\",\n    \"7-1\": \"The primary email address for the member. You can only read your own.\",\n    \"8-1\": \"The full display name for the member\",\n    \"10-1\": \"An array of board IDs this member is on\",\n    \"12-1\": \"An array of organization IDs this member is in\",\n    \"13-1\": \"An array of enterprise IDs this member is an admin of\",\n    \"15-1\": \"The member's initials, used for display when there isn't an avatar set\",\n    \"22-1\": \"**deprecated**\",\n    \"23-1\": \"**deprecated**\",\n    \"26-1\": \"The URL to the member's profile page\",\n    \"27-1\": \"The username for the member. What is shown in @mentions for example\",\n    \"11-1\": \"**deprecated**\",\n    \"21-1\": \"`10` - member has Trello Gold as a result of being in a Business Class team\\n`37` - member has monthly Trello Gold\\n`38` - member has annual Trello Gold\",\n    \"19-1\": \"```json\\n\\\"prefs\\\": {\\n  \\\"sendSummaries\\\": true,\\n  \\\"minutesBetweenSummaries\\\": -1,\\n  \\\"minutesBeforeDeadlineToNotify\\\": 1440,\\n  \\\"colorBlind\\\": false,\\n  \\\"locale\\\": \\\"en-US\\\",\\n  \\\"timezoneInfo\\\": {\\n    \\\"timezoneNext\\\": \\\"EST\\\",\\n    \\\"dateNext\\\": \\\"2017-11-05T06:00:00.000Z\\\",\\n    \\\"offsetNext\\\": 300,\\n    \\\"timezoneCurrent\\\": \\\"EDT\\\",\\n    \\\"offsetCurrent\\\": 240\\n  },\\n  \\\"twoFactor\\\": {\\n    \\\"enabled\\\": true,\\n    \\\"needsNewBackups\\\": false\\n  },\\n  \\\"privacy\\\": {\\n    \\\"fullName\\\": \\\"public\\\",\\n    \\\"avatar\\\": \\\"public\\\"\\n  },\\n}\\n```\",\n    \"3-1\": \"The source of the user's avatar - either via \\\"upload\\\" or \\\"gravatar\\\".\",\n    \"2-0\": \"**avatarUrl**\\nstring\",\n    \"2-1\": \"The URL of the current avatar being used, regardless of whether it is a gravatar or uploaded avatar.\",\n    \"16-1\": \"The types of logins a user can use:\\n`password`, `saml`, `google`, or `android`\",\n    \"17-1\": \"One of: \\\"normal\\\", \\\"ghost\\\"\\n\\nA `ghost` is an individual who has been invited to join but has not yet created a Trello account.\",\n    \"25-0\": \"**uploadedAvatarUrl**\\nstring\",\n    \"24-1\": \"Same as **avatarHash** - member profile images are hosted at: `https://trello-avatars.s3.amazonaws.com/{uploadedAvatarHash}/{size}.png`\\n\\n`size` can be 30, 50, or 170\",\n    \"25-1\": \"The URL of the uploaded avatar if one has been uploaded.\",\n    \"14-1\": \"An array of organization IDs this member is an admin of\"\n  },\n  \"cols\": 2,\n  \"rows\": 28\n}\n[/block]\n`GET` `/1/members/taco?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"50095233f62adbe04d935195\\\",\\n  \\\"avatarHash\\\": \\\"10e3fec8aee92d177b22290b7cff669d\\\",\\n  \\\"bio\\\": \\\"\\\",\\n  \\\"bioData\\\": null,\\n  \\\"confirmed\\\": true,\\n  \\\"fullName\\\": \\\"Taco\\\",\\n  \\\"idPremOrgsAdmin\\\": [\\n    \\n  ],\\n  \\\"initials\\\": \\\"T\\\",\\n  \\\"memberType\\\": \\\"normal\\\",\\n  \\\"products\\\": [\\n    \\n  ],\\n  \\\"status\\\": \\\"disconnected\\\",\\n  \\\"url\\\": \\\"https://trello.com/taco\\\",\\n  \\\"username\\\": \\\"taco\\\",\\n  \\\"avatarSource\\\": null,\\n  \\\"email\\\": null,\\n  \\\"gravatarHash\\\": null,\\n  \\\"idBoards\\\": [\\n    \\\"5824e427857eea92ad0a93fc\\\",\\n    \\\"58f7becd7a76210902b2f846\\\",\\n    \\\"50e1d37994dd425b620035ff\\\",\\n    \\\"51227842c0cb5a7d740002cb\\\",\\n    \\\"512e491a6d7fc071590043a6\\\",\\n    \\\"58f7b25fcf2a8696f734edfc\\\",\\n    \\\"58fa50037361735963976675\\\",\\n    \\\"592db6c67e4c126659137b88\\\",\\n    \\\"592f28ad8271344b504b016d\\\"\\n  ],\\n  \\\"idEnterprise\\\": null,\\n  \\\"idOrganizations\\\": [\\n    \\n  ],\\n  \\\"idEnterprisesAdmin\\\": [\\n    \\n  ],\\n  \\\"loginTypes\\\": null,\\n  \\\"oneTimeMessagesDismissed\\\": null,\\n  \\\"prefs\\\": null,\\n  \\\"trophies\\\": [\\n    \\n  ],\\n  \\\"uploadedAvatarHash\\\": null,\\n  \\\"premiumFeatures\\\": [\\n    \\n  ],\\n  \\\"idBoardsPinned\\\": null\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"me\",\n  \"body\": \"When using any `/1/members/` route, you can specify `me` in place of the username or id, to get back information about the user associated with the token used to make the request\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Member Fields and Privacy Controls\"\n}\n[/block]\nSome fields on the member object can be put under privacy controls by the Trello user. Initially, only `avatar` and `fullName` will be able to be put under privacy controls by some Trello users.\n\nFrom a user's perspective, they will be able to choose whether the fields are public or private while editing their account settings.\n\nFrom an API perspective, if a field is under privacy control, it will be included in the `privacy` object inside of the `prefs` object on a member. For instance:\n\n```\n\"privacy\": {\n  \"fullName\": \"public\",\n  \"avatar\": \"public\"\n}\n```\n\nIf `fullName` is set to anything other than `public`, the value returned in the API will be the same as the `username` field.\n\nIf `avatar` is set to anything other than `public`, the value for `avatarHash` will be an empty string `\"\"` and `avatarUrl` will be `null`. This is the same response you'd receive currently if the user did not have an avatar set.\n\n### Privacy Controlled Member fields In Power-Up Client Library\n\nSimilar to above, when a user selects a privacy setting other than `public` for their `avatar` or `fullName`, calls to `t.member` asking for either of those fields will change.\n\nIf `fullName` is set to anything other than `public`, the value returned from `t.member('fullName')` will be the same as `t.member('username')`.\n\nIf `avatar` is set to anything other than `public`, calls to `t.member('avatar')` will return `null`. This is the same response you'd receive currently if the user did not have an avatar set.","excerpt":"","slug":"member-object","type":"basic","title":"Member Object","__v":2,"updatedAt":"2019-06-10T14:28:52.636Z"},{"_id":"594d1a87d5fdcb0033512b84","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:27.729Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Members are available as [nested resources](ref:understanding-nested-resources) within many of the other Trello resources. Below are the parameters that are available to members as nested resources.\n[block:api-header]\n{\n  \"title\": \"Nested Members as Query Params\"\n}\n[/block]\nThe table below shows query params available when accessing members as a nested resource via query params. For instance, the query params are available when you are accessing boards via:  `/1/boards/{id}?members=all`.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"h-2\": \"Default\",\n    \"0-0\": \"**members**\",\n    \"0-1\": \"Default: None\\nOptions: one of:\\n`none`\\n`normal`\\n`admins`\\n`owners`\\n`all`\",\n    \"1-0\": \"**member_fields**\",\n    \"1-1\": \"Default: Default: `id,avatarHash,avatarUrl,initials,fullName,username,confirmed,memberType`\\nOptions: `all` or a comma-separated list of card [fields](ref:member-object)\",\n    \"0-2\": \"\",\n    \"1-2\": \"`id`, `avatarHash`, `avatarUrl`, `initials`, `fullName`, `username`, `confirmed`, `memberType`\"\n  },\n  \"cols\": 2,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Members on cards\",\n  \"body\": \"When accessing members on cards, there is no differentiation and you will instead want to use `?members=true` to include them in the response.\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Nested Members as URL Params\"\n}\n[/block]\nMembers are also available as nested resources via URL parameters. For instance, you may want just the members belonging to a specific board; in that case you'd use the route `/1/boards/{id}/members` with any of the options below as query parameters.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Options\",\n    \"0-0\": \"**fields**\",\n    \"0-1\": \"Default: `id,fullName,username`\\nOptions: `all` or a comma-separated list of:\\n- avatarHash\\n- avatarUrl\\n- bio\\n- bioData\\n- confirmed\\n- fullName\\n- idEnterprisesDeactivated\\n- idPremOrgsAdmin\\n- initials\\n- memberType\\n- products\\n- status\\n- url\\n- username\"\n  },\n  \"cols\": 2,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"members-nested-resource","type":"basic","title":"Members Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.637Z"},{"_id":"5954012d070f4c001b255a10","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11c65589520033080f38","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:19:09.927Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59551d73fddb250029241a9c","ref":"","in":"query","required":false,"desc":"See the [Actions Nested Resource](ref:actions-nested-resource)","default":"","type":"string","name":"actions"},{"_id":"59551dd2be8877001b6dd087","ref":"","in":"query","required":false,"desc":"See the [Boards Nested Resource](ref:section-objectidboardsopen)","default":"","type":"string","name":"boards"},{"_id":"595526433e9508001b4808f8","ref":"","in":"query","required":false,"desc":"One of: `all`, `custom`, `default`, `none`, `premium`","default":"none","type":"string","name":"boardBackgrounds"},{"_id":"59552107fddb250029241abf","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned","default":"","type":"string","name":"boardsInvited"},{"_id":"5955211fcb31f200158a2d89","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"name,closed,idOrganization,pinned","type":"string","name":"boardsInvited_fields"},{"_id":"5955212ebe8877001b6dd090","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"boardStars"},{"_id":"59551d95b30dac001bea4745","ref":"","in":"query","required":false,"desc":"See the [Cards Nested Resource](ref:cards-nested-resource) for additional options","default":"none","type":"string","name":"cards"},{"_id":"59552651ee9aea00157d8bc9","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customBoardBackgrounds"},{"_id":"5955266bcb31f200158a2db7","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customEmoji"},{"_id":"5955265fb30dac001bea4792","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"customStickers"},{"_id":"5955267f792b10001baf9689","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"},{"_id":"595526093ebaea002bf7721b","ref":"","in":"query","required":false,"desc":"See the [Notifications Nested Resource](ref:section-objectidnotificationsall)","default":"","type":"string","name":"notifications"},{"_id":"595521513e9508001b4808ac","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public`","default":"none","type":"string","name":"organizations"},{"_id":"59552171e06192001597a281","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"organization_fields"},{"_id":"59552194cf1c05001b2c0fdf","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"organization_paid_account"},{"_id":"595521a6e06192001597a282","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public`","default":"none","type":"string","name":"organizationsInvited"},{"_id":"595521c0434c040015f35d4b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"organizationsInvited_fields"},{"_id":"595526263ebaea002bf7721c","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"paid_account"},{"_id":"59552135cf1c05001b2c0fdd","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"savedSearches"},{"_id":"595526186ea25b003577ed69","ref":"","in":"query","required":false,"desc":"`all` or `none`","default":"none","type":"string","name":"tokens"}],"url":"/members/{id}","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Get a member","slug":"membersid","type":"endpoint","title":"/members/{id}","__v":23,"updatedAt":"2019-06-10T14:28:52.637Z","swagger":{"path":"/members/{id}"}},{"_id":"59540191070f4c001b255a11","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:20:49.013Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"language":"text","code":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540191070f4c001b255a12","ref":"","in":"path","required":false,"desc":"One of the member [fields](ref:member-object)","default":"","type":"string","name":"field"}],"url":"/members/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a particular property of a member","slug":"membersidfield","type":"endpoint","title":"/members/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/{field}"}},{"_id":"595401aab24177002bbe11eb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:21:14.899Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/actions","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/members/mattcowan/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5953f998623825ee16496891\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\"\\n      },\\n      \\\"textData\\\": {\\n        \\\"emoji\\\": {\\n          \\\"morty\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\"\\n        }\\n      },\\n      \\\"text\\\": \\\":morty: \\\"\\n    },\\n    \\\"type\\\": \\\"commentCard\\\",\\n    \\\"date\\\": \\\"2017-06-28T18:46:48.532Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"5953f89e8aee8fb628b78a48\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"list\\\": {\\n        \\\"name\\\": \\\"Arizona\\\",\\n        \\\"id\\\": \\\"560bf44ea68b16bd0fc2a9a9\\\"\\n      },\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"card\\\": {\\n        \\\"shortLink\\\": \\\"nqPiDKmw\\\",\\n        \\\"idShort\\\": 9,\\n        \\\"name\\\": \\\"Grand Canyon National Park\\\",\\n        \\\"id\\\": \\\"560bf4dd7139286471dc009c\\\",\\n        \\\"desc\\\": \\\":heart:\\\"\\n      },\\n      \\\"old\\\": {\\n        \\\"desc\\\": \\\"\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"updateCard\\\",\\n    \\\"date\\\": \\\"2017-06-28T18:42:38.229Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"59531f8674fc80b0b3728809\\\",\\n    \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"data\\\": {\\n      \\\"board\\\": {\\n        \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n        \\\"name\\\": \\\"US National Parks\\\",\\n        \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToBoard\\\",\\n    \\\"date\\\": \\\"2017-06-28T03:16:22.628Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n      \\\"avatarHash\\\": \\\"653d92fdd433e65bf8ff199a9c486f08\\\",\\n      \\\"fullName\\\": \\\"Morty Smith\\\",\\n      \\\"initials\\\": \\\"MS\\\",\\n      \\\"username\\\": \\\"mortysmith1\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n      \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n      \\\"fullName\\\": \\\"Matt Cowan\\\",\\n      \\\"initials\\\": \\\"MC\\\",\\n      \\\"username\\\": \\\"mattcowan\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions for a member","slug":"membersidactions","type":"endpoint","title":"/members/{id}/actions","__v":0,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/actions"}},{"_id":"5954047c070f4c001b255a1a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":["5ad045e605210d000302ef0f","5c63bc50be19bf005c750885"],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:33:16.741Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"5954047c070f4c001b255a1b","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`","default":"all","type":"string","name":"filter"},{"_id":"59540495b24177002bbe11f4","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"},{"_id":"5954054974ea3e001518da9e","ref":"","in":"query","required":false,"desc":"Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`","default":"none","type":"string","name":"lists"},{"_id":"5954056ad59525002b2617c0","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `active`, `admin`, `deactivated`, `me`, `normal`","default":"none","type":"string","name":"memberships"},{"_id":"59540511a5bbca002d27aeb5","ref":"","in":"query","required":false,"desc":"Whether to include the organization object with the boards","default":"false","type":"boolean","name":"organization"},{"_id":"59540529b6f511002d075db5","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"name,displayName","type":"string","name":"organization_fields"}],"url":"/members/{id}/boards","method":"get"},"isReference":true,"order":5,"body":"This endpoint is used to list all of the boards that the user is a member of. It will not return all of the boards the the member has access to.","excerpt":"Lists the boards that the user is a member of.","slug":"membersidboards","type":"endpoint","title":"/members/{id}/boards","__v":11,"updatedAt":"2019-06-10T14:28:52.638Z","swagger":{"path":"/members/{id}/boards"}},{"_id":"595402b0b24177002bbe11ed","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:25:36.611Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595402cea5bbca002d27ae90","ref":"","in":"query","required":false,"desc":"One of: `all`, `custom`, `default`, `none`, `premium`","default":"all","type":"string","name":"filter"}],"url":"/members/{id}/boardBackgrounds","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get a member's custom board backgrounds","slug":"membersidboardbackgrounds","type":"endpoint","title":"/members/{id}/boardBackgrounds","__v":1,"updatedAt":"2019-06-10T14:28:52.639Z","swagger":{"path":"/members/{id}/boardBackgrounds"}},{"_id":"595402f1070f4c001b255a13","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:26:41.420Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595402cea5bbca002d27ae90","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `brightness`, `fullSizeUrl`, `scaled`, `tile`","default":"all","type":"string","name":"fields"},{"_id":"5954031eb24177002bbe11ef","ref":"","in":"path","required":false,"desc":"The ID of the board background","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get a member's board background","slug":"membersidboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":1,"updatedAt":"2019-06-10T14:28:52.639Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59540344341432001554ebac","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:28:04.700Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/boardStars","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"Board Stars are used to determine the order in which to display a user's starred boards. There are various times throughout the Trello clients that users are able to drag and drop to re-order their starred boards.\n\nExample request:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl https://api.trello.com/1/members/me/boardstars?key={yourKey}&token={yourToken}\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nAnd the response:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"58502089add56d6d23e0fa57\\\",\\n    \\\"idBoard\\\": \\\"57c4aac0bea72cca6d3ed608\\\",\\n    \\\"pos\\\": 16384\\n  },\\n  {\\n    \\\"id\\\": \\\"585063850027165010be15a8\\\",\\n    \\\"idBoard\\\": \\\"57f7df684f1ca8c2877162e0\\\",\\n    \\\"pos\\\": 32768\\n  },\\n  {\\n    \\\"id\\\": \\\"585063a35d4db49ff65ccfc9\\\",\\n    \\\"idBoard\\\": \\\"57f53f3bf85527b1389acd08\\\",\\n    \\\"pos\\\": 65536\\n  },\\n  {\\n    \\\"id\\\": \\\"585063a932fbd311ac75b511\\\",\\n    \\\"idBoard\\\": \\\"57c477432ea981b66f3c7bef\\\",\\n    \\\"pos\\\": 147456\\n  },\\n  {\\n    \\\"id\\\": \\\"585063ec582d6c1f5f992153\\\",\\n    \\\"idBoard\\\": \\\"57c467a050472389ad8ca7c0\\\",\\n    \\\"pos\\\": 131072\\n  },\\n  {\\n    \\\"id\\\": \\\"58514b6cdeb7bed28dbc3c48\\\",\\n    \\\"idBoard\\\": \\\"569810be3d5d84d40a936105\\\",\\n    \\\"pos\\\": 196608\\n  },\\n  {\\n    \\\"id\\\": \\\"585455c118a1e26506d5471a\\\",\\n    \\\"idBoard\\\": \\\"57f39ce1b2dc643ce0568f41\\\",\\n    \\\"pos\\\": 212992\\n  }\\n]\",\n      \"language\": \"text\"\n    }\n  ]\n}\n[/block]","excerpt":"List a member's board stars","slug":"membersidboardstars","type":"endpoint","title":"/members/{id}/boardStars","__v":2,"updatedAt":"2019-06-10T14:28:52.640Z","swagger":{"path":"/members/{id}/boardStars"}},{"_id":"59540369d361840035930a30","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:28:41.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540369d361840035930a31","ref":"","in":"path","required":false,"desc":"The ID of the board star","default":"","type":"string","name":"idStar"}],"url":"/members/{id}/boardStars/{idStar}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Get a specific boardStar","slug":"membersidboardstarsidstar","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":0,"updatedAt":"2019-06-10T14:28:52.640Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"595405b0439bc9001b4ad5e4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:38:24.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595405b0439bc9001b4ad5e5","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/boardsInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Get the boards the member has been invited to","slug":"membersidboardsinvited","type":"endpoint","title":"/members/{id}/boardsInvited","__v":0,"updatedAt":"2019-06-10T14:28:52.641Z","swagger":{"path":"/members/{id}/boardsInvited"}},{"_id":"595405f2070f4c001b255a1e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:39:30.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595405f2070f4c001b255a1f","ref":"","in":"query","required":false,"desc":"One of: `all`, `closed`, `none`, `open`, `visible`","default":"visible","type":"string","name":"filter"}],"url":"/members/{id}/cards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"For a full list of available query params, see [Cards Nested Resource](ref:cards-nested-resource) \n\n`GET` `/1/members/mortysmith1/cards?fields=id,name,idBoard,idList,idMembers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"588272fe292c44fba787a306\\\",\\n    \\\"name\\\": \\\"Card Created in Shared Channel\\\",\\n    \\\"idBoard\\\": \\\"5812a2bfd2ce1283caaca31e\\\",\\n    \\\"idList\\\": \\\"5812a2c9a9327e675ec3e412\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"5888e7583d8e8de13dcda225\\\",\\n    \\\"name\\\": \\\"Buy Hot Dogs\\\",\\n    \\\"idBoard\\\": \\\"5888e7583d8e8de13dcda1f1\\\",\\n    \\\"idList\\\": \\\"5888e7583d8e8de13dcda1f3\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  },\\n  {\\n    \\\"id\\\": \\\"5888e7583d8e8de13dcda226\\\",\\n    \\\"name\\\": \\\"Grill Hot Dogs\\\",\\n    \\\"idBoard\\\": \\\"5888e7583d8e8de13dcda1f1\\\",\\n    \\\"idList\\\": \\\"5888e7583d8e8de13dcda1f3\\\",\\n    \\\"idMembers\\\": [\\n      \\\"5813b41ecaaa91c7a5dae8fe\\\"\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Gets the cards a member is on","slug":"membersidcards","type":"endpoint","title":"/members/{id}/cards","__v":0,"updatedAt":"2019-06-10T14:28:52.641Z","swagger":{"path":"/members/{id}/cards"}},{"_id":"595406edb6f511002d075db8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:43:41.635Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customBoardBackgrounds","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Get a member's custom board backgrounds","slug":"membersidcustomboardbackgrounds","type":"endpoint","title":"/members/{id}/customBoardBackgrounds","__v":1,"updatedAt":"2019-06-10T14:28:52.642Z","swagger":{"path":"/members/{id}/customBoardBackgrounds"}},{"_id":"5954071bb6f511002d075dbb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:44:27.374Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595406edb6f511002d075db9","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `brightness`, `fullSizeUrl`, `scaled`, `tile`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customBoardBackgrounds/{idBackground}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":13,"body":"","excerpt":"Get a specific custom board background","slug":"membersidcustomboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":0,"updatedAt":"2019-06-10T14:28:52.642Z","swagger":{"path":"/members/{id}/customBoardBackgrounds/{idBackground}"}},{"_id":"595407490a2348002d1d47c4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:45:13.888Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customEmoji","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":14,"body":"`GET` `/1/members/mattcowan/customEmoji`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5953f98c4c308ae5c720065f\\\",\\n    \\\"url\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\",\\n    \\\"name\\\": \\\"morty\\\"\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a member's uploaded custom emoji","slug":"membersidcustomemoji","type":"endpoint","title":"/members/{id}/customEmoji","__v":0,"updatedAt":"2019-06-10T14:28:52.643Z","swagger":{"path":"/members/{id}/customEmoji"}},{"_id":"595407a70a2348002d1d47c5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:46:47.942Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595407a70a2348002d1d47c6","ref":"","in":"path","required":false,"desc":"The ID of the custom emoji","default":"","type":"string","name":"idEmoji"},{"_id":"595407b9b330760037c4c74c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `name`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customEmoji/{idEmoji}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"`GET` `/1/members/mattcowan/customEmoji/5953f98c4c308ae5c720065f`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5953f98c4c308ae5c720065f\\\",\\n  \\\"url\\\": \\\"https://trello-emoji.s3.amazonaws.com/556c8537a1928ba745504dd8/f40ea4f5ecea8443875c27986760d8b3/tumblr_nszc7944yh1uccyhso1_1280.png\\\",\\n  \\\"name\\\": \\\"morty\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a custom emoji","slug":"membersidcustomemojiidemoji","type":"endpoint","title":"/members/{id}/customEmoji/{idEmoji}","__v":1,"updatedAt":"2019-06-10T14:28:52.643Z","swagger":{"path":"/members/{id}/customEmoji/{idEmoji}"}},{"_id":"595407eb73082700156d6714","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:47:55.261Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/customStickers","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"`GET` `/1/members/mattcowan/customStickers`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"57bf3f1f3a45044fd30f7ddb\\\",\\n    \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n    \\\"scaled\\\": [\\n      {\\n        \\\"width\\\": 80,\\n        \\\"height\\\": 80,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/80x80/5101f7d835919f08cb9fade961d2eb40/shipped.png\\\",\\n        \\\"bytes\\\": 13664,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7dde\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"width\\\": 160,\\n        \\\"height\\\": 160,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/160x160/7ed0455c19aca774c48fb4f24e0dffbe/shipped.png\\\",\\n        \\\"bytes\\\": 40079,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddd\\\",\\n        \\\"scaled\\\": false\\n      },\\n      {\\n        \\\"width\\\": 124,\\n        \\\"height\\\": 124,\\n        \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n        \\\"bytes\\\": 14800,\\n        \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddc\\\",\\n        \\\"scaled\\\": true\\n      }\\n    ]\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get a member's uploaded stickers","slug":"membersidcustomstickers","type":"endpoint","title":"/members/{id}/customStickers","__v":0,"updatedAt":"2019-06-10T14:28:52.644Z","swagger":{"path":"/members/{id}/customStickers"}},{"_id":"59540859b24177002bbe11ff","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:49:45.165Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540859b24177002bbe1200","ref":"","in":"path","required":false,"desc":"The ID of the uploaded sticker","default":"","type":"string","name":"idSticker"},{"_id":"5954086a439bc9001b4ad60c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `scaled`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customStickers/{idSticker}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"`GET` `/1/members/mattcowan/customStickers/57bf3f1f3a45044fd30f7ddb`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"57bf3f1f3a45044fd30f7ddb\\\",\\n  \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n  \\\"scaled\\\": [\\n    {\\n      \\\"width\\\": 80,\\n      \\\"height\\\": 80,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/80x80/5101f7d835919f08cb9fade961d2eb40/shipped.png\\\",\\n      \\\"bytes\\\": 13664,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7dde\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"width\\\": 160,\\n      \\\"height\\\": 160,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/160x160/7ed0455c19aca774c48fb4f24e0dffbe/shipped.png\\\",\\n      \\\"bytes\\\": 40079,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddd\\\",\\n      \\\"scaled\\\": false\\n    },\\n    {\\n      \\\"width\\\": 124,\\n      \\\"height\\\": 124,\\n      \\\"url\\\": \\\"https://trello-stickers.s3.amazonaws.com/556c8537a1928ba745504dd8/124x124/5ba0e2eb36f063216d1907e1a1a4cd8b/shipped.png\\\",\\n      \\\"bytes\\\": 14800,\\n      \\\"_id\\\": \\\"57bf3f1f3a45044fd30f7ddc\\\",\\n      \\\"scaled\\\": true\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get an uploaded sticker","slug":"membersidcustomstickersidsticker","type":"endpoint","title":"/members/{id}/customStickers/{idSticker}","__v":1,"updatedAt":"2019-06-10T14:28:52.644Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"5966371cb6f9e9004923801d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":["596662e9e46c850065e5889f"],"next":{"pages":[],"description":""},"createdAt":"2017-07-12T14:50:04.345Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540859b24177002bbe1200","ref":"","in":"path","required":false,"desc":"The ID of the uploaded sticker","default":"","type":"string","name":"idSticker"},{"_id":"5954086a439bc9001b4ad60c","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `scaled`, `url`","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/customStickers/{idSticker}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"**`GET` `/1/members/:id/enterprises`**\n\nGet the enterprises that a member **is associated with**\n[block:api-header]\n{\n  \"title\": \"PATH PARAMS\"\n}\n[/block]\n- id\n  - type: string\n  - required: true\n  - description: The ID or username of the member\n[block:api-header]\n{\n  \"title\": \"QUERY PARAMS\"\n}\n[/block]\n- fields\n  - type: string\n  - required: false\n  - default value: `displayName`\n  - possible values: ['name', 'displayName', 'prefs', 'ssoActivationFailed', 'ssoDateDelayed', 'idAdmins']\n  - description: `all` or a comma-separated list of some of the enterprise fields listed above\n\n-filter\n  - type: string\n  - require: false\n  - default value: `all`\n  - possible values: [\"member\", \"collaborator\", \"saml\", \"none\", \"member-unconfirmed\", \"collaborator-unconfirmed\", \"all\"]\n  - description: `all` or one of the `userType`s listed above. If different from `all` only enterprises where the member has that specific kind of user type will be returned\n[block:api-header]\n{\n  \"title\": \"Example of response\"\n}\n[/block]\n`GET` `/1/members/me/enterprises`\n\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n    {\\n        \\\"id\\\": \\\"58fe4a04c2636718461c90e3\\\",\\n        \\\"displayName\\\": \\\"Some Enterprise\\\",\\n        \\\"userType\\\": \\\"member\\\"\\n    },\\n    {\\n        \\\"id\\\": \\\"590257482515060e06b69162\\\",\\n        \\\"displayName\\\": \\\"Some other Enterprise\\\",\\n        \\\"userType\\\": \\\"collaborator\\\"\\n    }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"\",\n  \"body\": \"You can only read the enterprises for the member associated with the supplied token.\"\n}\n[/block]","excerpt":"Get the enterprises that a member belongs to.","slug":"membersidenterprises","type":"endpoint","title":"/members/{id}/enterprises/","__v":1,"updatedAt":"2019-06-10T14:28:52.645Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"595408c174ea3e001518daa9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T19:51:29.287Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540a8b341432001554ebd5","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"entities"},{"_id":"59540a93d59525002b2617c8","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"display"},{"_id":"59540ab7f135e5001be8e557","ref":"","in":"query","required":false,"desc":"","default":"all","type":"string","name":"filter"},{"_id":"59540ac9d361840035930a7f","ref":"","in":"query","required":false,"desc":"One of: `all`, `read`, `unread`","default":"all","type":"string","name":"read_filter"},{"_id":"59540ae4f135e5001be8e558","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of notification [fields](ref:notification-object)","default":"all","type":"string","name":"fields"},{"_id":"59540af4c356e9001b1251f6","ref":"","in":"query","required":false,"desc":"Max 1000","default":"50","type":"int","name":"limit"},{"_id":"59540aff341432001554ebd6","ref":"","in":"query","required":false,"desc":"Max 100","default":"0","type":"int","name":"page"},{"_id":"59540b27b330760037c4c752","ref":"","in":"query","required":false,"desc":"A notification ID","default":"","type":"string","name":"before"},{"_id":"59540b27b330760037c4c751","ref":"","in":"query","required":false,"desc":"A notification ID","default":"","type":"string","name":"since"},{"_id":"59540b4c341432001554ebf8","ref":"","in":"query","required":false,"desc":"","default":"true","type":"boolean","name":"memberCreator"},{"_id":"59540b4c341432001554ebf7","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"}],"url":"/members/{id}/notifications","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"You can only read the notifications for the member associated with the supplied token\"\n}\n[/block]","excerpt":"Get a member's notifications","slug":"membersidnotifications","type":"endpoint","title":"/members/{id}/notifications","__v":9,"updatedAt":"2019-06-10T14:28:52.646Z","swagger":{"path":"/members/{id}/notifications"}},{"_id":"59540b64439bc9001b4ad652","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:02:44.369Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540b7ed59525002b2617cc","ref":"","in":"query","required":false,"desc":"One of: `all`, `members`, `none`, `public` (Note: `members` filters to only private teams)","default":"all","type":"string","name":"filter"},{"_id":"59540b94c356e9001b1251f8","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"},{"_id":"59540b9f439bc9001b4ad653","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"paid_account"}],"url":"/members/{id}/organizations","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Get a member's teams","slug":"membersidorganizations","type":"endpoint","title":"/members/{id}/organizations","__v":4,"updatedAt":"2019-06-10T14:28:52.647Z","swagger":{"path":"/members/{id}/organizations"}},{"_id":"59540bc6070f4c001b255a49","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:04:22.449Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540be1a5bbca002d27aee6","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/members/{id}/organizationsInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"","excerpt":"Get a member's teams they have been invited to","slug":"membersidorganizationsinvited","type":"endpoint","title":"/members/{id}/organizationsInvited","__v":1,"updatedAt":"2019-06-10T14:28:52.648Z","swagger":{"path":"/members/{id}/organizationsInvited"}},{"_id":"59540bfcb24177002bbe1204","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:05:16.678Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/savedSearches","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":22,"body":"","excerpt":"List the saved searches of a member","slug":"membersidsavedsearches","type":"endpoint","title":"/members/{id}/savedSearches","__v":0,"updatedAt":"2019-06-10T14:28:52.648Z","swagger":{"path":"/members/{id}/savedSearches"}},{"_id":"59540c170a2348002d1d47cd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:05:43.912Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"","excerpt":"Get a saved search","slug":"membersidsavedsearchesidsearch","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":0,"updatedAt":"2019-06-10T14:28:52.649Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"59540d6274ea3e001518dad2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:11:14.093Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540d6274ea3e001518dad3","ref":"","in":"query","required":false,"desc":"Whether to include webhooks","default":"false","type":"boolean","name":"webhooks"}],"url":"/members/{id}/tokens","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"List a members app tokens","slug":"membersidtokens","type":"endpoint","title":"/members/{id}/tokens","__v":0,"updatedAt":"2019-06-10T14:28:52.649Z","swagger":{"path":"/members/{id}/tokens"}},{"_id":"59540d7fd361840035930a8a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T20:11:43.372Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59540d95b24177002bbe120b","ref":"","in":"query","required":false,"desc":"New name for the member. Cannot begin or end with a space.","default":"","type":"string","name":"fullName"},{"_id":"59540da874ea3e001518dad5","ref":"","in":"query","required":false,"desc":"New initials for the member. 1-4 characters long.","default":"","type":"string","name":"initials"},{"_id":"59540dc7439bc9001b4ad677","ref":"","in":"query","required":false,"desc":"New username for the member. At least 3 characters long, only lowercase letters, underscores, and numbers. Must be unique.","default":"","type":"string","name":"username"},{"_id":"59540e09070f4c001b255a6d","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"bio"},{"_id":"59540e09070f4c001b255a6c","ref":"","in":"query","required":false,"desc":"One of: `gravatar`, `none`, `upload`","default":"","type":"string","name":"avatarSource"},{"_id":"59540e136ed4d9001b3e7b14","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"prefs/colorBlind"},{"_id":"59540e26654fb9002b95bd07","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"prefs/locale"},{"_id":"59540f6174ea3e001518dad8","ref":"","in":"query","required":false,"desc":"`-1` for disabled, `1`, or `60`","default":"","type":"int","name":"prefs/minutesBetweenSummaries"}],"url":"/members/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"This route lets you update one or more properties of a member.\n\nAlternatively, you can update a specific property like:\n\n`PUT` `/1/members/{id}/{property}?value={new value}`\n\nSo to update a member's bio, you could also do:\n\n`PUT` `/1/members/{id}/bio?value=Hi%20There`","excerpt":"Update a member","slug":"membersid-1","type":"endpoint","title":"/members/{id}","__v":7,"updatedAt":"2019-06-10T14:28:52.650Z","swagger":{"path":"/members/{id}"}},{"_id":"595528c66ea25b003577ed71","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:20:22.296Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5954013eb330760037c4c71e","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595528c66ea25b003577ed72","ref":"","in":"path","required":false,"desc":"The ID of the board background to update","default":"","type":"string","name":"idBackground"},{"_id":"595528e2be8877001b6dd0be","ref":"","in":"query","required":false,"desc":"One of: `dark`, `light`, `unknown`","default":"","type":"string","name":"brightness"},{"_id":"595528d41eb56d0029fcdba5","ref":"","in":"query","required":false,"desc":"Whether the background should be tiled","default":"","type":"boolean","name":"tile"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"","excerpt":"Update a board background","slug":"membersidboardbackgroundsidbackground-1","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":3,"updatedAt":"2019-06-10T14:28:52.650Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59552936cf1c05001b2c102d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:22:14.332Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552936cf1c05001b2c102e","ref":"","in":"path","required":false,"desc":"The ID of the board star to update","default":"","type":"string","name":"idStar"},{"_id":"5955294a95aa76002de6cbea","ref":"","in":"query","required":false,"desc":"New position for the starred board. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/boardStars/{idStar}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Update the position of a starred board","slug":"membersidboardstarsidstar-1","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":1,"updatedAt":"2019-06-10T14:28:52.651Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"5955296f17710f0015656933","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:23:11.562Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595529bb3ebaea002bf77247","ref":"","in":"query","required":false,"desc":"One of: `dark`, `light`, `unknown`","default":"","type":"string","name":"brightness"},{"_id":"595529ae3e9508001b480927","ref":"","in":"query","required":false,"desc":"Whether to tile the background","default":"","type":"boolean","name":"tile"}],"url":"/members/{id}//customBoardBackgrounds/{idBackground}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"","slug":"put-membersidcustomboardbackgroundsidbackground","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":3,"updatedAt":"2019-06-10T14:28:52.651Z","swagger":{"path":"/members/{id}//customBoardBackgrounds/{idBackground}"}},{"_id":"595529d8be8877001b6dd0bf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:24:56.086Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"595529f2cb31f200158a2e00","ref":"","in":"query","required":false,"desc":"The new name for the saved search","default":"","type":"string","name":"name"},{"_id":"59552a01be8877001b6dd0c1","ref":"","in":"query","required":false,"desc":"The new search query","default":"","type":"string","name":"query"},{"_id":"59552a16be8877001b6dd0c2","ref":"","in":"query","required":false,"desc":"New position for saves search. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":29,"body":"","excerpt":"Update a saved search","slug":"membersidsavedsearchesidsearch-1","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":3,"updatedAt":"2019-06-10T14:28:52.652Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"59552b86cb31f200158a2e09","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:32:06.521Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552b86cb31f200158a2e0a","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/avatar","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":30,"body":"The `file` parameter is required to be passed in as [multipart/form-data](https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2) - it cannot be a URL.","excerpt":"Create a new avatar for a member","slug":"membersidavatar","type":"endpoint","title":"/members/{id}/avatar","__v":0,"updatedAt":"2019-06-10T14:28:52.652Z","swagger":{"path":"/members/{id}/avatar"}},{"_id":"59552ba3fddb250029241ad9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:32:35.517Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552ba3fddb250029241ada","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/boardBackgrounds","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":31,"body":"","excerpt":"Upload a new boardBackground","slug":"membersidboardbackgrounds-1","type":"endpoint","title":"/members/{id}/boardBackgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.655Z","swagger":{"path":"/members/{id}/boardBackgrounds"}},{"_id":"59552bcc17710f0015656937","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:33:16.768Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552bcc17710f0015656939","ref":"","in":"query","required":true,"desc":"The ID of the board to star","default":"","type":"string","name":"idBoard"},{"_id":"59552bcc17710f0015656938","ref":"","in":"query","required":true,"desc":"The position of the newly starred board. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/boardStars","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":32,"body":"","excerpt":"Star a new board","slug":"membersidboardstars-1","type":"endpoint","title":"/members/{id}/boardStars","__v":0,"updatedAt":"2019-06-10T14:28:52.655Z","swagger":{"path":"/members/{id}/boardStars"}},{"_id":"59552be9be8877001b6dd105","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:33:45.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552be9be8877001b6dd106","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/customBoardBackgrounds","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":33,"body":"","excerpt":"Upload a new custom board background","slug":"membersidcustomboardbackgrounds-1","type":"endpoint","title":"/members/{id}/customBoardBackgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customBoardBackgrounds"}},{"_id":"59552c18be8877001b6dd107","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:34:32.496Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552c18be8877001b6dd109","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"},{"_id":"59552c18be8877001b6dd108","ref":"","in":"query","required":true,"desc":"Name for the emoji. 2 - 64 characters","default":"","type":"string","name":"name"}],"url":"/members/{id}/customEmoji","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":34,"body":"","excerpt":"Upload a new custom emoji","slug":"membersidcustomemoji-1","type":"endpoint","title":"/members/{id}/customEmoji","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customEmoji"}},{"_id":"59552cdcee9aea00157d8bcd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:37:48.736Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552cdcee9aea00157d8bce","ref":"","in":"query","required":true,"desc":"","default":"","type":"file","name":"file"}],"url":"/members/{id}/customStickers","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":35,"body":"","excerpt":"Upload a new custom sticker","slug":"membersidcustomstickers-1","type":"endpoint","title":"/members/{id}/customStickers","__v":0,"updatedAt":"2019-06-10T14:28:52.656Z","swagger":{"path":"/members/{id}/customStickers"}},{"_id":"59552cf2d9f60e002dfc26c6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:38:10.890Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552cffd9f60e002dfc26c7","ref":"","in":"query","required":true,"desc":"The message to dismiss","default":"","type":"string","name":"value"}],"url":"/members/{id}/oneTimeMessagesDismissed","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":36,"body":"","excerpt":"Dismiss a message","slug":"membersidonetimemessagesdismissed","type":"endpoint","title":"/members/{id}/oneTimeMessagesDismissed","__v":1,"updatedAt":"2019-06-10T14:28:52.657Z","swagger":{"path":"/members/{id}/oneTimeMessagesDismissed"}},{"_id":"59552d2417710f001565693c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:39:00.586Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552d2417710f001565693e","ref":"","in":"query","required":true,"desc":"The name for the saved search","default":"","type":"string","name":"name"},{"_id":"59552d2417710f001565693d","ref":"","in":"query","required":true,"desc":"The search query","default":"","type":"string","name":"query"},{"_id":"59552d3bee9aea00157d8bcf","ref":"","in":"query","required":true,"desc":"The position of the saved search. `top`, `bottom`, or a positive float.","default":"","type":"string","name":"pos"}],"url":"/members/{id}/savedSearches","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":37,"body":"","excerpt":"Create a new saved search","slug":"membersidsavedsearches-1","type":"endpoint","title":"/members/{id}/savedSearches","__v":1,"updatedAt":"2019-06-10T14:28:52.657Z","swagger":{"path":"/members/{id}/savedSearches"}},{"_id":"59552e2cd9f60e002dfc26ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:43:24.599Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e3bee9aea00157d8bf5","ref":"","in":"path","required":false,"desc":"The ID of the board background to delete","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/boardBackgrounds/{idBackground}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":38,"body":"","excerpt":"Delete a board background","slug":"membersidboardbackgroundsidbackground-2","type":"endpoint","title":"/members/{id}/boardBackgrounds/{idBackground}","__v":1,"updatedAt":"2019-06-10T14:28:52.659Z","swagger":{"path":"/members/{id}/boardBackgrounds/{idBackground}"}},{"_id":"59552e5f95aa76002de6cc11","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:44:15.525Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e5f95aa76002de6cc12","ref":"","in":"path","required":false,"desc":"The ID of the board star to remove","default":"","type":"string","name":"idStar"}],"url":"/members/{id}/boardStars/{idStar}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":39,"body":"","excerpt":"Unstar a board","slug":"membersidboardstarsidstar-2","type":"endpoint","title":"/members/{id}/boardStars/{idStar}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/boardStars/{idStar}"}},{"_id":"59552e7a3ebaea002bf7726f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:44:42.961Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e7a3ebaea002bf77270","ref":"","in":"path","required":false,"desc":"The ID of the custom board background to delete","default":"","type":"string","name":"idBackground"}],"url":"/members/{id}/customBoardBackgrounds/{idBackground}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":40,"body":"","excerpt":"Delete a custom board background","slug":"membersidcustomboardbackgroundsidbackground-1","type":"endpoint","title":"/members/{id}/customBoardBackgrounds/{idBackground}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/customBoardBackgrounds/{idBackground}"}},{"_id":"59552e9f17710f0015656964","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:45:19.508Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552e9f17710f0015656965","ref":"","in":"path","required":false,"desc":"The ID of the custom sticker to delete","default":"","type":"string","name":"idSticker"}],"url":"/members/{id}/customStickers/{idSticker}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":41,"body":"","excerpt":"Delete a custom sticker","slug":"membersidcustomstickersidsticker-1","type":"endpoint","title":"/members/{id}/customStickers/{idSticker}","__v":0,"updatedAt":"2019-06-10T14:28:52.660Z","swagger":{"path":"/members/{id}/customStickers/{idSticker}"}},{"_id":"59552ebd3ebaea002bf77292","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11c65589520033080f38","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:45:49.480Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5955290ccb31f200158a2dff","ref":"","in":"path","required":false,"desc":"The ID or username of the member","default":"","type":"string","name":"id"},{"_id":"59552ebd3ebaea002bf77293","ref":"","in":"path","required":false,"desc":"The ID of the saved search to delete","default":"","type":"string","name":"idSearch"}],"url":"/members/{id}/savedSearches/{idSearch}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":42,"body":"","excerpt":"Delete a saved search","slug":"membersidsavedsearchesidsearch-2","type":"endpoint","title":"/members/{id}/savedSearches/{idSearch}","__v":0,"updatedAt":"2019-06-10T14:28:52.661Z","swagger":{"path":"/members/{id}/savedSearches/{idSearch}"}},{"_id":"594d11da69962b00152fe27b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:04:26.843Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"Notifications are displayed under the bell icon button, next to a member's avatar. When the bell is red, it means the member has unread notifications.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/e4c92ac-notifications.PNG\",\n        \"notifications.PNG\",\n        1129,\n        618,\n        \"#dbe3e8\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Listing Notifications\",\n  \"body\": \"The `/notifications` endpoint cannot be used to list notifications for a member. To do that, take a look at the `/members/{id}/notifications` endpoint.\"\n}\n[/block]","excerpt":"","slug":"notifications","type":"basic","title":"Notifications","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.661Z","children":[{"_id":"594d1a90596ccf00153357ad","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:36.934Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the notification\",\n    \"1-0\": \"**data**\\nobject\",\n    \"2-0\": \"**date**\\ndatetime\",\n    \"2-1\": \"The datetime the notification was triggered\",\n    \"3-0\": \"**idMemberCreator**\\nstring\",\n    \"3-1\": \"The ID of the member who triggered the notification\",\n    \"4-0\": \"**type**\\nstring\",\n    \"4-1\": \"The type of the notification\",\n    \"5-0\": \"**unread**\\nboolean\",\n    \"5-1\": \"Whether the notification hasn't been read yet\",\n    \"1-1\": \"Relevant data regarding the notification\"\n  },\n  \"cols\": 2,\n  \"rows\": 6\n}\n[/block]\n`GET` `/1/notifications/59531f8674fc80b0b372880e`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"59531f8674fc80b0b372880e\\\",\\n  \\\"unread\\\": true,\\n  \\\"type\\\": \\\"addedToBoard\\\",\\n  \\\"date\\\": \\\"2017-06-28T03:16:22.628Z\\\",\\n  \\\"data\\\": {\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"idMember\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n      \\\"name\\\": \\\"US National Parks\\\",\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n    }\\n  },\\n  \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n    \\\"fullName\\\": \\\"Matt Cowan\\\",\\n    \\\"initials\\\": \\\"MC\\\",\\n    \\\"username\\\": \\\"mattcowan\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"notification-object","type":"basic","title":"Notification Object","__v":0,"updatedAt":"2019-06-10T14:28:52.662Z"},{"_id":"595524871eb56d0029fcdb9d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:02:15.691Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"[block:api-header]\n{\n  \"title\": \"/object/{id}?notifications=all...\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**notifications**\",\n    \"0-1\": \"`all` or a comma-separated list of:\\n\\n- addAdminToBoard\\n- addAdminToOrganization\\n- addedAttachmentToCard\\n- addedMemberToCard\\n- addedToBoard\\n- addedToCard\\n- addedToOrganization\\n- cardDueSoon\\n- changeCard\\n- closeBoard\\n- commentCard\\n- createdCard\\n- declinedInvitationToBoard\\n- declinedInvitationToOrganization\\n- invitedToBoard\\n- invitedToOrganization\\n- makeAdminOfBoard\\n- makeAdminOfOrganization\\n- memberJoinedTrello\\n- mentionedOnCard\\n- removedFromBoard\\n- removedFromCard\\n- removedFromOrganization\\n- removedMemberFromCard\\n- unconfirmedInvitedToBoard\\n- unconfirmedInvitedToOrganization\\n- updateCheckItemStateOnCard\",\n    \"1-0\": \"**notifications_entities**\",\n    \"1-1\": \"Default: `false`\\n`true` or `false`\",\n    \"2-0\": \"**notifications_display**\",\n    \"2-1\": \"Default: `false`\\n`true` or `false`\",\n    \"3-0\": \"**notifications_limit**\",\n    \"3-1\": \"Default: 50\\nMax: 1000\",\n    \"4-0\": \"**notification_fields**\",\n    \"4-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- data\\n- date\\n- idMemberCreator\\n- type\\n- unread\",\n    \"5-0\": \"**notification_memberCreator**\",\n    \"5-1\": \"Default: `true`\\n`true` or `false`\",\n    \"6-0\": \"**notification_memberCreator_fields**\",\n    \"6-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of member [fields](ref:member-object)\",\n    \"7-0\": \"**notification_before**\",\n    \"7-1\": \"An id or `null`\",\n    \"8-0\": \"**notification_since**\",\n    \"8-1\": \"An id or `null`\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]","excerpt":"","slug":"notifications-nested-resource","type":"basic","title":"Notifications Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.662Z"},{"_id":"59531aab105a970015021bd4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:55:39.194Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59532973070f4c001b2554d0","ref":"","in":"query","required":false,"desc":"Whether to include the board object","default":"false","type":"boolean","name":"board"},{"_id":"5953298af135e5001be8e0ee","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"name","type":"string","name":"board_fields"},{"_id":"5953299a780fd4001b123112","ref":"","in":"query","required":false,"desc":"Whether to include the card object","default":"false","type":"boolean","name":"card"},{"_id":"595329ad94417f0015ec7ffa","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"name","type":"string","name":"card_fields"},{"_id":"5953293d0e1ad3001b641203","ref":"","in":"query","required":false,"desc":"Whether to include the display object with the results","default":"false","type":"boolean","name":"display"},{"_id":"5953294f6ed4d9001b3e74d2","ref":"","in":"query","required":false,"desc":"Whether to include the entities object with the results","default":"false","type":"boolean","name":"entities"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of notification [fields](ref:notification-object)","default":"all","type":"string","name":"fields"},{"_id":"595329c2439bc9001b4acf51","ref":"","in":"query","required":false,"desc":"Whether to include the list object","default":"false","type":"boolean","name":"list"},{"_id":"59532a77070f4c001b2554d1","ref":"","in":"query","required":false,"desc":"Whether to include the member object","default":"true","type":"boolean","name":"member"},{"_id":"59532a8df135e5001be8e0ef","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"member_fields"},{"_id":"59532aa70e1ad3001b641204","ref":"","in":"query","required":false,"desc":"Whether to include the member object of the creator","default":"true","type":"boolean","name":"memberCreator"},{"_id":"59532ac16ed4d9001b3e74d3","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"},{"_id":"59532ad58073c90015d53ebd","ref":"","in":"query","required":false,"desc":"Whether to include the organization object","default":"false","type":"boolean","name":"organization"},{"_id":"59532aee341432001554e500","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"displayName","type":"string","name":"organization_fields"}],"url":"/notifications/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"When asking for additional objects in the response such as `list=true`, you will only get that object back if it can be found in the `data` property of the notification. So for example, a notification about an attachment being added to a card will have a `card` and `board` property in the `data` property, but requesting `list=true` will not alter the response.","excerpt":"","slug":"notificationsid","type":"endpoint","title":"/notifications/{id}","__v":15,"updatedAt":"2019-06-10T14:28:52.663Z","swagger":{"path":"/notifications/{id}"}},{"_id":"59532721780fd4001b123111","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:48:49.820Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"5953273a6ed4d9001b3e74d0","ref":"","in":"path","required":false,"desc":"A notification [field](ref:notifcation-object)","default":"","type":"string","name":"field"}],"url":"/notifications/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a specific property of a notification","slug":"notificationsidfield","type":"endpoint","title":"/notifications/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.663Z","swagger":{"path":"/notifications/{id}/{field}"}},{"_id":"595327896ed4d9001b3e74d1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:50:33.046Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board[fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/board","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get the board a notification is associated with","slug":"notificationsidboard","type":"endpoint","title":"/notifications/{id}/board","__v":0,"updatedAt":"2019-06-10T14:28:52.664Z","swagger":{"path":"/notifications/{id}/board"}},{"_id":"595327af94417f0015ec7ff9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:51:11.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/card","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the card a notification is associated with","slug":"notificationsidcard","type":"endpoint","title":"/notifications/{id}/card","__v":0,"updatedAt":"2019-06-10T14:28:52.664Z","swagger":{"path":"/notifications/{id}/card"}},{"_id":"595327d174ea3e001518d418","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:51:45.084Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/list","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get the list a notification is associated with","slug":"notificationsidlist","type":"endpoint","title":"/notifications/{id}/list","__v":0,"updatedAt":"2019-06-10T14:28:52.665Z","swagger":{"path":"/notifications/{id}/list"}},{"_id":"595327f7f135e5001be8e0e5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:52:23.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/member","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get the member (not the creator) a notification is about","slug":"notificationsidmember","type":"endpoint","title":"/notifications/{id}/member","__v":0,"updatedAt":"2019-06-10T14:28:52.665Z","swagger":{"path":"/notifications/{id}/member"}},{"_id":"5953282973082700156d5f10","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:53:13.455Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/memberCreator","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get the member who created the notification","slug":"notificationsidmembercreator","type":"endpoint","title":"/notifications/{id}/memberCreator","__v":0,"updatedAt":"2019-06-10T14:28:52.666Z","swagger":{"path":"/notifications/{id}/memberCreator"}},{"_id":"5953284a070f4c001b2554cf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:53:46.356Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/organization","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Get the organization a notification is associated with","slug":"notificationsidorganization","type":"endpoint","title":"/notifications/{id}/organization","__v":0,"updatedAt":"2019-06-10T14:28:52.666Z","swagger":{"path":"/notifications/{id}/organization"}},{"_id":"59531bd88073c90015d53def","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:00:40.308Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531be5070f4c001b2554ac","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531bea070f4c001b2554ad","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"unread"}],"url":"/notifications/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Update the read status of a notification","slug":"notificationsid-1","type":"endpoint","title":"/notifications/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.667Z","swagger":{"path":"/notifications/{id}"}},{"_id":"59531bfe73082700156d5ee7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:01:18.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531be5070f4c001b2554ac","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531bea070f4c001b2554ad","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"value"}],"url":"/notifications/{id}/unread","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Update the read status of a notification","slug":"notificationsidunread","type":"endpoint","title":"/notifications/{id}/unread","__v":3,"updatedAt":"2019-06-10T14:28:52.667Z","swagger":{"path":"/notifications/{id}/unread"}},{"_id":"59531bb68073c90015d53dee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:00:06.862Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"/notifications/all/read","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Mark all notifications as read","slug":"notificationsallread","type":"endpoint","title":"/notifications/all/read","__v":0,"updatedAt":"2019-06-10T14:28:52.668Z","swagger":{"path":"/notifications/all/read"}}],"childrenPages":[{"_id":"594d1a90596ccf00153357ad","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:36.934Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the notification\",\n    \"1-0\": \"**data**\\nobject\",\n    \"2-0\": \"**date**\\ndatetime\",\n    \"2-1\": \"The datetime the notification was triggered\",\n    \"3-0\": \"**idMemberCreator**\\nstring\",\n    \"3-1\": \"The ID of the member who triggered the notification\",\n    \"4-0\": \"**type**\\nstring\",\n    \"4-1\": \"The type of the notification\",\n    \"5-0\": \"**unread**\\nboolean\",\n    \"5-1\": \"Whether the notification hasn't been read yet\",\n    \"1-1\": \"Relevant data regarding the notification\"\n  },\n  \"cols\": 2,\n  \"rows\": 6\n}\n[/block]\n`GET` `/1/notifications/59531f8674fc80b0b372880e`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"59531f8674fc80b0b372880e\\\",\\n  \\\"unread\\\": true,\\n  \\\"type\\\": \\\"addedToBoard\\\",\\n  \\\"date\\\": \\\"2017-06-28T03:16:22.628Z\\\",\\n  \\\"data\\\": {\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"idMember\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n      \\\"name\\\": \\\"US National Parks\\\",\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n    }\\n  },\\n  \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n    \\\"fullName\\\": \\\"Matt Cowan\\\",\\n    \\\"initials\\\": \\\"MC\\\",\\n    \\\"username\\\": \\\"mattcowan\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"notification-object","type":"basic","title":"Notification Object","__v":0,"updatedAt":"2019-06-10T14:28:52.662Z"},{"_id":"595524871eb56d0029fcdb9d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:02:15.691Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"[block:api-header]\n{\n  \"title\": \"/object/{id}?notifications=all...\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**notifications**\",\n    \"0-1\": \"`all` or a comma-separated list of:\\n\\n- addAdminToBoard\\n- addAdminToOrganization\\n- addedAttachmentToCard\\n- addedMemberToCard\\n- addedToBoard\\n- addedToCard\\n- addedToOrganization\\n- cardDueSoon\\n- changeCard\\n- closeBoard\\n- commentCard\\n- createdCard\\n- declinedInvitationToBoard\\n- declinedInvitationToOrganization\\n- invitedToBoard\\n- invitedToOrganization\\n- makeAdminOfBoard\\n- makeAdminOfOrganization\\n- memberJoinedTrello\\n- mentionedOnCard\\n- removedFromBoard\\n- removedFromCard\\n- removedFromOrganization\\n- removedMemberFromCard\\n- unconfirmedInvitedToBoard\\n- unconfirmedInvitedToOrganization\\n- updateCheckItemStateOnCard\",\n    \"1-0\": \"**notifications_entities**\",\n    \"1-1\": \"Default: `false`\\n`true` or `false`\",\n    \"2-0\": \"**notifications_display**\",\n    \"2-1\": \"Default: `false`\\n`true` or `false`\",\n    \"3-0\": \"**notifications_limit**\",\n    \"3-1\": \"Default: 50\\nMax: 1000\",\n    \"4-0\": \"**notification_fields**\",\n    \"4-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- data\\n- date\\n- idMemberCreator\\n- type\\n- unread\",\n    \"5-0\": \"**notification_memberCreator**\",\n    \"5-1\": \"Default: `true`\\n`true` or `false`\",\n    \"6-0\": \"**notification_memberCreator_fields**\",\n    \"6-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of member [fields](ref:member-object)\",\n    \"7-0\": \"**notification_before**\",\n    \"7-1\": \"An id or `null`\",\n    \"8-0\": \"**notification_since**\",\n    \"8-1\": \"An id or `null`\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]","excerpt":"","slug":"notifications-nested-resource","type":"basic","title":"Notifications Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.662Z"},{"_id":"59531aab105a970015021bd4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:55:39.194Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59532973070f4c001b2554d0","ref":"","in":"query","required":false,"desc":"Whether to include the board object","default":"false","type":"boolean","name":"board"},{"_id":"5953298af135e5001be8e0ee","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"name","type":"string","name":"board_fields"},{"_id":"5953299a780fd4001b123112","ref":"","in":"query","required":false,"desc":"Whether to include the card object","default":"false","type":"boolean","name":"card"},{"_id":"595329ad94417f0015ec7ffa","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"name","type":"string","name":"card_fields"},{"_id":"5953293d0e1ad3001b641203","ref":"","in":"query","required":false,"desc":"Whether to include the display object with the results","default":"false","type":"boolean","name":"display"},{"_id":"5953294f6ed4d9001b3e74d2","ref":"","in":"query","required":false,"desc":"Whether to include the entities object with the results","default":"false","type":"boolean","name":"entities"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of notification [fields](ref:notification-object)","default":"all","type":"string","name":"fields"},{"_id":"595329c2439bc9001b4acf51","ref":"","in":"query","required":false,"desc":"Whether to include the list object","default":"false","type":"boolean","name":"list"},{"_id":"59532a77070f4c001b2554d1","ref":"","in":"query","required":false,"desc":"Whether to include the member object","default":"true","type":"boolean","name":"member"},{"_id":"59532a8df135e5001be8e0ef","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"member_fields"},{"_id":"59532aa70e1ad3001b641204","ref":"","in":"query","required":false,"desc":"Whether to include the member object of the creator","default":"true","type":"boolean","name":"memberCreator"},{"_id":"59532ac16ed4d9001b3e74d3","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"},{"_id":"59532ad58073c90015d53ebd","ref":"","in":"query","required":false,"desc":"Whether to include the organization object","default":"false","type":"boolean","name":"organization"},{"_id":"59532aee341432001554e500","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"displayName","type":"string","name":"organization_fields"}],"url":"/notifications/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"When asking for additional objects in the response such as `list=true`, you will only get that object back if it can be found in the `data` property of the notification. So for example, a notification about an attachment being added to a card will have a `card` and `board` property in the `data` property, but requesting `list=true` will not alter the response.","excerpt":"","slug":"notificationsid","type":"endpoint","title":"/notifications/{id}","__v":15,"updatedAt":"2019-06-10T14:28:52.663Z","swagger":{"path":"/notifications/{id}"}},{"_id":"59532721780fd4001b123111","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:48:49.820Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"5953273a6ed4d9001b3e74d0","ref":"","in":"path","required":false,"desc":"A notification [field](ref:notifcation-object)","default":"","type":"string","name":"field"}],"url":"/notifications/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a specific property of a notification","slug":"notificationsidfield","type":"endpoint","title":"/notifications/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.663Z","swagger":{"path":"/notifications/{id}/{field}"}},{"_id":"595327896ed4d9001b3e74d1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:50:33.046Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board[fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/board","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get the board a notification is associated with","slug":"notificationsidboard","type":"endpoint","title":"/notifications/{id}/board","__v":0,"updatedAt":"2019-06-10T14:28:52.664Z","swagger":{"path":"/notifications/{id}/board"}},{"_id":"595327af94417f0015ec7ff9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:51:11.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/card","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the card a notification is associated with","slug":"notificationsidcard","type":"endpoint","title":"/notifications/{id}/card","__v":0,"updatedAt":"2019-06-10T14:28:52.664Z","swagger":{"path":"/notifications/{id}/card"}},{"_id":"595327d174ea3e001518d418","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:51:45.084Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/list","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get the list a notification is associated with","slug":"notificationsidlist","type":"endpoint","title":"/notifications/{id}/list","__v":0,"updatedAt":"2019-06-10T14:28:52.665Z","swagger":{"path":"/notifications/{id}/list"}},{"_id":"595327f7f135e5001be8e0e5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:52:23.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/member","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get the member (not the creator) a notification is about","slug":"notificationsidmember","type":"endpoint","title":"/notifications/{id}/member","__v":0,"updatedAt":"2019-06-10T14:28:52.665Z","swagger":{"path":"/notifications/{id}/member"}},{"_id":"5953282973082700156d5f10","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:53:13.455Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/memberCreator","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get the member who created the notification","slug":"notificationsidmembercreator","type":"endpoint","title":"/notifications/{id}/memberCreator","__v":0,"updatedAt":"2019-06-10T14:28:52.666Z","swagger":{"path":"/notifications/{id}/memberCreator"}},{"_id":"5953284a070f4c001b2554cf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:53:46.356Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/organization","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Get the organization a notification is associated with","slug":"notificationsidorganization","type":"endpoint","title":"/notifications/{id}/organization","__v":0,"updatedAt":"2019-06-10T14:28:52.666Z","swagger":{"path":"/notifications/{id}/organization"}},{"_id":"59531bd88073c90015d53def","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:00:40.308Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531be5070f4c001b2554ac","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531bea070f4c001b2554ad","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"unread"}],"url":"/notifications/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Update the read status of a notification","slug":"notificationsid-1","type":"endpoint","title":"/notifications/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.667Z","swagger":{"path":"/notifications/{id}"}},{"_id":"59531bfe73082700156d5ee7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:01:18.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531be5070f4c001b2554ac","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531bea070f4c001b2554ad","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"value"}],"url":"/notifications/{id}/unread","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Update the read status of a notification","slug":"notificationsidunread","type":"endpoint","title":"/notifications/{id}/unread","__v":3,"updatedAt":"2019-06-10T14:28:52.667Z","swagger":{"path":"/notifications/{id}/unread"}},{"_id":"59531bb68073c90015d53dee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:00:06.862Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"/notifications/all/read","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Mark all notifications as read","slug":"notificationsallread","type":"endpoint","title":"/notifications/all/read","__v":0,"updatedAt":"2019-06-10T14:28:52.668Z","swagger":{"path":"/notifications/all/read"}}]},{"_id":"594d1a90596ccf00153357ad","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:36.934Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the notification\",\n    \"1-0\": \"**data**\\nobject\",\n    \"2-0\": \"**date**\\ndatetime\",\n    \"2-1\": \"The datetime the notification was triggered\",\n    \"3-0\": \"**idMemberCreator**\\nstring\",\n    \"3-1\": \"The ID of the member who triggered the notification\",\n    \"4-0\": \"**type**\\nstring\",\n    \"4-1\": \"The type of the notification\",\n    \"5-0\": \"**unread**\\nboolean\",\n    \"5-1\": \"Whether the notification hasn't been read yet\",\n    \"1-1\": \"Relevant data regarding the notification\"\n  },\n  \"cols\": 2,\n  \"rows\": 6\n}\n[/block]\n`GET` `/1/notifications/59531f8674fc80b0b372880e`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"59531f8674fc80b0b372880e\\\",\\n  \\\"unread\\\": true,\\n  \\\"type\\\": \\\"addedToBoard\\\",\\n  \\\"date\\\": \\\"2017-06-28T03:16:22.628Z\\\",\\n  \\\"data\\\": {\\n    \\\"memberType\\\": \\\"normal\\\",\\n    \\\"idMember\\\": \\\"5813b41ecaaa91c7a5dae8fe\\\",\\n    \\\"board\\\": {\\n      \\\"shortLink\\\": \\\"tBmYPSYe\\\",\\n      \\\"name\\\": \\\"US National Parks\\\",\\n      \\\"id\\\": \\\"560bf4298b3dda300c18d09c\\\"\\n    }\\n  },\\n  \\\"idMemberCreator\\\": \\\"556c8537a1928ba745504dd8\\\",\\n  \\\"memberCreator\\\": {\\n    \\\"id\\\": \\\"556c8537a1928ba745504dd8\\\",\\n    \\\"avatarHash\\\": \\\"0b48c7057767cca8f339109b27a064d7\\\",\\n    \\\"fullName\\\": \\\"Matt Cowan\\\",\\n    \\\"initials\\\": \\\"MC\\\",\\n    \\\"username\\\": \\\"mattcowan\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"notification-object","type":"basic","title":"Notification Object","__v":0,"updatedAt":"2019-06-10T14:28:52.662Z"},{"_id":"595524871eb56d0029fcdb9d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T16:02:15.691Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"[block:api-header]\n{\n  \"title\": \"/object/{id}?notifications=all...\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**notifications**\",\n    \"0-1\": \"`all` or a comma-separated list of:\\n\\n- addAdminToBoard\\n- addAdminToOrganization\\n- addedAttachmentToCard\\n- addedMemberToCard\\n- addedToBoard\\n- addedToCard\\n- addedToOrganization\\n- cardDueSoon\\n- changeCard\\n- closeBoard\\n- commentCard\\n- createdCard\\n- declinedInvitationToBoard\\n- declinedInvitationToOrganization\\n- invitedToBoard\\n- invitedToOrganization\\n- makeAdminOfBoard\\n- makeAdminOfOrganization\\n- memberJoinedTrello\\n- mentionedOnCard\\n- removedFromBoard\\n- removedFromCard\\n- removedFromOrganization\\n- removedMemberFromCard\\n- unconfirmedInvitedToBoard\\n- unconfirmedInvitedToOrganization\\n- updateCheckItemStateOnCard\",\n    \"1-0\": \"**notifications_entities**\",\n    \"1-1\": \"Default: `false`\\n`true` or `false`\",\n    \"2-0\": \"**notifications_display**\",\n    \"2-1\": \"Default: `false`\\n`true` or `false`\",\n    \"3-0\": \"**notifications_limit**\",\n    \"3-1\": \"Default: 50\\nMax: 1000\",\n    \"4-0\": \"**notification_fields**\",\n    \"4-1\": \"Default: `all`\\n`all` or a comma-separated list of:\\n\\n- data\\n- date\\n- idMemberCreator\\n- type\\n- unread\",\n    \"5-0\": \"**notification_memberCreator**\",\n    \"5-1\": \"Default: `true`\\n`true` or `false`\",\n    \"6-0\": \"**notification_memberCreator_fields**\",\n    \"6-1\": \"Default: `avatarHash,fullName,initials,username`\\n`all` or a comma-separated list of member [fields](ref:member-object)\",\n    \"7-0\": \"**notification_before**\",\n    \"7-1\": \"An id or `null`\",\n    \"8-0\": \"**notification_since**\",\n    \"8-1\": \"An id or `null`\"\n  },\n  \"cols\": 2,\n  \"rows\": 9\n}\n[/block]","excerpt":"","slug":"notifications-nested-resource","type":"basic","title":"Notifications Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.662Z"},{"_id":"59531aab105a970015021bd4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:55:39.194Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59532973070f4c001b2554d0","ref":"","in":"query","required":false,"desc":"Whether to include the board object","default":"false","type":"boolean","name":"board"},{"_id":"5953298af135e5001be8e0ee","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"name","type":"string","name":"board_fields"},{"_id":"5953299a780fd4001b123112","ref":"","in":"query","required":false,"desc":"Whether to include the card object","default":"false","type":"boolean","name":"card"},{"_id":"595329ad94417f0015ec7ffa","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"name","type":"string","name":"card_fields"},{"_id":"5953293d0e1ad3001b641203","ref":"","in":"query","required":false,"desc":"Whether to include the display object with the results","default":"false","type":"boolean","name":"display"},{"_id":"5953294f6ed4d9001b3e74d2","ref":"","in":"query","required":false,"desc":"Whether to include the entities object with the results","default":"false","type":"boolean","name":"entities"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of notification [fields](ref:notification-object)","default":"all","type":"string","name":"fields"},{"_id":"595329c2439bc9001b4acf51","ref":"","in":"query","required":false,"desc":"Whether to include the list object","default":"false","type":"boolean","name":"list"},{"_id":"59532a77070f4c001b2554d1","ref":"","in":"query","required":false,"desc":"Whether to include the member object","default":"true","type":"boolean","name":"member"},{"_id":"59532a8df135e5001be8e0ef","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"member_fields"},{"_id":"59532aa70e1ad3001b641204","ref":"","in":"query","required":false,"desc":"Whether to include the member object of the creator","default":"true","type":"boolean","name":"memberCreator"},{"_id":"59532ac16ed4d9001b3e74d3","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"avatarHash,fullName,initials,username","type":"string","name":"memberCreator_fields"},{"_id":"59532ad58073c90015d53ebd","ref":"","in":"query","required":false,"desc":"Whether to include the organization object","default":"false","type":"boolean","name":"organization"},{"_id":"59532aee341432001554e500","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"displayName","type":"string","name":"organization_fields"}],"url":"/notifications/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"When asking for additional objects in the response such as `list=true`, you will only get that object back if it can be found in the `data` property of the notification. So for example, a notification about an attachment being added to a card will have a `card` and `board` property in the `data` property, but requesting `list=true` will not alter the response.","excerpt":"","slug":"notificationsid","type":"endpoint","title":"/notifications/{id}","__v":15,"updatedAt":"2019-06-10T14:28:52.663Z","swagger":{"path":"/notifications/{id}"}},{"_id":"59532721780fd4001b123111","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:48:49.820Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"5953273a6ed4d9001b3e74d0","ref":"","in":"path","required":false,"desc":"A notification [field](ref:notifcation-object)","default":"","type":"string","name":"field"}],"url":"/notifications/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Get a specific property of a notification","slug":"notificationsidfield","type":"endpoint","title":"/notifications/{id}/{field}","__v":2,"updatedAt":"2019-06-10T14:28:52.663Z","swagger":{"path":"/notifications/{id}/{field}"}},{"_id":"595327896ed4d9001b3e74d1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:50:33.046Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board[fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/board","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Get the board a notification is associated with","slug":"notificationsidboard","type":"endpoint","title":"/notifications/{id}/board","__v":0,"updatedAt":"2019-06-10T14:28:52.664Z","swagger":{"path":"/notifications/{id}/board"}},{"_id":"595327af94417f0015ec7ff9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:51:11.979Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of card [fields](ref:card-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/card","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Get the card a notification is associated with","slug":"notificationsidcard","type":"endpoint","title":"/notifications/{id}/card","__v":0,"updatedAt":"2019-06-10T14:28:52.664Z","swagger":{"path":"/notifications/{id}/card"}},{"_id":"595327d174ea3e001518d418","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:51:45.084Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of list [fields](ref:list-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/list","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Get the list a notification is associated with","slug":"notificationsidlist","type":"endpoint","title":"/notifications/{id}/list","__v":0,"updatedAt":"2019-06-10T14:28:52.665Z","swagger":{"path":"/notifications/{id}/list"}},{"_id":"595327f7f135e5001be8e0e5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:52:23.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/member","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Get the member (not the creator) a notification is about","slug":"notificationsidmember","type":"endpoint","title":"/notifications/{id}/member","__v":0,"updatedAt":"2019-06-10T14:28:52.665Z","swagger":{"path":"/notifications/{id}/member"}},{"_id":"5953282973082700156d5f10","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:53:13.455Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/memberCreator","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"Get the member who created the notification","slug":"notificationsidmembercreator","type":"endpoint","title":"/notifications/{id}/memberCreator","__v":0,"updatedAt":"2019-06-10T14:28:52.666Z","swagger":{"path":"/notifications/{id}/memberCreator"}},{"_id":"5953284a070f4c001b2554cf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:53:46.356Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531aab105a970015021bd5","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531b730e1ad3001b64118e","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of organization [fields](ref:organization-object)","default":"all","type":"string","name":"fields"}],"url":"/notifications/{id}/organization","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"Get the organization a notification is associated with","slug":"notificationsidorganization","type":"endpoint","title":"/notifications/{id}/organization","__v":0,"updatedAt":"2019-06-10T14:28:52.666Z","swagger":{"path":"/notifications/{id}/organization"}},{"_id":"59531bd88073c90015d53def","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:00:40.308Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531be5070f4c001b2554ac","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531bea070f4c001b2554ad","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"unread"}],"url":"/notifications/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"Update the read status of a notification","slug":"notificationsid-1","type":"endpoint","title":"/notifications/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.667Z","swagger":{"path":"/notifications/{id}"}},{"_id":"59531bfe73082700156d5ee7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11da69962b00152fe27b","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:01:18.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531be5070f4c001b2554ac","ref":"","in":"path","required":false,"desc":"The ID of the notification","default":"","type":"string","name":"id"},{"_id":"59531bea070f4c001b2554ad","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"value"}],"url":"/notifications/{id}/unread","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Update the read status of a notification","slug":"notificationsidunread","type":"endpoint","title":"/notifications/{id}/unread","__v":3,"updatedAt":"2019-06-10T14:28:52.667Z","swagger":{"path":"/notifications/{id}/unread"}},{"_id":"59531bb68073c90015d53dee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11da69962b00152fe27b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T03:00:06.862Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"/notifications/all/read","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"","excerpt":"Mark all notifications as read","slug":"notificationsallread","type":"endpoint","title":"/notifications/all/read","__v":0,"updatedAt":"2019-06-10T14:28:52.668Z","swagger":{"path":"/notifications/all/read"}},{"_id":"594d11ffae68a2001533f6f1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:05:03.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Organizations, or as they are referred to in Trello, \"Teams\", represent collections of members and boards.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/cf26ea7-organization.PNG\",\n        \"organization.PNG\",\n        1660,\n        907,\n        \"#2c70a8\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"More commonly referred to as \"teams\" in Trello","slug":"organizations","type":"basic","title":"Organizations","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.668Z","children":[{"_id":"594d1a9a612674001b2d2008","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:46.401Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the organization\",\n    \"1-0\": \"**billableMemberCount**\\ninteger\",\n    \"2-0\": \"**desc**\\nstring\",\n    \"2-1\": \"The description for the team\",\n    \"3-0\": \"**descData**\\nobject\",\n    \"4-0\": \"**displayName**\\nstring\",\n    \"5-0\": \"**idBoards**\\narray of strings\",\n    \"6-0\": \"**invitations**\",\n    \"7-0\": \"**invited**\",\n    \"8-0\": \"**logoHash**\\nstring\",\n    \"9-0\": \"**memberships**\\narray of objects\",\n    \"10-0\": \"**name**\\nstring\",\n    \"11-0\": \"**powerUps**\",\n    \"12-0\": \"**prefs**\\nobject\",\n    \"13-0\": \"**premiumFeatures**\",\n    \"14-0\": \"**products**\",\n    \"15-0\": \"**url**\\nstring\",\n    \"16-0\": \"**website**\\nstring\",\n    \"12-1\": \"The preferences (settings) for the team\",\n    \"15-1\": \"The URL to the team page on Trello\",\n    \"3-1\": \"If there are custom emoji in the `desc` this will contain information about them.\",\n    \"4-1\": \"The name for the team. For example: `Trello Inc`\",\n    \"10-1\": \"The programmatic name for the team. For example: `trelloinc`\",\n    \"5-1\": \"An array of board IDs that are in the team\"\n  },\n  \"cols\": 2,\n  \"rows\": 17\n}\n[/block]\n`GET` `/1/organizations/trelloinc?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\",\\n  \\\"name\\\": \\\"trelloinc\\\",\\n  \\\"displayName\\\": \\\"Trello Inc\\\",\\n  \\\"desc\\\": \\\"Trello.\\\",\\n  \\\"descData\\\": null,\\n  \\\"idBoards\\\": [\\n    \\\"4f7a0080554c5d054c598a9b\\\",\\n    \\\"4d5ea62fd76aa1136000000c\\\",\\n    \\\"4e9447b45504d8000025e533\\\",\\n    \\\"58c9bd28df3ad86346df87b5\\\",\\n    \\\"58d404bca430d63349042918\\\",\\n    \\\"58f5ddcdc85dc4460b3a5d32\\\",\\n    \\\"59355d99e863b0de27f1d3d8\\\",\\n    \\\"59398d2370f240bbb199399d\\\"\\n  ],\\n  \\\"idEnterprise\\\": null,\\n  \\\"invited\\\": false,\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"538627f73cbb44d1bfbb58f1\\\",\\n      \\\"idMember\\\": \\\"4d5eb12cd76aa113600000c9\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53b1a1f8a128e74250f8d0b9\\\",\\n      \\\"idMember\\\": \\\"4d68050a81bb57af1e006960\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53da3738d5e44eafceb802e1\\\",\\n      \\\"idMember\\\": \\\"4e6655412f872f6c9305b71d\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53da5e8572a469607aa8c7d8\\\",\\n      \\\"idMember\\\": \\\"4f820a995a03e8e82d134ac4\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"5951237e0f10c6eb9b2476ad\\\",\\n      \\\"idMember\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    }\\n  ],\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"orgInviteRestrict\\\": [\\n      \\n    ],\\n    \\\"externalMembersDisabled\\\": false,\\n    \\\"associatedDomain\\\": \\\"trello.com\\\",\\n    \\\"googleAppsVersion\\\": 2,\\n    \\\"boardVisibilityRestrict\\\": {\\n      \\\"private\\\": \\\"org\\\",\\n      \\\"org\\\": \\\"org\\\",\\n      \\\"public\\\": \\\"org\\\"\\n    }\\n  },\\n  \\\"powerUps\\\": [\\n    100\\n  ],\\n  \\\"products\\\": [\\n    100\\n  ],\\n  \\\"billableMemberCount\\\": null,\\n  \\\"activeBillableMemberCount\\\": null,\\n  \\\"url\\\": \\\"https://trello.com/trelloinc\\\",\\n  \\\"website\\\": null,\\n  \\\"logoHash\\\": \\\"da3ff465abd3a3e1b687c52ff803af74\\\",\\n  \\\"premiumFeatures\\\": [\\n    \\\"export\\\",\\n    \\\"observers\\\",\\n    \\\"removal\\\",\\n    \\\"activity\\\",\\n    \\\"deactivated\\\",\\n    \\\"googleApps\\\",\\n    \\\"superAdmins\\\",\\n    \\\"inviteOrg\\\",\\n    \\\"restrictVis\\\",\\n    \\\"disableExternalMembers\\\",\\n    \\\"goldMembers\\\",\\n    \\\"csvExport\\\",\\n    \\\"shortExportHistory\\\",\\n    \\\"tags\\\",\\n    \\\"plugins\\\",\\n    \\\"starCounts\\\",\\n    \\\"readSecrets\\\",\\n    \\\"enterpriseUI\\\"\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"organization-object","type":"basic","title":"Organization Object","__v":0,"updatedAt":"2019-06-10T14:28:52.669Z"},{"_id":"59531a6a74ea3e001518d3f6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:54:34.387Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"","excerpt":"","slug":"organizations-nested-resource","type":"basic","title":"Organizations Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.669Z"},{"_id":"5953092b94417f0015ec7f6b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:40:59.419Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"organizationsid","type":"endpoint","title":"/organizations/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}"}},{"_id":"5953094cc356e9001b124bc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:41:32.952Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5953094cc356e9001b124bc5","ref":"","in":"path","required":false,"desc":"An organization [field](ref:organization-object)","default":"","type":"string","name":"field"}],"url":"/organizations/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"organizationsidfield","type":"endpoint","title":"/organizations/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}/{field}"}},{"_id":"595309c615da33001b8a79c4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:43:34.133Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/actions","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/organizations/trelloinc/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5951237e0f10c6eb9b2476ae\\\",\\n    \\\"idMemberCreator\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n    \\\"data\\\": {\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToOrganization\\\",\\n    \\\"date\\\": \\\"2017-06-26T15:08:46.430Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"avatarHash\\\": \\\"4181f8efd49786279ed05097898bf9b2\\\",\\n      \\\"fullName\\\": \\\"Bobby Grace\\\",\\n      \\\"initials\\\": \\\"BG\\\",\\n      \\\"username\\\": \\\"bobbygrace1\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n      \\\"avatarHash\\\": \\\"37765f7ee1a21403113922fcca42171e\\\",\\n      \\\"fullName\\\": \\\"Jason Pantone\\\",\\n      \\\"initials\\\": \\\"JP\\\",\\n      \\\"username\\\": \\\"jasonpantone3\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"59512175d5ad428c1b48d5aa\\\",\\n    \\\"idMemberCreator\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n    \\\"data\\\": {\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"565d3f458abd18913c7f0421\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToOrganization\\\",\\n    \\\"date\\\": \\\"2017-06-26T15:00:05.968Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"565d3f458abd18913c7f0421\\\",\\n      \\\"avatarHash\\\": \\\"82cf37fa4d19849d21ecd88f21436057\\\",\\n      \\\"fullName\\\": \\\"GBottomley\\\",\\n      \\\"initials\\\": \\\"G\\\",\\n      \\\"username\\\": \\\"gbottomley\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n      \\\"avatarHash\\\": \\\"37765f7ee1a21403113922fcca42171e\\\",\\n      \\\"fullName\\\": \\\"Jason Pantone\\\",\\n      \\\"initials\\\": \\\"JP\\\",\\n      \\\"username\\\": \\\"jasonpantone3\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"58cc30d847816978892c5a7a\\\",\\n    \\\"idMemberCreator\\\": \\\"4f3936352cc228644700b1e0\\\",\\n    \\\"data\\\": {\\n      \\\"member\\\": {\\n        \\\"name\\\": \\\"Quentin Schroeder\\\",\\n        \\\"id\\\": \\\"4f3936352cc228644700b1e0\\\"\\n      },\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"unconfirmedOrganizationInvitation\\\",\\n    \\\"date\\\": \\\"2017-03-17T18:54:16.601Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4f3936352cc228644700b1e0\\\",\\n      \\\"avatarHash\\\": \\\"78a42ab5e7834dba3da3d5445465918d\\\",\\n      \\\"fullName\\\": \\\"Quentin Schroeder\\\",\\n      \\\"initials\\\": \\\"QS\\\",\\n      \\\"username\\\": \\\"quentin\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a team","slug":"organizationsidactions","type":"endpoint","title":"/organizations/{id}/actions","__v":0,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}/actions"}},{"_id":"595309d4341432001554e44e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:43:48.527Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530e90439bc9001b4ace77","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `open`, `closed`, `members`, `organization`, `public`","default":"all","type":"string","name":"filter"},{"_id":"59530eac105a970015021b70","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/organizations/{id}/boards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"## Filter Parameter Definitions\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Filter Value\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"`open`\",\n    \"1-0\": \"`closed`\",\n    \"2-0\": \"`members`\",\n    \"3-0\": \"`organization`\",\n    \"4-0\": \"`public`\",\n    \"5-0\": \"`starred`\",\n    \"0-1\": \"Returns all of the open boards in the organization.\",\n    \"1-1\": \"Returns all of the closed boards in the organization.\",\n    \"2-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Private\\\" and to which the current token's owner has access to.\",\n    \"5-1\": \"Returns all boards within an organization that have been starred by any user within the organization.\",\n    \"3-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Team Visible\\\"\",\n    \"4-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Public\\\"\"\n  },\n  \"cols\": 2,\n  \"rows\": 6\n}\n[/block]","excerpt":"List the boards in a team","slug":"organizationsidboards","type":"endpoint","title":"/organizations/{id}/boards","__v":5,"updatedAt":"2019-06-10T14:28:52.671Z","swagger":{"path":"/organizations/{id}/boards"}},{"_id":"59530a4aae575400159ce8a3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:45:46.616Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"This resource is a nested members resource. Nested members are documented at [Members Nested Resource](ref:members-nested-resource). The members returned by this resource will be within the context of the board whose ID is being used.","excerpt":"List the members in a team","slug":"organizationsidmembers","type":"endpoint","title":"/organizations/{id}/members","__v":3,"updatedAt":"2019-06-10T14:28:52.671Z","swagger":{"path":"/organizations/{id}/members"}},{"_id":"59530aca74ea3e001518d3ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:47:54.488Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530ae58073c90015d53d79","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/organizations/{id}/membersInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"List the members with pending invites to a team","slug":"organizationsidmembersinvited","type":"endpoint","title":"/organizations/{id}/membersInvited","__v":1,"updatedAt":"2019-06-10T14:28:52.672Z","swagger":{"path":"/organizations/{id}/membersInvited"}},{"_id":"59530ee40e1ad3001b64115e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:05:24.044Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530f3b070f4c001b255440","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `active`, `admin`, `deactivated`, `me`, `normal`","default":"all","type":"string","name":"filter"},{"_id":"59530f4a94417f0015ec7f90","ref":"","in":"query","required":false,"desc":"Whether to include the member objects with the memberships","default":"false","type":"boolean","name":"member"}],"url":"/organizations/{id}/memberships","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"List the memberships of a team","slug":"organizationsidmemberships","type":"endpoint","title":"/organizations/{id}/memberships","__v":2,"updatedAt":"2019-06-10T14:28:52.673Z","swagger":{"path":"/organizations/{id}/memberships"}},{"_id":"59530f060e1ad3001b64115f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:05:58.828Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530f060e1ad3001b641160","ref":"","in":"path","required":false,"desc":"The ID of the membership to load","default":"","type":"string","name":"idMembership"},{"_id":"59530f1c3c835f0015a20d98","ref":"","in":"query","required":false,"desc":"Whether to include the member object in the response","default":"false","type":"boolean","name":"member"}],"url":"/organizations/{id}/memberships/{idMembership}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"List the memberships of a team","slug":"organizationsidmembershipsidmembership","type":"endpoint","title":"/organizations/{id}/memberships/{idMembership}","__v":1,"updatedAt":"2019-06-10T14:28:52.673Z","swagger":{"path":"/organizations/{id}/memberships/{idMembership}"}},{"_id":"59530f6374ea3e001518d3ee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:07:31.566Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/pluginData","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Get organization scoped pluginData on this team","slug":"organizationsidplugindata","type":"endpoint","title":"/organizations/{id}/pluginData","__v":0,"updatedAt":"2019-06-10T14:28:52.674Z","swagger":{"path":"/organizations/{id}/pluginData"}},{"_id":"59530f7c6ed4d9001b3e7480","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:07:56.552Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/tags","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"List the organization's collections","slug":"organizationsidtags","type":"endpoint","title":"/organizations/{id}/tags","__v":0,"updatedAt":"2019-06-10T14:28:52.674Z","swagger":{"path":"/organizations/{id}/tags"}},{"_id":"5bd754ef7a022c0038d12d08","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-29T18:43:59.132Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5bd754ef7a022c0038d12d09","ref":"","in":"path","required":false,"desc":"The ID of the board to check for new billable guests.","default":"","type":"string","name":"idBoard"}],"url":"/organizations/{id}/newBillableGuests/{idBoard}","method":"get"},"isReference":true,"order":13,"body":"This route can be used before moving a board into a paid organization to see if the board contains members that aren't already paid for in the organization.","excerpt":"Used to check whether the given board has new billable guests on it.","slug":"organizationsidnewbillableguestsidboard","type":"endpoint","title":"/organizations/{id}/newBillableGuests/{idBoard}","__v":2,"updatedAt":"2019-06-10T14:28:52.675Z","swagger":{"path":"/organizations/{id}/newBillableGuests/{idBoard}"}},{"_id":"5c2e501be865fd01c3af9353","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-03T18:10:35.398Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"5c2e3d649647003dfb2e6128\",\n        \"status\": {\n            \"attempts\": 1,\n            \"finished\": true,\n            \"stage\": \"Export_completed\",\n            \"progress\": 0,\n            \"total\": 0\n        },\n        \"startedAt\": \"2019-01-03T16:50:44.000Z\",\n        \"size\": 883061,\n        \"exportUrl\": \"/1/organization/6b1e8d7b1af5866d5b7892b2/exports/49612470d63dfb205c2e3e68/download\"\n    },\n    {\n        \"id\": \"5c2e3d1c263b0249bd9c205e\",\n        \"status\": {\n            \"attempts\": 1,\n            \"finished\": true,\n            \"stage\": \"Export_completed\",\n            \"progress\": 0,\n            \"total\": 0\n        },\n        \"startedAt\": \"2019-01-03T16:49:32.000Z\",\n        \"size\": 886547,\n        \"exportUrl\": \"/1/organization/6b1e8d7b1af5866d5b7892b2/exports/b95c2e3d135ec2bd9c200246/download\"\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/exports","method":"get"},"isReference":true,"order":14,"body":"This route can be used by organizations that have the CSV export feature found at: https://trello.com/{organizationName}/export. This route is used to get information about exports that have been created for the given organization.\n\nTo begin the creation of an export, you will need to make a POST request to [1/organizations/{id}/exports](https://developers.trello.com/v1.0/reference#organizationsidexports).","excerpt":"Retrieve the exports that exist for the given organization","slug":"organizationsidexports-1","type":"endpoint","title":"/organizations/{id}/exports","__v":1,"updatedAt":"2019-06-10T14:28:52.675Z","swagger":{"path":"/organizations/{id}/exports"}},{"_id":"59530faff135e5001be8e076","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:08:47.391Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530fbf070f4c001b255441","ref":"","in":"path","required":false,"desc":"The id or name of the organization to update","default":"","type":"string","name":"id"},{"_id":"59530fefae575400159ce8c5","ref":"","in":"query","required":false,"desc":"A new name for the organization. At least 3 lowercase letters, underscores, and numbers. Must be unique","default":"","type":"string","name":"name"},{"_id":"59531009439bc9001b4ace7a","ref":"","in":"query","required":false,"desc":"A new displayName for the organization. Must be at least 1 character long and not begin or end with a space.","default":"","type":"string","name":"displayName"},{"_id":"5953101874ea3e001518d3ef","ref":"","in":"query","required":false,"desc":"A new description for the organization","default":"","type":"string","name":"desc"},{"_id":"5953103215da33001b8a7bf1","ref":"","in":"query","required":false,"desc":"A URL starting with `http://`, `https://`, or `null`","default":"","type":"string","name":"website"},{"_id":"595310546ed4d9001b3e7481","ref":"","in":"query","required":false,"desc":"The Google Apps domain to link this org to.","default":"","type":"string","name":"prefs/associatedDomain"},{"_id":"5953108af135e5001be8e078","ref":"","in":"query","required":false,"desc":"Whether non-team members can be added to boards inside the team","default":"","type":"boolean","name":"prefs/externalMembersDisabled"},{"_id":"595310666ed4d9001b3e7482","ref":"","in":"query","required":false,"desc":"`1` or `2`","default":"","type":"int","name":"prefs/googleAppsVersion"},{"_id":"5953109f6ed4d9001b3e7483","ref":"","in":"query","required":false,"desc":"Who on the team can make team visible boards. One of `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/org"},{"_id":"59531138ae575400159ce8ca","ref":"","in":"query","required":false,"desc":"Who can make private boards. One of: `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/private"},{"_id":"595310bd74ea3e001518d3f0","ref":"","in":"query","required":false,"desc":"Who on the team can make public boards. One of: `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/public"},{"_id":"5953108af135e5001be8e077","ref":"","in":"query","required":false,"desc":"An email address with optional wildcard characters. (E.g. `subdomain.*.trello.com`)","default":"","type":"string","name":"prefs/orgInviteRestrict"},{"_id":"59531167341432001554e473","ref":"","in":"query","required":false,"desc":"Whether the team page is publicly visible. One of: `private`, `public`","default":"","type":"string","name":"prefs/permissionLevel"}],"url":"/organizations/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"This method lets you update one or more properties of the organization in a single request.\n\nIt is also possible to update a single property:\n\n`PUT` `/1/organizations/{id}/{property}?value={new value}`\n\nSo for example, to update just the displayName for an org you could also do:\n\n`PUT` `/1/organizations/{id}/displayName?value=Awesome%20Team`","excerpt":"Update an organization","slug":"organizationsid-1","type":"endpoint","title":"/organizations/{id}","__v":13,"updatedAt":"2019-06-10T14:28:52.676Z","swagger":{"path":"/organizations/{id}"}},{"_id":"5953128b15da33001b8a7bf3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:20:59.540Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5953128b15da33001b8a7bf4","ref":"","in":"query","required":true,"desc":"An email address","default":"","type":"string","name":"email"},{"_id":"595312a6c356e9001b124bcb","ref":"","in":"query","required":true,"desc":"Name for the member, at least 1 character not beginning or ending with a space","default":"","type":"string","name":"fullName"},{"_id":"595312b7105a970015021b92","ref":"","in":"query","required":false,"desc":"One of: `admin`, `normal`","default":"normal","type":"string","name":"type"}],"url":"/organizations/{id}/members","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"","slug":"organizationsidmembers-1","type":"endpoint","title":"/organizations/{id}/members","__v":2,"updatedAt":"2019-06-10T14:28:52.676Z","swagger":{"path":"/organizations/{id}/members"}},{"_id":"595312e673082700156d5ebf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:22:30.718Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595312e673082700156d5ec0","ref":"","in":"path","required":false,"desc":"The ID or username of the member to update","default":"","type":"string","name":"idMember"},{"_id":"595312f674ea3e001518d3f3","ref":"","in":"query","required":true,"desc":"One of: `admin`, `normal`","default":"","type":"string","name":"type"}],"url":"/organizations/{id}/members/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"Add a member to a team or update their member type.","slug":"organizationsidmembersidmember","type":"endpoint","title":"/organizations/{id}/members/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.677Z","swagger":{"path":"/organizations/{id}/members/{idMember}"}},{"_id":"5953131e0e1ad3001b641161","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:23:26.075Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595312e673082700156d5ec0","ref":"","in":"path","required":false,"desc":"The ID or username of the member to update","default":"","type":"string","name":"idMember"},{"_id":"595312f674ea3e001518d3f3","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"value"}],"url":"/organizations/{id}/members/{idMember}/deactivated","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"","excerpt":"Deactivate or reactivate a member of a team","slug":"organizationsidmembersidmemberdeactivated","type":"endpoint","title":"/organizations/{id}/members/{idMember}/deactivated","__v":0,"updatedAt":"2019-06-10T14:28:52.677Z","swagger":{"path":"/organizations/{id}/members/{idMember}/deactivated"}},{"_id":"5953135815da33001b8a7bf5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:24:24.717Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595313ca439bc9001b4ace7d","ref":"","in":"query","required":true,"desc":"","default":"","type":"string","name":"displayName"},{"_id":"595313ca439bc9001b4ace7c","ref":"","in":"query","required":false,"desc":"The description for the team","default":"","type":"string","name":"desc"},{"_id":"595313aa15da33001b8a7bf6","ref":"","in":"query","required":false,"desc":"A string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed. Must be unique.","default":"","type":"string","name":"name"},{"_id":"595313da73082700156d5ec1","ref":"","in":"query","required":false,"desc":"A URL starting with `http://` or `https://`","default":"","type":"string","name":"website"}],"url":"/organizations","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Create a new team","slug":"organizations-1","type":"endpoint","title":"/organizations","__v":3,"updatedAt":"2019-06-10T14:28:52.678Z","swagger":{"path":"/organizations"}},{"_id":"595313f5f135e5001be8e07b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:27:01.481Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531408439bc9001b4ace7e","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953141b74ea3e001518d3f4","ref":"","in":"query","required":false,"desc":"Image file for the logo","default":"","type":"file","name":"file"}],"url":"/organizations/{id}/logo","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Set the logo image for a team","slug":"organizationsidlogo","type":"endpoint","title":"/organizations/{id}/logo","__v":2,"updatedAt":"2019-06-10T14:28:52.679Z","swagger":{"path":"/organizations/{id}/logo"}},{"_id":"5953144315da33001b8a7bf7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:28:19.087Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953144ef135e5001be8e07c","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953145b3c835f0015a20dbb","ref":"","in":"query","required":true,"desc":"The name for the new collection","default":"","type":"string","name":"name"}],"url":"/organizations/{id}/tags","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"Create a new collection in a team","slug":"organizationsidtags-1","type":"endpoint","title":"/organizations/{id}/tags","__v":2,"updatedAt":"2019-06-10T14:28:52.679Z","swagger":{"path":"/organizations/{id}/tags"}},{"_id":"5c2e3ec2b0c899011ad0db90","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-03T16:56:34.009Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"5c2e3d649647003dfb2e6128\",\n    \"status\": {\n        \"attempts\": 0,\n        \"finished\": false,\n        \"stage\": \"Export_queued\"\n    },\n    \"startedAt\": \"2019-01-03T16:50:44.000Z\",\n    \"size\": null,\n    \"exportUrl\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531408439bc9001b4ace7e","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953141b74ea3e001518d3f4","ref":"","in":"query","required":false,"desc":"Whether the CSV should include attachments or not.","default":"true","type":"boolean","name":"attachments"}],"url":"/organizations/{id}/exports","method":"post"},"isReference":true,"order":22,"body":"This route can be used by organizations that have the CSV export feature found at: https://trello.com/{organizationName}/export.\n\nTo begin an export, you must make a POST request to this route. The Trello export service will begin collecting the necessary data and building the CSV.\n\nYou can get updates on the status of the exports via the GET /exports/ route.","excerpt":"Kick off CSV export for an organization","slug":"organizationsidexports","type":"endpoint","title":"/organizations/{id}/exports","__v":2,"updatedAt":"2019-06-10T14:28:52.680Z","swagger":{"path":"/organizations/{id}/exports"}},{"_id":"5953188a070f4c001b255483","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:46:34.617Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"Deleting a team is permanent. There is no undo. Boards with this team won't be deleted. Your boards in this team will appear in your personal boards list.\"\n}\n[/block]","excerpt":"Delete a team","slug":"organizationsid-2","type":"endpoint","title":"/organizations/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.680Z","swagger":{"path":"/organizations/{id}"}},{"_id":"595318b915da33001b8a7bf9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:47:21.716Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/logo","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Delete a the logo from a team","slug":"organizationsidlogo-1","type":"endpoint","title":"/organizations/{id}/logo","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/logo"}},{"_id":"595318e5780fd4001b1230cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:48:05.497Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595318e5780fd4001b1230cd","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the team","default":"","type":"string","name":"idMember"}],"url":"/organizations/{id}/members/{idMember}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"This will remove a member from your organization. See [DELETE /organizations/{id}/members/{idMember}/all](ref:organizationsidmembersidmemberall) to also remove this member from your organization boards.\"\n}\n[/block]","excerpt":"Remove a member from a team","slug":"organizationsidmembersidmember-1","type":"endpoint","title":"/organizations/{id}/members/{idMember}","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/members/{idMember}"}},{"_id":"59531918f135e5001be8e09e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:48:56.145Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595318e5780fd4001b1230cd","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the team","default":"","type":"string","name":"idMember"}],"url":"/organizations/{id}/members/{idMember}/all","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"This will remove a member from your organization AND remove the member from all organization boards. The team must be upgraded to Business Class in order for this option to be enabled.","excerpt":"Remove a member from a team and from all team boards","slug":"organizationsidmembersidmemberall","type":"endpoint","title":"/organizations/{id}/members/{idMember}/all","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/members/{idMember}/all"}},{"_id":"5953199e070f4c001b255484","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:51:10.112Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/prefs/associatedDomain","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Remove the associated Google Apps domain from a team","slug":"organizationsidprefsassociateddomain","type":"endpoint","title":"/organizations/{id}/prefs/associatedDomain","__v":0,"updatedAt":"2019-06-10T14:28:52.682Z","swagger":{"path":"/organizations/{id}/prefs/associatedDomain"}},{"_id":"595319ee8073c90015d53dbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:52:30.037Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/prefs/orgInviteRestrict","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Remove the email domain restriction on who can be invited to the team","slug":"organizationsidprefsorginviterestrict","type":"endpoint","title":"/organizations/{id}/prefs/orgInviteRestrict","__v":0,"updatedAt":"2019-06-10T14:28:52.682Z","swagger":{"path":"/organizations/{id}/prefs/orgInviteRestrict"}},{"_id":"59f33d4272784a002462a1e6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-10-27T14:05:54.059Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59f33d4272784a002462a1e7","ref":"","in":"path","required":false,"desc":"The ID of the tag to delete","default":"","type":"string","name":"idTag"}],"url":"/organizations/{id}/tags/{idTag}","method":"delete"},"isReference":true,"order":29,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"Warning: This is an experimental resource and may change at any time without notice.\",\n  \"title\": \"Experimental Resource\"\n}\n[/block]","excerpt":"Delete an organization's tag","slug":"organizationsidtagsidtag","type":"endpoint","title":"/organizations/{id}/tags/{idTag}","__v":1,"updatedAt":"2019-06-10T14:28:52.683Z","swagger":{"path":"/organizations/{id}/tags/{idTag}"}}],"childrenPages":[{"_id":"594d1a9a612674001b2d2008","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:46.401Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the organization\",\n    \"1-0\": \"**billableMemberCount**\\ninteger\",\n    \"2-0\": \"**desc**\\nstring\",\n    \"2-1\": \"The description for the team\",\n    \"3-0\": \"**descData**\\nobject\",\n    \"4-0\": \"**displayName**\\nstring\",\n    \"5-0\": \"**idBoards**\\narray of strings\",\n    \"6-0\": \"**invitations**\",\n    \"7-0\": \"**invited**\",\n    \"8-0\": \"**logoHash**\\nstring\",\n    \"9-0\": \"**memberships**\\narray of objects\",\n    \"10-0\": \"**name**\\nstring\",\n    \"11-0\": \"**powerUps**\",\n    \"12-0\": \"**prefs**\\nobject\",\n    \"13-0\": \"**premiumFeatures**\",\n    \"14-0\": \"**products**\",\n    \"15-0\": \"**url**\\nstring\",\n    \"16-0\": \"**website**\\nstring\",\n    \"12-1\": \"The preferences (settings) for the team\",\n    \"15-1\": \"The URL to the team page on Trello\",\n    \"3-1\": \"If there are custom emoji in the `desc` this will contain information about them.\",\n    \"4-1\": \"The name for the team. For example: `Trello Inc`\",\n    \"10-1\": \"The programmatic name for the team. For example: `trelloinc`\",\n    \"5-1\": \"An array of board IDs that are in the team\"\n  },\n  \"cols\": 2,\n  \"rows\": 17\n}\n[/block]\n`GET` `/1/organizations/trelloinc?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\",\\n  \\\"name\\\": \\\"trelloinc\\\",\\n  \\\"displayName\\\": \\\"Trello Inc\\\",\\n  \\\"desc\\\": \\\"Trello.\\\",\\n  \\\"descData\\\": null,\\n  \\\"idBoards\\\": [\\n    \\\"4f7a0080554c5d054c598a9b\\\",\\n    \\\"4d5ea62fd76aa1136000000c\\\",\\n    \\\"4e9447b45504d8000025e533\\\",\\n    \\\"58c9bd28df3ad86346df87b5\\\",\\n    \\\"58d404bca430d63349042918\\\",\\n    \\\"58f5ddcdc85dc4460b3a5d32\\\",\\n    \\\"59355d99e863b0de27f1d3d8\\\",\\n    \\\"59398d2370f240bbb199399d\\\"\\n  ],\\n  \\\"idEnterprise\\\": null,\\n  \\\"invited\\\": false,\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"538627f73cbb44d1bfbb58f1\\\",\\n      \\\"idMember\\\": \\\"4d5eb12cd76aa113600000c9\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53b1a1f8a128e74250f8d0b9\\\",\\n      \\\"idMember\\\": \\\"4d68050a81bb57af1e006960\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53da3738d5e44eafceb802e1\\\",\\n      \\\"idMember\\\": \\\"4e6655412f872f6c9305b71d\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53da5e8572a469607aa8c7d8\\\",\\n      \\\"idMember\\\": \\\"4f820a995a03e8e82d134ac4\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"5951237e0f10c6eb9b2476ad\\\",\\n      \\\"idMember\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    }\\n  ],\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"orgInviteRestrict\\\": [\\n      \\n    ],\\n    \\\"externalMembersDisabled\\\": false,\\n    \\\"associatedDomain\\\": \\\"trello.com\\\",\\n    \\\"googleAppsVersion\\\": 2,\\n    \\\"boardVisibilityRestrict\\\": {\\n      \\\"private\\\": \\\"org\\\",\\n      \\\"org\\\": \\\"org\\\",\\n      \\\"public\\\": \\\"org\\\"\\n    }\\n  },\\n  \\\"powerUps\\\": [\\n    100\\n  ],\\n  \\\"products\\\": [\\n    100\\n  ],\\n  \\\"billableMemberCount\\\": null,\\n  \\\"activeBillableMemberCount\\\": null,\\n  \\\"url\\\": \\\"https://trello.com/trelloinc\\\",\\n  \\\"website\\\": null,\\n  \\\"logoHash\\\": \\\"da3ff465abd3a3e1b687c52ff803af74\\\",\\n  \\\"premiumFeatures\\\": [\\n    \\\"export\\\",\\n    \\\"observers\\\",\\n    \\\"removal\\\",\\n    \\\"activity\\\",\\n    \\\"deactivated\\\",\\n    \\\"googleApps\\\",\\n    \\\"superAdmins\\\",\\n    \\\"inviteOrg\\\",\\n    \\\"restrictVis\\\",\\n    \\\"disableExternalMembers\\\",\\n    \\\"goldMembers\\\",\\n    \\\"csvExport\\\",\\n    \\\"shortExportHistory\\\",\\n    \\\"tags\\\",\\n    \\\"plugins\\\",\\n    \\\"starCounts\\\",\\n    \\\"readSecrets\\\",\\n    \\\"enterpriseUI\\\"\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"organization-object","type":"basic","title":"Organization Object","__v":0,"updatedAt":"2019-06-10T14:28:52.669Z"},{"_id":"59531a6a74ea3e001518d3f6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:54:34.387Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"","excerpt":"","slug":"organizations-nested-resource","type":"basic","title":"Organizations Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.669Z"},{"_id":"5953092b94417f0015ec7f6b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:40:59.419Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"organizationsid","type":"endpoint","title":"/organizations/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}"}},{"_id":"5953094cc356e9001b124bc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:41:32.952Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5953094cc356e9001b124bc5","ref":"","in":"path","required":false,"desc":"An organization [field](ref:organization-object)","default":"","type":"string","name":"field"}],"url":"/organizations/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"organizationsidfield","type":"endpoint","title":"/organizations/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}/{field}"}},{"_id":"595309c615da33001b8a79c4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:43:34.133Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/actions","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/organizations/trelloinc/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5951237e0f10c6eb9b2476ae\\\",\\n    \\\"idMemberCreator\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n    \\\"data\\\": {\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToOrganization\\\",\\n    \\\"date\\\": \\\"2017-06-26T15:08:46.430Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"avatarHash\\\": \\\"4181f8efd49786279ed05097898bf9b2\\\",\\n      \\\"fullName\\\": \\\"Bobby Grace\\\",\\n      \\\"initials\\\": \\\"BG\\\",\\n      \\\"username\\\": \\\"bobbygrace1\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n      \\\"avatarHash\\\": \\\"37765f7ee1a21403113922fcca42171e\\\",\\n      \\\"fullName\\\": \\\"Jason Pantone\\\",\\n      \\\"initials\\\": \\\"JP\\\",\\n      \\\"username\\\": \\\"jasonpantone3\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"59512175d5ad428c1b48d5aa\\\",\\n    \\\"idMemberCreator\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n    \\\"data\\\": {\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"565d3f458abd18913c7f0421\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToOrganization\\\",\\n    \\\"date\\\": \\\"2017-06-26T15:00:05.968Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"565d3f458abd18913c7f0421\\\",\\n      \\\"avatarHash\\\": \\\"82cf37fa4d19849d21ecd88f21436057\\\",\\n      \\\"fullName\\\": \\\"GBottomley\\\",\\n      \\\"initials\\\": \\\"G\\\",\\n      \\\"username\\\": \\\"gbottomley\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n      \\\"avatarHash\\\": \\\"37765f7ee1a21403113922fcca42171e\\\",\\n      \\\"fullName\\\": \\\"Jason Pantone\\\",\\n      \\\"initials\\\": \\\"JP\\\",\\n      \\\"username\\\": \\\"jasonpantone3\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"58cc30d847816978892c5a7a\\\",\\n    \\\"idMemberCreator\\\": \\\"4f3936352cc228644700b1e0\\\",\\n    \\\"data\\\": {\\n      \\\"member\\\": {\\n        \\\"name\\\": \\\"Quentin Schroeder\\\",\\n        \\\"id\\\": \\\"4f3936352cc228644700b1e0\\\"\\n      },\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"unconfirmedOrganizationInvitation\\\",\\n    \\\"date\\\": \\\"2017-03-17T18:54:16.601Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4f3936352cc228644700b1e0\\\",\\n      \\\"avatarHash\\\": \\\"78a42ab5e7834dba3da3d5445465918d\\\",\\n      \\\"fullName\\\": \\\"Quentin Schroeder\\\",\\n      \\\"initials\\\": \\\"QS\\\",\\n      \\\"username\\\": \\\"quentin\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a team","slug":"organizationsidactions","type":"endpoint","title":"/organizations/{id}/actions","__v":0,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}/actions"}},{"_id":"595309d4341432001554e44e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:43:48.527Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530e90439bc9001b4ace77","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `open`, `closed`, `members`, `organization`, `public`","default":"all","type":"string","name":"filter"},{"_id":"59530eac105a970015021b70","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/organizations/{id}/boards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"## Filter Parameter Definitions\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Filter Value\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"`open`\",\n    \"1-0\": \"`closed`\",\n    \"2-0\": \"`members`\",\n    \"3-0\": \"`organization`\",\n    \"4-0\": \"`public`\",\n    \"5-0\": \"`starred`\",\n    \"0-1\": \"Returns all of the open boards in the organization.\",\n    \"1-1\": \"Returns all of the closed boards in the organization.\",\n    \"2-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Private\\\" and to which the current token's owner has access to.\",\n    \"5-1\": \"Returns all boards within an organization that have been starred by any user within the organization.\",\n    \"3-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Team Visible\\\"\",\n    \"4-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Public\\\"\"\n  },\n  \"cols\": 2,\n  \"rows\": 6\n}\n[/block]","excerpt":"List the boards in a team","slug":"organizationsidboards","type":"endpoint","title":"/organizations/{id}/boards","__v":5,"updatedAt":"2019-06-10T14:28:52.671Z","swagger":{"path":"/organizations/{id}/boards"}},{"_id":"59530a4aae575400159ce8a3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:45:46.616Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"This resource is a nested members resource. Nested members are documented at [Members Nested Resource](ref:members-nested-resource). The members returned by this resource will be within the context of the board whose ID is being used.","excerpt":"List the members in a team","slug":"organizationsidmembers","type":"endpoint","title":"/organizations/{id}/members","__v":3,"updatedAt":"2019-06-10T14:28:52.671Z","swagger":{"path":"/organizations/{id}/members"}},{"_id":"59530aca74ea3e001518d3ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:47:54.488Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530ae58073c90015d53d79","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/organizations/{id}/membersInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"List the members with pending invites to a team","slug":"organizationsidmembersinvited","type":"endpoint","title":"/organizations/{id}/membersInvited","__v":1,"updatedAt":"2019-06-10T14:28:52.672Z","swagger":{"path":"/organizations/{id}/membersInvited"}},{"_id":"59530ee40e1ad3001b64115e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:05:24.044Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530f3b070f4c001b255440","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `active`, `admin`, `deactivated`, `me`, `normal`","default":"all","type":"string","name":"filter"},{"_id":"59530f4a94417f0015ec7f90","ref":"","in":"query","required":false,"desc":"Whether to include the member objects with the memberships","default":"false","type":"boolean","name":"member"}],"url":"/organizations/{id}/memberships","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"List the memberships of a team","slug":"organizationsidmemberships","type":"endpoint","title":"/organizations/{id}/memberships","__v":2,"updatedAt":"2019-06-10T14:28:52.673Z","swagger":{"path":"/organizations/{id}/memberships"}},{"_id":"59530f060e1ad3001b64115f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:05:58.828Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530f060e1ad3001b641160","ref":"","in":"path","required":false,"desc":"The ID of the membership to load","default":"","type":"string","name":"idMembership"},{"_id":"59530f1c3c835f0015a20d98","ref":"","in":"query","required":false,"desc":"Whether to include the member object in the response","default":"false","type":"boolean","name":"member"}],"url":"/organizations/{id}/memberships/{idMembership}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"List the memberships of a team","slug":"organizationsidmembershipsidmembership","type":"endpoint","title":"/organizations/{id}/memberships/{idMembership}","__v":1,"updatedAt":"2019-06-10T14:28:52.673Z","swagger":{"path":"/organizations/{id}/memberships/{idMembership}"}},{"_id":"59530f6374ea3e001518d3ee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:07:31.566Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/pluginData","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Get organization scoped pluginData on this team","slug":"organizationsidplugindata","type":"endpoint","title":"/organizations/{id}/pluginData","__v":0,"updatedAt":"2019-06-10T14:28:52.674Z","swagger":{"path":"/organizations/{id}/pluginData"}},{"_id":"59530f7c6ed4d9001b3e7480","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:07:56.552Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/tags","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"List the organization's collections","slug":"organizationsidtags","type":"endpoint","title":"/organizations/{id}/tags","__v":0,"updatedAt":"2019-06-10T14:28:52.674Z","swagger":{"path":"/organizations/{id}/tags"}},{"_id":"5bd754ef7a022c0038d12d08","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-29T18:43:59.132Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5bd754ef7a022c0038d12d09","ref":"","in":"path","required":false,"desc":"The ID of the board to check for new billable guests.","default":"","type":"string","name":"idBoard"}],"url":"/organizations/{id}/newBillableGuests/{idBoard}","method":"get"},"isReference":true,"order":13,"body":"This route can be used before moving a board into a paid organization to see if the board contains members that aren't already paid for in the organization.","excerpt":"Used to check whether the given board has new billable guests on it.","slug":"organizationsidnewbillableguestsidboard","type":"endpoint","title":"/organizations/{id}/newBillableGuests/{idBoard}","__v":2,"updatedAt":"2019-06-10T14:28:52.675Z","swagger":{"path":"/organizations/{id}/newBillableGuests/{idBoard}"}},{"_id":"5c2e501be865fd01c3af9353","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-03T18:10:35.398Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"5c2e3d649647003dfb2e6128\",\n        \"status\": {\n            \"attempts\": 1,\n            \"finished\": true,\n            \"stage\": \"Export_completed\",\n            \"progress\": 0,\n            \"total\": 0\n        },\n        \"startedAt\": \"2019-01-03T16:50:44.000Z\",\n        \"size\": 883061,\n        \"exportUrl\": \"/1/organization/6b1e8d7b1af5866d5b7892b2/exports/49612470d63dfb205c2e3e68/download\"\n    },\n    {\n        \"id\": \"5c2e3d1c263b0249bd9c205e\",\n        \"status\": {\n            \"attempts\": 1,\n            \"finished\": true,\n            \"stage\": \"Export_completed\",\n            \"progress\": 0,\n            \"total\": 0\n        },\n        \"startedAt\": \"2019-01-03T16:49:32.000Z\",\n        \"size\": 886547,\n        \"exportUrl\": \"/1/organization/6b1e8d7b1af5866d5b7892b2/exports/b95c2e3d135ec2bd9c200246/download\"\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/exports","method":"get"},"isReference":true,"order":14,"body":"This route can be used by organizations that have the CSV export feature found at: https://trello.com/{organizationName}/export. This route is used to get information about exports that have been created for the given organization.\n\nTo begin the creation of an export, you will need to make a POST request to [1/organizations/{id}/exports](https://developers.trello.com/v1.0/reference#organizationsidexports).","excerpt":"Retrieve the exports that exist for the given organization","slug":"organizationsidexports-1","type":"endpoint","title":"/organizations/{id}/exports","__v":1,"updatedAt":"2019-06-10T14:28:52.675Z","swagger":{"path":"/organizations/{id}/exports"}},{"_id":"59530faff135e5001be8e076","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:08:47.391Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530fbf070f4c001b255441","ref":"","in":"path","required":false,"desc":"The id or name of the organization to update","default":"","type":"string","name":"id"},{"_id":"59530fefae575400159ce8c5","ref":"","in":"query","required":false,"desc":"A new name for the organization. At least 3 lowercase letters, underscores, and numbers. Must be unique","default":"","type":"string","name":"name"},{"_id":"59531009439bc9001b4ace7a","ref":"","in":"query","required":false,"desc":"A new displayName for the organization. Must be at least 1 character long and not begin or end with a space.","default":"","type":"string","name":"displayName"},{"_id":"5953101874ea3e001518d3ef","ref":"","in":"query","required":false,"desc":"A new description for the organization","default":"","type":"string","name":"desc"},{"_id":"5953103215da33001b8a7bf1","ref":"","in":"query","required":false,"desc":"A URL starting with `http://`, `https://`, or `null`","default":"","type":"string","name":"website"},{"_id":"595310546ed4d9001b3e7481","ref":"","in":"query","required":false,"desc":"The Google Apps domain to link this org to.","default":"","type":"string","name":"prefs/associatedDomain"},{"_id":"5953108af135e5001be8e078","ref":"","in":"query","required":false,"desc":"Whether non-team members can be added to boards inside the team","default":"","type":"boolean","name":"prefs/externalMembersDisabled"},{"_id":"595310666ed4d9001b3e7482","ref":"","in":"query","required":false,"desc":"`1` or `2`","default":"","type":"int","name":"prefs/googleAppsVersion"},{"_id":"5953109f6ed4d9001b3e7483","ref":"","in":"query","required":false,"desc":"Who on the team can make team visible boards. One of `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/org"},{"_id":"59531138ae575400159ce8ca","ref":"","in":"query","required":false,"desc":"Who can make private boards. One of: `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/private"},{"_id":"595310bd74ea3e001518d3f0","ref":"","in":"query","required":false,"desc":"Who on the team can make public boards. One of: `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/public"},{"_id":"5953108af135e5001be8e077","ref":"","in":"query","required":false,"desc":"An email address with optional wildcard characters. (E.g. `subdomain.*.trello.com`)","default":"","type":"string","name":"prefs/orgInviteRestrict"},{"_id":"59531167341432001554e473","ref":"","in":"query","required":false,"desc":"Whether the team page is publicly visible. One of: `private`, `public`","default":"","type":"string","name":"prefs/permissionLevel"}],"url":"/organizations/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"This method lets you update one or more properties of the organization in a single request.\n\nIt is also possible to update a single property:\n\n`PUT` `/1/organizations/{id}/{property}?value={new value}`\n\nSo for example, to update just the displayName for an org you could also do:\n\n`PUT` `/1/organizations/{id}/displayName?value=Awesome%20Team`","excerpt":"Update an organization","slug":"organizationsid-1","type":"endpoint","title":"/organizations/{id}","__v":13,"updatedAt":"2019-06-10T14:28:52.676Z","swagger":{"path":"/organizations/{id}"}},{"_id":"5953128b15da33001b8a7bf3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:20:59.540Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5953128b15da33001b8a7bf4","ref":"","in":"query","required":true,"desc":"An email address","default":"","type":"string","name":"email"},{"_id":"595312a6c356e9001b124bcb","ref":"","in":"query","required":true,"desc":"Name for the member, at least 1 character not beginning or ending with a space","default":"","type":"string","name":"fullName"},{"_id":"595312b7105a970015021b92","ref":"","in":"query","required":false,"desc":"One of: `admin`, `normal`","default":"normal","type":"string","name":"type"}],"url":"/organizations/{id}/members","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"","slug":"organizationsidmembers-1","type":"endpoint","title":"/organizations/{id}/members","__v":2,"updatedAt":"2019-06-10T14:28:52.676Z","swagger":{"path":"/organizations/{id}/members"}},{"_id":"595312e673082700156d5ebf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:22:30.718Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595312e673082700156d5ec0","ref":"","in":"path","required":false,"desc":"The ID or username of the member to update","default":"","type":"string","name":"idMember"},{"_id":"595312f674ea3e001518d3f3","ref":"","in":"query","required":true,"desc":"One of: `admin`, `normal`","default":"","type":"string","name":"type"}],"url":"/organizations/{id}/members/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"Add a member to a team or update their member type.","slug":"organizationsidmembersidmember","type":"endpoint","title":"/organizations/{id}/members/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.677Z","swagger":{"path":"/organizations/{id}/members/{idMember}"}},{"_id":"5953131e0e1ad3001b641161","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:23:26.075Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595312e673082700156d5ec0","ref":"","in":"path","required":false,"desc":"The ID or username of the member to update","default":"","type":"string","name":"idMember"},{"_id":"595312f674ea3e001518d3f3","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"value"}],"url":"/organizations/{id}/members/{idMember}/deactivated","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"","excerpt":"Deactivate or reactivate a member of a team","slug":"organizationsidmembersidmemberdeactivated","type":"endpoint","title":"/organizations/{id}/members/{idMember}/deactivated","__v":0,"updatedAt":"2019-06-10T14:28:52.677Z","swagger":{"path":"/organizations/{id}/members/{idMember}/deactivated"}},{"_id":"5953135815da33001b8a7bf5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:24:24.717Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595313ca439bc9001b4ace7d","ref":"","in":"query","required":true,"desc":"","default":"","type":"string","name":"displayName"},{"_id":"595313ca439bc9001b4ace7c","ref":"","in":"query","required":false,"desc":"The description for the team","default":"","type":"string","name":"desc"},{"_id":"595313aa15da33001b8a7bf6","ref":"","in":"query","required":false,"desc":"A string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed. Must be unique.","default":"","type":"string","name":"name"},{"_id":"595313da73082700156d5ec1","ref":"","in":"query","required":false,"desc":"A URL starting with `http://` or `https://`","default":"","type":"string","name":"website"}],"url":"/organizations","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Create a new team","slug":"organizations-1","type":"endpoint","title":"/organizations","__v":3,"updatedAt":"2019-06-10T14:28:52.678Z","swagger":{"path":"/organizations"}},{"_id":"595313f5f135e5001be8e07b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:27:01.481Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531408439bc9001b4ace7e","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953141b74ea3e001518d3f4","ref":"","in":"query","required":false,"desc":"Image file for the logo","default":"","type":"file","name":"file"}],"url":"/organizations/{id}/logo","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Set the logo image for a team","slug":"organizationsidlogo","type":"endpoint","title":"/organizations/{id}/logo","__v":2,"updatedAt":"2019-06-10T14:28:52.679Z","swagger":{"path":"/organizations/{id}/logo"}},{"_id":"5953144315da33001b8a7bf7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:28:19.087Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953144ef135e5001be8e07c","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953145b3c835f0015a20dbb","ref":"","in":"query","required":true,"desc":"The name for the new collection","default":"","type":"string","name":"name"}],"url":"/organizations/{id}/tags","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"Create a new collection in a team","slug":"organizationsidtags-1","type":"endpoint","title":"/organizations/{id}/tags","__v":2,"updatedAt":"2019-06-10T14:28:52.679Z","swagger":{"path":"/organizations/{id}/tags"}},{"_id":"5c2e3ec2b0c899011ad0db90","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-03T16:56:34.009Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"5c2e3d649647003dfb2e6128\",\n    \"status\": {\n        \"attempts\": 0,\n        \"finished\": false,\n        \"stage\": \"Export_queued\"\n    },\n    \"startedAt\": \"2019-01-03T16:50:44.000Z\",\n    \"size\": null,\n    \"exportUrl\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531408439bc9001b4ace7e","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953141b74ea3e001518d3f4","ref":"","in":"query","required":false,"desc":"Whether the CSV should include attachments or not.","default":"true","type":"boolean","name":"attachments"}],"url":"/organizations/{id}/exports","method":"post"},"isReference":true,"order":22,"body":"This route can be used by organizations that have the CSV export feature found at: https://trello.com/{organizationName}/export.\n\nTo begin an export, you must make a POST request to this route. The Trello export service will begin collecting the necessary data and building the CSV.\n\nYou can get updates on the status of the exports via the GET /exports/ route.","excerpt":"Kick off CSV export for an organization","slug":"organizationsidexports","type":"endpoint","title":"/organizations/{id}/exports","__v":2,"updatedAt":"2019-06-10T14:28:52.680Z","swagger":{"path":"/organizations/{id}/exports"}},{"_id":"5953188a070f4c001b255483","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:46:34.617Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"Deleting a team is permanent. There is no undo. Boards with this team won't be deleted. Your boards in this team will appear in your personal boards list.\"\n}\n[/block]","excerpt":"Delete a team","slug":"organizationsid-2","type":"endpoint","title":"/organizations/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.680Z","swagger":{"path":"/organizations/{id}"}},{"_id":"595318b915da33001b8a7bf9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:47:21.716Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/logo","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Delete a the logo from a team","slug":"organizationsidlogo-1","type":"endpoint","title":"/organizations/{id}/logo","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/logo"}},{"_id":"595318e5780fd4001b1230cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:48:05.497Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595318e5780fd4001b1230cd","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the team","default":"","type":"string","name":"idMember"}],"url":"/organizations/{id}/members/{idMember}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"This will remove a member from your organization. See [DELETE /organizations/{id}/members/{idMember}/all](ref:organizationsidmembersidmemberall) to also remove this member from your organization boards.\"\n}\n[/block]","excerpt":"Remove a member from a team","slug":"organizationsidmembersidmember-1","type":"endpoint","title":"/organizations/{id}/members/{idMember}","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/members/{idMember}"}},{"_id":"59531918f135e5001be8e09e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:48:56.145Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595318e5780fd4001b1230cd","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the team","default":"","type":"string","name":"idMember"}],"url":"/organizations/{id}/members/{idMember}/all","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"This will remove a member from your organization AND remove the member from all organization boards. The team must be upgraded to Business Class in order for this option to be enabled.","excerpt":"Remove a member from a team and from all team boards","slug":"organizationsidmembersidmemberall","type":"endpoint","title":"/organizations/{id}/members/{idMember}/all","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/members/{idMember}/all"}},{"_id":"5953199e070f4c001b255484","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:51:10.112Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/prefs/associatedDomain","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Remove the associated Google Apps domain from a team","slug":"organizationsidprefsassociateddomain","type":"endpoint","title":"/organizations/{id}/prefs/associatedDomain","__v":0,"updatedAt":"2019-06-10T14:28:52.682Z","swagger":{"path":"/organizations/{id}/prefs/associatedDomain"}},{"_id":"595319ee8073c90015d53dbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:52:30.037Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/prefs/orgInviteRestrict","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Remove the email domain restriction on who can be invited to the team","slug":"organizationsidprefsorginviterestrict","type":"endpoint","title":"/organizations/{id}/prefs/orgInviteRestrict","__v":0,"updatedAt":"2019-06-10T14:28:52.682Z","swagger":{"path":"/organizations/{id}/prefs/orgInviteRestrict"}},{"_id":"59f33d4272784a002462a1e6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-10-27T14:05:54.059Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59f33d4272784a002462a1e7","ref":"","in":"path","required":false,"desc":"The ID of the tag to delete","default":"","type":"string","name":"idTag"}],"url":"/organizations/{id}/tags/{idTag}","method":"delete"},"isReference":true,"order":29,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"Warning: This is an experimental resource and may change at any time without notice.\",\n  \"title\": \"Experimental Resource\"\n}\n[/block]","excerpt":"Delete an organization's tag","slug":"organizationsidtagsidtag","type":"endpoint","title":"/organizations/{id}/tags/{idTag}","__v":1,"updatedAt":"2019-06-10T14:28:52.683Z","swagger":{"path":"/organizations/{id}/tags/{idTag}"}}]},{"_id":"594d1a9a612674001b2d2008","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:41:46.401Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"0-1\": \"The ID of the organization\",\n    \"1-0\": \"**billableMemberCount**\\ninteger\",\n    \"2-0\": \"**desc**\\nstring\",\n    \"2-1\": \"The description for the team\",\n    \"3-0\": \"**descData**\\nobject\",\n    \"4-0\": \"**displayName**\\nstring\",\n    \"5-0\": \"**idBoards**\\narray of strings\",\n    \"6-0\": \"**invitations**\",\n    \"7-0\": \"**invited**\",\n    \"8-0\": \"**logoHash**\\nstring\",\n    \"9-0\": \"**memberships**\\narray of objects\",\n    \"10-0\": \"**name**\\nstring\",\n    \"11-0\": \"**powerUps**\",\n    \"12-0\": \"**prefs**\\nobject\",\n    \"13-0\": \"**premiumFeatures**\",\n    \"14-0\": \"**products**\",\n    \"15-0\": \"**url**\\nstring\",\n    \"16-0\": \"**website**\\nstring\",\n    \"12-1\": \"The preferences (settings) for the team\",\n    \"15-1\": \"The URL to the team page on Trello\",\n    \"3-1\": \"If there are custom emoji in the `desc` this will contain information about them.\",\n    \"4-1\": \"The name for the team. For example: `Trello Inc`\",\n    \"10-1\": \"The programmatic name for the team. For example: `trelloinc`\",\n    \"5-1\": \"An array of board IDs that are in the team\"\n  },\n  \"cols\": 2,\n  \"rows\": 17\n}\n[/block]\n`GET` `/1/organizations/trelloinc?fields=all`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\",\\n  \\\"name\\\": \\\"trelloinc\\\",\\n  \\\"displayName\\\": \\\"Trello Inc\\\",\\n  \\\"desc\\\": \\\"Trello.\\\",\\n  \\\"descData\\\": null,\\n  \\\"idBoards\\\": [\\n    \\\"4f7a0080554c5d054c598a9b\\\",\\n    \\\"4d5ea62fd76aa1136000000c\\\",\\n    \\\"4e9447b45504d8000025e533\\\",\\n    \\\"58c9bd28df3ad86346df87b5\\\",\\n    \\\"58d404bca430d63349042918\\\",\\n    \\\"58f5ddcdc85dc4460b3a5d32\\\",\\n    \\\"59355d99e863b0de27f1d3d8\\\",\\n    \\\"59398d2370f240bbb199399d\\\"\\n  ],\\n  \\\"idEnterprise\\\": null,\\n  \\\"invited\\\": false,\\n  \\\"invitations\\\": [\\n    \\n  ],\\n  \\\"memberships\\\": [\\n    {\\n      \\\"id\\\": \\\"538627f73cbb44d1bfbb58f1\\\",\\n      \\\"idMember\\\": \\\"4d5eb12cd76aa113600000c9\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53b1a1f8a128e74250f8d0b9\\\",\\n      \\\"idMember\\\": \\\"4d68050a81bb57af1e006960\\\",\\n      \\\"memberType\\\": \\\"admin\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53da3738d5e44eafceb802e1\\\",\\n      \\\"idMember\\\": \\\"4e6655412f872f6c9305b71d\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"53da5e8572a469607aa8c7d8\\\",\\n      \\\"idMember\\\": \\\"4f820a995a03e8e82d134ac4\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    },\\n    {\\n      \\\"id\\\": \\\"5951237e0f10c6eb9b2476ad\\\",\\n      \\\"idMember\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"memberType\\\": \\\"normal\\\",\\n      \\\"unconfirmed\\\": false\\n    }\\n  ],\\n  \\\"prefs\\\": {\\n    \\\"permissionLevel\\\": \\\"public\\\",\\n    \\\"orgInviteRestrict\\\": [\\n      \\n    ],\\n    \\\"externalMembersDisabled\\\": false,\\n    \\\"associatedDomain\\\": \\\"trello.com\\\",\\n    \\\"googleAppsVersion\\\": 2,\\n    \\\"boardVisibilityRestrict\\\": {\\n      \\\"private\\\": \\\"org\\\",\\n      \\\"org\\\": \\\"org\\\",\\n      \\\"public\\\": \\\"org\\\"\\n    }\\n  },\\n  \\\"powerUps\\\": [\\n    100\\n  ],\\n  \\\"products\\\": [\\n    100\\n  ],\\n  \\\"billableMemberCount\\\": null,\\n  \\\"activeBillableMemberCount\\\": null,\\n  \\\"url\\\": \\\"https://trello.com/trelloinc\\\",\\n  \\\"website\\\": null,\\n  \\\"logoHash\\\": \\\"da3ff465abd3a3e1b687c52ff803af74\\\",\\n  \\\"premiumFeatures\\\": [\\n    \\\"export\\\",\\n    \\\"observers\\\",\\n    \\\"removal\\\",\\n    \\\"activity\\\",\\n    \\\"deactivated\\\",\\n    \\\"googleApps\\\",\\n    \\\"superAdmins\\\",\\n    \\\"inviteOrg\\\",\\n    \\\"restrictVis\\\",\\n    \\\"disableExternalMembers\\\",\\n    \\\"goldMembers\\\",\\n    \\\"csvExport\\\",\\n    \\\"shortExportHistory\\\",\\n    \\\"tags\\\",\\n    \\\"plugins\\\",\\n    \\\"starCounts\\\",\\n    \\\"readSecrets\\\",\\n    \\\"enterpriseUI\\\"\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"organization-object","type":"basic","title":"Organization Object","__v":0,"updatedAt":"2019-06-10T14:28:52.669Z"},{"_id":"59531a6a74ea3e001518d3f6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:54:34.387Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"","excerpt":"","slug":"organizations-nested-resource","type":"basic","title":"Organizations Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.669Z"},{"_id":"5953092b94417f0015ec7f6b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:40:59.419Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"","slug":"organizationsid","type":"endpoint","title":"/organizations/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}"}},{"_id":"5953094cc356e9001b124bc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:41:32.952Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5953094cc356e9001b124bc5","ref":"","in":"path","required":false,"desc":"An organization [field](ref:organization-object)","default":"","type":"string","name":"field"}],"url":"/organizations/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"","slug":"organizationsidfield","type":"endpoint","title":"/organizations/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}/{field}"}},{"_id":"595309c615da33001b8a79c4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:43:34.133Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/actions","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"For all available query params, please see the [Actions Nested Resource](ref:section-objectidactions)\n\nFor example:\n\n`GET` `/1/organizations/trelloinc/actions`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5951237e0f10c6eb9b2476ae\\\",\\n    \\\"idMemberCreator\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n    \\\"data\\\": {\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToOrganization\\\",\\n    \\\"date\\\": \\\"2017-06-26T15:08:46.430Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"595123526d9a31740725bcc3\\\",\\n      \\\"avatarHash\\\": \\\"4181f8efd49786279ed05097898bf9b2\\\",\\n      \\\"fullName\\\": \\\"Bobby Grace\\\",\\n      \\\"initials\\\": \\\"BG\\\",\\n      \\\"username\\\": \\\"bobbygrace1\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n      \\\"avatarHash\\\": \\\"37765f7ee1a21403113922fcca42171e\\\",\\n      \\\"fullName\\\": \\\"Jason Pantone\\\",\\n      \\\"initials\\\": \\\"JP\\\",\\n      \\\"username\\\": \\\"jasonpantone3\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"59512175d5ad428c1b48d5aa\\\",\\n    \\\"idMemberCreator\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n    \\\"data\\\": {\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      },\\n      \\\"idMemberAdded\\\": \\\"565d3f458abd18913c7f0421\\\",\\n      \\\"memberType\\\": \\\"normal\\\"\\n    },\\n    \\\"type\\\": \\\"addMemberToOrganization\\\",\\n    \\\"date\\\": \\\"2017-06-26T15:00:05.968Z\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"565d3f458abd18913c7f0421\\\",\\n      \\\"avatarHash\\\": \\\"82cf37fa4d19849d21ecd88f21436057\\\",\\n      \\\"fullName\\\": \\\"GBottomley\\\",\\n      \\\"initials\\\": \\\"G\\\",\\n      \\\"username\\\": \\\"gbottomley\\\"\\n    },\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"58e266a993bd07cd39ef0a68\\\",\\n      \\\"avatarHash\\\": \\\"37765f7ee1a21403113922fcca42171e\\\",\\n      \\\"fullName\\\": \\\"Jason Pantone\\\",\\n      \\\"initials\\\": \\\"JP\\\",\\n      \\\"username\\\": \\\"jasonpantone3\\\"\\n    }\\n  },\\n  {\\n    \\\"id\\\": \\\"58cc30d847816978892c5a7a\\\",\\n    \\\"idMemberCreator\\\": \\\"4f3936352cc228644700b1e0\\\",\\n    \\\"data\\\": {\\n      \\\"member\\\": {\\n        \\\"name\\\": \\\"Quentin Schroeder\\\",\\n        \\\"id\\\": \\\"4f3936352cc228644700b1e0\\\"\\n      },\\n      \\\"organization\\\": {\\n        \\\"name\\\": \\\"Trello Inc\\\",\\n        \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n      }\\n    },\\n    \\\"type\\\": \\\"unconfirmedOrganizationInvitation\\\",\\n    \\\"date\\\": \\\"2017-03-17T18:54:16.601Z\\\",\\n    \\\"memberCreator\\\": {\\n      \\\"id\\\": \\\"4f3936352cc228644700b1e0\\\",\\n      \\\"avatarHash\\\": \\\"78a42ab5e7834dba3da3d5445465918d\\\",\\n      \\\"fullName\\\": \\\"Quentin Schroeder\\\",\\n      \\\"initials\\\": \\\"QS\\\",\\n      \\\"username\\\": \\\"quentin\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List the actions on a team","slug":"organizationsidactions","type":"endpoint","title":"/organizations/{id}/actions","__v":0,"updatedAt":"2019-06-10T14:28:52.670Z","swagger":{"path":"/organizations/{id}/actions"}},{"_id":"595309d4341432001554e44e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:43:48.527Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530e90439bc9001b4ace77","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `open`, `closed`, `members`, `organization`, `public`","default":"all","type":"string","name":"filter"},{"_id":"59530eac105a970015021b70","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of board [fields](ref:board-object)","default":"all","type":"string","name":"fields"}],"url":"/organizations/{id}/boards","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"## Filter Parameter Definitions\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Filter Value\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"`open`\",\n    \"1-0\": \"`closed`\",\n    \"2-0\": \"`members`\",\n    \"3-0\": \"`organization`\",\n    \"4-0\": \"`public`\",\n    \"5-0\": \"`starred`\",\n    \"0-1\": \"Returns all of the open boards in the organization.\",\n    \"1-1\": \"Returns all of the closed boards in the organization.\",\n    \"2-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Private\\\" and to which the current token's owner has access to.\",\n    \"5-1\": \"Returns all boards within an organization that have been starred by any user within the organization.\",\n    \"3-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Team Visible\\\"\",\n    \"4-1\": \"Returns all of the boards in the organization that have their visibility set to \\\"Public\\\"\"\n  },\n  \"cols\": 2,\n  \"rows\": 6\n}\n[/block]","excerpt":"List the boards in a team","slug":"organizationsidboards","type":"endpoint","title":"/organizations/{id}/boards","__v":5,"updatedAt":"2019-06-10T14:28:52.671Z","swagger":{"path":"/organizations/{id}/boards"}},{"_id":"59530a4aae575400159ce8a3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:45:46.616Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/members","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"This resource is a nested members resource. Nested members are documented at [Members Nested Resource](ref:members-nested-resource). The members returned by this resource will be within the context of the board whose ID is being used.","excerpt":"List the members in a team","slug":"organizationsidmembers","type":"endpoint","title":"/organizations/{id}/members","__v":3,"updatedAt":"2019-06-10T14:28:52.671Z","swagger":{"path":"/organizations/{id}/members"}},{"_id":"59530aca74ea3e001518d3ea","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T01:47:54.488Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530ae58073c90015d53d79","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of member [fields](ref:member-object)","default":"all","type":"string","name":"fields"}],"url":"/organizations/{id}/membersInvited","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":8,"body":"","excerpt":"List the members with pending invites to a team","slug":"organizationsidmembersinvited","type":"endpoint","title":"/organizations/{id}/membersInvited","__v":1,"updatedAt":"2019-06-10T14:28:52.672Z","swagger":{"path":"/organizations/{id}/membersInvited"}},{"_id":"59530ee40e1ad3001b64115e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:05:24.044Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530f3b070f4c001b255440","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of: `active`, `admin`, `deactivated`, `me`, `normal`","default":"all","type":"string","name":"filter"},{"_id":"59530f4a94417f0015ec7f90","ref":"","in":"query","required":false,"desc":"Whether to include the member objects with the memberships","default":"false","type":"boolean","name":"member"}],"url":"/organizations/{id}/memberships","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":9,"body":"","excerpt":"List the memberships of a team","slug":"organizationsidmemberships","type":"endpoint","title":"/organizations/{id}/memberships","__v":2,"updatedAt":"2019-06-10T14:28:52.673Z","swagger":{"path":"/organizations/{id}/memberships"}},{"_id":"59530f060e1ad3001b64115f","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:05:58.828Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59530f060e1ad3001b641160","ref":"","in":"path","required":false,"desc":"The ID of the membership to load","default":"","type":"string","name":"idMembership"},{"_id":"59530f1c3c835f0015a20d98","ref":"","in":"query","required":false,"desc":"Whether to include the member object in the response","default":"false","type":"boolean","name":"member"}],"url":"/organizations/{id}/memberships/{idMembership}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":10,"body":"","excerpt":"List the memberships of a team","slug":"organizationsidmembershipsidmembership","type":"endpoint","title":"/organizations/{id}/memberships/{idMembership}","__v":1,"updatedAt":"2019-06-10T14:28:52.673Z","swagger":{"path":"/organizations/{id}/memberships/{idMembership}"}},{"_id":"59530f6374ea3e001518d3ee","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:07:31.566Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/pluginData","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":11,"body":"","excerpt":"Get organization scoped pluginData on this team","slug":"organizationsidplugindata","type":"endpoint","title":"/organizations/{id}/pluginData","__v":0,"updatedAt":"2019-06-10T14:28:52.674Z","swagger":{"path":"/organizations/{id}/pluginData"}},{"_id":"59530f7c6ed4d9001b3e7480","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:07:56.552Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/tags","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":12,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"List the organization's collections","slug":"organizationsidtags","type":"endpoint","title":"/organizations/{id}/tags","__v":0,"updatedAt":"2019-06-10T14:28:52.674Z","swagger":{"path":"/organizations/{id}/tags"}},{"_id":"5bd754ef7a022c0038d12d08","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-29T18:43:59.132Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5bd754ef7a022c0038d12d09","ref":"","in":"path","required":false,"desc":"The ID of the board to check for new billable guests.","default":"","type":"string","name":"idBoard"}],"url":"/organizations/{id}/newBillableGuests/{idBoard}","method":"get"},"isReference":true,"order":13,"body":"This route can be used before moving a board into a paid organization to see if the board contains members that aren't already paid for in the organization.","excerpt":"Used to check whether the given board has new billable guests on it.","slug":"organizationsidnewbillableguestsidboard","type":"endpoint","title":"/organizations/{id}/newBillableGuests/{idBoard}","__v":2,"updatedAt":"2019-06-10T14:28:52.675Z","swagger":{"path":"/organizations/{id}/newBillableGuests/{idBoard}"}},{"_id":"5c2e501be865fd01c3af9353","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-03T18:10:35.398Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"5c2e3d649647003dfb2e6128\",\n        \"status\": {\n            \"attempts\": 1,\n            \"finished\": true,\n            \"stage\": \"Export_completed\",\n            \"progress\": 0,\n            \"total\": 0\n        },\n        \"startedAt\": \"2019-01-03T16:50:44.000Z\",\n        \"size\": 883061,\n        \"exportUrl\": \"/1/organization/6b1e8d7b1af5866d5b7892b2/exports/49612470d63dfb205c2e3e68/download\"\n    },\n    {\n        \"id\": \"5c2e3d1c263b0249bd9c205e\",\n        \"status\": {\n            \"attempts\": 1,\n            \"finished\": true,\n            \"stage\": \"Export_completed\",\n            \"progress\": 0,\n            \"total\": 0\n        },\n        \"startedAt\": \"2019-01-03T16:49:32.000Z\",\n        \"size\": 886547,\n        \"exportUrl\": \"/1/organization/6b1e8d7b1af5866d5b7892b2/exports/b95c2e3d135ec2bd9c200246/download\"\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/exports","method":"get"},"isReference":true,"order":14,"body":"This route can be used by organizations that have the CSV export feature found at: https://trello.com/{organizationName}/export. This route is used to get information about exports that have been created for the given organization.\n\nTo begin the creation of an export, you will need to make a POST request to [1/organizations/{id}/exports](https://developers.trello.com/v1.0/reference#organizationsidexports).","excerpt":"Retrieve the exports that exist for the given organization","slug":"organizationsidexports-1","type":"endpoint","title":"/organizations/{id}/exports","__v":1,"updatedAt":"2019-06-10T14:28:52.675Z","swagger":{"path":"/organizations/{id}/exports"}},{"_id":"59530faff135e5001be8e076","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:08:47.391Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59530fbf070f4c001b255441","ref":"","in":"path","required":false,"desc":"The id or name of the organization to update","default":"","type":"string","name":"id"},{"_id":"59530fefae575400159ce8c5","ref":"","in":"query","required":false,"desc":"A new name for the organization. At least 3 lowercase letters, underscores, and numbers. Must be unique","default":"","type":"string","name":"name"},{"_id":"59531009439bc9001b4ace7a","ref":"","in":"query","required":false,"desc":"A new displayName for the organization. Must be at least 1 character long and not begin or end with a space.","default":"","type":"string","name":"displayName"},{"_id":"5953101874ea3e001518d3ef","ref":"","in":"query","required":false,"desc":"A new description for the organization","default":"","type":"string","name":"desc"},{"_id":"5953103215da33001b8a7bf1","ref":"","in":"query","required":false,"desc":"A URL starting with `http://`, `https://`, or `null`","default":"","type":"string","name":"website"},{"_id":"595310546ed4d9001b3e7481","ref":"","in":"query","required":false,"desc":"The Google Apps domain to link this org to.","default":"","type":"string","name":"prefs/associatedDomain"},{"_id":"5953108af135e5001be8e078","ref":"","in":"query","required":false,"desc":"Whether non-team members can be added to boards inside the team","default":"","type":"boolean","name":"prefs/externalMembersDisabled"},{"_id":"595310666ed4d9001b3e7482","ref":"","in":"query","required":false,"desc":"`1` or `2`","default":"","type":"int","name":"prefs/googleAppsVersion"},{"_id":"5953109f6ed4d9001b3e7483","ref":"","in":"query","required":false,"desc":"Who on the team can make team visible boards. One of `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/org"},{"_id":"59531138ae575400159ce8ca","ref":"","in":"query","required":false,"desc":"Who can make private boards. One of: `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/private"},{"_id":"595310bd74ea3e001518d3f0","ref":"","in":"query","required":false,"desc":"Who on the team can make public boards. One of: `admin`, `none`, `org`","default":"","type":"string","name":"prefs/boardVisibilityRestrict/public"},{"_id":"5953108af135e5001be8e077","ref":"","in":"query","required":false,"desc":"An email address with optional wildcard characters. (E.g. `subdomain.*.trello.com`)","default":"","type":"string","name":"prefs/orgInviteRestrict"},{"_id":"59531167341432001554e473","ref":"","in":"query","required":false,"desc":"Whether the team page is publicly visible. One of: `private`, `public`","default":"","type":"string","name":"prefs/permissionLevel"}],"url":"/organizations/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":15,"body":"This method lets you update one or more properties of the organization in a single request.\n\nIt is also possible to update a single property:\n\n`PUT` `/1/organizations/{id}/{property}?value={new value}`\n\nSo for example, to update just the displayName for an org you could also do:\n\n`PUT` `/1/organizations/{id}/displayName?value=Awesome%20Team`","excerpt":"Update an organization","slug":"organizationsid-1","type":"endpoint","title":"/organizations/{id}","__v":13,"updatedAt":"2019-06-10T14:28:52.676Z","swagger":{"path":"/organizations/{id}"}},{"_id":"5953128b15da33001b8a7bf3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:20:59.540Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"5953128b15da33001b8a7bf4","ref":"","in":"query","required":true,"desc":"An email address","default":"","type":"string","name":"email"},{"_id":"595312a6c356e9001b124bcb","ref":"","in":"query","required":true,"desc":"Name for the member, at least 1 character not beginning or ending with a space","default":"","type":"string","name":"fullName"},{"_id":"595312b7105a970015021b92","ref":"","in":"query","required":false,"desc":"One of: `admin`, `normal`","default":"normal","type":"string","name":"type"}],"url":"/organizations/{id}/members","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":16,"body":"","excerpt":"","slug":"organizationsidmembers-1","type":"endpoint","title":"/organizations/{id}/members","__v":2,"updatedAt":"2019-06-10T14:28:52.676Z","swagger":{"path":"/organizations/{id}/members"}},{"_id":"595312e673082700156d5ebf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:22:30.718Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595312e673082700156d5ec0","ref":"","in":"path","required":false,"desc":"The ID or username of the member to update","default":"","type":"string","name":"idMember"},{"_id":"595312f674ea3e001518d3f3","ref":"","in":"query","required":true,"desc":"One of: `admin`, `normal`","default":"","type":"string","name":"type"}],"url":"/organizations/{id}/members/{idMember}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":17,"body":"","excerpt":"Add a member to a team or update their member type.","slug":"organizationsidmembersidmember","type":"endpoint","title":"/organizations/{id}/members/{idMember}","__v":2,"updatedAt":"2019-06-10T14:28:52.677Z","swagger":{"path":"/organizations/{id}/members/{idMember}"}},{"_id":"5953131e0e1ad3001b641161","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:23:26.075Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595312e673082700156d5ec0","ref":"","in":"path","required":false,"desc":"The ID or username of the member to update","default":"","type":"string","name":"idMember"},{"_id":"595312f674ea3e001518d3f3","ref":"","in":"query","required":false,"desc":"","default":"","type":"boolean","name":"value"}],"url":"/organizations/{id}/members/{idMember}/deactivated","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":18,"body":"","excerpt":"Deactivate or reactivate a member of a team","slug":"organizationsidmembersidmemberdeactivated","type":"endpoint","title":"/organizations/{id}/members/{idMember}/deactivated","__v":0,"updatedAt":"2019-06-10T14:28:52.677Z","swagger":{"path":"/organizations/{id}/members/{idMember}/deactivated"}},{"_id":"5953135815da33001b8a7bf5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:24:24.717Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595313ca439bc9001b4ace7d","ref":"","in":"query","required":true,"desc":"","default":"","type":"string","name":"displayName"},{"_id":"595313ca439bc9001b4ace7c","ref":"","in":"query","required":false,"desc":"The description for the team","default":"","type":"string","name":"desc"},{"_id":"595313aa15da33001b8a7bf6","ref":"","in":"query","required":false,"desc":"A string with a length of at least 3. Only lowercase letters, underscores, and numbers are allowed. Must be unique.","default":"","type":"string","name":"name"},{"_id":"595313da73082700156d5ec1","ref":"","in":"query","required":false,"desc":"A URL starting with `http://` or `https://`","default":"","type":"string","name":"website"}],"url":"/organizations","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":19,"body":"","excerpt":"Create a new team","slug":"organizations-1","type":"endpoint","title":"/organizations","__v":3,"updatedAt":"2019-06-10T14:28:52.678Z","swagger":{"path":"/organizations"}},{"_id":"595313f5f135e5001be8e07b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:27:01.481Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"59531408439bc9001b4ace7e","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953141b74ea3e001518d3f4","ref":"","in":"query","required":false,"desc":"Image file for the logo","default":"","type":"file","name":"file"}],"url":"/organizations/{id}/logo","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":20,"body":"","excerpt":"Set the logo image for a team","slug":"organizationsidlogo","type":"endpoint","title":"/organizations/{id}/logo","__v":2,"updatedAt":"2019-06-10T14:28:52.679Z","swagger":{"path":"/organizations/{id}/logo"}},{"_id":"5953144315da33001b8a7bf7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"594d11ffae68a2001533f6f1","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:28:19.087Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953144ef135e5001be8e07c","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953145b3c835f0015a20dbb","ref":"","in":"query","required":true,"desc":"The name for the new collection","default":"","type":"string","name":"name"}],"url":"/organizations/{id}/tags","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":21,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Experimental\",\n  \"body\": \"This is an experimental resource and may change at any time without notice.\"\n}\n[/block]","excerpt":"Create a new collection in a team","slug":"organizationsidtags-1","type":"endpoint","title":"/organizations/{id}/tags","__v":2,"updatedAt":"2019-06-10T14:28:52.679Z","swagger":{"path":"/organizations/{id}/tags"}},{"_id":"5c2e3ec2b0c899011ad0db90","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2019-01-03T16:56:34.009Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"5c2e3d649647003dfb2e6128\",\n    \"status\": {\n        \"attempts\": 0,\n        \"finished\": false,\n        \"stage\": \"Export_queued\"\n    },\n    \"startedAt\": \"2019-01-03T16:50:44.000Z\",\n    \"size\": null,\n    \"exportUrl\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"59531408439bc9001b4ace7e","ref":"","in":"path","required":false,"desc":"The ID or name of the team","default":"","type":"string","name":"id"},{"_id":"5953141b74ea3e001518d3f4","ref":"","in":"query","required":false,"desc":"Whether the CSV should include attachments or not.","default":"true","type":"boolean","name":"attachments"}],"url":"/organizations/{id}/exports","method":"post"},"isReference":true,"order":22,"body":"This route can be used by organizations that have the CSV export feature found at: https://trello.com/{organizationName}/export.\n\nTo begin an export, you must make a POST request to this route. The Trello export service will begin collecting the necessary data and building the CSV.\n\nYou can get updates on the status of the exports via the GET /exports/ route.","excerpt":"Kick off CSV export for an organization","slug":"organizationsidexports","type":"endpoint","title":"/organizations/{id}/exports","__v":2,"updatedAt":"2019-06-10T14:28:52.680Z","swagger":{"path":"/organizations/{id}/exports"}},{"_id":"5953188a070f4c001b255483","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:46:34.617Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":23,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"Deleting a team is permanent. There is no undo. Boards with this team won't be deleted. Your boards in this team will appear in your personal boards list.\"\n}\n[/block]","excerpt":"Delete a team","slug":"organizationsid-2","type":"endpoint","title":"/organizations/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.680Z","swagger":{"path":"/organizations/{id}"}},{"_id":"595318b915da33001b8a7bf9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:47:21.716Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/logo","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":24,"body":"","excerpt":"Delete a the logo from a team","slug":"organizationsidlogo-1","type":"endpoint","title":"/organizations/{id}/logo","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/logo"}},{"_id":"595318e5780fd4001b1230cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:48:05.497Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595318e5780fd4001b1230cd","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the team","default":"","type":"string","name":"idMember"}],"url":"/organizations/{id}/members/{idMember}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":25,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"This will remove a member from your organization. See [DELETE /organizations/{id}/members/{idMember}/all](ref:organizationsidmembersidmemberall) to also remove this member from your organization boards.\"\n}\n[/block]","excerpt":"Remove a member from a team","slug":"organizationsidmembersidmember-1","type":"endpoint","title":"/organizations/{id}/members/{idMember}","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/members/{idMember}"}},{"_id":"59531918f135e5001be8e09e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:48:56.145Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"595318e5780fd4001b1230cd","ref":"","in":"path","required":false,"desc":"The ID of the member to remove from the team","default":"","type":"string","name":"idMember"}],"url":"/organizations/{id}/members/{idMember}/all","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":26,"body":"This will remove a member from your organization AND remove the member from all organization boards. The team must be upgraded to Business Class in order for this option to be enabled.","excerpt":"Remove a member from a team and from all team boards","slug":"organizationsidmembersidmemberall","type":"endpoint","title":"/organizations/{id}/members/{idMember}/all","__v":0,"updatedAt":"2019-06-10T14:28:52.681Z","swagger":{"path":"/organizations/{id}/members/{idMember}/all"}},{"_id":"5953199e070f4c001b255484","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:51:10.112Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/prefs/associatedDomain","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":27,"body":"","excerpt":"Remove the associated Google Apps domain from a team","slug":"organizationsidprefsassociateddomain","type":"endpoint","title":"/organizations/{id}/prefs/associatedDomain","__v":0,"updatedAt":"2019-06-10T14:28:52.682Z","swagger":{"path":"/organizations/{id}/prefs/associatedDomain"}},{"_id":"595319ee8073c90015d53dbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-28T02:52:30.037Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"}],"url":"/organizations/{id}/prefs/orgInviteRestrict","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":28,"body":"","excerpt":"Remove the email domain restriction on who can be invited to the team","slug":"organizationsidprefsorginviterestrict","type":"endpoint","title":"/organizations/{id}/prefs/orgInviteRestrict","__v":0,"updatedAt":"2019-06-10T14:28:52.682Z","swagger":{"path":"/organizations/{id}/prefs/orgInviteRestrict"}},{"_id":"59f33d4272784a002462a1e6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d11ffae68a2001533f6f1","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-10-27T14:05:54.059Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5953092b94417f0015ec7f6c","ref":"","in":"path","required":false,"desc":"The ID or name of the organization","default":"","type":"string","name":"id"},{"_id":"59f33d4272784a002462a1e7","ref":"","in":"path","required":false,"desc":"The ID of the tag to delete","default":"","type":"string","name":"idTag"}],"url":"/organizations/{id}/tags/{idTag}","method":"delete"},"isReference":true,"order":29,"body":"[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"Warning: This is an experimental resource and may change at any time without notice.\",\n  \"title\": \"Experimental Resource\"\n}\n[/block]","excerpt":"Delete an organization's tag","slug":"organizationsidtagsidtag","type":"endpoint","title":"/organizations/{id}/tags/{idTag}","__v":1,"updatedAt":"2019-06-10T14:28:52.683Z","swagger":{"path":"/organizations/{id}/tags/{idTag}"}},{"_id":"5b6325c3aa286500034061c9","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T15:39:47.137Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Reactions give users the option to add an emoji to an action. \n\nTrello will display these reactions underneath the action like below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/fcabab2-Screen_Shot_2018-08-02_at_2.22.03_PM.png\",\n        \"Screen Shot 2018-08-02 at 2.22.03 PM.png\",\n        1132,\n        234,\n        \"#eaebec\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"reactions","type":"basic","title":"Reactions","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.687Z","children":[{"_id":"5b63461fdee08700038538f2","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","parentDoc":"5b6325c3aa286500034061c9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:57:51.678Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Reactions are often included as [nested resources](ref:understanding-nested-resources) within the Trello API. Their highly-nested nature is due to the fact that reactions are created within the context of actions.\nFor instance, when a user reacts to a comment on a card, Trello creates a reaction that references the action. Therefore, it makes sense to be able to access all of the reactions within the context of the action on which they were created.\n[block:api-header]\n{\n  \"title\": \"Nested Reactions with Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Default\",\n    \"h-3\": \"Description\",\n    \"0-0\": \"**reactions**\\nboolean\",\n    \"1-0\": \"**reactionsSummary**\\nboolean\",\n    \"0-1\": \"`true`, `false`\",\n    \"0-2\": \"`false`\",\n    \"0-3\": \"Boolean to return reactions entities or not.\",\n    \"1-1\": \"`true`, `false`\",\n    \"1-2\": \"`false`\",\n    \"1-3\": \"Boolean to return reactions summary entities or not.\",\n    \"2-0\": \"**reactions_member**\\nboolean\",\n    \"2-1\": \"`true`, `false`\",\n    \"2-2\": \"`true`\",\n    \"2-3\": \"Boolean to return nested member entities for reactions or not.\",\n    \"4-0\": \"**reactions_emoji**\\nboolean\",\n    \"4-1\": \"`true`, `false`\",\n    \"4-2\": \"`true`\",\n    \"4-3\": \"Boolean to return nested emoji entities for reactions or not.\",\n    \"3-0\": \"**reactions_member_fields**\\nstring\",\n    \"3-1\": \"String\",\n    \"3-2\": \"avatarHash,avatarUrl,fullName,initials,username\",\n    \"3-3\": \"The fields to be returned if the member object is being returned.\"\n  },\n  \"cols\": 4,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl --request GET \\\\\\n  --url https://api.trello.com/1/actions/id?reactions=true\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"reactions\\\": [\\n    {\\n      \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n      \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n      \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n      \\\"idEmoji\\\": \\\"1F64C\\\",\\n      \\\"member\\\": {\\n        \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n        \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n        \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n        \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n        \\\"initials\\\": \\\"FH\\\",\\n        \\\"username\\\": \\\"fhaehnel\\\"\\n      },\\n      \\\"emoji\\\": {\\n        \\\"unified\\\": \\\"1F64C\\\",\\n        \\\"native\\\": \\\"üôå\\\",\\n        \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n        \\\"skinVariation\\\": null,\\n        \\\"shortName\\\": \\\"raised_hands\\\"\\n      }\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl --request GET \\\\\\n  --url https://api.trello.com/1/cards/id?actions=commentCard&action_reactions=true\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5a2ee8e4c0fddff47c596129\\\",\\n  \\\"actions\\\": [\\n    {\\n      \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n      \\\"reactions\\\": [\\n        {\\n          \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n          \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n          \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n          \\\"idEmoji\\\": \\\"1F64C\\\",\\n          \\\"member\\\": {\\n            \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n            \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n            \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n            \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n            \\\"initials\\\": \\\"FH\\\",\\n            \\\"username\\\": \\\"fhaehnel\\\"\\n          },\\n          \\\"emoji\\\": {\\n            \\\"unified\\\": \\\"1F64C\\\",\\n            \\\"native\\\": \\\"üôå\\\",\\n            \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n            \\\"skinVariation\\\": null,\\n            \\\"shortName\\\": \\\"raised_hands\\\"\\n          }\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"reactions-nested-resource","type":"basic","title":"Reactions Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.688Z"},{"_id":"5b632b7b2f19970003281643","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","parentDoc":"5b6325c3aa286500034061c9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T16:04:11.333Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"language":"text","code":""}]},"auth":"never","params":[{"_id":"5b632b7b2f19970003281645","ref":"","in":"query","required":false,"desc":"The locale to return emoji descriptions and names in. Defaults to the logged in member's locale.","default":"","type":"string","name":"locale"},{"_id":"5b632b7b2f19970003281644","ref":"","in":"query","required":false,"desc":"`true` to return spritesheet URLs in the response","default":"false","type":"boolean","name":"spritesheets"}],"url":"/emoji","method":"get"},"isReference":true,"order":1,"body":"Lists all available emoji for use in Trello reactions.\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"trello\\\": [\\n    {\\n      \\\"unified\\\": \\\"1F44D\\\",\\n      \\\"name\\\": \\\"THUMBS UP SIGN\\\",\\n      \\\"native\\\": \\\"üëç\\\",\\n      \\\"shortName\\\": \\\"+1\\\",\\n      \\\"shortNames\\\": [\\n        \\\"+1\\\",\\n        \\\"thumbsup\\\"\\n      ],\\n      \\\"text\\\": null,\\n      \\\"texts\\\": null,\\n      \\\"category\\\": \\\"Smileys & People\\\",\\n      \\\"sheetX\\\": 14,\\n      \\\"sheetY\\\": 49,\\n      \\\"skinVariations\\\": {\\n        \\\"1F3FB\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FB\\\",\\n          \\\"native\\\": \\\"üëçüèª\\\",\\n          \\\"sheetX\\\": 14,\\n          \\\"sheetY\\\": 50\\n        },\\n        \\\"1F3FC\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FC\\\",\\n          \\\"native\\\": \\\"üëçüèº\\\",\\n          \\\"sheetX\\\": 14,\\n          \\\"sheetY\\\": 51\\n        },\\n        \\\"1F3FD\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FD\\\",\\n          \\\"native\\\": \\\"üëçüèΩ\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 0\\n        },\\n        \\\"1F3FE\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FE\\\",\\n          \\\"native\\\": \\\"üëçüèæ\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 1\\n        },\\n        \\\"1F3FF\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FF\\\",\\n          \\\"native\\\": \\\"üëçüèø\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 2\\n        }\\n      },\\n      \\\"tts\\\": \\\"thumbs up\\\",\\n      \\\"keywords\\\": [\\n        \\\"+1\\\",\\n        \\\"hand\\\",\\n        \\\"thumb\\\",\\n        \\\"thumbs up\\\",\\n        \\\"up\\\"\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List available emoji","slug":"emoji","type":"endpoint","title":"/emoji","__v":8,"updatedAt":"2019-06-10T14:28:52.688Z","swagger":{"path":"/emoji"}},{"_id":"5b632fc481f64e00036a58be","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T16:22:28.850Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633132aa286500034062bc","ref":"","in":"query","required":false,"desc":"Whether to load the member as a nested resource. See [Members Nested Resource](#members-nested-resource)","default":"true","type":"boolean","name":"member"},{"_id":"5b6331dd2f199700032816bd","ref":"","in":"query","required":false,"desc":"Whether to load the emoji as a nested resource.","default":"true","type":"boolean","name":"emoji"}],"url":"/actions/{idAction}/reactions","method":"get"},"isReference":true,"order":2,"body":"List reactions to the action `idAction`. \n\nReactions are sorted by date first added, oldest to newest.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n    \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n    \\\"idEmoji\\\": \\\"1F64C\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n      \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n      \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n      \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n      \\\"initials\\\": \\\"FH\\\",\\n      \\\"username\\\": \\\"fhaehnel\\\"\\n    },\\n    \\\"emoji\\\": {\\n      \\\"unified\\\": \\\"1F64C\\\",\\n      \\\"native\\\": \\\"üôå\\\",\\n      \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n      \\\"skinVariation\\\": null,\\n      \\\"shortName\\\": \\\"raised_hands\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List reactions for an action","slug":"actionsidactionreactions","type":"endpoint","title":"/actions/{idAction}/reactions","__v":5,"updatedAt":"2019-06-10T14:28:52.689Z","swagger":{"path":"/actions/{idAction}/reactions"}},{"_id":"5b633ae6aa28650003406334","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:09:58.517Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633132aa286500034062bc","ref":"","in":"query","required":false,"desc":"Whether to load the member as a nested resource. See [Members Nested Resource](#members-nested-resource)","default":"true","type":"boolean","name":"member"},{"_id":"5b6331dd2f199700032816bd","ref":"","in":"query","required":false,"desc":"Whether to load the emoji as a nested resource.","default":"true","type":"boolean","name":"emoji"},{"_id":"5b633ae6aa28650003406335","ref":"","in":"path","required":false,"desc":"The ID of the reaction","default":"","type":"string","name":"id"}],"url":"/actions/{idAction}/reactions/{id}","method":"get"},"isReference":true,"order":3,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n  \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n  \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"idEmoji\\\": \\\"1F64C\\\",\\n  \\\"member\\\": {\\n    \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n    \\\"initials\\\": \\\"FH\\\",\\n    \\\"username\\\": \\\"fhaehnel\\\"\\n  },\\n  \\\"emoji\\\": {\\n    \\\"unified\\\": \\\"1F64C\\\",\\n    \\\"native\\\": \\\"üôå\\\",\\n    \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n    \\\"skinVariation\\\": null,\\n    \\\"shortName\\\": \\\"raised_hands\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get information for a reaction","slug":"actionsidactionreactionsid","type":"endpoint","title":"/actions/{idAction}/reactions/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.689Z","swagger":{"path":"/actions/{idAction}/reactions/{id}"}},{"_id":"5b6345d62f1997000328177f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:56:38.945Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"}],"url":"/actions/{idAction}/reactionsSummary","method":"get"},"isReference":true,"order":4,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"count\\\": 2,\\n    \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4:1F64C\\\",\\n    \\\"firstReacted\\\": \\\"2018-05-16T13:58:34.000Z\\\",\\n    \\\"idEmoji\\\": \\\"1F64C\\\",\\n    \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n    \\\"idReaction\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n    \\\"emoji\\\": {\\n      \\\"unified\\\": \\\"1F64C\\\",\\n      \\\"native\\\": \\\"üôå\\\",\\n      \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n      \\\"skinVariation\\\": null,\\n      \\\"shortName\\\": \\\"raised_hands\\\"\\n    }\\n  }\\n]'\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List a summary of all reactions for an action","slug":"actionsidactionreactionssummary","type":"endpoint","title":"/actions/{idAction}/reactionsSummary","__v":0,"updatedAt":"2019-06-10T14:28:52.690Z","swagger":{"path":"/actions/{idAction}/reactionsSummary"}},{"_id":"5b63431581f64e00036a5972","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"592599f5d15a9d1900be545c","updates":["5c2516a70dd8470218dc1f81"],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:44:53.506Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b63431581f64e00036a5976","ref":"","in":"body","required":false,"desc":"The primary `shortName` of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"shortName"},{"_id":"5b63431581f64e00036a5975","ref":"","in":"body","required":false,"desc":"The `skinVariation` of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"skinVariation"},{"_id":"5b63431581f64e00036a5974","ref":"","in":"body","required":false,"desc":"The emoji to add as a native unicode emoji. See [/emoji](#emoji)","default":"","type":"string","name":"native"},{"_id":"5b63431581f64e00036a5973","ref":"","in":"body","required":false,"desc":"The `unified` value of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"unified"}],"url":"/actions/{idAction}/reactions","method":"post"},"isReference":true,"order":5,"body":"Adds a new reaction to the action with ID `idAction`.\n\nReactions can be added to actions of the following type:\n\n- `commentCard`\n\nThe request body can be made up of multiple values, but only certain combinations are valid. Trello will choose the first valid value or value combination. \n\nSome example combinations are: \n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Value\",\n    \"h-1\": \"Resulting Emoji\",\n    \"0-0\": \"```json\\n{\\n  \\\"unified\\\": \\\"1F44D-1F3FC\\\"\\n}\\n```\",\n    \"0-1\": \"üëçüèº\",\n    \"1-0\": \"```json\\n{\\n  \\\"unified\\\": \\\"1F44D-1F3FC\\\",\\n  \\\"skinVariation\\\": \\\"1F3FF\\\"\\n}\\n```\",\n    \"1-1\": \"üëçüèº\\n\\n_Note:_ The `skinVariation` value is ignored, because `unified` is already a fully qualified emoji identifier, which includes a skinVariation.\",\n    \"h-2\": \"Notes\",\n    \"1-2\": \"The `skinVariation` value is ignored, because `unified` is already a fully qualified emoji identifier, which includes a `skinVariation`.\",\n    \"2-0\": \"```json\\n{\\n  \\\"shortName\\\": \\\"thumbsup\\\",\\n  \\\"skinVariation\\\": \\\"1F3FF\\\"\\n}\\n```\",\n    \"2-1\": \"üëçüèø\",\n    \"3-0\": \"```json\\n{\\n  \\\"native\\\": \\\"üëç\\\"\\n}\\n```\",\n    \"3-1\": \"üëç\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n  \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n  \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"idEmoji\\\": \\\"1F64C\\\",\\n  \\\"member\\\": {\\n    \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n    \\\"initials\\\": \\\"FH\\\",\\n    \\\"username\\\": \\\"fhaehnel\\\"\\n  },\\n  \\\"emoji\\\": {\\n    \\\"unified\\\": \\\"1F64C\\\",\\n    \\\"native\\\": \\\"üôå\\\",\\n    \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n    \\\"skinVariation\\\": null,\\n    \\\"shortName\\\": \\\"raised_hands\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Adds a new reaction to an action","slug":"actionsidactionreactions-1","type":"endpoint","title":"/actions/{idAction}/reactions","__v":9,"updatedAt":"2019-06-10T14:28:52.690Z","swagger":{"path":"/actions/{idAction}/reactions"}},{"_id":"5b6345407a7d8600034ea01f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:54:08.111Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633ae6aa28650003406335","ref":"","in":"path","required":false,"desc":"The ID of the reaction","default":"","type":"string","name":"id"}],"url":"/actions/{idAction}/reactions/{id}","method":"delete"},"isReference":true,"order":6,"body":"","excerpt":"Deletes a reaction","slug":"actionsidactionreactionsid-1","type":"endpoint","title":"/actions/{idAction}/reactions/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.691Z","swagger":{"path":"/actions/{idAction}/reactions/{id}"}}],"childrenPages":[{"_id":"5b63461fdee08700038538f2","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","parentDoc":"5b6325c3aa286500034061c9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:57:51.678Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Reactions are often included as [nested resources](ref:understanding-nested-resources) within the Trello API. Their highly-nested nature is due to the fact that reactions are created within the context of actions.\nFor instance, when a user reacts to a comment on a card, Trello creates a reaction that references the action. Therefore, it makes sense to be able to access all of the reactions within the context of the action on which they were created.\n[block:api-header]\n{\n  \"title\": \"Nested Reactions with Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Default\",\n    \"h-3\": \"Description\",\n    \"0-0\": \"**reactions**\\nboolean\",\n    \"1-0\": \"**reactionsSummary**\\nboolean\",\n    \"0-1\": \"`true`, `false`\",\n    \"0-2\": \"`false`\",\n    \"0-3\": \"Boolean to return reactions entities or not.\",\n    \"1-1\": \"`true`, `false`\",\n    \"1-2\": \"`false`\",\n    \"1-3\": \"Boolean to return reactions summary entities or not.\",\n    \"2-0\": \"**reactions_member**\\nboolean\",\n    \"2-1\": \"`true`, `false`\",\n    \"2-2\": \"`true`\",\n    \"2-3\": \"Boolean to return nested member entities for reactions or not.\",\n    \"4-0\": \"**reactions_emoji**\\nboolean\",\n    \"4-1\": \"`true`, `false`\",\n    \"4-2\": \"`true`\",\n    \"4-3\": \"Boolean to return nested emoji entities for reactions or not.\",\n    \"3-0\": \"**reactions_member_fields**\\nstring\",\n    \"3-1\": \"String\",\n    \"3-2\": \"avatarHash,avatarUrl,fullName,initials,username\",\n    \"3-3\": \"The fields to be returned if the member object is being returned.\"\n  },\n  \"cols\": 4,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl --request GET \\\\\\n  --url https://api.trello.com/1/actions/id?reactions=true\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"reactions\\\": [\\n    {\\n      \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n      \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n      \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n      \\\"idEmoji\\\": \\\"1F64C\\\",\\n      \\\"member\\\": {\\n        \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n        \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n        \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n        \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n        \\\"initials\\\": \\\"FH\\\",\\n        \\\"username\\\": \\\"fhaehnel\\\"\\n      },\\n      \\\"emoji\\\": {\\n        \\\"unified\\\": \\\"1F64C\\\",\\n        \\\"native\\\": \\\"üôå\\\",\\n        \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n        \\\"skinVariation\\\": null,\\n        \\\"shortName\\\": \\\"raised_hands\\\"\\n      }\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl --request GET \\\\\\n  --url https://api.trello.com/1/cards/id?actions=commentCard&action_reactions=true\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5a2ee8e4c0fddff47c596129\\\",\\n  \\\"actions\\\": [\\n    {\\n      \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n      \\\"reactions\\\": [\\n        {\\n          \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n          \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n          \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n          \\\"idEmoji\\\": \\\"1F64C\\\",\\n          \\\"member\\\": {\\n            \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n            \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n            \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n            \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n            \\\"initials\\\": \\\"FH\\\",\\n            \\\"username\\\": \\\"fhaehnel\\\"\\n          },\\n          \\\"emoji\\\": {\\n            \\\"unified\\\": \\\"1F64C\\\",\\n            \\\"native\\\": \\\"üôå\\\",\\n            \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n            \\\"skinVariation\\\": null,\\n            \\\"shortName\\\": \\\"raised_hands\\\"\\n          }\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"reactions-nested-resource","type":"basic","title":"Reactions Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.688Z"},{"_id":"5b632b7b2f19970003281643","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","parentDoc":"5b6325c3aa286500034061c9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T16:04:11.333Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"language":"text","code":""}]},"auth":"never","params":[{"_id":"5b632b7b2f19970003281645","ref":"","in":"query","required":false,"desc":"The locale to return emoji descriptions and names in. Defaults to the logged in member's locale.","default":"","type":"string","name":"locale"},{"_id":"5b632b7b2f19970003281644","ref":"","in":"query","required":false,"desc":"`true` to return spritesheet URLs in the response","default":"false","type":"boolean","name":"spritesheets"}],"url":"/emoji","method":"get"},"isReference":true,"order":1,"body":"Lists all available emoji for use in Trello reactions.\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"trello\\\": [\\n    {\\n      \\\"unified\\\": \\\"1F44D\\\",\\n      \\\"name\\\": \\\"THUMBS UP SIGN\\\",\\n      \\\"native\\\": \\\"üëç\\\",\\n      \\\"shortName\\\": \\\"+1\\\",\\n      \\\"shortNames\\\": [\\n        \\\"+1\\\",\\n        \\\"thumbsup\\\"\\n      ],\\n      \\\"text\\\": null,\\n      \\\"texts\\\": null,\\n      \\\"category\\\": \\\"Smileys & People\\\",\\n      \\\"sheetX\\\": 14,\\n      \\\"sheetY\\\": 49,\\n      \\\"skinVariations\\\": {\\n        \\\"1F3FB\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FB\\\",\\n          \\\"native\\\": \\\"üëçüèª\\\",\\n          \\\"sheetX\\\": 14,\\n          \\\"sheetY\\\": 50\\n        },\\n        \\\"1F3FC\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FC\\\",\\n          \\\"native\\\": \\\"üëçüèº\\\",\\n          \\\"sheetX\\\": 14,\\n          \\\"sheetY\\\": 51\\n        },\\n        \\\"1F3FD\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FD\\\",\\n          \\\"native\\\": \\\"üëçüèΩ\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 0\\n        },\\n        \\\"1F3FE\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FE\\\",\\n          \\\"native\\\": \\\"üëçüèæ\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 1\\n        },\\n        \\\"1F3FF\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FF\\\",\\n          \\\"native\\\": \\\"üëçüèø\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 2\\n        }\\n      },\\n      \\\"tts\\\": \\\"thumbs up\\\",\\n      \\\"keywords\\\": [\\n        \\\"+1\\\",\\n        \\\"hand\\\",\\n        \\\"thumb\\\",\\n        \\\"thumbs up\\\",\\n        \\\"up\\\"\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List available emoji","slug":"emoji","type":"endpoint","title":"/emoji","__v":8,"updatedAt":"2019-06-10T14:28:52.688Z","swagger":{"path":"/emoji"}},{"_id":"5b632fc481f64e00036a58be","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T16:22:28.850Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633132aa286500034062bc","ref":"","in":"query","required":false,"desc":"Whether to load the member as a nested resource. See [Members Nested Resource](#members-nested-resource)","default":"true","type":"boolean","name":"member"},{"_id":"5b6331dd2f199700032816bd","ref":"","in":"query","required":false,"desc":"Whether to load the emoji as a nested resource.","default":"true","type":"boolean","name":"emoji"}],"url":"/actions/{idAction}/reactions","method":"get"},"isReference":true,"order":2,"body":"List reactions to the action `idAction`. \n\nReactions are sorted by date first added, oldest to newest.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n    \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n    \\\"idEmoji\\\": \\\"1F64C\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n      \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n      \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n      \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n      \\\"initials\\\": \\\"FH\\\",\\n      \\\"username\\\": \\\"fhaehnel\\\"\\n    },\\n    \\\"emoji\\\": {\\n      \\\"unified\\\": \\\"1F64C\\\",\\n      \\\"native\\\": \\\"üôå\\\",\\n      \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n      \\\"skinVariation\\\": null,\\n      \\\"shortName\\\": \\\"raised_hands\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List reactions for an action","slug":"actionsidactionreactions","type":"endpoint","title":"/actions/{idAction}/reactions","__v":5,"updatedAt":"2019-06-10T14:28:52.689Z","swagger":{"path":"/actions/{idAction}/reactions"}},{"_id":"5b633ae6aa28650003406334","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:09:58.517Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633132aa286500034062bc","ref":"","in":"query","required":false,"desc":"Whether to load the member as a nested resource. See [Members Nested Resource](#members-nested-resource)","default":"true","type":"boolean","name":"member"},{"_id":"5b6331dd2f199700032816bd","ref":"","in":"query","required":false,"desc":"Whether to load the emoji as a nested resource.","default":"true","type":"boolean","name":"emoji"},{"_id":"5b633ae6aa28650003406335","ref":"","in":"path","required":false,"desc":"The ID of the reaction","default":"","type":"string","name":"id"}],"url":"/actions/{idAction}/reactions/{id}","method":"get"},"isReference":true,"order":3,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n  \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n  \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"idEmoji\\\": \\\"1F64C\\\",\\n  \\\"member\\\": {\\n    \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n    \\\"initials\\\": \\\"FH\\\",\\n    \\\"username\\\": \\\"fhaehnel\\\"\\n  },\\n  \\\"emoji\\\": {\\n    \\\"unified\\\": \\\"1F64C\\\",\\n    \\\"native\\\": \\\"üôå\\\",\\n    \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n    \\\"skinVariation\\\": null,\\n    \\\"shortName\\\": \\\"raised_hands\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get information for a reaction","slug":"actionsidactionreactionsid","type":"endpoint","title":"/actions/{idAction}/reactions/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.689Z","swagger":{"path":"/actions/{idAction}/reactions/{id}"}},{"_id":"5b6345d62f1997000328177f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:56:38.945Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"}],"url":"/actions/{idAction}/reactionsSummary","method":"get"},"isReference":true,"order":4,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"count\\\": 2,\\n    \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4:1F64C\\\",\\n    \\\"firstReacted\\\": \\\"2018-05-16T13:58:34.000Z\\\",\\n    \\\"idEmoji\\\": \\\"1F64C\\\",\\n    \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n    \\\"idReaction\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n    \\\"emoji\\\": {\\n      \\\"unified\\\": \\\"1F64C\\\",\\n      \\\"native\\\": \\\"üôå\\\",\\n      \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n      \\\"skinVariation\\\": null,\\n      \\\"shortName\\\": \\\"raised_hands\\\"\\n    }\\n  }\\n]'\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List a summary of all reactions for an action","slug":"actionsidactionreactionssummary","type":"endpoint","title":"/actions/{idAction}/reactionsSummary","__v":0,"updatedAt":"2019-06-10T14:28:52.690Z","swagger":{"path":"/actions/{idAction}/reactionsSummary"}},{"_id":"5b63431581f64e00036a5972","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"592599f5d15a9d1900be545c","updates":["5c2516a70dd8470218dc1f81"],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:44:53.506Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b63431581f64e00036a5976","ref":"","in":"body","required":false,"desc":"The primary `shortName` of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"shortName"},{"_id":"5b63431581f64e00036a5975","ref":"","in":"body","required":false,"desc":"The `skinVariation` of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"skinVariation"},{"_id":"5b63431581f64e00036a5974","ref":"","in":"body","required":false,"desc":"The emoji to add as a native unicode emoji. See [/emoji](#emoji)","default":"","type":"string","name":"native"},{"_id":"5b63431581f64e00036a5973","ref":"","in":"body","required":false,"desc":"The `unified` value of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"unified"}],"url":"/actions/{idAction}/reactions","method":"post"},"isReference":true,"order":5,"body":"Adds a new reaction to the action with ID `idAction`.\n\nReactions can be added to actions of the following type:\n\n- `commentCard`\n\nThe request body can be made up of multiple values, but only certain combinations are valid. Trello will choose the first valid value or value combination. \n\nSome example combinations are: \n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Value\",\n    \"h-1\": \"Resulting Emoji\",\n    \"0-0\": \"```json\\n{\\n  \\\"unified\\\": \\\"1F44D-1F3FC\\\"\\n}\\n```\",\n    \"0-1\": \"üëçüèº\",\n    \"1-0\": \"```json\\n{\\n  \\\"unified\\\": \\\"1F44D-1F3FC\\\",\\n  \\\"skinVariation\\\": \\\"1F3FF\\\"\\n}\\n```\",\n    \"1-1\": \"üëçüèº\\n\\n_Note:_ The `skinVariation` value is ignored, because `unified` is already a fully qualified emoji identifier, which includes a skinVariation.\",\n    \"h-2\": \"Notes\",\n    \"1-2\": \"The `skinVariation` value is ignored, because `unified` is already a fully qualified emoji identifier, which includes a `skinVariation`.\",\n    \"2-0\": \"```json\\n{\\n  \\\"shortName\\\": \\\"thumbsup\\\",\\n  \\\"skinVariation\\\": \\\"1F3FF\\\"\\n}\\n```\",\n    \"2-1\": \"üëçüèø\",\n    \"3-0\": \"```json\\n{\\n  \\\"native\\\": \\\"üëç\\\"\\n}\\n```\",\n    \"3-1\": \"üëç\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n  \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n  \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"idEmoji\\\": \\\"1F64C\\\",\\n  \\\"member\\\": {\\n    \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n    \\\"initials\\\": \\\"FH\\\",\\n    \\\"username\\\": \\\"fhaehnel\\\"\\n  },\\n  \\\"emoji\\\": {\\n    \\\"unified\\\": \\\"1F64C\\\",\\n    \\\"native\\\": \\\"üôå\\\",\\n    \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n    \\\"skinVariation\\\": null,\\n    \\\"shortName\\\": \\\"raised_hands\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Adds a new reaction to an action","slug":"actionsidactionreactions-1","type":"endpoint","title":"/actions/{idAction}/reactions","__v":9,"updatedAt":"2019-06-10T14:28:52.690Z","swagger":{"path":"/actions/{idAction}/reactions"}},{"_id":"5b6345407a7d8600034ea01f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:54:08.111Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633ae6aa28650003406335","ref":"","in":"path","required":false,"desc":"The ID of the reaction","default":"","type":"string","name":"id"}],"url":"/actions/{idAction}/reactions/{id}","method":"delete"},"isReference":true,"order":6,"body":"","excerpt":"Deletes a reaction","slug":"actionsidactionreactionsid-1","type":"endpoint","title":"/actions/{idAction}/reactions/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.691Z","swagger":{"path":"/actions/{idAction}/reactions/{id}"}}]},{"_id":"5b63461fdee08700038538f2","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","parentDoc":"5b6325c3aa286500034061c9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:57:51.678Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Reactions are often included as [nested resources](ref:understanding-nested-resources) within the Trello API. Their highly-nested nature is due to the fact that reactions are created within the context of actions.\nFor instance, when a user reacts to a comment on a card, Trello creates a reaction that references the action. Therefore, it makes sense to be able to access all of the reactions within the context of the action on which they were created.\n[block:api-header]\n{\n  \"title\": \"Nested Reactions with Query Params\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Default\",\n    \"h-3\": \"Description\",\n    \"0-0\": \"**reactions**\\nboolean\",\n    \"1-0\": \"**reactionsSummary**\\nboolean\",\n    \"0-1\": \"`true`, `false`\",\n    \"0-2\": \"`false`\",\n    \"0-3\": \"Boolean to return reactions entities or not.\",\n    \"1-1\": \"`true`, `false`\",\n    \"1-2\": \"`false`\",\n    \"1-3\": \"Boolean to return reactions summary entities or not.\",\n    \"2-0\": \"**reactions_member**\\nboolean\",\n    \"2-1\": \"`true`, `false`\",\n    \"2-2\": \"`true`\",\n    \"2-3\": \"Boolean to return nested member entities for reactions or not.\",\n    \"4-0\": \"**reactions_emoji**\\nboolean\",\n    \"4-1\": \"`true`, `false`\",\n    \"4-2\": \"`true`\",\n    \"4-3\": \"Boolean to return nested emoji entities for reactions or not.\",\n    \"3-0\": \"**reactions_member_fields**\\nstring\",\n    \"3-1\": \"String\",\n    \"3-2\": \"avatarHash,avatarUrl,fullName,initials,username\",\n    \"3-3\": \"The fields to be returned if the member object is being returned.\"\n  },\n  \"cols\": 4,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl --request GET \\\\\\n  --url https://api.trello.com/1/actions/id?reactions=true\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"reactions\\\": [\\n    {\\n      \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n      \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n      \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n      \\\"idEmoji\\\": \\\"1F64C\\\",\\n      \\\"member\\\": {\\n        \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n        \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n        \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n        \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n        \\\"initials\\\": \\\"FH\\\",\\n        \\\"username\\\": \\\"fhaehnel\\\"\\n      },\\n      \\\"emoji\\\": {\\n        \\\"unified\\\": \\\"1F64C\\\",\\n        \\\"native\\\": \\\"üôå\\\",\\n        \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n        \\\"skinVariation\\\": null,\\n        \\\"shortName\\\": \\\"raised_hands\\\"\\n      }\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl --request GET \\\\\\n  --url https://api.trello.com/1/cards/id?actions=commentCard&action_reactions=true\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5a2ee8e4c0fddff47c596129\\\",\\n  \\\"actions\\\": [\\n    {\\n      \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n      \\\"reactions\\\": [\\n        {\\n          \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n          \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n          \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n          \\\"idEmoji\\\": \\\"1F64C\\\",\\n          \\\"member\\\": {\\n            \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n            \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n            \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n            \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n            \\\"initials\\\": \\\"FH\\\",\\n            \\\"username\\\": \\\"fhaehnel\\\"\\n          },\\n          \\\"emoji\\\": {\\n            \\\"unified\\\": \\\"1F64C\\\",\\n            \\\"native\\\": \\\"üôå\\\",\\n            \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n            \\\"skinVariation\\\": null,\\n            \\\"shortName\\\": \\\"raised_hands\\\"\\n          }\\n        }\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"reactions-nested-resource","type":"basic","title":"Reactions Nested Resource","__v":0,"updatedAt":"2019-06-10T14:28:52.688Z"},{"_id":"5b632b7b2f19970003281643","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","user":"5938225a1316ed000f78400f","parentDoc":"5b6325c3aa286500034061c9","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T16:04:11.333Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"language":"text","code":""}]},"auth":"never","params":[{"_id":"5b632b7b2f19970003281645","ref":"","in":"query","required":false,"desc":"The locale to return emoji descriptions and names in. Defaults to the logged in member's locale.","default":"","type":"string","name":"locale"},{"_id":"5b632b7b2f19970003281644","ref":"","in":"query","required":false,"desc":"`true` to return spritesheet URLs in the response","default":"false","type":"boolean","name":"spritesheets"}],"url":"/emoji","method":"get"},"isReference":true,"order":1,"body":"Lists all available emoji for use in Trello reactions.\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"trello\\\": [\\n    {\\n      \\\"unified\\\": \\\"1F44D\\\",\\n      \\\"name\\\": \\\"THUMBS UP SIGN\\\",\\n      \\\"native\\\": \\\"üëç\\\",\\n      \\\"shortName\\\": \\\"+1\\\",\\n      \\\"shortNames\\\": [\\n        \\\"+1\\\",\\n        \\\"thumbsup\\\"\\n      ],\\n      \\\"text\\\": null,\\n      \\\"texts\\\": null,\\n      \\\"category\\\": \\\"Smileys & People\\\",\\n      \\\"sheetX\\\": 14,\\n      \\\"sheetY\\\": 49,\\n      \\\"skinVariations\\\": {\\n        \\\"1F3FB\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FB\\\",\\n          \\\"native\\\": \\\"üëçüèª\\\",\\n          \\\"sheetX\\\": 14,\\n          \\\"sheetY\\\": 50\\n        },\\n        \\\"1F3FC\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FC\\\",\\n          \\\"native\\\": \\\"üëçüèº\\\",\\n          \\\"sheetX\\\": 14,\\n          \\\"sheetY\\\": 51\\n        },\\n        \\\"1F3FD\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FD\\\",\\n          \\\"native\\\": \\\"üëçüèΩ\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 0\\n        },\\n        \\\"1F3FE\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FE\\\",\\n          \\\"native\\\": \\\"üëçüèæ\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 1\\n        },\\n        \\\"1F3FF\\\": {\\n          \\\"unified\\\": \\\"1F44D-1F3FF\\\",\\n          \\\"native\\\": \\\"üëçüèø\\\",\\n          \\\"sheetX\\\": 15,\\n          \\\"sheetY\\\": 2\\n        }\\n      },\\n      \\\"tts\\\": \\\"thumbs up\\\",\\n      \\\"keywords\\\": [\\n        \\\"+1\\\",\\n        \\\"hand\\\",\\n        \\\"thumb\\\",\\n        \\\"thumbs up\\\",\\n        \\\"up\\\"\\n      ]\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List available emoji","slug":"emoji","type":"endpoint","title":"/emoji","__v":8,"updatedAt":"2019-06-10T14:28:52.688Z","swagger":{"path":"/emoji"}},{"_id":"5b632fc481f64e00036a58be","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T16:22:28.850Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633132aa286500034062bc","ref":"","in":"query","required":false,"desc":"Whether to load the member as a nested resource. See [Members Nested Resource](#members-nested-resource)","default":"true","type":"boolean","name":"member"},{"_id":"5b6331dd2f199700032816bd","ref":"","in":"query","required":false,"desc":"Whether to load the emoji as a nested resource.","default":"true","type":"boolean","name":"emoji"}],"url":"/actions/{idAction}/reactions","method":"get"},"isReference":true,"order":2,"body":"List reactions to the action `idAction`. \n\nReactions are sorted by date first added, oldest to newest.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n    \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n    \\\"idEmoji\\\": \\\"1F64C\\\",\\n    \\\"member\\\": {\\n      \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n      \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n      \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n      \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n      \\\"initials\\\": \\\"FH\\\",\\n      \\\"username\\\": \\\"fhaehnel\\\"\\n    },\\n    \\\"emoji\\\": {\\n      \\\"unified\\\": \\\"1F64C\\\",\\n      \\\"native\\\": \\\"üôå\\\",\\n      \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n      \\\"skinVariation\\\": null,\\n      \\\"shortName\\\": \\\"raised_hands\\\"\\n    }\\n  }\\n]\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List reactions for an action","slug":"actionsidactionreactions","type":"endpoint","title":"/actions/{idAction}/reactions","__v":5,"updatedAt":"2019-06-10T14:28:52.689Z","swagger":{"path":"/actions/{idAction}/reactions"}},{"_id":"5b633ae6aa28650003406334","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:09:58.517Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633132aa286500034062bc","ref":"","in":"query","required":false,"desc":"Whether to load the member as a nested resource. See [Members Nested Resource](#members-nested-resource)","default":"true","type":"boolean","name":"member"},{"_id":"5b6331dd2f199700032816bd","ref":"","in":"query","required":false,"desc":"Whether to load the emoji as a nested resource.","default":"true","type":"boolean","name":"emoji"},{"_id":"5b633ae6aa28650003406335","ref":"","in":"path","required":false,"desc":"The ID of the reaction","default":"","type":"string","name":"id"}],"url":"/actions/{idAction}/reactions/{id}","method":"get"},"isReference":true,"order":3,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n  \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n  \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"idEmoji\\\": \\\"1F64C\\\",\\n  \\\"member\\\": {\\n    \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n    \\\"initials\\\": \\\"FH\\\",\\n    \\\"username\\\": \\\"fhaehnel\\\"\\n  },\\n  \\\"emoji\\\": {\\n    \\\"unified\\\": \\\"1F64C\\\",\\n    \\\"native\\\": \\\"üôå\\\",\\n    \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n    \\\"skinVariation\\\": null,\\n    \\\"shortName\\\": \\\"raised_hands\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Get information for a reaction","slug":"actionsidactionreactionsid","type":"endpoint","title":"/actions/{idAction}/reactions/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.689Z","swagger":{"path":"/actions/{idAction}/reactions/{id}"}},{"_id":"5b6345d62f1997000328177f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:56:38.945Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"}],"url":"/actions/{idAction}/reactionsSummary","method":"get"},"isReference":true,"order":4,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"[\\n  {\\n    \\\"count\\\": 2,\\n    \\\"id\\\": \\\"5afc2c98bb0aa3d078e30be4:1F64C\\\",\\n    \\\"firstReacted\\\": \\\"2018-05-16T13:58:34.000Z\\\",\\n    \\\"idEmoji\\\": \\\"1F64C\\\",\\n    \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n    \\\"idReaction\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n    \\\"emoji\\\": {\\n      \\\"unified\\\": \\\"1F64C\\\",\\n      \\\"native\\\": \\\"üôå\\\",\\n      \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n      \\\"skinVariation\\\": null,\\n      \\\"shortName\\\": \\\"raised_hands\\\"\\n    }\\n  }\\n]'\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"List a summary of all reactions for an action","slug":"actionsidactionreactionssummary","type":"endpoint","title":"/actions/{idAction}/reactionsSummary","__v":0,"updatedAt":"2019-06-10T14:28:52.690Z","swagger":{"path":"/actions/{idAction}/reactionsSummary"}},{"_id":"5b63431581f64e00036a5972","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"592599f5d15a9d1900be545c","updates":["5c2516a70dd8470218dc1f81"],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:44:53.506Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[]},"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b63431581f64e00036a5976","ref":"","in":"body","required":false,"desc":"The primary `shortName` of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"shortName"},{"_id":"5b63431581f64e00036a5975","ref":"","in":"body","required":false,"desc":"The `skinVariation` of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"skinVariation"},{"_id":"5b63431581f64e00036a5974","ref":"","in":"body","required":false,"desc":"The emoji to add as a native unicode emoji. See [/emoji](#emoji)","default":"","type":"string","name":"native"},{"_id":"5b63431581f64e00036a5973","ref":"","in":"body","required":false,"desc":"The `unified` value of the emoji to add. See [/emoji](#emoji)","default":"","type":"string","name":"unified"}],"url":"/actions/{idAction}/reactions","method":"post"},"isReference":true,"order":5,"body":"Adds a new reaction to the action with ID `idAction`.\n\nReactions can be added to actions of the following type:\n\n- `commentCard`\n\nThe request body can be made up of multiple values, but only certain combinations are valid. Trello will choose the first valid value or value combination. \n\nSome example combinations are: \n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Value\",\n    \"h-1\": \"Resulting Emoji\",\n    \"0-0\": \"```json\\n{\\n  \\\"unified\\\": \\\"1F44D-1F3FC\\\"\\n}\\n```\",\n    \"0-1\": \"üëçüèº\",\n    \"1-0\": \"```json\\n{\\n  \\\"unified\\\": \\\"1F44D-1F3FC\\\",\\n  \\\"skinVariation\\\": \\\"1F3FF\\\"\\n}\\n```\",\n    \"1-1\": \"üëçüèº\\n\\n_Note:_ The `skinVariation` value is ignored, because `unified` is already a fully qualified emoji identifier, which includes a skinVariation.\",\n    \"h-2\": \"Notes\",\n    \"1-2\": \"The `skinVariation` value is ignored, because `unified` is already a fully qualified emoji identifier, which includes a `skinVariation`.\",\n    \"2-0\": \"```json\\n{\\n  \\\"shortName\\\": \\\"thumbsup\\\",\\n  \\\"skinVariation\\\": \\\"1F3FF\\\"\\n}\\n```\",\n    \"2-1\": \"üëçüèø\",\n    \"3-0\": \"```json\\n{\\n  \\\"native\\\": \\\"üëç\\\"\\n}\\n```\",\n    \"3-1\": \"üëç\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"5afeec8fb0850e36938e465b\\\",\\n  \\\"idMember\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n  \\\"idModel\\\": \\\"5afc2c98bb0aa3d078e30be4\\\",\\n  \\\"idEmoji\\\": \\\"1F64C\\\",\\n  \\\"member\\\": {\\n    \\\"id\\\": \\\"54f8181e733cf3c45ec056be\\\",\\n    \\\"avatarHash\\\": \\\"0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"avatarUrl\\\": \\\"https://trello-avatars.s3.amazonaws.com/0fdb1227362c631f7dddaebedbe13f07\\\",\\n    \\\"fullName\\\": \\\"Felix Haehnel\\\",\\n    \\\"initials\\\": \\\"FH\\\",\\n    \\\"username\\\": \\\"fhaehnel\\\"\\n  },\\n  \\\"emoji\\\": {\\n    \\\"unified\\\": \\\"1F64C\\\",\\n    \\\"native\\\": \\\"üôå\\\",\\n    \\\"name\\\": \\\"PERSON RAISING BOTH HANDS IN CELEBRATION\\\",\\n    \\\"skinVariation\\\": null,\\n    \\\"shortName\\\": \\\"raised_hands\\\"\\n  }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"Adds a new reaction to an action","slug":"actionsidactionreactions-1","type":"endpoint","title":"/actions/{idAction}/reactions","__v":9,"updatedAt":"2019-06-10T14:28:52.690Z","swagger":{"path":"/actions/{idAction}/reactions"}},{"_id":"5b6345407a7d8600034ea01f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5928856394d9382f0096d7f4","parentDoc":"5b6325c3aa286500034061c9","user":"5938225a1316ed000f78400f","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-02T17:54:08.111Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2","auth":"required","params":[{"_id":"5b632e847a7d8600034e9f3e","ref":"","in":"path","required":false,"desc":"The ID of the action","default":"","type":"string","name":"idAction"},{"_id":"5b633ae6aa28650003406335","ref":"","in":"path","required":false,"desc":"The ID of the reaction","default":"","type":"string","name":"id"}],"url":"/actions/{idAction}/reactions/{id}","method":"delete"},"isReference":true,"order":6,"body":"","excerpt":"Deletes a reaction","slug":"actionsidactionreactionsid-1","type":"endpoint","title":"/actions/{idAction}/reactions/{id}","__v":0,"updatedAt":"2019-06-10T14:28:52.691Z","swagger":{"path":"/actions/{idAction}/reactions/{id}"}},{"_id":"59447fe49b82a9000f9ecafb","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":["59c1375b90619a003a2cb59c","5a6210afda07540012e8dbdb"],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:03:32.916Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"The Search API allows you to perform the same search that is available within Trello at the top of the window. This means that you can use modifiers such as edited:day within the query to modify the results you get back.\n\nSearch operators help you find specific cards and create highly tailored lists. You can add **‚Äú-‚Äù** to any operator to do a negative search, such as **-has:members** to search for cards without any members assigned.\n\n**@name**\nReturns cards assigned to a member. **member:** also works. **@me** will include only your cards.\n\n**#label**\nReturns labeled cards. **label:** also works.\n\n**board:id**\nReturns cards within a specific board. You can search by board name, too, such as **‚Äúboard:Trello‚Äù** to search only cards on boards with Trello in the board name.\n\n**list:name**\nReturns cards within the list named ‚Äúname‚Äù. Or whatever you type besides ‚Äúname‚Äù.\n\n**has:attachments**\nReturns cards with attachments. **has:description**, **has:cover**, **has:members**, and **has:stickers** also work as you would expect.\n\n**due:day**\nReturns cards due within 24 hours. **due:week**, **due:month**, and **due:overdue** also work as expected. You can search for a specific day range. For example, adding **due:14** to search will include cards due in the next 14 days. You can also search for **due:complete** or **due:incomplete** to search for due dates that are marked as complete or incomplete.\n\n**created:day**\nReturns cards created in the last 24 hours. **created:week** and **created:month** also work as expected. You can search for a specific day range. For example, adding **created:14** to the search will include cards created in the last 14 days.\n\n**edited:day**\nReturns cards edited in the last 24 hours. **edited:week** and **edited:month** also work as expected. You can search for a specific day range. For example, adding **edited:21** to the search will include cards edited in the last 21 days.\n\n**description:, checklist:, comment:, and name:**\nReturns cards matching the text of card descriptions, checklists, comments, or names. For example, **comment:\"FIX IT\"** will return cards with ‚ÄúFIX IT‚Äù in a comment.\n\n**is:open and is:archived**\nReturns cards that are either open or archived. Trello returns both types by default.\n\n**is:starred**\nOnly include cards on starred boards.\n\n**sort:created**\nSorts cards by date created. **sort:edited** and **sort:due** also work as expected.\n\nCertain types of modifiers will restrict the types of objects that are returned with your search. One example of this is the edited modifier which will meant that your search will only contain Cards.","excerpt":"","slug":"search","type":"basic","title":"Search","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.691Z","children":[{"_id":"5944800020a546000ffc38b2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59447fe49b82a9000f9ecafb","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:04:00.310Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5944821c20a546000ffc38c0","ref":"","in":"query","required":true,"desc":"The search query with a length of 1 to 16384 characters","default":"","type":"string","name":"query"},{"_id":"5944821c20a546000ffc38bf","ref":"","in":"query","required":false,"desc":"mine or a comma-separated list of board ids","default":"mine","type":"string","name":"idBoards"},{"_id":"5944821c20a546000ffc38be","ref":"","in":"query","required":false,"desc":"A comma-separated list of team ids","default":"","type":"string","name":"idOrganizations"},{"_id":"5944821c20a546000ffc38bd","ref":"","in":"query","required":false,"desc":"A comma-separated list of card ids","default":"","type":"string","name":"idCards"},{"_id":"5944821c20a546000ffc38bc","ref":"","in":"query","required":false,"desc":"What type or types of Trello objects you want to search. all or a comma-separated list of: actions, boards, cards, members, organizations","default":"all","type":"string","name":"modelTypes"},{"_id":"5944821c20a546000ffc38bb","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url","default":"name,idOrganization","type":"string","name":"board_fields"},{"_id":"5944821c20a546000ffc38ba","ref":"","in":"query","required":false,"desc":"The maximum number of boards returned. Maximum: 1000","default":"10","type":"int","name":"boards_limit"},{"_id":"5944821c20a546000ffc38b9","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url","default":"all","type":"string","name":"card_fields"},{"_id":"5944821c20a546000ffc38b8","ref":"","in":"query","required":false,"desc":"The maximum number of cards to return. Maximum: 1000","default":"10","type":"int","name":"cards_limit"},{"_id":"5944821c20a546000ffc38b7","ref":"","in":"query","required":false,"desc":"The page of results for cards. Maximum: 100","default":"0","type":"int","name":"cards_page"},{"_id":"5944821c20a546000ffc38b6","ref":"","in":"query","required":false,"desc":"Whether to include the parent board with card results","default":"false","type":"boolean","name":"card_board"},{"_id":"5944821c20a546000ffc38b5","ref":"","in":"query","required":false,"desc":"Whether to include the parent list with card results","default":"false","type":"boolean","name":"card_list"},{"_id":"5944821c20a546000ffc38b4","ref":"","in":"query","required":false,"desc":"Whether to include member objects with card results","default":"false","type":"boolean","name":"card_members"},{"_id":"5944821c20a546000ffc38b3","ref":"","in":"query","required":false,"desc":"Whether to include sticker objects with card results","default":"false","type":"boolean","name":"card_stickers"},{"_id":"5944833526bbe6000f2b6c24","ref":"","in":"query","required":false,"desc":"Whether to include attachment objects with card results. A boolean value (true or false) or cover for only card cover attachments.","default":"false","type":"string","name":"card_attachments"},{"_id":"5944833526bbe6000f2b6c23","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website","default":"name,displayName","type":"string","name":"organization_fields"},{"_id":"5944833526bbe6000f2b6c22","ref":"","in":"query","required":false,"desc":"The maximum number of teams to return. Maximum 1000","default":"10","type":"int","name":"organizations_limit"},{"_id":"5944833526bbe6000f2b6c21","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"avatarHash,fullName,initials,username,confirmed","type":"string","name":"member_fields"},{"_id":"5944833526bbe6000f2b6c20","ref":"","in":"query","required":false,"desc":"The maximum number of members to return. Maximum 1000","default":"10","type":"int","name":"members_limit"},{"_id":"5944833526bbe6000f2b6c1f","ref":"","in":"query","required":false,"desc":"By default, Trello searches for each word in your query against exactly matching words within Member content. Specifying partial to be true means that we will look for content that starts with any of the words in your query.  If you are looking for a Card titled \"My Development Status Report\", by default you would need to search for \"Development\". If you have partial enabled, you will be able to search for \"dev\" but not \"velopment\".","default":"false","type":"boolean","name":"partial"}],"url":"/search","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Search Index Latency\",\n  \"body\": \"It can take Trello up to ~60 seconds to update our search index to changes. This means if you make a change to a card for instance, then immediately execute a search for it, it may not show up. Or if you remove a label from a card, then immediately search for that label, that card will still appear in the search results.\"\n}\n[/block]","excerpt":"Find what you're looking for in Trello","slug":"search-1","type":"endpoint","title":"/search","__v":3,"updatedAt":"2019-06-10T14:28:52.693Z","swagger":{"path":"/search"}},{"_id":"59448013bc74a3000f35f3c3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447fe49b82a9000f9ecafb","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:04:19.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5944807b492ff7000f85e74d","ref":"","in":"query","required":true,"desc":"Search query 1 to 16384 characters long","default":"","type":"string","name":"query"},{"_id":"5944807b492ff7000f85e74c","ref":"","in":"query","required":false,"desc":"The maximum number of results to return. Maximum of 20.","default":"8","type":"int","name":"limit"},{"_id":"5944807b492ff7000f85e74b","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"idBoard"},{"_id":"5944807b492ff7000f85e74a","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"idOrganization"},{"_id":"5944807b492ff7000f85e749","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"onlyOrgMembers"}],"url":"/search/members/","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Search for Trello members","slug":"searchmembers","type":"endpoint","title":"/search/members","__v":2,"updatedAt":"2019-06-10T14:28:52.693Z","swagger":{"path":"/search/members/"}}],"childrenPages":[{"_id":"5944800020a546000ffc38b2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59447fe49b82a9000f9ecafb","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:04:00.310Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5944821c20a546000ffc38c0","ref":"","in":"query","required":true,"desc":"The search query with a length of 1 to 16384 characters","default":"","type":"string","name":"query"},{"_id":"5944821c20a546000ffc38bf","ref":"","in":"query","required":false,"desc":"mine or a comma-separated list of board ids","default":"mine","type":"string","name":"idBoards"},{"_id":"5944821c20a546000ffc38be","ref":"","in":"query","required":false,"desc":"A comma-separated list of team ids","default":"","type":"string","name":"idOrganizations"},{"_id":"5944821c20a546000ffc38bd","ref":"","in":"query","required":false,"desc":"A comma-separated list of card ids","default":"","type":"string","name":"idCards"},{"_id":"5944821c20a546000ffc38bc","ref":"","in":"query","required":false,"desc":"What type or types of Trello objects you want to search. all or a comma-separated list of: actions, boards, cards, members, organizations","default":"all","type":"string","name":"modelTypes"},{"_id":"5944821c20a546000ffc38bb","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url","default":"name,idOrganization","type":"string","name":"board_fields"},{"_id":"5944821c20a546000ffc38ba","ref":"","in":"query","required":false,"desc":"The maximum number of boards returned. Maximum: 1000","default":"10","type":"int","name":"boards_limit"},{"_id":"5944821c20a546000ffc38b9","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url","default":"all","type":"string","name":"card_fields"},{"_id":"5944821c20a546000ffc38b8","ref":"","in":"query","required":false,"desc":"The maximum number of cards to return. Maximum: 1000","default":"10","type":"int","name":"cards_limit"},{"_id":"5944821c20a546000ffc38b7","ref":"","in":"query","required":false,"desc":"The page of results for cards. Maximum: 100","default":"0","type":"int","name":"cards_page"},{"_id":"5944821c20a546000ffc38b6","ref":"","in":"query","required":false,"desc":"Whether to include the parent board with card results","default":"false","type":"boolean","name":"card_board"},{"_id":"5944821c20a546000ffc38b5","ref":"","in":"query","required":false,"desc":"Whether to include the parent list with card results","default":"false","type":"boolean","name":"card_list"},{"_id":"5944821c20a546000ffc38b4","ref":"","in":"query","required":false,"desc":"Whether to include member objects with card results","default":"false","type":"boolean","name":"card_members"},{"_id":"5944821c20a546000ffc38b3","ref":"","in":"query","required":false,"desc":"Whether to include sticker objects with card results","default":"false","type":"boolean","name":"card_stickers"},{"_id":"5944833526bbe6000f2b6c24","ref":"","in":"query","required":false,"desc":"Whether to include attachment objects with card results. A boolean value (true or false) or cover for only card cover attachments.","default":"false","type":"string","name":"card_attachments"},{"_id":"5944833526bbe6000f2b6c23","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website","default":"name,displayName","type":"string","name":"organization_fields"},{"_id":"5944833526bbe6000f2b6c22","ref":"","in":"query","required":false,"desc":"The maximum number of teams to return. Maximum 1000","default":"10","type":"int","name":"organizations_limit"},{"_id":"5944833526bbe6000f2b6c21","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"avatarHash,fullName,initials,username,confirmed","type":"string","name":"member_fields"},{"_id":"5944833526bbe6000f2b6c20","ref":"","in":"query","required":false,"desc":"The maximum number of members to return. Maximum 1000","default":"10","type":"int","name":"members_limit"},{"_id":"5944833526bbe6000f2b6c1f","ref":"","in":"query","required":false,"desc":"By default, Trello searches for each word in your query against exactly matching words within Member content. Specifying partial to be true means that we will look for content that starts with any of the words in your query.  If you are looking for a Card titled \"My Development Status Report\", by default you would need to search for \"Development\". If you have partial enabled, you will be able to search for \"dev\" but not \"velopment\".","default":"false","type":"boolean","name":"partial"}],"url":"/search","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Search Index Latency\",\n  \"body\": \"It can take Trello up to ~60 seconds to update our search index to changes. This means if you make a change to a card for instance, then immediately execute a search for it, it may not show up. Or if you remove a label from a card, then immediately search for that label, that card will still appear in the search results.\"\n}\n[/block]","excerpt":"Find what you're looking for in Trello","slug":"search-1","type":"endpoint","title":"/search","__v":3,"updatedAt":"2019-06-10T14:28:52.693Z","swagger":{"path":"/search"}},{"_id":"59448013bc74a3000f35f3c3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447fe49b82a9000f9ecafb","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:04:19.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5944807b492ff7000f85e74d","ref":"","in":"query","required":true,"desc":"Search query 1 to 16384 characters long","default":"","type":"string","name":"query"},{"_id":"5944807b492ff7000f85e74c","ref":"","in":"query","required":false,"desc":"The maximum number of results to return. Maximum of 20.","default":"8","type":"int","name":"limit"},{"_id":"5944807b492ff7000f85e74b","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"idBoard"},{"_id":"5944807b492ff7000f85e74a","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"idOrganization"},{"_id":"5944807b492ff7000f85e749","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"onlyOrgMembers"}],"url":"/search/members/","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Search for Trello members","slug":"searchmembers","type":"endpoint","title":"/search/members","__v":2,"updatedAt":"2019-06-10T14:28:52.693Z","swagger":{"path":"/search/members/"}}]},{"_id":"5944800020a546000ffc38b2","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","parentDoc":"59447fe49b82a9000f9ecafb","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:04:00.310Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5944821c20a546000ffc38c0","ref":"","in":"query","required":true,"desc":"The search query with a length of 1 to 16384 characters","default":"","type":"string","name":"query"},{"_id":"5944821c20a546000ffc38bf","ref":"","in":"query","required":false,"desc":"mine or a comma-separated list of board ids","default":"mine","type":"string","name":"idBoards"},{"_id":"5944821c20a546000ffc38be","ref":"","in":"query","required":false,"desc":"A comma-separated list of team ids","default":"","type":"string","name":"idOrganizations"},{"_id":"5944821c20a546000ffc38bd","ref":"","in":"query","required":false,"desc":"A comma-separated list of card ids","default":"","type":"string","name":"idCards"},{"_id":"5944821c20a546000ffc38bc","ref":"","in":"query","required":false,"desc":"What type or types of Trello objects you want to search. all or a comma-separated list of: actions, boards, cards, members, organizations","default":"all","type":"string","name":"modelTypes"},{"_id":"5944821c20a546000ffc38bb","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed, url","default":"name,idOrganization","type":"string","name":"board_fields"},{"_id":"5944821c20a546000ffc38ba","ref":"","in":"query","required":false,"desc":"The maximum number of boards returned. Maximum: 1000","default":"10","type":"int","name":"boards_limit"},{"_id":"5944821c20a546000ffc38b9","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed, url","default":"all","type":"string","name":"card_fields"},{"_id":"5944821c20a546000ffc38b8","ref":"","in":"query","required":false,"desc":"The maximum number of cards to return. Maximum: 1000","default":"10","type":"int","name":"cards_limit"},{"_id":"5944821c20a546000ffc38b7","ref":"","in":"query","required":false,"desc":"The page of results for cards. Maximum: 100","default":"0","type":"int","name":"cards_page"},{"_id":"5944821c20a546000ffc38b6","ref":"","in":"query","required":false,"desc":"Whether to include the parent board with card results","default":"false","type":"boolean","name":"card_board"},{"_id":"5944821c20a546000ffc38b5","ref":"","in":"query","required":false,"desc":"Whether to include the parent list with card results","default":"false","type":"boolean","name":"card_list"},{"_id":"5944821c20a546000ffc38b4","ref":"","in":"query","required":false,"desc":"Whether to include member objects with card results","default":"false","type":"boolean","name":"card_members"},{"_id":"5944821c20a546000ffc38b3","ref":"","in":"query","required":false,"desc":"Whether to include sticker objects with card results","default":"false","type":"boolean","name":"card_stickers"},{"_id":"5944833526bbe6000f2b6c24","ref":"","in":"query","required":false,"desc":"Whether to include attachment objects with card results. A boolean value (true or false) or cover for only card cover attachments.","default":"false","type":"string","name":"card_attachments"},{"_id":"5944833526bbe6000f2b6c23","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url, website","default":"name,displayName","type":"string","name":"organization_fields"},{"_id":"5944833526bbe6000f2b6c22","ref":"","in":"query","required":false,"desc":"The maximum number of teams to return. Maximum 1000","default":"10","type":"int","name":"organizations_limit"},{"_id":"5944833526bbe6000f2b6c21","ref":"","in":"query","required":false,"desc":"all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url, username","default":"avatarHash,fullName,initials,username,confirmed","type":"string","name":"member_fields"},{"_id":"5944833526bbe6000f2b6c20","ref":"","in":"query","required":false,"desc":"The maximum number of members to return. Maximum 1000","default":"10","type":"int","name":"members_limit"},{"_id":"5944833526bbe6000f2b6c1f","ref":"","in":"query","required":false,"desc":"By default, Trello searches for each word in your query against exactly matching words within Member content. Specifying partial to be true means that we will look for content that starts with any of the words in your query.  If you are looking for a Card titled \"My Development Status Report\", by default you would need to search for \"Development\". If you have partial enabled, you will be able to search for \"dev\" but not \"velopment\".","default":"false","type":"boolean","name":"partial"}],"url":"/search","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Search Index Latency\",\n  \"body\": \"It can take Trello up to ~60 seconds to update our search index to changes. This means if you make a change to a card for instance, then immediately execute a search for it, it may not show up. Or if you remove a label from a card, then immediately search for that label, that card will still appear in the search results.\"\n}\n[/block]","excerpt":"Find what you're looking for in Trello","slug":"search-1","type":"endpoint","title":"/search","__v":3,"updatedAt":"2019-06-10T14:28:52.693Z","swagger":{"path":"/search"}},{"_id":"59448013bc74a3000f35f3c3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"59447fe49b82a9000f9ecafb","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-17T01:04:19.634Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5944807b492ff7000f85e74d","ref":"","in":"query","required":true,"desc":"Search query 1 to 16384 characters long","default":"","type":"string","name":"query"},{"_id":"5944807b492ff7000f85e74c","ref":"","in":"query","required":false,"desc":"The maximum number of results to return. Maximum of 20.","default":"8","type":"int","name":"limit"},{"_id":"5944807b492ff7000f85e74b","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"idBoard"},{"_id":"5944807b492ff7000f85e74a","ref":"","in":"query","required":false,"desc":"","default":"","type":"string","name":"idOrganization"},{"_id":"5944807b492ff7000f85e749","ref":"","in":"query","required":false,"desc":"","default":"false","type":"boolean","name":"onlyOrgMembers"}],"url":"/search/members/","method":"get","examples":{"codes":[]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Search for Trello members","slug":"searchmembers","type":"endpoint","title":"/search/members","__v":2,"updatedAt":"2019-06-10T14:28:52.693Z","swagger":{"path":"/search/members/"}},{"_id":"594d1207f4cb8a001bbe2bbc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":["5c0216f4fc4cee0014ebc7ab"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:05:11.662Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"","excerpt":"","slug":"tokens","type":"basic","title":"Tokens","__v":1,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.694Z","children":[{"_id":"5955450faddeab001b1ed38e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d1207f4cb8a001bbe2bbc","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T18:21:03.091Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/tokens/{token}?token={token}&key={key}"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"595aae12541974fda5c13ed4\",\n  \"identifier\": \"Server Token\",\n  \"idMember\": \"5919c0c0aa1ceaf89acc87wd\",\n  \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n  \"dateExpires\": null,\n  \"permissions\": [\n    {\n      \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n      \"modelType\": \"Member\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Board\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Organization\",\n      \"read\": true,\n      \"write\": true\n    }\n  ],\n  \"webhooks\": []\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"5955450faddeab001b1ed38f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `dateCreated`, `dateExpires`, `idMember`, `identifier`, `permissions`","default":"all","type":"string","name":"fields"},{"_id":"595aae3b06f0d400155af93e","ref":"","in":"query","required":false,"desc":"Determines whether to include webhooks.","default":"false","type":"boolean","name":"webhooks"}],"url":"/tokens/{token}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"","excerpt":"Retrieve information about a token.","slug":"tokenstoken","type":"endpoint","title":"/tokens/{token}","__v":2,"updatedAt":"2019-06-10T14:28:52.694Z","swagger":{"path":"/tokens/{token}"}},{"_id":"595aaf801b351b0055c5d401","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:56:32.104Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"595aae12541974fda5c13ed4\",\n  \"identifier\": \"Server Token\",\n  \"idMember\": \"5919c0c0aa1ceaf89acc87wd\",\n  \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n  \"dateExpires\": null,\n  \"permissions\": [\n    {\n      \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n      \"modelType\": \"Member\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Board\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Organization\",\n      \"read\": true,\n      \"write\": true\n    }\n  ],\n  \"webhooks\": []\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/tokens/{token}?token={token}&key={key}"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"5955450faddeab001b1ed38f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of valid fields for [Member Object](ref:member-object).","default":"all","type":"string","name":"fields"}],"url":"/tokens/{token}/member","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Retrieve information about a token's owner by token.","slug":"tokenstokenmember","type":"endpoint","title":"/tokens/{token}/member","__v":1,"updatedAt":"2019-06-10T14:28:52.695Z","swagger":{"path":"/tokens/{token}/member"}},{"_id":"595aafd62e3626002b8fdb16","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:57:58.421Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl https://api.trello.com/1/tokens/83736c6f7887saa9827220b485689caf0649512703dbd6c0996538fc8896dca7f/webhooks?key=8d1163022f2523f2bf1a184563892dfa5","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://trello.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"}],"url":"/tokens/{token}/webhooks","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Retrieve all webhooks created with a token.","slug":"tokenstokenwebhooks","type":"endpoint","title":"/tokens/{token}/webhooks","__v":0,"updatedAt":"2019-06-10T14:28:52.695Z","swagger":{"path":"/tokens/{token}/webhooks"}},{"_id":"595ab01174dc38001bf063f5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:58:57.965Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://trello.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl https://api.trello.com/1/tokens/83736c6f7887saa9827220b485689caf0649512703dbd6c0996538fc8896dca7f/webhooks/595ab2fe6b90aed2223416d0?key=8d1163022f2523f2bf1a184563892dfa5","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab0342e3626002b8fdb17","ref":"","in":"path","required":false,"desc":"ID of the [Webhooks](ref:webhooks) to retrieve.","default":"","type":"string","name":"idWebhook"}],"url":"/tokens/{token}/webhooks/{idWebhook}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Retrieve a webhook created with a token.","slug":"tokenstokenwebhooksidwebhook","type":"endpoint","title":"/tokens/{token}/webhooks/{idWebhook}","__v":1,"updatedAt":"2019-06-10T14:28:52.696Z","swagger":{"path":"/tokens/{token}/webhooks/{idWebhook}"}},{"_id":"5a3bf8b5849bad001c77c2d3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-12-21T18:08:53.648Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X \"POST\" https://api.trello.com/1/tokens/861992fc1098372fc304f0b4635621248561897703dbd6c4bf41f8c6c4bf41fc78f9878f912d/webhooks?idModel=54a17d76d4a5072e3931736b&callbackURL=https://mycallbackurl.com/&key=83746d11892523f2bf1aba93efc89fca"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://mycallbackurl.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab09a1799490033a71394","ref":"","in":"query","required":false,"desc":"A description to be displayed when retrieving information about the webhook.","default":"","type":"string","name":"description"},{"_id":"595ab09a1799490033a71393","ref":"","in":"query","required":true,"desc":"The URL that the webhook should POST information to.","default":"","type":"string","name":"callbackURL"},{"_id":"595ab09a1799490033a71392","ref":"","in":"query","required":true,"desc":"ID of the object to create a webhook on.","default":"","type":"string","name":"idModel"}],"url":"/tokens/{token}/webhooks","method":"post"},"isReference":true,"order":4,"body":"A guide for creating webhooks can be found [here](https://developers.trello.com/page/webhooks).","excerpt":"Create a new webhook for a token.","slug":"tokenstokenwebhooks-2","type":"endpoint","title":"/tokens/{token}/webhooks","__v":2,"updatedAt":"2019-06-10T14:28:52.696Z","swagger":{"path":"/tokens/{token}/webhooks"}},{"_id":"595ab09a1799490033a71391","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:01:14.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://mycallbackurl.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl -X \"PUT\" https://api.trello.com/1/tokens/1098372fc861992fc304f0b4856189746356212703dbd6c4bf41f8c6c78f9812c/webhooks/1098372fc861992fc304f0b485618974?idModel=54a17d76d4a5072e3931736b&callbackURL=https://mycallbackurl.com/&key=83746d11892523f2bf1aba93efc89fca","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"The token to which the webhook belongs","default":"","type":"string","name":"token"},{"_id":"595ab09a1799490033a71394","ref":"","in":"query","required":false,"desc":"A description to be displayed when retrieving information about the webhook.","default":"","type":"string","name":"description"},{"_id":"595ab09a1799490033a71393","ref":"","in":"query","required":true,"desc":"The URL that the webhook should POST information to.","default":"","type":"string","name":"callbackURL"},{"_id":"595ab09a1799490033a71392","ref":"","in":"query","required":true,"desc":"ID of the object to create a webhook on.","default":"","type":"string","name":"idModel"},{"_id":"5a3bfc6a849bad001c77c31b","ref":"","in":"path","required":false,"desc":"ID of the webhook to update","default":"","type":"string","name":"webhookId"}],"url":"/tokens/{token}/webhooks/{webhookId}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Update an existing webhook.","slug":"tokenstokenwebhooks-1","type":"endpoint","title":"/tokens/{token}/webhooks/{webhookId}","__v":3,"updatedAt":"2019-06-10T14:28:52.697Z","swagger":{"path":"/tokens/{token}/webhooks/{webhookId}"}},{"_id":"595ab1dc31c36a0015d9d4cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:06:36.628Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl -X \"DELETE\" https://api.trello.com/1/tokens/{token}/?key={key}","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_id\": \"595aae75cf1974fda5ce3b11\",\n    \"token\": \"1974fda5ce3b11595aae75cf1974fda5ce3b11595aae75595aae7\",\n    \"idMember\": \"5919c0c0aa1ceafadc8c5df0\",\n    \"idApplication\": \"5936e292b7aebc7b0db33a08\",\n    \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n    \"dateExpires\": \"2108-10-08T04:52:05.969Z\",\n    \"origin\": \"consent\",\n    \"permissions\": [\n        {\n            \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n            \"modelType\": \"Member\",\n            \"_id\": \"595aae75cf1974fda5ce3b14\",\n            \"write\": true,\n            \"read\": true\n        },\n        {\n            \"idModel\": \"*\",\n            \"modelType\": \"Board\",\n            \"_id\": \"595aae75cf1974fda5ce3b13\",\n            \"write\": true,\n            \"read\": true\n        },\n        {\n            \"idModel\": \"*\",\n            \"modelType\": \"Organization\",\n            \"_id\": \"595aae75cf1974fda5ce3b12\",\n            \"write\": true,\n            \"read\": true\n        }\n    ],\n    \"identifier\": \"Server Token\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"}],"url":"/tokens/{token}/","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Delete a token.","slug":"tokenstoken-1","type":"endpoint","title":"/tokens/{token}","__v":0,"updatedAt":"2019-06-10T14:28:52.697Z","swagger":{"path":"/tokens/{token}/"}},{"_id":"595ab25972a8c0003336c8a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:08:41.384Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_value\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl -X \"DELETE\" https://api.trello.com/1/tokens/1098372fc861992fc304f0b4856189746356212703dbd6c4bf41f8c6c78f9812c/webhooks/595ab2fe6b90aed2223416d0?key=83746d11892523f2bf1aba93efc89fca","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab25972a8c0003336c8a5","ref":"","in":"path","required":false,"desc":"ID of the [webhook](ref:webhooks) to delete.","default":"","type":"string","name":"idWebhook"}],"url":"/tokens/{token}/webhooks/{idWebhook}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Delete a webhook created with given token.","slug":"tokenstokenwebhooksidwebhook-1","type":"endpoint","title":"/tokens/{token}/webhooks/{idWebhook}","__v":0,"updatedAt":"2019-06-10T14:28:52.698Z","swagger":{"path":"/tokens/{token}/webhooks/{idWebhook}"}}],"childrenPages":[{"_id":"5955450faddeab001b1ed38e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d1207f4cb8a001bbe2bbc","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T18:21:03.091Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/tokens/{token}?token={token}&key={key}"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"595aae12541974fda5c13ed4\",\n  \"identifier\": \"Server Token\",\n  \"idMember\": \"5919c0c0aa1ceaf89acc87wd\",\n  \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n  \"dateExpires\": null,\n  \"permissions\": [\n    {\n      \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n      \"modelType\": \"Member\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Board\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Organization\",\n      \"read\": true,\n      \"write\": true\n    }\n  ],\n  \"webhooks\": []\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"5955450faddeab001b1ed38f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `dateCreated`, `dateExpires`, `idMember`, `identifier`, `permissions`","default":"all","type":"string","name":"fields"},{"_id":"595aae3b06f0d400155af93e","ref":"","in":"query","required":false,"desc":"Determines whether to include webhooks.","default":"false","type":"boolean","name":"webhooks"}],"url":"/tokens/{token}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"","excerpt":"Retrieve information about a token.","slug":"tokenstoken","type":"endpoint","title":"/tokens/{token}","__v":2,"updatedAt":"2019-06-10T14:28:52.694Z","swagger":{"path":"/tokens/{token}"}},{"_id":"595aaf801b351b0055c5d401","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:56:32.104Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"595aae12541974fda5c13ed4\",\n  \"identifier\": \"Server Token\",\n  \"idMember\": \"5919c0c0aa1ceaf89acc87wd\",\n  \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n  \"dateExpires\": null,\n  \"permissions\": [\n    {\n      \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n      \"modelType\": \"Member\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Board\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Organization\",\n      \"read\": true,\n      \"write\": true\n    }\n  ],\n  \"webhooks\": []\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/tokens/{token}?token={token}&key={key}"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"5955450faddeab001b1ed38f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of valid fields for [Member Object](ref:member-object).","default":"all","type":"string","name":"fields"}],"url":"/tokens/{token}/member","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Retrieve information about a token's owner by token.","slug":"tokenstokenmember","type":"endpoint","title":"/tokens/{token}/member","__v":1,"updatedAt":"2019-06-10T14:28:52.695Z","swagger":{"path":"/tokens/{token}/member"}},{"_id":"595aafd62e3626002b8fdb16","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:57:58.421Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl https://api.trello.com/1/tokens/83736c6f7887saa9827220b485689caf0649512703dbd6c0996538fc8896dca7f/webhooks?key=8d1163022f2523f2bf1a184563892dfa5","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://trello.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"}],"url":"/tokens/{token}/webhooks","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Retrieve all webhooks created with a token.","slug":"tokenstokenwebhooks","type":"endpoint","title":"/tokens/{token}/webhooks","__v":0,"updatedAt":"2019-06-10T14:28:52.695Z","swagger":{"path":"/tokens/{token}/webhooks"}},{"_id":"595ab01174dc38001bf063f5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:58:57.965Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://trello.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl https://api.trello.com/1/tokens/83736c6f7887saa9827220b485689caf0649512703dbd6c0996538fc8896dca7f/webhooks/595ab2fe6b90aed2223416d0?key=8d1163022f2523f2bf1a184563892dfa5","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab0342e3626002b8fdb17","ref":"","in":"path","required":false,"desc":"ID of the [Webhooks](ref:webhooks) to retrieve.","default":"","type":"string","name":"idWebhook"}],"url":"/tokens/{token}/webhooks/{idWebhook}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Retrieve a webhook created with a token.","slug":"tokenstokenwebhooksidwebhook","type":"endpoint","title":"/tokens/{token}/webhooks/{idWebhook}","__v":1,"updatedAt":"2019-06-10T14:28:52.696Z","swagger":{"path":"/tokens/{token}/webhooks/{idWebhook}"}},{"_id":"5a3bf8b5849bad001c77c2d3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-12-21T18:08:53.648Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X \"POST\" https://api.trello.com/1/tokens/861992fc1098372fc304f0b4635621248561897703dbd6c4bf41f8c6c4bf41fc78f9878f912d/webhooks?idModel=54a17d76d4a5072e3931736b&callbackURL=https://mycallbackurl.com/&key=83746d11892523f2bf1aba93efc89fca"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://mycallbackurl.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab09a1799490033a71394","ref":"","in":"query","required":false,"desc":"A description to be displayed when retrieving information about the webhook.","default":"","type":"string","name":"description"},{"_id":"595ab09a1799490033a71393","ref":"","in":"query","required":true,"desc":"The URL that the webhook should POST information to.","default":"","type":"string","name":"callbackURL"},{"_id":"595ab09a1799490033a71392","ref":"","in":"query","required":true,"desc":"ID of the object to create a webhook on.","default":"","type":"string","name":"idModel"}],"url":"/tokens/{token}/webhooks","method":"post"},"isReference":true,"order":4,"body":"A guide for creating webhooks can be found [here](https://developers.trello.com/page/webhooks).","excerpt":"Create a new webhook for a token.","slug":"tokenstokenwebhooks-2","type":"endpoint","title":"/tokens/{token}/webhooks","__v":2,"updatedAt":"2019-06-10T14:28:52.696Z","swagger":{"path":"/tokens/{token}/webhooks"}},{"_id":"595ab09a1799490033a71391","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:01:14.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://mycallbackurl.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl -X \"PUT\" https://api.trello.com/1/tokens/1098372fc861992fc304f0b4856189746356212703dbd6c4bf41f8c6c78f9812c/webhooks/1098372fc861992fc304f0b485618974?idModel=54a17d76d4a5072e3931736b&callbackURL=https://mycallbackurl.com/&key=83746d11892523f2bf1aba93efc89fca","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"The token to which the webhook belongs","default":"","type":"string","name":"token"},{"_id":"595ab09a1799490033a71394","ref":"","in":"query","required":false,"desc":"A description to be displayed when retrieving information about the webhook.","default":"","type":"string","name":"description"},{"_id":"595ab09a1799490033a71393","ref":"","in":"query","required":true,"desc":"The URL that the webhook should POST information to.","default":"","type":"string","name":"callbackURL"},{"_id":"595ab09a1799490033a71392","ref":"","in":"query","required":true,"desc":"ID of the object to create a webhook on.","default":"","type":"string","name":"idModel"},{"_id":"5a3bfc6a849bad001c77c31b","ref":"","in":"path","required":false,"desc":"ID of the webhook to update","default":"","type":"string","name":"webhookId"}],"url":"/tokens/{token}/webhooks/{webhookId}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Update an existing webhook.","slug":"tokenstokenwebhooks-1","type":"endpoint","title":"/tokens/{token}/webhooks/{webhookId}","__v":3,"updatedAt":"2019-06-10T14:28:52.697Z","swagger":{"path":"/tokens/{token}/webhooks/{webhookId}"}},{"_id":"595ab1dc31c36a0015d9d4cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:06:36.628Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl -X \"DELETE\" https://api.trello.com/1/tokens/{token}/?key={key}","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_id\": \"595aae75cf1974fda5ce3b11\",\n    \"token\": \"1974fda5ce3b11595aae75cf1974fda5ce3b11595aae75595aae7\",\n    \"idMember\": \"5919c0c0aa1ceafadc8c5df0\",\n    \"idApplication\": \"5936e292b7aebc7b0db33a08\",\n    \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n    \"dateExpires\": \"2108-10-08T04:52:05.969Z\",\n    \"origin\": \"consent\",\n    \"permissions\": [\n        {\n            \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n            \"modelType\": \"Member\",\n            \"_id\": \"595aae75cf1974fda5ce3b14\",\n            \"write\": true,\n            \"read\": true\n        },\n        {\n            \"idModel\": \"*\",\n            \"modelType\": \"Board\",\n            \"_id\": \"595aae75cf1974fda5ce3b13\",\n            \"write\": true,\n            \"read\": true\n        },\n        {\n            \"idModel\": \"*\",\n            \"modelType\": \"Organization\",\n            \"_id\": \"595aae75cf1974fda5ce3b12\",\n            \"write\": true,\n            \"read\": true\n        }\n    ],\n    \"identifier\": \"Server Token\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"}],"url":"/tokens/{token}/","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Delete a token.","slug":"tokenstoken-1","type":"endpoint","title":"/tokens/{token}","__v":0,"updatedAt":"2019-06-10T14:28:52.697Z","swagger":{"path":"/tokens/{token}/"}},{"_id":"595ab25972a8c0003336c8a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:08:41.384Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_value\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl -X \"DELETE\" https://api.trello.com/1/tokens/1098372fc861992fc304f0b4856189746356212703dbd6c4bf41f8c6c78f9812c/webhooks/595ab2fe6b90aed2223416d0?key=83746d11892523f2bf1aba93efc89fca","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab25972a8c0003336c8a5","ref":"","in":"path","required":false,"desc":"ID of the [webhook](ref:webhooks) to delete.","default":"","type":"string","name":"idWebhook"}],"url":"/tokens/{token}/webhooks/{idWebhook}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Delete a webhook created with given token.","slug":"tokenstokenwebhooksidwebhook-1","type":"endpoint","title":"/tokens/{token}/webhooks/{idWebhook}","__v":0,"updatedAt":"2019-06-10T14:28:52.698Z","swagger":{"path":"/tokens/{token}/webhooks/{idWebhook}"}}]},{"_id":"5955450faddeab001b1ed38e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d1207f4cb8a001bbe2bbc","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-29T18:21:03.091Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/tokens/{token}?token={token}&key={key}"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"595aae12541974fda5c13ed4\",\n  \"identifier\": \"Server Token\",\n  \"idMember\": \"5919c0c0aa1ceaf89acc87wd\",\n  \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n  \"dateExpires\": null,\n  \"permissions\": [\n    {\n      \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n      \"modelType\": \"Member\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Board\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Organization\",\n      \"read\": true,\n      \"write\": true\n    }\n  ],\n  \"webhooks\": []\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"5955450faddeab001b1ed38f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of `dateCreated`, `dateExpires`, `idMember`, `identifier`, `permissions`","default":"all","type":"string","name":"fields"},{"_id":"595aae3b06f0d400155af93e","ref":"","in":"query","required":false,"desc":"Determines whether to include webhooks.","default":"false","type":"boolean","name":"webhooks"}],"url":"/tokens/{token}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":0,"body":"","excerpt":"Retrieve information about a token.","slug":"tokenstoken","type":"endpoint","title":"/tokens/{token}","__v":2,"updatedAt":"2019-06-10T14:28:52.694Z","swagger":{"path":"/tokens/{token}"}},{"_id":"595aaf801b351b0055c5d401","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:56:32.104Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n  \"id\": \"595aae12541974fda5c13ed4\",\n  \"identifier\": \"Server Token\",\n  \"idMember\": \"5919c0c0aa1ceaf89acc87wd\",\n  \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n  \"dateExpires\": null,\n  \"permissions\": [\n    {\n      \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n      \"modelType\": \"Member\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Board\",\n      \"read\": true,\n      \"write\": true\n    },\n    {\n      \"idModel\": \"*\",\n      \"modelType\": \"Organization\",\n      \"read\": true,\n      \"write\": true\n    }\n  ],\n  \"webhooks\": []\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"https://api.trello.com/1/tokens/{token}?token={token}&key={key}"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"5955450faddeab001b1ed38f","ref":"","in":"query","required":false,"desc":"`all` or a comma-separated list of valid fields for [Member Object](ref:member-object).","default":"all","type":"string","name":"fields"}],"url":"/tokens/{token}/member","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Retrieve information about a token's owner by token.","slug":"tokenstokenmember","type":"endpoint","title":"/tokens/{token}/member","__v":1,"updatedAt":"2019-06-10T14:28:52.695Z","swagger":{"path":"/tokens/{token}/member"}},{"_id":"595aafd62e3626002b8fdb16","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:57:58.421Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl https://api.trello.com/1/tokens/83736c6f7887saa9827220b485689caf0649512703dbd6c0996538fc8896dca7f/webhooks?key=8d1163022f2523f2bf1a184563892dfa5","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://trello.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"}],"url":"/tokens/{token}/webhooks","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"","excerpt":"Retrieve all webhooks created with a token.","slug":"tokenstokenwebhooks","type":"endpoint","title":"/tokens/{token}/webhooks","__v":0,"updatedAt":"2019-06-10T14:28:52.695Z","swagger":{"path":"/tokens/{token}/webhooks"}},{"_id":"595ab01174dc38001bf063f5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T20:58:57.965Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://trello.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl https://api.trello.com/1/tokens/83736c6f7887saa9827220b485689caf0649512703dbd6c0996538fc8896dca7f/webhooks/595ab2fe6b90aed2223416d0?key=8d1163022f2523f2bf1a184563892dfa5","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab0342e3626002b8fdb17","ref":"","in":"path","required":false,"desc":"ID of the [Webhooks](ref:webhooks) to retrieve.","default":"","type":"string","name":"idWebhook"}],"url":"/tokens/{token}/webhooks/{idWebhook}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"","excerpt":"Retrieve a webhook created with a token.","slug":"tokenstokenwebhooksidwebhook","type":"endpoint","title":"/tokens/{token}/webhooks/{idWebhook}","__v":1,"updatedAt":"2019-06-10T14:28:52.696Z","swagger":{"path":"/tokens/{token}/webhooks/{idWebhook}"}},{"_id":"5a3bf8b5849bad001c77c2d3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-12-21T18:08:53.648Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"apiSetting":"5928856394d9382f0096d7f2","examples":{"codes":[{"language":"curl","code":"curl -X \"POST\" https://api.trello.com/1/tokens/861992fc1098372fc304f0b4635621248561897703dbd6c4bf41f8c6c4bf41fc78f9878f912d/webhooks?idModel=54a17d76d4a5072e3931736b&callbackURL=https://mycallbackurl.com/&key=83746d11892523f2bf1aba93efc89fca"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://mycallbackurl.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab09a1799490033a71394","ref":"","in":"query","required":false,"desc":"A description to be displayed when retrieving information about the webhook.","default":"","type":"string","name":"description"},{"_id":"595ab09a1799490033a71393","ref":"","in":"query","required":true,"desc":"The URL that the webhook should POST information to.","default":"","type":"string","name":"callbackURL"},{"_id":"595ab09a1799490033a71392","ref":"","in":"query","required":true,"desc":"ID of the object to create a webhook on.","default":"","type":"string","name":"idModel"}],"url":"/tokens/{token}/webhooks","method":"post"},"isReference":true,"order":4,"body":"A guide for creating webhooks can be found [here](https://developers.trello.com/page/webhooks).","excerpt":"Create a new webhook for a token.","slug":"tokenstokenwebhooks-2","type":"endpoint","title":"/tokens/{token}/webhooks","__v":2,"updatedAt":"2019-06-10T14:28:52.696Z","swagger":{"path":"/tokens/{token}/webhooks"}},{"_id":"595ab09a1799490033a71391","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:01:14.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"id\": \"595ab2fe6b90aed2223416d0\",\n    \"description\": \"\",\n    \"idModel\": \"54a17d76d4a5072e3931736b\",\n    \"callbackURL\": \"https://mycallbackurl.com/\",\n    \"active\": true\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl -X \"PUT\" https://api.trello.com/1/tokens/1098372fc861992fc304f0b4856189746356212703dbd6c4bf41f8c6c78f9812c/webhooks/1098372fc861992fc304f0b485618974?idModel=54a17d76d4a5072e3931736b&callbackURL=https://mycallbackurl.com/&key=83746d11892523f2bf1aba93efc89fca","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"The token to which the webhook belongs","default":"","type":"string","name":"token"},{"_id":"595ab09a1799490033a71394","ref":"","in":"query","required":false,"desc":"A description to be displayed when retrieving information about the webhook.","default":"","type":"string","name":"description"},{"_id":"595ab09a1799490033a71393","ref":"","in":"query","required":true,"desc":"The URL that the webhook should POST information to.","default":"","type":"string","name":"callbackURL"},{"_id":"595ab09a1799490033a71392","ref":"","in":"query","required":true,"desc":"ID of the object to create a webhook on.","default":"","type":"string","name":"idModel"},{"_id":"5a3bfc6a849bad001c77c31b","ref":"","in":"path","required":false,"desc":"ID of the webhook to update","default":"","type":"string","name":"webhookId"}],"url":"/tokens/{token}/webhooks/{webhookId}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Update an existing webhook.","slug":"tokenstokenwebhooks-1","type":"endpoint","title":"/tokens/{token}/webhooks/{webhookId}","__v":3,"updatedAt":"2019-06-10T14:28:52.697Z","swagger":{"path":"/tokens/{token}/webhooks/{webhookId}"}},{"_id":"595ab1dc31c36a0015d9d4cc","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:06:36.628Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl -X \"DELETE\" https://api.trello.com/1/tokens/{token}/?key={key}","language":"curl"}]},"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_id\": \"595aae75cf1974fda5ce3b11\",\n    \"token\": \"1974fda5ce3b11595aae75cf1974fda5ce3b11595aae75595aae7\",\n    \"idMember\": \"5919c0c0aa1ceafadc8c5df0\",\n    \"idApplication\": \"5936e292b7aebc7b0db33a08\",\n    \"dateCreated\": \"2017-07-03T20:52:05.969Z\",\n    \"dateExpires\": \"2108-10-08T04:52:05.969Z\",\n    \"origin\": \"consent\",\n    \"permissions\": [\n        {\n            \"idModel\": \"5919c0c0aa1ceafadc8c5df0\",\n            \"modelType\": \"Member\",\n            \"_id\": \"595aae75cf1974fda5ce3b14\",\n            \"write\": true,\n            \"read\": true\n        },\n        {\n            \"idModel\": \"*\",\n            \"modelType\": \"Board\",\n            \"_id\": \"595aae75cf1974fda5ce3b13\",\n            \"write\": true,\n            \"read\": true\n        },\n        {\n            \"idModel\": \"*\",\n            \"modelType\": \"Organization\",\n            \"_id\": \"595aae75cf1974fda5ce3b12\",\n            \"write\": true,\n            \"read\": true\n        }\n    ],\n    \"identifier\": \"Server Token\"\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"}],"url":"/tokens/{token}/","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":6,"body":"","excerpt":"Delete a token.","slug":"tokenstoken-1","type":"endpoint","title":"/tokens/{token}","__v":0,"updatedAt":"2019-06-10T14:28:52.697Z","swagger":{"path":"/tokens/{token}/"}},{"_id":"595ab25972a8c0003336c8a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1207f4cb8a001bbe2bbc","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:08:41.384Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_value\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"code":"curl -X \"DELETE\" https://api.trello.com/1/tokens/1098372fc861992fc304f0b4856189746356212703dbd6c4bf41f8c6c78f9812c/webhooks/595ab2fe6b90aed2223416d0?key=83746d11892523f2bf1aba93efc89fca","language":"curl"}]},"auth":"required","params":[{"_id":"5955450faddeab001b1ed390","ref":"","in":"path","required":false,"desc":"","default":"","type":"string","name":"token"},{"_id":"595ab25972a8c0003336c8a5","ref":"","in":"path","required":false,"desc":"ID of the [webhook](ref:webhooks) to delete.","default":"","type":"string","name":"idWebhook"}],"url":"/tokens/{token}/webhooks/{idWebhook}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":7,"body":"","excerpt":"Delete a webhook created with given token.","slug":"tokenstokenwebhooksidwebhook-1","type":"endpoint","title":"/tokens/{token}/webhooks/{idWebhook}","__v":0,"updatedAt":"2019-06-10T14:28:52.698Z","swagger":{"path":"/tokens/{token}/webhooks/{idWebhook}"}},{"_id":"594d120dec5064001c38ab01","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:05:17.212Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"Because Trello teams and members are not prefixed differently, we need a way to distinguish between the two.\n\nSo for example:\n\n`https://trello.com/trelloinc` is a team but `https://trello.com/aryastark` is a member.\n\nThe types route is how Trello figures out which is which.\n\nFor example:\n\n`GET` `/1/types/trelloinc`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"type\\\": \\\"organization\\\",\\n  \\\"id\\\": \\\"538627f73cbb44d1bfbb58f0\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\nWhereas `GET` `/1/types/aryastark`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"type\\\": \\\"member\\\",\\n  \\\"id\\\": \\\"5159c2944acc05e93b000674\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"types","type":"basic","title":"Types","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.699Z","children":[],"childrenPages":[]},{"_id":"594d1212612674001b2d1fde","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:05:22.575Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":19,"body":"Webhooks allow developers to receive updates regarding actions that have occurred in Trello.\n\nFor more on getting started with Trello's Webhooks, check out this [guide](https://developers.trello.com/page/webhooks).\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Webhooks Make Validation HEAD Request\",\n  \"body\": \"When you create a webhook, Trello will make a HEAD request to callbackURL you provide to verify that it is a valid URL. Failing to respond to the HEAD request will result in the webhook failing to be created.\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Webhooks via `/1/token/` routes\",\n  \"body\": \"Webhooks can also be accessed and managed via [`/tokens/{token}/webhooks` routes](https://developers.trello.com/v1.0/reference#tokenstokenwebhooks).\"\n}\n[/block]","excerpt":"","slug":"webhooks","type":"basic","title":"Webhooks","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.699Z","children":[{"_id":"594d1aaab4984d001bc58e4c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d1212612674001b2d1fde","updates":["5cbf4089367a350039ad747d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:42:02.179Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**description**\\nstring\",\n    \"2-0\": \"**idModel**\\nstring\",\n    \"3-0\": \"**callbackURL**\\nstring\",\n    \"4-0\": \"**active**\\nboolean\",\n    \"0-1\": \"ID of the webhook.\",\n    \"1-1\": \"Description provided when creating webhook.\",\n    \"2-1\": \"ID of the Trello object the webhook is watching. This can be any Trello object ID (list, board, card, member, etc.).\",\n    \"3-1\": \"The URL that the webhook will `POST` information to.\",\n    \"4-1\": \"Determines whether the webhook is active or not.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nFor more information on getting started with and using Trello's webhooks, head over to the [Webhooks](page:webhooks) guide.","excerpt":"","slug":"webhook-object","type":"basic","title":"Webhook Object","__v":1,"updatedAt":"2019-06-10T14:28:52.700Z"},{"_id":"595aba111b351b0055c5d489","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":["5b3d9bccbe11ea000325496a"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:41:37.015Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://trello.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abeb0cf0e6e003f5dddbd","ref":"","in":"path","required":false,"desc":"ID of the webhook to retrieve.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Get a webhook by ID.","slug":"webhook-object-1","type":"endpoint","title":"/webhooks/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.700Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"595aba4f06f0d400155af9a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:42:39.026Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/callbackURL","language":"curl"}]},"results":{"codes":[{"name":"","code":"[\n    {\n        \"callbackURL\": \"https://trello.com/\",\n    }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"595aba6d1b351b0055c5d4ab","ref":"","in":"path","required":false,"desc":"ID of the webhook.","default":"","type":"string","name":"id"},{"_id":"595aba6d1b351b0055c5d4aa","ref":"","in":"path","required":false,"desc":"Field to retrieve. One of: `active`, `callbackURL`, `description`, `idModel`","default":"","type":"string","name":"field"}],"url":"/webhooks/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**description**\\nstring\",\n    \"2-0\": \"**idModel**\\nstring\",\n    \"3-0\": \"**callbackURL**\\nstring\",\n    \"4-0\": \"**active**\\nboolean\",\n    \"0-1\": \"ID of the webhook.\",\n    \"1-1\": \"Description provided when creating webhook.\",\n    \"2-1\": \"ID of the object the webhook is watching.\",\n    \"3-1\": \"The URL that the webhook will `POST` information to.\",\n    \"4-1\": \"Determines whether the webhook is active or not.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]","excerpt":"Get a webhook's field.","slug":"webhooksidfield","type":"endpoint","title":"/webhooks/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.701Z","swagger":{"path":"/webhooks/{id}/{field}"}},{"_id":"595abb5d3ccd250029284342","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:47:09.423Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl -X \"PUT\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0?description=\"Test Webhook\""}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"Test Webhook\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://mycallbackurl.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abb5d3ccd250029284344","ref":"","in":"query","required":false,"desc":"A string with a length from `0` to `16384`.","default":"","type":"string","name":"description"},{"_id":"595abb5d3ccd250029284343","ref":"","in":"query","required":false,"desc":"A valid URL that is reachable with a `HEAD` and `POST` request.","default":"","type":"string","name":"callbackURL"},{"_id":"595abb6c5b5ec600298bd991","ref":"","in":"query","required":false,"desc":"ID of the model to be monitored","default":"","type":"string","name":"idModel"},{"_id":"595abb86d5ed050015dad744","ref":"","in":"query","required":false,"desc":"Determines whether the webhook is active and sending `POST` requests.","default":"","type":"boolean","name":"active"},{"_id":"595abea1c09fc3001b8cf17b","ref":"","in":"path","required":false,"desc":"ID of the webhook to update.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"All of the fields can also be updated individually as URL parameters. For example, here are examples of updating the description field on a webhook via query params and URL params, respectively:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X \\\"PUT\\\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/?description=\\\"This is my new description\\\" \",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X \\\"PUT\\\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/description?value=\\\"This is my new description\\\" \",\n      \"language\": \"text\"\n    }\n  ]\n}\n[/block]","excerpt":"Update a webhook by ID.","slug":"webhooksid","type":"endpoint","title":"/webhooks/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.701Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"595abe6e2e3626002b8fdb63","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":["59802bd1230b510014a7aa25"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:00:14.183Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl -X \"POST\" https://api.trello.com/1/webhooks/?idModel=54a17d76d4a5072e3931736b&description=\"My Webhook\"&callbackURL=https://mycallbackurl.com"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"My Webhook\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://mycallbackurl.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abb5d3ccd250029284344","ref":"","in":"query","required":false,"desc":"A string with a length from `0` to `16384`.","default":"","type":"string","name":"description"},{"_id":"595abb5d3ccd250029284343","ref":"","in":"query","required":true,"desc":"A valid URL that is reachable with a `HEAD` and `POST` request.","default":"","type":"string","name":"callbackURL"},{"_id":"595abb6c5b5ec600298bd991","ref":"","in":"query","required":true,"desc":"ID of the model to be monitored","default":"","type":"string","name":"idModel"},{"_id":"595abb86d5ed050015dad744","ref":"","in":"query","required":false,"desc":"Determines whether the webhook is active and sending `POST` requests.","default":"","type":"boolean","name":"active"}],"url":"/webhooks/","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Create a new webhook.","slug":"webhooks-2","type":"endpoint","title":"/webhooks","__v":1,"updatedAt":"2019-06-10T14:28:52.702Z","swagger":{"path":"/webhooks/"}},{"_id":"595abe83d63575001bd656f4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:00:35.088Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_value\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"curl -X \"DELETE\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0?key=83746d11892523f2bf1aba93efc89fca"}]},"auth":"required","params":[{"_id":"595abe9574dc38001bf0645d","ref":"","in":"path","required":false,"desc":"ID of the webhook to delete.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Delete a webhook by ID.","slug":"webhooksid-1","type":"endpoint","title":"/webhooks/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.702Z","swagger":{"path":"/webhooks/{id}"}}],"childrenPages":[{"_id":"594d1aaab4984d001bc58e4c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d1212612674001b2d1fde","updates":["5cbf4089367a350039ad747d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:42:02.179Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**description**\\nstring\",\n    \"2-0\": \"**idModel**\\nstring\",\n    \"3-0\": \"**callbackURL**\\nstring\",\n    \"4-0\": \"**active**\\nboolean\",\n    \"0-1\": \"ID of the webhook.\",\n    \"1-1\": \"Description provided when creating webhook.\",\n    \"2-1\": \"ID of the Trello object the webhook is watching. This can be any Trello object ID (list, board, card, member, etc.).\",\n    \"3-1\": \"The URL that the webhook will `POST` information to.\",\n    \"4-1\": \"Determines whether the webhook is active or not.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nFor more information on getting started with and using Trello's webhooks, head over to the [Webhooks](page:webhooks) guide.","excerpt":"","slug":"webhook-object","type":"basic","title":"Webhook Object","__v":1,"updatedAt":"2019-06-10T14:28:52.700Z"},{"_id":"595aba111b351b0055c5d489","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":["5b3d9bccbe11ea000325496a"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:41:37.015Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://trello.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abeb0cf0e6e003f5dddbd","ref":"","in":"path","required":false,"desc":"ID of the webhook to retrieve.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Get a webhook by ID.","slug":"webhook-object-1","type":"endpoint","title":"/webhooks/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.700Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"595aba4f06f0d400155af9a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:42:39.026Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/callbackURL","language":"curl"}]},"results":{"codes":[{"name":"","code":"[\n    {\n        \"callbackURL\": \"https://trello.com/\",\n    }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"595aba6d1b351b0055c5d4ab","ref":"","in":"path","required":false,"desc":"ID of the webhook.","default":"","type":"string","name":"id"},{"_id":"595aba6d1b351b0055c5d4aa","ref":"","in":"path","required":false,"desc":"Field to retrieve. One of: `active`, `callbackURL`, `description`, `idModel`","default":"","type":"string","name":"field"}],"url":"/webhooks/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**description**\\nstring\",\n    \"2-0\": \"**idModel**\\nstring\",\n    \"3-0\": \"**callbackURL**\\nstring\",\n    \"4-0\": \"**active**\\nboolean\",\n    \"0-1\": \"ID of the webhook.\",\n    \"1-1\": \"Description provided when creating webhook.\",\n    \"2-1\": \"ID of the object the webhook is watching.\",\n    \"3-1\": \"The URL that the webhook will `POST` information to.\",\n    \"4-1\": \"Determines whether the webhook is active or not.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]","excerpt":"Get a webhook's field.","slug":"webhooksidfield","type":"endpoint","title":"/webhooks/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.701Z","swagger":{"path":"/webhooks/{id}/{field}"}},{"_id":"595abb5d3ccd250029284342","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:47:09.423Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl -X \"PUT\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0?description=\"Test Webhook\""}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"Test Webhook\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://mycallbackurl.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abb5d3ccd250029284344","ref":"","in":"query","required":false,"desc":"A string with a length from `0` to `16384`.","default":"","type":"string","name":"description"},{"_id":"595abb5d3ccd250029284343","ref":"","in":"query","required":false,"desc":"A valid URL that is reachable with a `HEAD` and `POST` request.","default":"","type":"string","name":"callbackURL"},{"_id":"595abb6c5b5ec600298bd991","ref":"","in":"query","required":false,"desc":"ID of the model to be monitored","default":"","type":"string","name":"idModel"},{"_id":"595abb86d5ed050015dad744","ref":"","in":"query","required":false,"desc":"Determines whether the webhook is active and sending `POST` requests.","default":"","type":"boolean","name":"active"},{"_id":"595abea1c09fc3001b8cf17b","ref":"","in":"path","required":false,"desc":"ID of the webhook to update.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"All of the fields can also be updated individually as URL parameters. For example, here are examples of updating the description field on a webhook via query params and URL params, respectively:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X \\\"PUT\\\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/?description=\\\"This is my new description\\\" \",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X \\\"PUT\\\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/description?value=\\\"This is my new description\\\" \",\n      \"language\": \"text\"\n    }\n  ]\n}\n[/block]","excerpt":"Update a webhook by ID.","slug":"webhooksid","type":"endpoint","title":"/webhooks/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.701Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"595abe6e2e3626002b8fdb63","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":["59802bd1230b510014a7aa25"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:00:14.183Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl -X \"POST\" https://api.trello.com/1/webhooks/?idModel=54a17d76d4a5072e3931736b&description=\"My Webhook\"&callbackURL=https://mycallbackurl.com"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"My Webhook\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://mycallbackurl.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abb5d3ccd250029284344","ref":"","in":"query","required":false,"desc":"A string with a length from `0` to `16384`.","default":"","type":"string","name":"description"},{"_id":"595abb5d3ccd250029284343","ref":"","in":"query","required":true,"desc":"A valid URL that is reachable with a `HEAD` and `POST` request.","default":"","type":"string","name":"callbackURL"},{"_id":"595abb6c5b5ec600298bd991","ref":"","in":"query","required":true,"desc":"ID of the model to be monitored","default":"","type":"string","name":"idModel"},{"_id":"595abb86d5ed050015dad744","ref":"","in":"query","required":false,"desc":"Determines whether the webhook is active and sending `POST` requests.","default":"","type":"boolean","name":"active"}],"url":"/webhooks/","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Create a new webhook.","slug":"webhooks-2","type":"endpoint","title":"/webhooks","__v":1,"updatedAt":"2019-06-10T14:28:52.702Z","swagger":{"path":"/webhooks/"}},{"_id":"595abe83d63575001bd656f4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:00:35.088Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_value\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"curl -X \"DELETE\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0?key=83746d11892523f2bf1aba93efc89fca"}]},"auth":"required","params":[{"_id":"595abe9574dc38001bf0645d","ref":"","in":"path","required":false,"desc":"ID of the webhook to delete.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Delete a webhook by ID.","slug":"webhooksid-1","type":"endpoint","title":"/webhooks/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.702Z","swagger":{"path":"/webhooks/{id}"}}]},{"_id":"594d1aaab4984d001bc58e4c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","user":"592599f5d15a9d1900be545c","parentDoc":"594d1212612674001b2d1fde","updates":["5cbf4089367a350039ad747d"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:42:02.179Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**description**\\nstring\",\n    \"2-0\": \"**idModel**\\nstring\",\n    \"3-0\": \"**callbackURL**\\nstring\",\n    \"4-0\": \"**active**\\nboolean\",\n    \"0-1\": \"ID of the webhook.\",\n    \"1-1\": \"Description provided when creating webhook.\",\n    \"2-1\": \"ID of the Trello object the webhook is watching. This can be any Trello object ID (list, board, card, member, etc.).\",\n    \"3-1\": \"The URL that the webhook will `POST` information to.\",\n    \"4-1\": \"Determines whether the webhook is active or not.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nFor more information on getting started with and using Trello's webhooks, head over to the [Webhooks](page:webhooks) guide.","excerpt":"","slug":"webhook-object","type":"basic","title":"Webhook Object","__v":1,"updatedAt":"2019-06-10T14:28:52.700Z"},{"_id":"595aba111b351b0055c5d489","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":["5b3d9bccbe11ea000325496a"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:41:37.015Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://trello.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abeb0cf0e6e003f5dddbd","ref":"","in":"path","required":false,"desc":"ID of the webhook to retrieve.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"get","examples":{"codes":[{"language":"curl","code":"curl https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0"}]},"apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":1,"body":"","excerpt":"Get a webhook by ID.","slug":"webhook-object-1","type":"endpoint","title":"/webhooks/{id}","__v":2,"updatedAt":"2019-06-10T14:28:52.700Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"595aba4f06f0d400155af9a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:42:39.026Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"curl https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/callbackURL","language":"curl"}]},"results":{"codes":[{"name":"","code":"[\n    {\n        \"callbackURL\": \"https://trello.com/\",\n    }\n]","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[{"_id":"595aba6d1b351b0055c5d4ab","ref":"","in":"path","required":false,"desc":"ID of the webhook.","default":"","type":"string","name":"id"},{"_id":"595aba6d1b351b0055c5d4aa","ref":"","in":"path","required":false,"desc":"Field to retrieve. One of: `active`, `callbackURL`, `description`, `idModel`","default":"","type":"string","name":"field"}],"url":"/webhooks/{id}/{field}","method":"get","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":2,"body":"[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"**id**\\nstring\",\n    \"h-0\": \"Field\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**description**\\nstring\",\n    \"2-0\": \"**idModel**\\nstring\",\n    \"3-0\": \"**callbackURL**\\nstring\",\n    \"4-0\": \"**active**\\nboolean\",\n    \"0-1\": \"ID of the webhook.\",\n    \"1-1\": \"Description provided when creating webhook.\",\n    \"2-1\": \"ID of the object the webhook is watching.\",\n    \"3-1\": \"The URL that the webhook will `POST` information to.\",\n    \"4-1\": \"Determines whether the webhook is active or not.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]","excerpt":"Get a webhook's field.","slug":"webhooksidfield","type":"endpoint","title":"/webhooks/{id}/{field}","__v":1,"updatedAt":"2019-06-10T14:28:52.701Z","swagger":{"path":"/webhooks/{id}/{field}"}},{"_id":"595abb5d3ccd250029284342","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T21:47:09.423Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl -X \"PUT\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0?description=\"Test Webhook\""}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"Test Webhook\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://mycallbackurl.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abb5d3ccd250029284344","ref":"","in":"query","required":false,"desc":"A string with a length from `0` to `16384`.","default":"","type":"string","name":"description"},{"_id":"595abb5d3ccd250029284343","ref":"","in":"query","required":false,"desc":"A valid URL that is reachable with a `HEAD` and `POST` request.","default":"","type":"string","name":"callbackURL"},{"_id":"595abb6c5b5ec600298bd991","ref":"","in":"query","required":false,"desc":"ID of the model to be monitored","default":"","type":"string","name":"idModel"},{"_id":"595abb86d5ed050015dad744","ref":"","in":"query","required":false,"desc":"Determines whether the webhook is active and sending `POST` requests.","default":"","type":"boolean","name":"active"},{"_id":"595abea1c09fc3001b8cf17b","ref":"","in":"path","required":false,"desc":"ID of the webhook to update.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"put","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":3,"body":"All of the fields can also be updated individually as URL parameters. For example, here are examples of updating the description field on a webhook via query params and URL params, respectively:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X \\\"PUT\\\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/?description=\\\"This is my new description\\\" \",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"curl -X \\\"PUT\\\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0/description?value=\\\"This is my new description\\\" \",\n      \"language\": \"text\"\n    }\n  ]\n}\n[/block]","excerpt":"Update a webhook by ID.","slug":"webhooksid","type":"endpoint","title":"/webhooks/{id}","__v":3,"updatedAt":"2019-06-10T14:28:52.701Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"595abe6e2e3626002b8fdb63","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":["59802bd1230b510014a7aa25"],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:00:14.183Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"curl","code":"curl -X \"POST\" https://api.trello.com/1/webhooks/?idModel=54a17d76d4a5072e3931736b&description=\"My Webhook\"&callbackURL=https://mycallbackurl.com"}]},"results":{"codes":[{"status":200,"language":"json","code":"[\n    {\n        \"id\": \"595ab2fe6b90aed2223416d0\",\n        \"description\": \"My Webhook\",\n        \"idModel\": \"54a17d76d4a5072e3931736b\",\n        \"callbackURL\": \"https://mycallbackurl.com/\",\n        \"active\": true\n    }\n]","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[{"_id":"595abb5d3ccd250029284344","ref":"","in":"query","required":false,"desc":"A string with a length from `0` to `16384`.","default":"","type":"string","name":"description"},{"_id":"595abb5d3ccd250029284343","ref":"","in":"query","required":true,"desc":"A valid URL that is reachable with a `HEAD` and `POST` request.","default":"","type":"string","name":"callbackURL"},{"_id":"595abb6c5b5ec600298bd991","ref":"","in":"query","required":true,"desc":"ID of the model to be monitored","default":"","type":"string","name":"idModel"},{"_id":"595abb86d5ed050015dad744","ref":"","in":"query","required":false,"desc":"Determines whether the webhook is active and sending `POST` requests.","default":"","type":"boolean","name":"active"}],"url":"/webhooks/","method":"post","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":4,"body":"","excerpt":"Create a new webhook.","slug":"webhooks-2","type":"endpoint","title":"/webhooks","__v":1,"updatedAt":"2019-06-10T14:28:52.702Z","swagger":{"path":"/webhooks/"}},{"_id":"595abe83d63575001bd656f4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5928856394d9382f0096d7f4","parentDoc":"594d1212612674001b2d1fde","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-03T22:00:35.088Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{\n    \"_value\": null\n}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"examples":{"codes":[{"language":"curl","code":"curl -X \"DELETE\" https://api.trello.com/1/webhooks/595ab2fe6b90aed2223416d0?key=83746d11892523f2bf1aba93efc89fca"}]},"auth":"required","params":[{"_id":"595abe9574dc38001bf0645d","ref":"","in":"path","required":false,"desc":"ID of the webhook to delete.","default":"","type":"string","name":"id"}],"url":"/webhooks/{id}","method":"delete","apiSetting":"5928856394d9382f0096d7f2"},"isReference":true,"order":5,"body":"","excerpt":"Delete a webhook by ID.","slug":"webhooksid-1","type":"endpoint","title":"/webhooks/{id}","__v":1,"updatedAt":"2019-06-10T14:28:52.702Z","swagger":{"path":"/webhooks/{id}"}},{"_id":"59483749d305c2001929611e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":["5a682e446ceccb001277573e","5bf6a1168c59400050211ead"],"next":{"pages":[],"description":""},"createdAt":"2017-06-19T20:42:49.230Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Power-Ups are powerful independent modules that allow developers to modify the Trello experience while still maintaining member control. Power-Ups represent the ability to enrich the experience of members by modifying and improving their interactions with Boards and Cards.\n[block:api-header]\n{\n  \"title\": \"Power-Up Samples\"\n}\n[/block]\nTrello has built some sample Power-Ups that you can use to get started developing right away. These samples demonstrate the capabilities of the platform and should help you to get started.\n\nWe recommend you check out our [easily re-mixable Glitch samples](https://glitch.com/trello) and we also have a [sample hosted off of GitHub pages](https://github.com/trello/power-up-template) that you can clone.\n[block:api-header]\n{\n  \"title\": \"Starting From Scratch\"\n}\n[/block]\nAre you sure? The samples just up there ‚òùÔ∏è are really good, and cut the getting started time down significantly.\n\nYou can also head over to [Your First Power-Up](https://developers.trello.com/v1.0/docs/your-first-power-up) for other options on how best to get started!","excerpt":"","slug":"power-ups-intro","type":"basic","title":"Introduction","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.708Z","children":[],"childrenPages":[]},{"_id":"594837757d5c65000fe8b479","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-19T20:43:33.852Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Capabilities represent areas of the UX that you can hook into. For each capability you state that you enable for your Power-Up, the Trello web application will make a request to your Power-Up for UX and functionality to be rendered within Trello, at the time when that UX item would normally be rendered.\n\nSo for example, if you declare that your Power-Up supports `card-buttons`, when a user opens a card, Trello will call your `card-buttons` function, and will render directly onto the card any buttons that you return.","excerpt":"","slug":"capabilities","type":"basic","title":"Capabilities","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.708Z","children":[{"_id":"594bc74d70a0130019782505","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5963e40af74e550029b692cd","596f6a78e2d5ee0038a9e51f"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:34:05.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"If your Power-Up can display rich, or interactive content, for an attached URL or URLs on a Trello card, then it should use `attachment-sections` to do so.\n\nAn attachment section is an iframe that gets rendered on the back of a card, above the attachments section. You give the section a title and icon, and tell Trello what page to load into the iframe. That page is then responsible for rendering content relevant to any attached URLs that it has claimed.\n\nYour Power-Up can have 0 or more attachment-sections, and each section can be for 1 or more claimed URLs.\n\nYou can return a Promise if you need to make asynchronous requests while determining which URL attachments to claim.\n\nAttachment sections have a number of options that can be passed in. Check out the code snippet below for the options available and valid values.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/a3502cd-attachment-sections.PNG\",\n        \"attachment-sections.PNG\",\n        1721,\n        1210,\n        \"#3f4247\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nwindow.TrelloPowerUp.initialize({\\n  'attachment-sections': function(t, options){\\n    // options.entries is a list of the attachments for this card\\n    // you can look through them and 'claim' any that you want to\\n    // include in your section.\\n\\n    // we will just claim urls for Yellowstone\\n    var claimed = options.entries.filter(function (attachment) {\\n      return attachment.url.indexOf('http://www.nps.gov/yell/') === 0;\\n    });\\n\\n    // you can have more than one attachment section on a card\\n    // you can group items together into one section, have a section\\n    // per attachment, or anything in between.\\n    if (claimed && claimed.length > 0) {\\n      // if the title for your section requires a network call or other\\n      // potentially lengthy operation you can provide a function for the title\\n      // that returns the section title. If you do so, provide a unique id for\\n      // your section\\n      return [{\\n        id: 'Yellowstone', // optional if you aren't using a function for the title\\n        claimed: claimed,\\n        icon: GRAY_ICON, // Must be a gray icon, colored icons not allowed.\\n        title: 'Example Attachment Section: Yellowstone',\\n        content: {\\n          type: 'iframe',\\n          url: t.signUrl('./section.html', {\\n            arg: 'you can pass your section args here'\\n          }),\\n          height: 230\\n        }\\n      }];\\n    } else {\\n      return [];\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`./section.html` looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <p>Tips for using attachment-sections</p>\\n      <ol>\\n        <li>Make sure your section feels at home on the card. It should fit in with the rest of the card and not stick out.</li>\\n        <li>You can specify a height when you claim the section, and also use t.sizeTo() to make sure your section is the perfect height.</li>\\n        <li>Try to keep the height of your sections to a minimum.</li>\\n        <li>It should be obvious to the user what attachments went into your section. They shouldn't be left wondering where one of their attachments disappeared to.</li>\\n      </ol>\\n      <p class=\\\"u-quiet\\\">Claimed attachment urls: <span id=\\\"urls\\\"></span></p>\\n    </div>\\n    <script src=\\\"./js/section.js\\\"></script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\n`./js/section.js` looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can access arguments passed to your iframe like so\\nvar arg = t.arg('arg');\\n\\nt.render(function(){\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function(attachment){\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function(yellowstoneAttachments){\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function(){\\n    return t.sizeTo('#content');\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"attachment-sections","type":"fn","title":"attachment-sections","__v":2,"updatedAt":"2019-06-10T14:28:52.708Z"},{"_id":"594bc75ab94b720019431350","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5ae0ec620fe7870003116499","5be1c2bcf05d1d0141b6c35e"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:34:18.059Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Sometimes, your Power-Up can provide additional information about an attachment, but it doesn't really require being pulled out into its own section. A great example of this is for files coming from storage services like Dropbox. To Trello, those are just URLs, but the Dropbox Power-Up can get thumbnail images, the real file name, as well as when the file was created, and last modified.\n\nThis is perfect for `attachment-thumbnail`:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/7848578-attachment-thumbnail.PNG\",\n        \"attachment-thumbnail.PNG\",\n        1716,\n        1274,\n        \"#eaeaf1\"\n      ]\n    }\n  ]\n}\n[/block]\nIn the case of Dropbox, you need to be authenticated before Dropbox can retrieve the additional metadata, so it can include a prompt to get the user to authorize.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/f0e30c1-attachment-thumbnail-3.PNG\",\n        \"attachment-thumbnail-3.PNG\",\n        1099,\n        324,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\nOnce the user is authorized, Dropbox can return much richer content:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/921ca09-attachment-thumbnail-2.PNG\",\n        \"attachment-thumbnail-2.PNG\",\n        1098,\n        271,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var formatNPSUrl = function (t, url) {\\n  if (!/^https?:\\\\/\\\\/www\\\\.nps\\\\.gov\\\\/[a-z]{4}\\\\//.test(url)) {\\n    return null;\\n  }\\n  var parkShort = /^https?:\\\\/\\\\/www\\\\.nps\\\\.gov\\\\/([a-z]{4})\\\\//.exec(url)[1];\\n  if (parkShort && parkMap[parkShort]) {\\n    return parkMap[parkShort];\\n  } else {\\n    return null;\\n  }\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    var parkName = formatNPSUrl(t, options.url);\\n    if (parkName){\\n      // return an object with some or all of these properties:\\n      // title, image, modified (Date), created (Date),\\n      // createdBy, modifiedBy\\n      return {\\n        title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        }\\n      };\\n    } else {\\n      throw t.NotHandled();\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nIf you need to provide the authorization prompt you can do so like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    var parkName = formatNPSUrl(t, options.url);\\n    if (parkName){\\n      // return an object with some or all of these properties:\\n      // title, image, modified (Date), created (Date),\\n      // createdBy, modifiedBy\\n      return {\\n         title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        },\\n        initialize: {\\n          type: 'iframe',\\n          url: t.signUrl(TrelloPowerUp.util.relativeUrl('authorize-link.html'))\\n        }\\n      };\\n    } else {\\n      throw t.NotHandled();\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nWhere `authorize-link.html` is just an anchor tag `<a>` and you can handle the click of that to open an authorization window.","excerpt":"","slug":"attachment-thumbnail","type":"fn","title":"attachment-thumbnail","__v":2,"updatedAt":"2019-06-10T14:28:52.709Z"},{"_id":"594bc7849814d90019a3fa7c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5b2c0725b3d2c1000301be3c"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:00.091Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"If your Power-Up requires that users authorize with some service before they can get the full functionality, you can help give them another way to authorize by telling Trello whether the user in question has already completed authorization.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Use `authorization-status` with `show-authorization`!\",\n  \"body\": \"The `authorization-status` capability should almost always be used along with `show-authorization` capability. The function you provide for `authorization-status` will be used to determine whether the user is considered authorized or not. If not, the `show-authorization` capability determines what will be show to the user when they click `Authorize Account`.\"\n}\n[/block]\nIf you return `authorized: false`, Trello will provide the following prompt when the user clicks the settings gear for your Power-Up. Clicking that takes us to [show-authorization](ref:show-authorization) \n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/9f4c22f-show-authorization.PNG\",\n        \"show-authorization.PNG\",\n        524,\n        301,\n        \"#e8e9ef\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'authorization-status': function(t, options){\\n    // return a promise that resolves to the object with\\n    // a property 'authorized' being true/false\\n    // you can also return the object synchronously if you know\\n    // the answer synchronously\\n    return new TrelloPowerUp.Promise((resolve) => resolve({ authorized: true }));\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"Determine whether the user is authorized or not.","slug":"authorization-status","type":"fn","title":"authorization-status","__v":1,"updatedAt":"2019-06-10T14:28:52.709Z"},{"_id":"594bc6da97f2b0000f7496d3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5a60dcd868b930001ce3d693","5c454fcf68cccc028635daaf","5cf57c64b0f8f400191f4215"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:10.144Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Board buttons enable developers to bring features of their Power-Up to the entire Board or to give users control over settings that affect the Power-Up as a whole. For example, the Calendar Power-Up displays due dates of all cards on the board in a calendar view and allows users to make date modifications while in that view.\n\nIf you need one or more buttons available on the board, as its name might imply, this is the capability you are looking for. \n\nHere's how the Calendar Power-Up gets the button you see below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/925b32b-board-buttons.PNG\",\n        \"board-buttons.PNG\",\n        871,\n        349,\n        \"#232f51\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var WHITE_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-white.svg';\\nvar BLACK_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-black.svg';\\n\\nvar onBtnClick = function (t, opts) {\\n  console.log('Someone clicked the button');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return [{\\n      // we can either provide a button that has a callback function\\n      icon: {\\n        dark: WHITE_ICON,\\n        light: BLACK_ICON\\n      },\\n      text: 'Callback',\\n      callback: onBtnClick,\\n      condition: 'edit'\\n    }, {\\n      // or we can also have a button that is just a simple url\\n      // clicking it will open a new tab at the provided url\\n      icon: {\\n        dark: WHITE_ICON,\\n        light: BLACK_ICON\\n      },\\n      text: 'URL',\\n      condition: 'always',\\n      url: 'https://trello.com/inspiration',\\n      target: 'Inspiring Boards' // optional target for above url\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou should return an array of button objects or a Promise that resolves to one. A button object has the following properties:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"icon\",\n    \"0-1\": \"Object\",\n    \"1-0\": \"text\",\n    \"1-1\": \"String\",\n    \"2-0\": \"condition\",\n    \"2-1\": \"String\",\n    \"3-0\": \"callback\",\n    \"3-1\": \"Function\",\n    \"4-0\": \"url\",\n    \"4-1\": \"String\",\n    \"5-0\": \"target\",\n    \"5-1\": \"String\",\n    \"0-2\": \"Object with urls for icons to be displayed on light and dark backgrounds. More info below.\",\n    \"1-2\": \"The name of the button, keep it short and sweet\",\n    \"2-2\": \"When the button should be displayed. One of:\\n\\n`admin` - User is an admin of the board\\n`edit` - User can edit the board\\n`readOnly` - User can not edit the board.\\n`signedIn` - User is logged into Trello.\\n`signedOut` - User is not logged into Trello.\\n`always` - Always show.\\n\\nThe default is `edit`\",\n    \"3-2\": \"Optional function that will be called on click of the button\",\n    \"4-2\": \"Optional href for the button\",\n    \"5-2\": \"Optional with use of `url` property to add a target to the anchor tag\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Icons\"\n}\n[/block]\nBackgrounds on Trello boards range in their colors and can make it hard for certain icons to be readable. When a user adds a board background, Trello computes whether the background is light or dark, and displays foreground board icons and text (such as board buttons) in an opposite luminance to create contrast. Therefore, a Power-Up needs to be able to provide icons for both background scenarios. The icon parameter accepts an object with two keys - `dark` and `light`, referring to the background. Each key should have a URL for its value that corresponds to an icon variant that contrasts with the key: `dark` should be a light icon and `light` should be a dark one.\n\nFor example:\n```\n// an example board button object\n{\n  icon: {\n    dark: \"https://example.com/a-white-icon.png\",\n    light: \"https://example.com/a-black-icon.png\"\n  },\n  text: \"My Board Button\",\n  callback: function(t) { console.log('clicked'); }\n}\n```\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"No Colored Icons\",\n  \"body\": \"Power-Ups using colored icons on board buttons will be rejected during the [Power-Up Review Process](https://developers.trello.com/docs/submitting-your-app-1).\"\n}\n[/block]","excerpt":"","slug":"board-buttons","type":"fn","title":"board-buttons","__v":3,"updatedAt":"2019-06-10T14:28:52.710Z"},{"_id":"594bc78de9125e0023228dc6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:09.975Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"The `callback` capability is a bit special. You won't be declaring a `callback` function in your `TrelloPowerUp.initialize` constructor. Instead this capability tells Trello that it should be holding on to callbacks that your Power-Up provides. If you have an interactive Power-Up that uses buttons or other items with callbacks, you'll want to enable this capability for your Power-Up in the portal.","excerpt":"","slug":"callback","type":"fn","title":"callback","__v":0,"updatedAt":"2019-06-10T14:28:52.710Z"},{"_id":"5ae081ab4f4a910003a8f3e9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"594837757d5c65000fe8b479","user":"5b75d499c1398c0003dbf656","updates":["5b75d52dc1398c0003dbf65d","5b75d58e4db2e80003be46f9"],"next":{"pages":[],"description":""},"createdAt":"2018-04-25T13:24:59.950Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"A card back section is an iframe that gets rendered on the back of a card, above the attachments section. You give the section a title and icon, and tell Trello what page to load into the iframe.\n\nYour Power-Up can have only one card back section and a maximum height of 500 pixels.\n\n`card-back-section` iframes are reloaded whenever `pluginData` is changed on the card via `t.set()`.\n\nCard back sections shouldn't be used to display information regarding the attachments on the card‚Äìfor that, you can use [attachment-sections](ref:attachment-sections).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1110cb7-Screen_Shot_2018-06-29_at_10.16.56_AM.png\",\n        \"Screen Shot 2018-06-29 at 10.16.56 AM.png\",\n        1586,\n        1370,\n        \"#e0e2e3\"\n      ],\n      \"caption\": \"Example of a card back section.\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"title\",\n    \"0-1\": \"String\",\n    \"0-2\": \"Rendered by Trello above the iframe.\",\n    \"1-0\": \"icon\\n*required* \",\n    \"1-1\": \"String\",\n    \"1-2\": \"Expected to be an icon that will be rendered to the left of your title on the card back.\",\n    \"2-0\": \"content\",\n    \"2-1\": \"Object\",\n    \"2-2\": \"The object passed in here should have the following three keys and values:\\n- `type` - String - Only `iframe` is supported.\\n- `url` - String - The URL of the page to be loaded as an iframe.\\n- `height` - Integer - The height to make the iframe; max height is 500 pixels.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Example\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-back-section': function(t, options){\\n    return {\\n      title: 'My Card Back Section',\\n      icon: GRAY_ICON, // Must be a gray icon, colored icons not allowed.\\n      content: {\\n        type: 'iframe',\\n        url: t.signUrl('./section.html'),\\n        height: 230 // Max height is 500\\n      }\\n    };\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-back-section","type":"fn","title":"card-back-section","__v":2,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc70570a0130019782504","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:53.160Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"`card-badges` is useful for showing quick, glanceable information on the front of cards. You can provide an icon, some text, as well as an optional color for each of your badges. Additionally, you can provide a dynamic function that can be re-called at a certain interval to provide constantly updated data.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/05ad5d9-Screen_Shot_2017-06-24_at_17.50.19.png\",\n        \"Screen Shot 2017-06-24 at 17.50.19.png\",\n        510,\n        1035,\n        \"#e2e2e1\"\n      ]\n    }\n  ]\n}\n[/block]\nIn the `opts` parameter passed to your function, there will be an `attachments` property which is an array of the attachments on the card. If your Power-Up shows badges based on attachments, it should access the ones passed in via the `opts` parameter instead of asking for them again via `t.card('attachments')`.\n\nTrello expects as a response an array of 0 or more badge objects:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"dynamic\",\n    \"0-1\": \"A function that returns a single badge object, or a Promise that resolves to one. Only use a dynamic badge if the data the badge is showing is expected to change outside of Trello.\\n\\nFor a dynamic badge this is the only property necessary to return.\",\n    \"1-0\": \"text\",\n    \"2-0\": \"icon\",\n    \"3-0\": \"color\",\n    \"4-0\": \"refresh\",\n    \"4-1\": \"Only relevant for the result of a dynamic badge. # of seconds for Trello to wait before re-running the dynamic function. Minimum of 10. Try to keep this as high as reasonable.\",\n    \"2-1\": \"Optional icon to show with the badge. When using a colored badge, make sure the color of the icon is white or gray as appropriate.\",\n    \"3-1\": \"Optional color for the badge. May be one of:\\n'blue', 'green', 'orange', 'red', 'yellow', 'purple', 'pink', 'sky', 'lime', 'light-gray'\",\n    \"1-1\": \"Optional text to display on the badge\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-badges': function (t, opts) {\\n    let cardAttachments = opts.attachments; // Trello passes you the attachments on the card\\n    return t.card('name')\\n    .get('name')\\n    .then(function(cardName){\\n      console.log('We just loaded the card name for fun: ' + cardName);\\n      return [{\\n        // dynamic badges can have their function rerun\\n        // after a set number of seconds defined by refresh.\\n        // Minimum of 10 seconds.\\n        dynamic: function(){\\n          // we could also return a Promise that resolves to\\n          // this as well if we needed to do something async first\\n          return {\\n            text: 'Dynamic ' + (Math.random() * 100).toFixed(0).toString(),\\n            icon: './images/icon.svg',\\n            color: 'green',\\n            refresh: 10 // in seconds\\n          };\\n        }\\n      }, {\\n        // its best to use static badges unless you need your\\n        // badges to refresh you can mix and match between\\n        // static and dynamic\\n        text: 'Static',\\n        icon: HYPERDEV_ICON, // for card front badges only\\n        color: null\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-badges","type":"fn","title":"card-badges","__v":0,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc6df97f2b0000f7496d4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":["5cd1c08adf65b10045cad7f1"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:15.816Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"Sometimes you may want to allow users to take actions directly on and related to a specific card. In those cases you would use the `card-buttons` capability to add the buttons you need to the card. All buttons that come from Power-Ups land in the Power-Ups section.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1ab833c-card-buttons.PNG\",\n        \"card-buttons.PNG\",\n        1566,\n        1322,\n        \"#2b3038\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar onBtnClick = function (t, opts) {\\n  console.log('Someone clicked the button');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      // usually you will provide a callback function to be run on button click\\n      // we recommend that you use a popup on click generally\\n      icon: GRAY_ICON, // don't use a colored icon here\\n      text: 'Open Popup',\\n      callback: onBtnClick,\\n      condition: 'edit'\\n    }, {\\n      // but of course, you could also just kick off to a url if that's your thing\\n      icon: GRAY_ICON,\\n      text: 'Just a URL',\\n      condition: 'always',\\n      url: 'https://developers.trello.com',\\n      target: 'Trello Developer Site' // optional target for above url\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou should return an array of button objects or a Promise that resolves to one. A button object has the following properties:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Propert\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"icon\",\n    \"0-1\": \"String\",\n    \"0-2\": \"The url to an icon for the button. Trello will add a `color=[hex]` query parameter which you can use to make the icon color match ours. This is easiest to do with an SVG icon.\",\n    \"1-0\": \"text\",\n    \"1-1\": \"String\",\n    \"1-2\": \"The name of the button, keep it short and sweet\",\n    \"2-0\": \"condition\",\n    \"2-1\": \"String\",\n    \"2-2\": \"To what types of users the button should be displayed. One of:\\n\\n`admin` - User is an admin on the board.\\n`edit` - User can edit the board.\\n`readOnly` - User can not edit the board.\\n`signedIn` - User is logged into Trello.\\n`signedOut` - User is not logged into Trello.\\n`always` - Always show.\\n\\nThe default is `edit`\",\n    \"3-0\": \"callback\",\n    \"3-1\": \"Function\",\n    \"3-2\": \"Optional function that will be called on click of the button\",\n    \"4-0\": \"url\",\n    \"4-1\": \"String\",\n    \"4-2\": \"Optional href for the button\",\n    \"5-0\": \"target\",\n    \"5-1\": \"String\",\n    \"5-2\": \"Optional with use of `url` property to add a target to the anchor tag.\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]","excerpt":"","slug":"card-buttons","type":"fn","title":"card-buttons","__v":1,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc736e9125e0023228dc5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:33:42.455Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"`card-detail-badges` provide a way to show quick, glanceable information at the top of the back of the card. Like the badges on the front of the card, these can be colored, and dynamic. However, they can also go further and be interactive. You can provide a callback function to be run when the user clicks the badge, or a url to navigate to.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/45044dc-Screen_Shot_2017-06-24_at_17.53.33.png\",\n        \"Screen Shot 2017-06-24 at 17.53.33.png\",\n        1560,\n        1311,\n        \"#293036\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-detail-badges': function (t, opts) {\\n    return t.card('name')\\n    .get('name')\\n    .then(function(cardName){\\n      console.log('We just loaded the card name for fun: ' + cardName);\\n\\n      return [{\\n      // dynamic badges can have their function rerun after a set number\\n      // of seconds defined by refresh. Minimum of 10 seconds.\\n      dynamic: function(){\\n        // we could also return a Promise that resolves to this\\n        // as well if we needed to do something async first\\n        return {\\n          title: 'Detail Badge',\\n          text: 'Dynamic ' + (Math.random() * 100).toFixed(0).toString(),\\n          color: randomBadgeColor(),\\n          refresh: 10 // in seconds\\n        };\\n      }\\n    }, {\\n      // its best to use static badges unless you need your badges\\n      // to refresh you can mix and match between static and dynamic\\n      title: 'Detail Badge',\\n      text: 'Static',\\n      color: null\\n    }, {\\n      // card detail badges (those that appear on the back of cards)\\n      // also support callback functions so that you can open for example\\n      // open a popup on click\\n      title: 'Popup Detail Badge',\\n      text: 'Popup',\\n      callback: function (t, opts) { // function to run on click\\n        // do something\\n      }\\n    }, {\\n      // or for simpler use cases you can also provide a url\\n      // when the user clicks on the card detail badge they will\\n      // go to a new tab at that url\\n      title: 'URL Detail Badge',\\n      text: 'URL',\\n      url: 'https://trello.com/home',\\n      target: 'Trello Landing Page' // optional target for above url\\n    }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-detail-badges","type":"fn","title":"card-detail-badges","__v":0,"updatedAt":"2019-06-10T14:28:52.712Z"},{"_id":"594bc79a169246000f3b30ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:22.872Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"One cool power-user feature of Trello, is that it will create cards for you automatically when you drag and drop or ctrl-c / ctrl-v URLs onto the `Add a card...` area at the bottom of a list. Your Power-Up can hook into this in order to help make more useful cards from URLs that your Power-Up knows about.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-from-url': function (t, options) {\\n    // options.url has the url in question\\n    // if we know cool things about that url we can give Trello a name and desc\\n    // to use when creating a card. Trello will also automatically add that url\\n    // as an attachment to the created card\\n    // As always you can return a Promise that resolves to the card details\\n    \\n    return new Promise(function (resolve) {\\n      resolve({\\n        name: 'üíª ' + options.url + ' ü§î',\\n        desc: 'This Power-Up knows cool things about the attached url'\\n      });\\n    });\\n    \\n    // if we don't actually have any valuable information about the url\\n    // we can let Trello know like so:\\n    // throw t.NotHandled();\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-from-url","type":"fn","title":"card-from-url","__v":0,"updatedAt":"2019-06-10T14:28:52.713Z"},{"_id":"594bc7a3e5ea7a000f734ff3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":["59632539ac97c60015d8effa"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:31.583Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"In card descriptions and comments, there may be URLs that your Power-Up could make look a lot better and more readable. With `format-url` you will be provided the URLs and can tell Trello when you have something better to be displayed. For example, here we replace a URL for a page to Crate Lake National Park with the park name itself, and a friendly icon.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1fa6933-format-url.PNG\",\n        \"format-url.PNG\",\n        1723,\n        416,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'format-url': function (t, options) {\\n    // options.url has the url that we are being asked to format\\n    // in our response we can include an icon as well as the replacement text\\n    \\n    return {\\n      icon: GRAY_ICON, // don't use a colored icon here\\n      text: 'üëâ ' + options.url + ' üëà' \\n    };\\n    \\n    // if we don't actually have any valuable information about the url\\n    // we can let Trello know like so:\\n    // throw t.NotHandled();\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"format-url","type":"fn","title":"format-url","__v":1,"updatedAt":"2019-06-10T14:28:52.713Z"},{"_id":"5aa2b5985c2c1a006678f392","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-09T16:26:00.735Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"Add new action options into the `...` menu on Trello lists. In the screenshot below, we have a Power-Up that is adding a new list action called \"Get List Stats\".\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/5db5e5d-Screen_Shot_2018-03-09_at_11.38.36_AM.png\",\n        \"Screen Shot 2018-03-09 at 11.38.36 AM.png\",\n        1520,\n        1088,\n        \"#a88e9f\"\n      ]\n    }\n  ]\n}\n[/block]\nTrello will call the function you defined for the `list-actions` capability when a board member clicks on the `...` menu in the top right of a list. You must return a response as quickly as possible (no more than 150ms). You can use `t.getContext().list` to get the ID of the list.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'list-actions': function (t) {\\n    return t.list('name', 'id')\\n    .then(function (list) {\\n      return [{\\n        text: \\\"Get List Stats\\\",\\n        callback: function (t) {\\n          // Trello will call this if the user clicks on this action\\n          // we could for example open a new popover...\\n          t.popup({\\n            // ...\\n          });\\n        }\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Expected Response\"\n}\n[/block]\nTrello expects your Power-Up to return an array in response to this capability. If you want no actions, you should return an empty array. You can return at most three actions. You should consider supplying an action that uses `t.popup` if you want to give the user more options.\n\nEach object in the array should have the following properties\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Required\",\n    \"0-0\": \"text\",\n    \"0-1\": \"Yes\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"Yes\",\n    \"h-2\": \"Description\",\n    \"0-2\": \"The text of the action. In the example we used \\\"Get List Stats\\\".\\n\\nTip: Keep it short, as Trello will not wrap the text, and it will cut off with an ellipsis.\\n\\nTip: If clicking the action will open a popup or modal, the text should end in an ellipsis.\",\n    \"1-2\": \"A function that will be called in response to a user clicking on the action.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Action Icon\",\n  \"body\": \"The icon included with the action will be the icon for your Power-Up. This is to make it clear to the user what actions are coming from which Power-Ups.\"\n}\n[/block]","excerpt":"","slug":"list-actions","type":"fn","title":"list-actions","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5aa2b5b3d5e24b0059a5a1cf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-09T16:26:27.229Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Add new sort options into the `...` -> \"Sort By...\" menu on Trello lists. In the screenshot below, we have a Power-Up that is adding a new list sort called \"Card Name\". The Voting Power-Up adds \"Most Votes\", and the Custom Fields Power-Up is adding \"Started On\", \"Incidents ‚¨ÜÔ∏è\", and \"Incidents ‚¨áÔ∏è\"\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/cdd8f63-Screen_Shot_2018-03-12_at_6.15.39_PM.png\",\n        \"Screen Shot 2018-03-12 at 6.15.39 PM.png\",\n        1318,\n        894,\n        \"#a8919f\"\n      ]\n    }\n  ]\n}\n[/block]\nTrello will run the function you defined for the `list-sorters` capability when the user clicks on `Sort By...` in the `...` menu for a list. You should reply as quickly as possible (under 150ms) with an array of sorters. The ID of the list can be found via: `t.getContext().list`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'list-sorters': function (t) {\\n    return t.list('name', 'id')\\n    .then(function (list) {\\n      return [{\\n        text: \\\"Card Name\\\",\\n        callback: function (t, opts) {\\n          // Trello will call this if the user clicks on this sort\\n          // opts.cards contains all card objects in the list\\n          var sortedCards = opts.cards.sort(\\n            function(a,b) {\\n              if (a.name > b.name) {\\n                return 1;\\n              } else if (b.name > a.name) {\\n                return -1;\\n              }\\n              return 0;\\n            });\\n          \\n          return {\\n            sortedIds: sortedCards.map(function (c) { return c.id; })\\n          };\\n        }\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Expected Response\"\n}\n[/block]\nIf you have no sorters to provide, you should return an empty array. Otherwise, each object in the array you return should have the follow properties\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Required\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"text\",\n    \"0-1\": \"Yes\",\n    \"0-2\": \"The name of the sort.\\n\\nTip: Keep this short, as Trello will not wrap the text and it will cut off with an ellipsis.\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"Yes\",\n    \"1-2\": \"A function to be called when a member clicks the sort.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Max of 5 sorters\",\n  \"body\": \"If you return more than five list sorters, Trello will only display the first five.\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Sort Callback\"\n}\n[/block]\nWhen a member clicks on one of your Power-Ups sorters, Trello will run the callback function you defined for it. As mentioned in the code example above, the second argument to the function will have a property called \"cards\" which is an array of every card in the list, ordered as they currently appear. Each card has all the properties as if you called `t.card('all')` for it.\n\nYour callback function should return (as quickly as possible) an object with the property `sortedIds`. The `sortedIds` property should be an array of all of the cards IDs, sorted in your desired order. Trello will then validate your response, and sort the cards in the list to reflect your order.","excerpt":"","slug":"list-sorters","type":"fn","title":"list-sorters","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5a8f690028fe2b00125ffd99","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"5a39e0b9539ed900125532f9","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-02-23T01:06:08.305Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"If you want your users to know how to use your Power-Up, you should use the `on-enable` capability. This capability gets triggered when a user enables your Power-Up. You may want to use this capability to show your user how to use your Power-Up by opening a modal (using [`t.modal()`](/v1.0/reference#t-modal). Another example of when to use this capability is when you want to initiate a configuration or authentication flow immediately after the user enables your Power-Up.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({  \\n  'on-enable': function(t, options) {\\n    // This code will get triggered when a user enables your Power-Up\\n    return t.modal({            \\n      url: './power-up-onboarding.html',\\n      height: 500,\\n      title: 'My Power-Up Overview'\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"on-enable","type":"basic","title":"on-enable","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5b61db9fc468b70003f4221e","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-01T16:11:11.415Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Use the `on-disable` capability to run some code, perhaps to update your records or clean up, when a user disables your Power-Up on a board via the UI.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Not Guaranteed\",\n  \"body\": \"Your Power-Up is not guaranteed to have this capability called when it is disabled. This can happen for a few reasons:\\n\\n- Power-Up is disabled via the API, instead of via the UI\\n- User downgrades, causing them to be over their Power-Up limit, and some Power-Ups will eventually be automatically disabled\\n- Your Power-Up failed to load during the session the user disabled it\"\n}\n[/block]\nTrello will call this capability if you have it enabled and implemented when the user clicks `Disable` from the gear menu for your Power-Up.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/93dd9ef-Screen_Shot_2018-08-01_at_12.08.24_PM.png\",\n        \"Screen Shot 2018-08-01 at 12.08.24 PM.png\",\n        2252,\n        1104,\n        \"#eef0f1\"\n      ]\n    }\n  ]\n}\n[/block]\nYour Power-Up will have `500ms` to make additional requests of Trello once this capability is called before it is fully disabled, and Trello will stop responding to requests from your Power-Up.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'on-disable': function(t){\\n    // load the data from Trello quickly first in case we need\\n    // to use any of it to cleanup on our side\\n    return t.getAll()\\n    .then(function(data) {\\n      // here we might want to properly revoke a token\\n      // or call into our own service to remove some records\\n    })\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"on-disable","type":"fn","title":"on-disable","__v":0,"updatedAt":"2019-06-10T14:28:52.715Z"},{"_id":"5b61d8cce4833500030685df","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-01T15:59:08.787Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"Trello allows users of your Power-Up to clear any `private` scoped data that your `pluginData` has stored for them via calls to `t.set()`. To do this, the user clicks the gear icon on your Power-Up, and then selects `Remove Personal Settings`.\n\nThis option is provided automatically by Trello only when the viewing member has `private` scoped plugin data stored for that Power-Up. The `remove-data` capability allows you to also perform an action when the user clicks.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/b794c0a-Screen_Shot_2018-08-01_at_11.54.04_AM.png\",\n        \"Screen Shot 2018-08-01 at 11.54.04 AM.png\",\n        2258,\n        1096,\n        \"#eff1f2\"\n      ]\n    }\n  ]\n}\n[/block]\nYou might want to use this moment as an opportunity to clean up additional personal information your Power-Up has stored about this member on your own servers. For instance, revoking a personal token.\n\nTrello will call the `remove-data` capability when the user confirms they want to remove their personal settings for your Power-Up. You will be given ~500ms to take an action using the private data for the member before Trello removes it.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'remove-data': function(t){\\n    // load the data from Trello quickly first in case we need\\n    // to use any of it to cleanup on our side\\n    return t.getAll()\\n    .then(function(data) {\\n      // here we might want to properly revoke a token\\n      // or call into our own service to remove some records\\n    })\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"remove-data","type":"fn","title":"remove-data","__v":0,"updatedAt":"2019-06-10T14:28:52.715Z"},{"_id":"594bc7d170a0130019782506","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:36:17.978Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"Tells Trello what to do when the clicks on the Authorize Account prompt.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/20ecfd3-show-authorization.PNG\",\n        \"show-authorization.PNG\",\n        524,\n        301,\n        \"#e8e9ef\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-authorization': function(t, options){\\n    // return what to do when a user clicks the 'Authorize Account' link\\n    // from the Power-Up gear icon which shows when 'authorization-status'\\n    // returns { authorized: false }\\n    // in this case we would open a popup\\n    return t.popup({\\n      title: 'My Auth Popup',\\n      url: './authorize.html',\\n      height: 140,\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"show-authorization","type":"fn","title":"show-authorization","__v":0,"updatedAt":"2019-06-10T14:28:52.716Z"},{"_id":"594bc7da70a0130019782507","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:36:26.970Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"If your Power-Up has a settings or configuration page, supporting this capability will show the gear button in your Power-Up, and provide the `Edit Power-Up Settings` prompt. When that prompt is clicked Trello will run your capability function.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/abb174b-show-settings.PNG\",\n        \"show-settings.PNG\",\n        529,\n        295,\n        \"#e9eaef\"\n      ]\n    }\n  ]\n}\n[/block]\nAn example of how the Custom Fields Power-Up uses this capability to show a popup with configuration options.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/7f48705-show-settings-2.PNG\",\n        \"show-settings-2.PNG\",\n        526,\n        592,\n        \"#e5e6eb\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-settings': function(t, options){\\n    // when a user clicks the gear icon by your Power-Up in the Power-Ups menu\\n    // what should Trello show. We highly recommend the popup in this case as\\n    // it is the least disruptive, and fits in well with the rest of Trello's UX\\n    return t.popup({\\n      title: 'Custom Fields Settings',\\n      url: './settings.html',\\n      height: 184 // we can always resize later\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"show-settings","type":"fn","title":"show-settings","__v":0,"updatedAt":"2019-06-10T14:28:52.716Z"}],"childrenPages":[{"_id":"594bc74d70a0130019782505","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5963e40af74e550029b692cd","596f6a78e2d5ee0038a9e51f"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:34:05.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"If your Power-Up can display rich, or interactive content, for an attached URL or URLs on a Trello card, then it should use `attachment-sections` to do so.\n\nAn attachment section is an iframe that gets rendered on the back of a card, above the attachments section. You give the section a title and icon, and tell Trello what page to load into the iframe. That page is then responsible for rendering content relevant to any attached URLs that it has claimed.\n\nYour Power-Up can have 0 or more attachment-sections, and each section can be for 1 or more claimed URLs.\n\nYou can return a Promise if you need to make asynchronous requests while determining which URL attachments to claim.\n\nAttachment sections have a number of options that can be passed in. Check out the code snippet below for the options available and valid values.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/a3502cd-attachment-sections.PNG\",\n        \"attachment-sections.PNG\",\n        1721,\n        1210,\n        \"#3f4247\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nwindow.TrelloPowerUp.initialize({\\n  'attachment-sections': function(t, options){\\n    // options.entries is a list of the attachments for this card\\n    // you can look through them and 'claim' any that you want to\\n    // include in your section.\\n\\n    // we will just claim urls for Yellowstone\\n    var claimed = options.entries.filter(function (attachment) {\\n      return attachment.url.indexOf('http://www.nps.gov/yell/') === 0;\\n    });\\n\\n    // you can have more than one attachment section on a card\\n    // you can group items together into one section, have a section\\n    // per attachment, or anything in between.\\n    if (claimed && claimed.length > 0) {\\n      // if the title for your section requires a network call or other\\n      // potentially lengthy operation you can provide a function for the title\\n      // that returns the section title. If you do so, provide a unique id for\\n      // your section\\n      return [{\\n        id: 'Yellowstone', // optional if you aren't using a function for the title\\n        claimed: claimed,\\n        icon: GRAY_ICON, // Must be a gray icon, colored icons not allowed.\\n        title: 'Example Attachment Section: Yellowstone',\\n        content: {\\n          type: 'iframe',\\n          url: t.signUrl('./section.html', {\\n            arg: 'you can pass your section args here'\\n          }),\\n          height: 230\\n        }\\n      }];\\n    } else {\\n      return [];\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`./section.html` looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <p>Tips for using attachment-sections</p>\\n      <ol>\\n        <li>Make sure your section feels at home on the card. It should fit in with the rest of the card and not stick out.</li>\\n        <li>You can specify a height when you claim the section, and also use t.sizeTo() to make sure your section is the perfect height.</li>\\n        <li>Try to keep the height of your sections to a minimum.</li>\\n        <li>It should be obvious to the user what attachments went into your section. They shouldn't be left wondering where one of their attachments disappeared to.</li>\\n      </ol>\\n      <p class=\\\"u-quiet\\\">Claimed attachment urls: <span id=\\\"urls\\\"></span></p>\\n    </div>\\n    <script src=\\\"./js/section.js\\\"></script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\n`./js/section.js` looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can access arguments passed to your iframe like so\\nvar arg = t.arg('arg');\\n\\nt.render(function(){\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function(attachment){\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function(yellowstoneAttachments){\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function(){\\n    return t.sizeTo('#content');\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"attachment-sections","type":"fn","title":"attachment-sections","__v":2,"updatedAt":"2019-06-10T14:28:52.708Z"},{"_id":"594bc75ab94b720019431350","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5ae0ec620fe7870003116499","5be1c2bcf05d1d0141b6c35e"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:34:18.059Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Sometimes, your Power-Up can provide additional information about an attachment, but it doesn't really require being pulled out into its own section. A great example of this is for files coming from storage services like Dropbox. To Trello, those are just URLs, but the Dropbox Power-Up can get thumbnail images, the real file name, as well as when the file was created, and last modified.\n\nThis is perfect for `attachment-thumbnail`:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/7848578-attachment-thumbnail.PNG\",\n        \"attachment-thumbnail.PNG\",\n        1716,\n        1274,\n        \"#eaeaf1\"\n      ]\n    }\n  ]\n}\n[/block]\nIn the case of Dropbox, you need to be authenticated before Dropbox can retrieve the additional metadata, so it can include a prompt to get the user to authorize.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/f0e30c1-attachment-thumbnail-3.PNG\",\n        \"attachment-thumbnail-3.PNG\",\n        1099,\n        324,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\nOnce the user is authorized, Dropbox can return much richer content:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/921ca09-attachment-thumbnail-2.PNG\",\n        \"attachment-thumbnail-2.PNG\",\n        1098,\n        271,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var formatNPSUrl = function (t, url) {\\n  if (!/^https?:\\\\/\\\\/www\\\\.nps\\\\.gov\\\\/[a-z]{4}\\\\//.test(url)) {\\n    return null;\\n  }\\n  var parkShort = /^https?:\\\\/\\\\/www\\\\.nps\\\\.gov\\\\/([a-z]{4})\\\\//.exec(url)[1];\\n  if (parkShort && parkMap[parkShort]) {\\n    return parkMap[parkShort];\\n  } else {\\n    return null;\\n  }\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    var parkName = formatNPSUrl(t, options.url);\\n    if (parkName){\\n      // return an object with some or all of these properties:\\n      // title, image, modified (Date), created (Date),\\n      // createdBy, modifiedBy\\n      return {\\n        title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        }\\n      };\\n    } else {\\n      throw t.NotHandled();\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nIf you need to provide the authorization prompt you can do so like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    var parkName = formatNPSUrl(t, options.url);\\n    if (parkName){\\n      // return an object with some or all of these properties:\\n      // title, image, modified (Date), created (Date),\\n      // createdBy, modifiedBy\\n      return {\\n         title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        },\\n        initialize: {\\n          type: 'iframe',\\n          url: t.signUrl(TrelloPowerUp.util.relativeUrl('authorize-link.html'))\\n        }\\n      };\\n    } else {\\n      throw t.NotHandled();\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nWhere `authorize-link.html` is just an anchor tag `<a>` and you can handle the click of that to open an authorization window.","excerpt":"","slug":"attachment-thumbnail","type":"fn","title":"attachment-thumbnail","__v":2,"updatedAt":"2019-06-10T14:28:52.709Z"},{"_id":"594bc7849814d90019a3fa7c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5b2c0725b3d2c1000301be3c"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:00.091Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"If your Power-Up requires that users authorize with some service before they can get the full functionality, you can help give them another way to authorize by telling Trello whether the user in question has already completed authorization.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Use `authorization-status` with `show-authorization`!\",\n  \"body\": \"The `authorization-status` capability should almost always be used along with `show-authorization` capability. The function you provide for `authorization-status` will be used to determine whether the user is considered authorized or not. If not, the `show-authorization` capability determines what will be show to the user when they click `Authorize Account`.\"\n}\n[/block]\nIf you return `authorized: false`, Trello will provide the following prompt when the user clicks the settings gear for your Power-Up. Clicking that takes us to [show-authorization](ref:show-authorization) \n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/9f4c22f-show-authorization.PNG\",\n        \"show-authorization.PNG\",\n        524,\n        301,\n        \"#e8e9ef\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'authorization-status': function(t, options){\\n    // return a promise that resolves to the object with\\n    // a property 'authorized' being true/false\\n    // you can also return the object synchronously if you know\\n    // the answer synchronously\\n    return new TrelloPowerUp.Promise((resolve) => resolve({ authorized: true }));\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"Determine whether the user is authorized or not.","slug":"authorization-status","type":"fn","title":"authorization-status","__v":1,"updatedAt":"2019-06-10T14:28:52.709Z"},{"_id":"594bc6da97f2b0000f7496d3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5a60dcd868b930001ce3d693","5c454fcf68cccc028635daaf","5cf57c64b0f8f400191f4215"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:10.144Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Board buttons enable developers to bring features of their Power-Up to the entire Board or to give users control over settings that affect the Power-Up as a whole. For example, the Calendar Power-Up displays due dates of all cards on the board in a calendar view and allows users to make date modifications while in that view.\n\nIf you need one or more buttons available on the board, as its name might imply, this is the capability you are looking for. \n\nHere's how the Calendar Power-Up gets the button you see below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/925b32b-board-buttons.PNG\",\n        \"board-buttons.PNG\",\n        871,\n        349,\n        \"#232f51\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var WHITE_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-white.svg';\\nvar BLACK_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-black.svg';\\n\\nvar onBtnClick = function (t, opts) {\\n  console.log('Someone clicked the button');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return [{\\n      // we can either provide a button that has a callback function\\n      icon: {\\n        dark: WHITE_ICON,\\n        light: BLACK_ICON\\n      },\\n      text: 'Callback',\\n      callback: onBtnClick,\\n      condition: 'edit'\\n    }, {\\n      // or we can also have a button that is just a simple url\\n      // clicking it will open a new tab at the provided url\\n      icon: {\\n        dark: WHITE_ICON,\\n        light: BLACK_ICON\\n      },\\n      text: 'URL',\\n      condition: 'always',\\n      url: 'https://trello.com/inspiration',\\n      target: 'Inspiring Boards' // optional target for above url\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou should return an array of button objects or a Promise that resolves to one. A button object has the following properties:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"icon\",\n    \"0-1\": \"Object\",\n    \"1-0\": \"text\",\n    \"1-1\": \"String\",\n    \"2-0\": \"condition\",\n    \"2-1\": \"String\",\n    \"3-0\": \"callback\",\n    \"3-1\": \"Function\",\n    \"4-0\": \"url\",\n    \"4-1\": \"String\",\n    \"5-0\": \"target\",\n    \"5-1\": \"String\",\n    \"0-2\": \"Object with urls for icons to be displayed on light and dark backgrounds. More info below.\",\n    \"1-2\": \"The name of the button, keep it short and sweet\",\n    \"2-2\": \"When the button should be displayed. One of:\\n\\n`admin` - User is an admin of the board\\n`edit` - User can edit the board\\n`readOnly` - User can not edit the board.\\n`signedIn` - User is logged into Trello.\\n`signedOut` - User is not logged into Trello.\\n`always` - Always show.\\n\\nThe default is `edit`\",\n    \"3-2\": \"Optional function that will be called on click of the button\",\n    \"4-2\": \"Optional href for the button\",\n    \"5-2\": \"Optional with use of `url` property to add a target to the anchor tag\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Icons\"\n}\n[/block]\nBackgrounds on Trello boards range in their colors and can make it hard for certain icons to be readable. When a user adds a board background, Trello computes whether the background is light or dark, and displays foreground board icons and text (such as board buttons) in an opposite luminance to create contrast. Therefore, a Power-Up needs to be able to provide icons for both background scenarios. The icon parameter accepts an object with two keys - `dark` and `light`, referring to the background. Each key should have a URL for its value that corresponds to an icon variant that contrasts with the key: `dark` should be a light icon and `light` should be a dark one.\n\nFor example:\n```\n// an example board button object\n{\n  icon: {\n    dark: \"https://example.com/a-white-icon.png\",\n    light: \"https://example.com/a-black-icon.png\"\n  },\n  text: \"My Board Button\",\n  callback: function(t) { console.log('clicked'); }\n}\n```\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"No Colored Icons\",\n  \"body\": \"Power-Ups using colored icons on board buttons will be rejected during the [Power-Up Review Process](https://developers.trello.com/docs/submitting-your-app-1).\"\n}\n[/block]","excerpt":"","slug":"board-buttons","type":"fn","title":"board-buttons","__v":3,"updatedAt":"2019-06-10T14:28:52.710Z"},{"_id":"594bc78de9125e0023228dc6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:09.975Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"The `callback` capability is a bit special. You won't be declaring a `callback` function in your `TrelloPowerUp.initialize` constructor. Instead this capability tells Trello that it should be holding on to callbacks that your Power-Up provides. If you have an interactive Power-Up that uses buttons or other items with callbacks, you'll want to enable this capability for your Power-Up in the portal.","excerpt":"","slug":"callback","type":"fn","title":"callback","__v":0,"updatedAt":"2019-06-10T14:28:52.710Z"},{"_id":"5ae081ab4f4a910003a8f3e9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"594837757d5c65000fe8b479","user":"5b75d499c1398c0003dbf656","updates":["5b75d52dc1398c0003dbf65d","5b75d58e4db2e80003be46f9"],"next":{"pages":[],"description":""},"createdAt":"2018-04-25T13:24:59.950Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"A card back section is an iframe that gets rendered on the back of a card, above the attachments section. You give the section a title and icon, and tell Trello what page to load into the iframe.\n\nYour Power-Up can have only one card back section and a maximum height of 500 pixels.\n\n`card-back-section` iframes are reloaded whenever `pluginData` is changed on the card via `t.set()`.\n\nCard back sections shouldn't be used to display information regarding the attachments on the card‚Äìfor that, you can use [attachment-sections](ref:attachment-sections).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1110cb7-Screen_Shot_2018-06-29_at_10.16.56_AM.png\",\n        \"Screen Shot 2018-06-29 at 10.16.56 AM.png\",\n        1586,\n        1370,\n        \"#e0e2e3\"\n      ],\n      \"caption\": \"Example of a card back section.\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"title\",\n    \"0-1\": \"String\",\n    \"0-2\": \"Rendered by Trello above the iframe.\",\n    \"1-0\": \"icon\\n*required* \",\n    \"1-1\": \"String\",\n    \"1-2\": \"Expected to be an icon that will be rendered to the left of your title on the card back.\",\n    \"2-0\": \"content\",\n    \"2-1\": \"Object\",\n    \"2-2\": \"The object passed in here should have the following three keys and values:\\n- `type` - String - Only `iframe` is supported.\\n- `url` - String - The URL of the page to be loaded as an iframe.\\n- `height` - Integer - The height to make the iframe; max height is 500 pixels.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Example\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-back-section': function(t, options){\\n    return {\\n      title: 'My Card Back Section',\\n      icon: GRAY_ICON, // Must be a gray icon, colored icons not allowed.\\n      content: {\\n        type: 'iframe',\\n        url: t.signUrl('./section.html'),\\n        height: 230 // Max height is 500\\n      }\\n    };\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-back-section","type":"fn","title":"card-back-section","__v":2,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc70570a0130019782504","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:53.160Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"`card-badges` is useful for showing quick, glanceable information on the front of cards. You can provide an icon, some text, as well as an optional color for each of your badges. Additionally, you can provide a dynamic function that can be re-called at a certain interval to provide constantly updated data.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/05ad5d9-Screen_Shot_2017-06-24_at_17.50.19.png\",\n        \"Screen Shot 2017-06-24 at 17.50.19.png\",\n        510,\n        1035,\n        \"#e2e2e1\"\n      ]\n    }\n  ]\n}\n[/block]\nIn the `opts` parameter passed to your function, there will be an `attachments` property which is an array of the attachments on the card. If your Power-Up shows badges based on attachments, it should access the ones passed in via the `opts` parameter instead of asking for them again via `t.card('attachments')`.\n\nTrello expects as a response an array of 0 or more badge objects:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"dynamic\",\n    \"0-1\": \"A function that returns a single badge object, or a Promise that resolves to one. Only use a dynamic badge if the data the badge is showing is expected to change outside of Trello.\\n\\nFor a dynamic badge this is the only property necessary to return.\",\n    \"1-0\": \"text\",\n    \"2-0\": \"icon\",\n    \"3-0\": \"color\",\n    \"4-0\": \"refresh\",\n    \"4-1\": \"Only relevant for the result of a dynamic badge. # of seconds for Trello to wait before re-running the dynamic function. Minimum of 10. Try to keep this as high as reasonable.\",\n    \"2-1\": \"Optional icon to show with the badge. When using a colored badge, make sure the color of the icon is white or gray as appropriate.\",\n    \"3-1\": \"Optional color for the badge. May be one of:\\n'blue', 'green', 'orange', 'red', 'yellow', 'purple', 'pink', 'sky', 'lime', 'light-gray'\",\n    \"1-1\": \"Optional text to display on the badge\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-badges': function (t, opts) {\\n    let cardAttachments = opts.attachments; // Trello passes you the attachments on the card\\n    return t.card('name')\\n    .get('name')\\n    .then(function(cardName){\\n      console.log('We just loaded the card name for fun: ' + cardName);\\n      return [{\\n        // dynamic badges can have their function rerun\\n        // after a set number of seconds defined by refresh.\\n        // Minimum of 10 seconds.\\n        dynamic: function(){\\n          // we could also return a Promise that resolves to\\n          // this as well if we needed to do something async first\\n          return {\\n            text: 'Dynamic ' + (Math.random() * 100).toFixed(0).toString(),\\n            icon: './images/icon.svg',\\n            color: 'green',\\n            refresh: 10 // in seconds\\n          };\\n        }\\n      }, {\\n        // its best to use static badges unless you need your\\n        // badges to refresh you can mix and match between\\n        // static and dynamic\\n        text: 'Static',\\n        icon: HYPERDEV_ICON, // for card front badges only\\n        color: null\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-badges","type":"fn","title":"card-badges","__v":0,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc6df97f2b0000f7496d4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":["5cd1c08adf65b10045cad7f1"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:15.816Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"Sometimes you may want to allow users to take actions directly on and related to a specific card. In those cases you would use the `card-buttons` capability to add the buttons you need to the card. All buttons that come from Power-Ups land in the Power-Ups section.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1ab833c-card-buttons.PNG\",\n        \"card-buttons.PNG\",\n        1566,\n        1322,\n        \"#2b3038\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar onBtnClick = function (t, opts) {\\n  console.log('Someone clicked the button');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      // usually you will provide a callback function to be run on button click\\n      // we recommend that you use a popup on click generally\\n      icon: GRAY_ICON, // don't use a colored icon here\\n      text: 'Open Popup',\\n      callback: onBtnClick,\\n      condition: 'edit'\\n    }, {\\n      // but of course, you could also just kick off to a url if that's your thing\\n      icon: GRAY_ICON,\\n      text: 'Just a URL',\\n      condition: 'always',\\n      url: 'https://developers.trello.com',\\n      target: 'Trello Developer Site' // optional target for above url\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou should return an array of button objects or a Promise that resolves to one. A button object has the following properties:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Propert\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"icon\",\n    \"0-1\": \"String\",\n    \"0-2\": \"The url to an icon for the button. Trello will add a `color=[hex]` query parameter which you can use to make the icon color match ours. This is easiest to do with an SVG icon.\",\n    \"1-0\": \"text\",\n    \"1-1\": \"String\",\n    \"1-2\": \"The name of the button, keep it short and sweet\",\n    \"2-0\": \"condition\",\n    \"2-1\": \"String\",\n    \"2-2\": \"To what types of users the button should be displayed. One of:\\n\\n`admin` - User is an admin on the board.\\n`edit` - User can edit the board.\\n`readOnly` - User can not edit the board.\\n`signedIn` - User is logged into Trello.\\n`signedOut` - User is not logged into Trello.\\n`always` - Always show.\\n\\nThe default is `edit`\",\n    \"3-0\": \"callback\",\n    \"3-1\": \"Function\",\n    \"3-2\": \"Optional function that will be called on click of the button\",\n    \"4-0\": \"url\",\n    \"4-1\": \"String\",\n    \"4-2\": \"Optional href for the button\",\n    \"5-0\": \"target\",\n    \"5-1\": \"String\",\n    \"5-2\": \"Optional with use of `url` property to add a target to the anchor tag.\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]","excerpt":"","slug":"card-buttons","type":"fn","title":"card-buttons","__v":1,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc736e9125e0023228dc5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:33:42.455Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"`card-detail-badges` provide a way to show quick, glanceable information at the top of the back of the card. Like the badges on the front of the card, these can be colored, and dynamic. However, they can also go further and be interactive. You can provide a callback function to be run when the user clicks the badge, or a url to navigate to.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/45044dc-Screen_Shot_2017-06-24_at_17.53.33.png\",\n        \"Screen Shot 2017-06-24 at 17.53.33.png\",\n        1560,\n        1311,\n        \"#293036\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-detail-badges': function (t, opts) {\\n    return t.card('name')\\n    .get('name')\\n    .then(function(cardName){\\n      console.log('We just loaded the card name for fun: ' + cardName);\\n\\n      return [{\\n      // dynamic badges can have their function rerun after a set number\\n      // of seconds defined by refresh. Minimum of 10 seconds.\\n      dynamic: function(){\\n        // we could also return a Promise that resolves to this\\n        // as well if we needed to do something async first\\n        return {\\n          title: 'Detail Badge',\\n          text: 'Dynamic ' + (Math.random() * 100).toFixed(0).toString(),\\n          color: randomBadgeColor(),\\n          refresh: 10 // in seconds\\n        };\\n      }\\n    }, {\\n      // its best to use static badges unless you need your badges\\n      // to refresh you can mix and match between static and dynamic\\n      title: 'Detail Badge',\\n      text: 'Static',\\n      color: null\\n    }, {\\n      // card detail badges (those that appear on the back of cards)\\n      // also support callback functions so that you can open for example\\n      // open a popup on click\\n      title: 'Popup Detail Badge',\\n      text: 'Popup',\\n      callback: function (t, opts) { // function to run on click\\n        // do something\\n      }\\n    }, {\\n      // or for simpler use cases you can also provide a url\\n      // when the user clicks on the card detail badge they will\\n      // go to a new tab at that url\\n      title: 'URL Detail Badge',\\n      text: 'URL',\\n      url: 'https://trello.com/home',\\n      target: 'Trello Landing Page' // optional target for above url\\n    }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-detail-badges","type":"fn","title":"card-detail-badges","__v":0,"updatedAt":"2019-06-10T14:28:52.712Z"},{"_id":"594bc79a169246000f3b30ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:22.872Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"One cool power-user feature of Trello, is that it will create cards for you automatically when you drag and drop or ctrl-c / ctrl-v URLs onto the `Add a card...` area at the bottom of a list. Your Power-Up can hook into this in order to help make more useful cards from URLs that your Power-Up knows about.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-from-url': function (t, options) {\\n    // options.url has the url in question\\n    // if we know cool things about that url we can give Trello a name and desc\\n    // to use when creating a card. Trello will also automatically add that url\\n    // as an attachment to the created card\\n    // As always you can return a Promise that resolves to the card details\\n    \\n    return new Promise(function (resolve) {\\n      resolve({\\n        name: 'üíª ' + options.url + ' ü§î',\\n        desc: 'This Power-Up knows cool things about the attached url'\\n      });\\n    });\\n    \\n    // if we don't actually have any valuable information about the url\\n    // we can let Trello know like so:\\n    // throw t.NotHandled();\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-from-url","type":"fn","title":"card-from-url","__v":0,"updatedAt":"2019-06-10T14:28:52.713Z"},{"_id":"594bc7a3e5ea7a000f734ff3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":["59632539ac97c60015d8effa"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:31.583Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"In card descriptions and comments, there may be URLs that your Power-Up could make look a lot better and more readable. With `format-url` you will be provided the URLs and can tell Trello when you have something better to be displayed. For example, here we replace a URL for a page to Crate Lake National Park with the park name itself, and a friendly icon.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1fa6933-format-url.PNG\",\n        \"format-url.PNG\",\n        1723,\n        416,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'format-url': function (t, options) {\\n    // options.url has the url that we are being asked to format\\n    // in our response we can include an icon as well as the replacement text\\n    \\n    return {\\n      icon: GRAY_ICON, // don't use a colored icon here\\n      text: 'üëâ ' + options.url + ' üëà' \\n    };\\n    \\n    // if we don't actually have any valuable information about the url\\n    // we can let Trello know like so:\\n    // throw t.NotHandled();\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"format-url","type":"fn","title":"format-url","__v":1,"updatedAt":"2019-06-10T14:28:52.713Z"},{"_id":"5aa2b5985c2c1a006678f392","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-09T16:26:00.735Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"Add new action options into the `...` menu on Trello lists. In the screenshot below, we have a Power-Up that is adding a new list action called \"Get List Stats\".\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/5db5e5d-Screen_Shot_2018-03-09_at_11.38.36_AM.png\",\n        \"Screen Shot 2018-03-09 at 11.38.36 AM.png\",\n        1520,\n        1088,\n        \"#a88e9f\"\n      ]\n    }\n  ]\n}\n[/block]\nTrello will call the function you defined for the `list-actions` capability when a board member clicks on the `...` menu in the top right of a list. You must return a response as quickly as possible (no more than 150ms). You can use `t.getContext().list` to get the ID of the list.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'list-actions': function (t) {\\n    return t.list('name', 'id')\\n    .then(function (list) {\\n      return [{\\n        text: \\\"Get List Stats\\\",\\n        callback: function (t) {\\n          // Trello will call this if the user clicks on this action\\n          // we could for example open a new popover...\\n          t.popup({\\n            // ...\\n          });\\n        }\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Expected Response\"\n}\n[/block]\nTrello expects your Power-Up to return an array in response to this capability. If you want no actions, you should return an empty array. You can return at most three actions. You should consider supplying an action that uses `t.popup` if you want to give the user more options.\n\nEach object in the array should have the following properties\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Required\",\n    \"0-0\": \"text\",\n    \"0-1\": \"Yes\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"Yes\",\n    \"h-2\": \"Description\",\n    \"0-2\": \"The text of the action. In the example we used \\\"Get List Stats\\\".\\n\\nTip: Keep it short, as Trello will not wrap the text, and it will cut off with an ellipsis.\\n\\nTip: If clicking the action will open a popup or modal, the text should end in an ellipsis.\",\n    \"1-2\": \"A function that will be called in response to a user clicking on the action.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Action Icon\",\n  \"body\": \"The icon included with the action will be the icon for your Power-Up. This is to make it clear to the user what actions are coming from which Power-Ups.\"\n}\n[/block]","excerpt":"","slug":"list-actions","type":"fn","title":"list-actions","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5aa2b5b3d5e24b0059a5a1cf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-09T16:26:27.229Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Add new sort options into the `...` -> \"Sort By...\" menu on Trello lists. In the screenshot below, we have a Power-Up that is adding a new list sort called \"Card Name\". The Voting Power-Up adds \"Most Votes\", and the Custom Fields Power-Up is adding \"Started On\", \"Incidents ‚¨ÜÔ∏è\", and \"Incidents ‚¨áÔ∏è\"\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/cdd8f63-Screen_Shot_2018-03-12_at_6.15.39_PM.png\",\n        \"Screen Shot 2018-03-12 at 6.15.39 PM.png\",\n        1318,\n        894,\n        \"#a8919f\"\n      ]\n    }\n  ]\n}\n[/block]\nTrello will run the function you defined for the `list-sorters` capability when the user clicks on `Sort By...` in the `...` menu for a list. You should reply as quickly as possible (under 150ms) with an array of sorters. The ID of the list can be found via: `t.getContext().list`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'list-sorters': function (t) {\\n    return t.list('name', 'id')\\n    .then(function (list) {\\n      return [{\\n        text: \\\"Card Name\\\",\\n        callback: function (t, opts) {\\n          // Trello will call this if the user clicks on this sort\\n          // opts.cards contains all card objects in the list\\n          var sortedCards = opts.cards.sort(\\n            function(a,b) {\\n              if (a.name > b.name) {\\n                return 1;\\n              } else if (b.name > a.name) {\\n                return -1;\\n              }\\n              return 0;\\n            });\\n          \\n          return {\\n            sortedIds: sortedCards.map(function (c) { return c.id; })\\n          };\\n        }\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Expected Response\"\n}\n[/block]\nIf you have no sorters to provide, you should return an empty array. Otherwise, each object in the array you return should have the follow properties\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Required\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"text\",\n    \"0-1\": \"Yes\",\n    \"0-2\": \"The name of the sort.\\n\\nTip: Keep this short, as Trello will not wrap the text and it will cut off with an ellipsis.\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"Yes\",\n    \"1-2\": \"A function to be called when a member clicks the sort.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Max of 5 sorters\",\n  \"body\": \"If you return more than five list sorters, Trello will only display the first five.\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Sort Callback\"\n}\n[/block]\nWhen a member clicks on one of your Power-Ups sorters, Trello will run the callback function you defined for it. As mentioned in the code example above, the second argument to the function will have a property called \"cards\" which is an array of every card in the list, ordered as they currently appear. Each card has all the properties as if you called `t.card('all')` for it.\n\nYour callback function should return (as quickly as possible) an object with the property `sortedIds`. The `sortedIds` property should be an array of all of the cards IDs, sorted in your desired order. Trello will then validate your response, and sort the cards in the list to reflect your order.","excerpt":"","slug":"list-sorters","type":"fn","title":"list-sorters","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5a8f690028fe2b00125ffd99","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"5a39e0b9539ed900125532f9","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-02-23T01:06:08.305Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"If you want your users to know how to use your Power-Up, you should use the `on-enable` capability. This capability gets triggered when a user enables your Power-Up. You may want to use this capability to show your user how to use your Power-Up by opening a modal (using [`t.modal()`](/v1.0/reference#t-modal). Another example of when to use this capability is when you want to initiate a configuration or authentication flow immediately after the user enables your Power-Up.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({  \\n  'on-enable': function(t, options) {\\n    // This code will get triggered when a user enables your Power-Up\\n    return t.modal({            \\n      url: './power-up-onboarding.html',\\n      height: 500,\\n      title: 'My Power-Up Overview'\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"on-enable","type":"basic","title":"on-enable","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5b61db9fc468b70003f4221e","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-01T16:11:11.415Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Use the `on-disable` capability to run some code, perhaps to update your records or clean up, when a user disables your Power-Up on a board via the UI.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Not Guaranteed\",\n  \"body\": \"Your Power-Up is not guaranteed to have this capability called when it is disabled. This can happen for a few reasons:\\n\\n- Power-Up is disabled via the API, instead of via the UI\\n- User downgrades, causing them to be over their Power-Up limit, and some Power-Ups will eventually be automatically disabled\\n- Your Power-Up failed to load during the session the user disabled it\"\n}\n[/block]\nTrello will call this capability if you have it enabled and implemented when the user clicks `Disable` from the gear menu for your Power-Up.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/93dd9ef-Screen_Shot_2018-08-01_at_12.08.24_PM.png\",\n        \"Screen Shot 2018-08-01 at 12.08.24 PM.png\",\n        2252,\n        1104,\n        \"#eef0f1\"\n      ]\n    }\n  ]\n}\n[/block]\nYour Power-Up will have `500ms` to make additional requests of Trello once this capability is called before it is fully disabled, and Trello will stop responding to requests from your Power-Up.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'on-disable': function(t){\\n    // load the data from Trello quickly first in case we need\\n    // to use any of it to cleanup on our side\\n    return t.getAll()\\n    .then(function(data) {\\n      // here we might want to properly revoke a token\\n      // or call into our own service to remove some records\\n    })\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"on-disable","type":"fn","title":"on-disable","__v":0,"updatedAt":"2019-06-10T14:28:52.715Z"},{"_id":"5b61d8cce4833500030685df","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-01T15:59:08.787Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"Trello allows users of your Power-Up to clear any `private` scoped data that your `pluginData` has stored for them via calls to `t.set()`. To do this, the user clicks the gear icon on your Power-Up, and then selects `Remove Personal Settings`.\n\nThis option is provided automatically by Trello only when the viewing member has `private` scoped plugin data stored for that Power-Up. The `remove-data` capability allows you to also perform an action when the user clicks.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/b794c0a-Screen_Shot_2018-08-01_at_11.54.04_AM.png\",\n        \"Screen Shot 2018-08-01 at 11.54.04 AM.png\",\n        2258,\n        1096,\n        \"#eff1f2\"\n      ]\n    }\n  ]\n}\n[/block]\nYou might want to use this moment as an opportunity to clean up additional personal information your Power-Up has stored about this member on your own servers. For instance, revoking a personal token.\n\nTrello will call the `remove-data` capability when the user confirms they want to remove their personal settings for your Power-Up. You will be given ~500ms to take an action using the private data for the member before Trello removes it.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'remove-data': function(t){\\n    // load the data from Trello quickly first in case we need\\n    // to use any of it to cleanup on our side\\n    return t.getAll()\\n    .then(function(data) {\\n      // here we might want to properly revoke a token\\n      // or call into our own service to remove some records\\n    })\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"remove-data","type":"fn","title":"remove-data","__v":0,"updatedAt":"2019-06-10T14:28:52.715Z"},{"_id":"594bc7d170a0130019782506","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:36:17.978Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"Tells Trello what to do when the clicks on the Authorize Account prompt.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/20ecfd3-show-authorization.PNG\",\n        \"show-authorization.PNG\",\n        524,\n        301,\n        \"#e8e9ef\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-authorization': function(t, options){\\n    // return what to do when a user clicks the 'Authorize Account' link\\n    // from the Power-Up gear icon which shows when 'authorization-status'\\n    // returns { authorized: false }\\n    // in this case we would open a popup\\n    return t.popup({\\n      title: 'My Auth Popup',\\n      url: './authorize.html',\\n      height: 140,\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"show-authorization","type":"fn","title":"show-authorization","__v":0,"updatedAt":"2019-06-10T14:28:52.716Z"},{"_id":"594bc7da70a0130019782507","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:36:26.970Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"If your Power-Up has a settings or configuration page, supporting this capability will show the gear button in your Power-Up, and provide the `Edit Power-Up Settings` prompt. When that prompt is clicked Trello will run your capability function.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/abb174b-show-settings.PNG\",\n        \"show-settings.PNG\",\n        529,\n        295,\n        \"#e9eaef\"\n      ]\n    }\n  ]\n}\n[/block]\nAn example of how the Custom Fields Power-Up uses this capability to show a popup with configuration options.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/7f48705-show-settings-2.PNG\",\n        \"show-settings-2.PNG\",\n        526,\n        592,\n        \"#e5e6eb\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-settings': function(t, options){\\n    // when a user clicks the gear icon by your Power-Up in the Power-Ups menu\\n    // what should Trello show. We highly recommend the popup in this case as\\n    // it is the least disruptive, and fits in well with the rest of Trello's UX\\n    return t.popup({\\n      title: 'Custom Fields Settings',\\n      url: './settings.html',\\n      height: 184 // we can always resize later\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"show-settings","type":"fn","title":"show-settings","__v":0,"updatedAt":"2019-06-10T14:28:52.716Z"}]},{"_id":"594bc74d70a0130019782505","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5963e40af74e550029b692cd","596f6a78e2d5ee0038a9e51f"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:34:05.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"If your Power-Up can display rich, or interactive content, for an attached URL or URLs on a Trello card, then it should use `attachment-sections` to do so.\n\nAn attachment section is an iframe that gets rendered on the back of a card, above the attachments section. You give the section a title and icon, and tell Trello what page to load into the iframe. That page is then responsible for rendering content relevant to any attached URLs that it has claimed.\n\nYour Power-Up can have 0 or more attachment-sections, and each section can be for 1 or more claimed URLs.\n\nYou can return a Promise if you need to make asynchronous requests while determining which URL attachments to claim.\n\nAttachment sections have a number of options that can be passed in. Check out the code snippet below for the options available and valid values.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/a3502cd-attachment-sections.PNG\",\n        \"attachment-sections.PNG\",\n        1721,\n        1210,\n        \"#3f4247\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nwindow.TrelloPowerUp.initialize({\\n  'attachment-sections': function(t, options){\\n    // options.entries is a list of the attachments for this card\\n    // you can look through them and 'claim' any that you want to\\n    // include in your section.\\n\\n    // we will just claim urls for Yellowstone\\n    var claimed = options.entries.filter(function (attachment) {\\n      return attachment.url.indexOf('http://www.nps.gov/yell/') === 0;\\n    });\\n\\n    // you can have more than one attachment section on a card\\n    // you can group items together into one section, have a section\\n    // per attachment, or anything in between.\\n    if (claimed && claimed.length > 0) {\\n      // if the title for your section requires a network call or other\\n      // potentially lengthy operation you can provide a function for the title\\n      // that returns the section title. If you do so, provide a unique id for\\n      // your section\\n      return [{\\n        id: 'Yellowstone', // optional if you aren't using a function for the title\\n        claimed: claimed,\\n        icon: GRAY_ICON, // Must be a gray icon, colored icons not allowed.\\n        title: 'Example Attachment Section: Yellowstone',\\n        content: {\\n          type: 'iframe',\\n          url: t.signUrl('./section.html', {\\n            arg: 'you can pass your section args here'\\n          }),\\n          height: 230\\n        }\\n      }];\\n    } else {\\n      return [];\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`./section.html` looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <p>Tips for using attachment-sections</p>\\n      <ol>\\n        <li>Make sure your section feels at home on the card. It should fit in with the rest of the card and not stick out.</li>\\n        <li>You can specify a height when you claim the section, and also use t.sizeTo() to make sure your section is the perfect height.</li>\\n        <li>Try to keep the height of your sections to a minimum.</li>\\n        <li>It should be obvious to the user what attachments went into your section. They shouldn't be left wondering where one of their attachments disappeared to.</li>\\n      </ol>\\n      <p class=\\\"u-quiet\\\">Claimed attachment urls: <span id=\\\"urls\\\"></span></p>\\n    </div>\\n    <script src=\\\"./js/section.js\\\"></script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\n`./js/section.js` looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can access arguments passed to your iframe like so\\nvar arg = t.arg('arg');\\n\\nt.render(function(){\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function(attachment){\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function(yellowstoneAttachments){\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function(){\\n    return t.sizeTo('#content');\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"attachment-sections","type":"fn","title":"attachment-sections","__v":2,"updatedAt":"2019-06-10T14:28:52.708Z"},{"_id":"594bc75ab94b720019431350","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5ae0ec620fe7870003116499","5be1c2bcf05d1d0141b6c35e"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:34:18.059Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Sometimes, your Power-Up can provide additional information about an attachment, but it doesn't really require being pulled out into its own section. A great example of this is for files coming from storage services like Dropbox. To Trello, those are just URLs, but the Dropbox Power-Up can get thumbnail images, the real file name, as well as when the file was created, and last modified.\n\nThis is perfect for `attachment-thumbnail`:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/7848578-attachment-thumbnail.PNG\",\n        \"attachment-thumbnail.PNG\",\n        1716,\n        1274,\n        \"#eaeaf1\"\n      ]\n    }\n  ]\n}\n[/block]\nIn the case of Dropbox, you need to be authenticated before Dropbox can retrieve the additional metadata, so it can include a prompt to get the user to authorize.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/f0e30c1-attachment-thumbnail-3.PNG\",\n        \"attachment-thumbnail-3.PNG\",\n        1099,\n        324,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\nOnce the user is authorized, Dropbox can return much richer content:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/921ca09-attachment-thumbnail-2.PNG\",\n        \"attachment-thumbnail-2.PNG\",\n        1098,\n        271,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var formatNPSUrl = function (t, url) {\\n  if (!/^https?:\\\\/\\\\/www\\\\.nps\\\\.gov\\\\/[a-z]{4}\\\\//.test(url)) {\\n    return null;\\n  }\\n  var parkShort = /^https?:\\\\/\\\\/www\\\\.nps\\\\.gov\\\\/([a-z]{4})\\\\//.exec(url)[1];\\n  if (parkShort && parkMap[parkShort]) {\\n    return parkMap[parkShort];\\n  } else {\\n    return null;\\n  }\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    var parkName = formatNPSUrl(t, options.url);\\n    if (parkName){\\n      // return an object with some or all of these properties:\\n      // title, image, modified (Date), created (Date),\\n      // createdBy, modifiedBy\\n      return {\\n        title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        }\\n      };\\n    } else {\\n      throw t.NotHandled();\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nIf you need to provide the authorization prompt you can do so like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    var parkName = formatNPSUrl(t, options.url);\\n    if (parkName){\\n      // return an object with some or all of these properties:\\n      // title, image, modified (Date), created (Date),\\n      // createdBy, modifiedBy\\n      return {\\n         title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        },\\n        initialize: {\\n          type: 'iframe',\\n          url: t.signUrl(TrelloPowerUp.util.relativeUrl('authorize-link.html'))\\n        }\\n      };\\n    } else {\\n      throw t.NotHandled();\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nWhere `authorize-link.html` is just an anchor tag `<a>` and you can handle the click of that to open an authorization window.","excerpt":"","slug":"attachment-thumbnail","type":"fn","title":"attachment-thumbnail","__v":2,"updatedAt":"2019-06-10T14:28:52.709Z"},{"_id":"594bc7849814d90019a3fa7c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5b2c0725b3d2c1000301be3c"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:00.091Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"If your Power-Up requires that users authorize with some service before they can get the full functionality, you can help give them another way to authorize by telling Trello whether the user in question has already completed authorization.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Use `authorization-status` with `show-authorization`!\",\n  \"body\": \"The `authorization-status` capability should almost always be used along with `show-authorization` capability. The function you provide for `authorization-status` will be used to determine whether the user is considered authorized or not. If not, the `show-authorization` capability determines what will be show to the user when they click `Authorize Account`.\"\n}\n[/block]\nIf you return `authorized: false`, Trello will provide the following prompt when the user clicks the settings gear for your Power-Up. Clicking that takes us to [show-authorization](ref:show-authorization) \n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/9f4c22f-show-authorization.PNG\",\n        \"show-authorization.PNG\",\n        524,\n        301,\n        \"#e8e9ef\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'authorization-status': function(t, options){\\n    // return a promise that resolves to the object with\\n    // a property 'authorized' being true/false\\n    // you can also return the object synchronously if you know\\n    // the answer synchronously\\n    return new TrelloPowerUp.Promise((resolve) => resolve({ authorized: true }));\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"Determine whether the user is authorized or not.","slug":"authorization-status","type":"fn","title":"authorization-status","__v":1,"updatedAt":"2019-06-10T14:28:52.709Z"},{"_id":"594bc6da97f2b0000f7496d3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":["5a60dcd868b930001ce3d693","5c454fcf68cccc028635daaf","5cf57c64b0f8f400191f4215"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:10.144Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Board buttons enable developers to bring features of their Power-Up to the entire Board or to give users control over settings that affect the Power-Up as a whole. For example, the Calendar Power-Up displays due dates of all cards on the board in a calendar view and allows users to make date modifications while in that view.\n\nIf you need one or more buttons available on the board, as its name might imply, this is the capability you are looking for. \n\nHere's how the Calendar Power-Up gets the button you see below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/925b32b-board-buttons.PNG\",\n        \"board-buttons.PNG\",\n        871,\n        349,\n        \"#232f51\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var WHITE_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-white.svg';\\nvar BLACK_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-black.svg';\\n\\nvar onBtnClick = function (t, opts) {\\n  console.log('Someone clicked the button');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return [{\\n      // we can either provide a button that has a callback function\\n      icon: {\\n        dark: WHITE_ICON,\\n        light: BLACK_ICON\\n      },\\n      text: 'Callback',\\n      callback: onBtnClick,\\n      condition: 'edit'\\n    }, {\\n      // or we can also have a button that is just a simple url\\n      // clicking it will open a new tab at the provided url\\n      icon: {\\n        dark: WHITE_ICON,\\n        light: BLACK_ICON\\n      },\\n      text: 'URL',\\n      condition: 'always',\\n      url: 'https://trello.com/inspiration',\\n      target: 'Inspiring Boards' // optional target for above url\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou should return an array of button objects or a Promise that resolves to one. A button object has the following properties:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"icon\",\n    \"0-1\": \"Object\",\n    \"1-0\": \"text\",\n    \"1-1\": \"String\",\n    \"2-0\": \"condition\",\n    \"2-1\": \"String\",\n    \"3-0\": \"callback\",\n    \"3-1\": \"Function\",\n    \"4-0\": \"url\",\n    \"4-1\": \"String\",\n    \"5-0\": \"target\",\n    \"5-1\": \"String\",\n    \"0-2\": \"Object with urls for icons to be displayed on light and dark backgrounds. More info below.\",\n    \"1-2\": \"The name of the button, keep it short and sweet\",\n    \"2-2\": \"When the button should be displayed. One of:\\n\\n`admin` - User is an admin of the board\\n`edit` - User can edit the board\\n`readOnly` - User can not edit the board.\\n`signedIn` - User is logged into Trello.\\n`signedOut` - User is not logged into Trello.\\n`always` - Always show.\\n\\nThe default is `edit`\",\n    \"3-2\": \"Optional function that will be called on click of the button\",\n    \"4-2\": \"Optional href for the button\",\n    \"5-2\": \"Optional with use of `url` property to add a target to the anchor tag\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Icons\"\n}\n[/block]\nBackgrounds on Trello boards range in their colors and can make it hard for certain icons to be readable. When a user adds a board background, Trello computes whether the background is light or dark, and displays foreground board icons and text (such as board buttons) in an opposite luminance to create contrast. Therefore, a Power-Up needs to be able to provide icons for both background scenarios. The icon parameter accepts an object with two keys - `dark` and `light`, referring to the background. Each key should have a URL for its value that corresponds to an icon variant that contrasts with the key: `dark` should be a light icon and `light` should be a dark one.\n\nFor example:\n```\n// an example board button object\n{\n  icon: {\n    dark: \"https://example.com/a-white-icon.png\",\n    light: \"https://example.com/a-black-icon.png\"\n  },\n  text: \"My Board Button\",\n  callback: function(t) { console.log('clicked'); }\n}\n```\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"No Colored Icons\",\n  \"body\": \"Power-Ups using colored icons on board buttons will be rejected during the [Power-Up Review Process](https://developers.trello.com/docs/submitting-your-app-1).\"\n}\n[/block]","excerpt":"","slug":"board-buttons","type":"fn","title":"board-buttons","__v":3,"updatedAt":"2019-06-10T14:28:52.710Z"},{"_id":"594bc78de9125e0023228dc6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:09.975Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"The `callback` capability is a bit special. You won't be declaring a `callback` function in your `TrelloPowerUp.initialize` constructor. Instead this capability tells Trello that it should be holding on to callbacks that your Power-Up provides. If you have an interactive Power-Up that uses buttons or other items with callbacks, you'll want to enable this capability for your Power-Up in the portal.","excerpt":"","slug":"callback","type":"fn","title":"callback","__v":0,"updatedAt":"2019-06-10T14:28:52.710Z"},{"_id":"5ae081ab4f4a910003a8f3e9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"594837757d5c65000fe8b479","user":"5b75d499c1398c0003dbf656","updates":["5b75d52dc1398c0003dbf65d","5b75d58e4db2e80003be46f9"],"next":{"pages":[],"description":""},"createdAt":"2018-04-25T13:24:59.950Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"A card back section is an iframe that gets rendered on the back of a card, above the attachments section. You give the section a title and icon, and tell Trello what page to load into the iframe.\n\nYour Power-Up can have only one card back section and a maximum height of 500 pixels.\n\n`card-back-section` iframes are reloaded whenever `pluginData` is changed on the card via `t.set()`.\n\nCard back sections shouldn't be used to display information regarding the attachments on the card‚Äìfor that, you can use [attachment-sections](ref:attachment-sections).\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1110cb7-Screen_Shot_2018-06-29_at_10.16.56_AM.png\",\n        \"Screen Shot 2018-06-29 at 10.16.56 AM.png\",\n        1586,\n        1370,\n        \"#e0e2e3\"\n      ],\n      \"caption\": \"Example of a card back section.\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"title\",\n    \"0-1\": \"String\",\n    \"0-2\": \"Rendered by Trello above the iframe.\",\n    \"1-0\": \"icon\\n*required* \",\n    \"1-1\": \"String\",\n    \"1-2\": \"Expected to be an icon that will be rendered to the left of your title on the card back.\",\n    \"2-0\": \"content\",\n    \"2-1\": \"Object\",\n    \"2-2\": \"The object passed in here should have the following three keys and values:\\n- `type` - String - Only `iframe` is supported.\\n- `url` - String - The URL of the page to be loaded as an iframe.\\n- `height` - Integer - The height to make the iframe; max height is 500 pixels.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Example\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-back-section': function(t, options){\\n    return {\\n      title: 'My Card Back Section',\\n      icon: GRAY_ICON, // Must be a gray icon, colored icons not allowed.\\n      content: {\\n        type: 'iframe',\\n        url: t.signUrl('./section.html'),\\n        height: 230 // Max height is 500\\n      }\\n    };\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-back-section","type":"fn","title":"card-back-section","__v":2,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc70570a0130019782504","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:53.160Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"`card-badges` is useful for showing quick, glanceable information on the front of cards. You can provide an icon, some text, as well as an optional color for each of your badges. Additionally, you can provide a dynamic function that can be re-called at a certain interval to provide constantly updated data.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/05ad5d9-Screen_Shot_2017-06-24_at_17.50.19.png\",\n        \"Screen Shot 2017-06-24 at 17.50.19.png\",\n        510,\n        1035,\n        \"#e2e2e1\"\n      ]\n    }\n  ]\n}\n[/block]\nIn the `opts` parameter passed to your function, there will be an `attachments` property which is an array of the attachments on the card. If your Power-Up shows badges based on attachments, it should access the ones passed in via the `opts` parameter instead of asking for them again via `t.card('attachments')`.\n\nTrello expects as a response an array of 0 or more badge objects:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"dynamic\",\n    \"0-1\": \"A function that returns a single badge object, or a Promise that resolves to one. Only use a dynamic badge if the data the badge is showing is expected to change outside of Trello.\\n\\nFor a dynamic badge this is the only property necessary to return.\",\n    \"1-0\": \"text\",\n    \"2-0\": \"icon\",\n    \"3-0\": \"color\",\n    \"4-0\": \"refresh\",\n    \"4-1\": \"Only relevant for the result of a dynamic badge. # of seconds for Trello to wait before re-running the dynamic function. Minimum of 10. Try to keep this as high as reasonable.\",\n    \"2-1\": \"Optional icon to show with the badge. When using a colored badge, make sure the color of the icon is white or gray as appropriate.\",\n    \"3-1\": \"Optional color for the badge. May be one of:\\n'blue', 'green', 'orange', 'red', 'yellow', 'purple', 'pink', 'sky', 'lime', 'light-gray'\",\n    \"1-1\": \"Optional text to display on the badge\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-badges': function (t, opts) {\\n    let cardAttachments = opts.attachments; // Trello passes you the attachments on the card\\n    return t.card('name')\\n    .get('name')\\n    .then(function(cardName){\\n      console.log('We just loaded the card name for fun: ' + cardName);\\n      return [{\\n        // dynamic badges can have their function rerun\\n        // after a set number of seconds defined by refresh.\\n        // Minimum of 10 seconds.\\n        dynamic: function(){\\n          // we could also return a Promise that resolves to\\n          // this as well if we needed to do something async first\\n          return {\\n            text: 'Dynamic ' + (Math.random() * 100).toFixed(0).toString(),\\n            icon: './images/icon.svg',\\n            color: 'green',\\n            refresh: 10 // in seconds\\n          };\\n        }\\n      }, {\\n        // its best to use static badges unless you need your\\n        // badges to refresh you can mix and match between\\n        // static and dynamic\\n        text: 'Static',\\n        icon: HYPERDEV_ICON, // for card front badges only\\n        color: null\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-badges","type":"fn","title":"card-badges","__v":0,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc6df97f2b0000f7496d4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":["5cd1c08adf65b10045cad7f1"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:32:15.816Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"Sometimes you may want to allow users to take actions directly on and related to a specific card. In those cases you would use the `card-buttons` capability to add the buttons you need to the card. All buttons that come from Power-Ups land in the Power-Ups section.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1ab833c-card-buttons.PNG\",\n        \"card-buttons.PNG\",\n        1566,\n        1322,\n        \"#2b3038\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar onBtnClick = function (t, opts) {\\n  console.log('Someone clicked the button');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      // usually you will provide a callback function to be run on button click\\n      // we recommend that you use a popup on click generally\\n      icon: GRAY_ICON, // don't use a colored icon here\\n      text: 'Open Popup',\\n      callback: onBtnClick,\\n      condition: 'edit'\\n    }, {\\n      // but of course, you could also just kick off to a url if that's your thing\\n      icon: GRAY_ICON,\\n      text: 'Just a URL',\\n      condition: 'always',\\n      url: 'https://developers.trello.com',\\n      target: 'Trello Developer Site' // optional target for above url\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou should return an array of button objects or a Promise that resolves to one. A button object has the following properties:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Propert\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"icon\",\n    \"0-1\": \"String\",\n    \"0-2\": \"The url to an icon for the button. Trello will add a `color=[hex]` query parameter which you can use to make the icon color match ours. This is easiest to do with an SVG icon.\",\n    \"1-0\": \"text\",\n    \"1-1\": \"String\",\n    \"1-2\": \"The name of the button, keep it short and sweet\",\n    \"2-0\": \"condition\",\n    \"2-1\": \"String\",\n    \"2-2\": \"To what types of users the button should be displayed. One of:\\n\\n`admin` - User is an admin on the board.\\n`edit` - User can edit the board.\\n`readOnly` - User can not edit the board.\\n`signedIn` - User is logged into Trello.\\n`signedOut` - User is not logged into Trello.\\n`always` - Always show.\\n\\nThe default is `edit`\",\n    \"3-0\": \"callback\",\n    \"3-1\": \"Function\",\n    \"3-2\": \"Optional function that will be called on click of the button\",\n    \"4-0\": \"url\",\n    \"4-1\": \"String\",\n    \"4-2\": \"Optional href for the button\",\n    \"5-0\": \"target\",\n    \"5-1\": \"String\",\n    \"5-2\": \"Optional with use of `url` property to add a target to the anchor tag.\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]","excerpt":"","slug":"card-buttons","type":"fn","title":"card-buttons","__v":1,"updatedAt":"2019-06-10T14:28:52.711Z"},{"_id":"594bc736e9125e0023228dc5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:33:42.455Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"`card-detail-badges` provide a way to show quick, glanceable information at the top of the back of the card. Like the badges on the front of the card, these can be colored, and dynamic. However, they can also go further and be interactive. You can provide a callback function to be run when the user clicks the badge, or a url to navigate to.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/45044dc-Screen_Shot_2017-06-24_at_17.53.33.png\",\n        \"Screen Shot 2017-06-24 at 17.53.33.png\",\n        1560,\n        1311,\n        \"#293036\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-detail-badges': function (t, opts) {\\n    return t.card('name')\\n    .get('name')\\n    .then(function(cardName){\\n      console.log('We just loaded the card name for fun: ' + cardName);\\n\\n      return [{\\n      // dynamic badges can have their function rerun after a set number\\n      // of seconds defined by refresh. Minimum of 10 seconds.\\n      dynamic: function(){\\n        // we could also return a Promise that resolves to this\\n        // as well if we needed to do something async first\\n        return {\\n          title: 'Detail Badge',\\n          text: 'Dynamic ' + (Math.random() * 100).toFixed(0).toString(),\\n          color: randomBadgeColor(),\\n          refresh: 10 // in seconds\\n        };\\n      }\\n    }, {\\n      // its best to use static badges unless you need your badges\\n      // to refresh you can mix and match between static and dynamic\\n      title: 'Detail Badge',\\n      text: 'Static',\\n      color: null\\n    }, {\\n      // card detail badges (those that appear on the back of cards)\\n      // also support callback functions so that you can open for example\\n      // open a popup on click\\n      title: 'Popup Detail Badge',\\n      text: 'Popup',\\n      callback: function (t, opts) { // function to run on click\\n        // do something\\n      }\\n    }, {\\n      // or for simpler use cases you can also provide a url\\n      // when the user clicks on the card detail badge they will\\n      // go to a new tab at that url\\n      title: 'URL Detail Badge',\\n      text: 'URL',\\n      url: 'https://trello.com/home',\\n      target: 'Trello Landing Page' // optional target for above url\\n    }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-detail-badges","type":"fn","title":"card-detail-badges","__v":0,"updatedAt":"2019-06-10T14:28:52.712Z"},{"_id":"594bc79a169246000f3b30ba","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:22.872Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"One cool power-user feature of Trello, is that it will create cards for you automatically when you drag and drop or ctrl-c / ctrl-v URLs onto the `Add a card...` area at the bottom of a list. Your Power-Up can hook into this in order to help make more useful cards from URLs that your Power-Up knows about.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-from-url': function (t, options) {\\n    // options.url has the url in question\\n    // if we know cool things about that url we can give Trello a name and desc\\n    // to use when creating a card. Trello will also automatically add that url\\n    // as an attachment to the created card\\n    // As always you can return a Promise that resolves to the card details\\n    \\n    return new Promise(function (resolve) {\\n      resolve({\\n        name: 'üíª ' + options.url + ' ü§î',\\n        desc: 'This Power-Up knows cool things about the attached url'\\n      });\\n    });\\n    \\n    // if we don't actually have any valuable information about the url\\n    // we can let Trello know like so:\\n    // throw t.NotHandled();\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"card-from-url","type":"fn","title":"card-from-url","__v":0,"updatedAt":"2019-06-10T14:28:52.713Z"},{"_id":"594bc7a3e5ea7a000f734ff3","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":["59632539ac97c60015d8effa"],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:35:31.583Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"In card descriptions and comments, there may be URLs that your Power-Up could make look a lot better and more readable. With `format-url` you will be provided the URLs and can tell Trello when you have something better to be displayed. For example, here we replace a URL for a page to Crate Lake National Park with the park name itself, and a friendly icon.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/1fa6933-format-url.PNG\",\n        \"format-url.PNG\",\n        1723,\n        416,\n        \"#ebebf2\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'format-url': function (t, options) {\\n    // options.url has the url that we are being asked to format\\n    // in our response we can include an icon as well as the replacement text\\n    \\n    return {\\n      icon: GRAY_ICON, // don't use a colored icon here\\n      text: 'üëâ ' + options.url + ' üëà' \\n    };\\n    \\n    // if we don't actually have any valuable information about the url\\n    // we can let Trello know like so:\\n    // throw t.NotHandled();\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"format-url","type":"fn","title":"format-url","__v":1,"updatedAt":"2019-06-10T14:28:52.713Z"},{"_id":"5aa2b5985c2c1a006678f392","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-09T16:26:00.735Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"Add new action options into the `...` menu on Trello lists. In the screenshot below, we have a Power-Up that is adding a new list action called \"Get List Stats\".\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/5db5e5d-Screen_Shot_2018-03-09_at_11.38.36_AM.png\",\n        \"Screen Shot 2018-03-09 at 11.38.36 AM.png\",\n        1520,\n        1088,\n        \"#a88e9f\"\n      ]\n    }\n  ]\n}\n[/block]\nTrello will call the function you defined for the `list-actions` capability when a board member clicks on the `...` menu in the top right of a list. You must return a response as quickly as possible (no more than 150ms). You can use `t.getContext().list` to get the ID of the list.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'list-actions': function (t) {\\n    return t.list('name', 'id')\\n    .then(function (list) {\\n      return [{\\n        text: \\\"Get List Stats\\\",\\n        callback: function (t) {\\n          // Trello will call this if the user clicks on this action\\n          // we could for example open a new popover...\\n          t.popup({\\n            // ...\\n          });\\n        }\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Expected Response\"\n}\n[/block]\nTrello expects your Power-Up to return an array in response to this capability. If you want no actions, you should return an empty array. You can return at most three actions. You should consider supplying an action that uses `t.popup` if you want to give the user more options.\n\nEach object in the array should have the following properties\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Required\",\n    \"0-0\": \"text\",\n    \"0-1\": \"Yes\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"Yes\",\n    \"h-2\": \"Description\",\n    \"0-2\": \"The text of the action. In the example we used \\\"Get List Stats\\\".\\n\\nTip: Keep it short, as Trello will not wrap the text, and it will cut off with an ellipsis.\\n\\nTip: If clicking the action will open a popup or modal, the text should end in an ellipsis.\",\n    \"1-2\": \"A function that will be called in response to a user clicking on the action.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Action Icon\",\n  \"body\": \"The icon included with the action will be the icon for your Power-Up. This is to make it clear to the user what actions are coming from which Power-Ups.\"\n}\n[/block]","excerpt":"","slug":"list-actions","type":"fn","title":"list-actions","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5aa2b5b3d5e24b0059a5a1cf","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-09T16:26:27.229Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Add new sort options into the `...` -> \"Sort By...\" menu on Trello lists. In the screenshot below, we have a Power-Up that is adding a new list sort called \"Card Name\". The Voting Power-Up adds \"Most Votes\", and the Custom Fields Power-Up is adding \"Started On\", \"Incidents ‚¨ÜÔ∏è\", and \"Incidents ‚¨áÔ∏è\"\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/cdd8f63-Screen_Shot_2018-03-12_at_6.15.39_PM.png\",\n        \"Screen Shot 2018-03-12 at 6.15.39 PM.png\",\n        1318,\n        894,\n        \"#a8919f\"\n      ]\n    }\n  ]\n}\n[/block]\nTrello will run the function you defined for the `list-sorters` capability when the user clicks on `Sort By...` in the `...` menu for a list. You should reply as quickly as possible (under 150ms) with an array of sorters. The ID of the list can be found via: `t.getContext().list`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'list-sorters': function (t) {\\n    return t.list('name', 'id')\\n    .then(function (list) {\\n      return [{\\n        text: \\\"Card Name\\\",\\n        callback: function (t, opts) {\\n          // Trello will call this if the user clicks on this sort\\n          // opts.cards contains all card objects in the list\\n          var sortedCards = opts.cards.sort(\\n            function(a,b) {\\n              if (a.name > b.name) {\\n                return 1;\\n              } else if (b.name > a.name) {\\n                return -1;\\n              }\\n              return 0;\\n            });\\n          \\n          return {\\n            sortedIds: sortedCards.map(function (c) { return c.id; })\\n          };\\n        }\\n      }];\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Expected Response\"\n}\n[/block]\nIf you have no sorters to provide, you should return an empty array. Otherwise, each object in the array you return should have the follow properties\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Property\",\n    \"h-1\": \"Required\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"text\",\n    \"0-1\": \"Yes\",\n    \"0-2\": \"The name of the sort.\\n\\nTip: Keep this short, as Trello will not wrap the text and it will cut off with an ellipsis.\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"Yes\",\n    \"1-2\": \"A function to be called when a member clicks the sort.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Max of 5 sorters\",\n  \"body\": \"If you return more than five list sorters, Trello will only display the first five.\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Sort Callback\"\n}\n[/block]\nWhen a member clicks on one of your Power-Ups sorters, Trello will run the callback function you defined for it. As mentioned in the code example above, the second argument to the function will have a property called \"cards\" which is an array of every card in the list, ordered as they currently appear. Each card has all the properties as if you called `t.card('all')` for it.\n\nYour callback function should return (as quickly as possible) an object with the property `sortedIds`. The `sortedIds` property should be an array of all of the cards IDs, sorted in your desired order. Trello will then validate your response, and sort the cards in the list to reflect your order.","excerpt":"","slug":"list-sorters","type":"fn","title":"list-sorters","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5a8f690028fe2b00125ffd99","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"5a39e0b9539ed900125532f9","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-02-23T01:06:08.305Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"If you want your users to know how to use your Power-Up, you should use the `on-enable` capability. This capability gets triggered when a user enables your Power-Up. You may want to use this capability to show your user how to use your Power-Up by opening a modal (using [`t.modal()`](/v1.0/reference#t-modal). Another example of when to use this capability is when you want to initiate a configuration or authentication flow immediately after the user enables your Power-Up.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({  \\n  'on-enable': function(t, options) {\\n    // This code will get triggered when a user enables your Power-Up\\n    return t.modal({            \\n      url: './power-up-onboarding.html',\\n      height: 500,\\n      title: 'My Power-Up Overview'\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"on-enable","type":"basic","title":"on-enable","__v":0,"updatedAt":"2019-06-10T14:28:52.714Z"},{"_id":"5b61db9fc468b70003f4221e","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-01T16:11:11.415Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Use the `on-disable` capability to run some code, perhaps to update your records or clean up, when a user disables your Power-Up on a board via the UI.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Not Guaranteed\",\n  \"body\": \"Your Power-Up is not guaranteed to have this capability called when it is disabled. This can happen for a few reasons:\\n\\n- Power-Up is disabled via the API, instead of via the UI\\n- User downgrades, causing them to be over their Power-Up limit, and some Power-Ups will eventually be automatically disabled\\n- Your Power-Up failed to load during the session the user disabled it\"\n}\n[/block]\nTrello will call this capability if you have it enabled and implemented when the user clicks `Disable` from the gear menu for your Power-Up.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/93dd9ef-Screen_Shot_2018-08-01_at_12.08.24_PM.png\",\n        \"Screen Shot 2018-08-01 at 12.08.24 PM.png\",\n        2252,\n        1104,\n        \"#eef0f1\"\n      ]\n    }\n  ]\n}\n[/block]\nYour Power-Up will have `500ms` to make additional requests of Trello once this capability is called before it is fully disabled, and Trello will stop responding to requests from your Power-Up.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'on-disable': function(t){\\n    // load the data from Trello quickly first in case we need\\n    // to use any of it to cleanup on our side\\n    return t.getAll()\\n    .then(function(data) {\\n      // here we might want to properly revoke a token\\n      // or call into our own service to remove some records\\n    })\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"on-disable","type":"fn","title":"on-disable","__v":0,"updatedAt":"2019-06-10T14:28:52.715Z"},{"_id":"5b61d8cce4833500030685df","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-08-01T15:59:08.787Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"Trello allows users of your Power-Up to clear any `private` scoped data that your `pluginData` has stored for them via calls to `t.set()`. To do this, the user clicks the gear icon on your Power-Up, and then selects `Remove Personal Settings`.\n\nThis option is provided automatically by Trello only when the viewing member has `private` scoped plugin data stored for that Power-Up. The `remove-data` capability allows you to also perform an action when the user clicks.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/b794c0a-Screen_Shot_2018-08-01_at_11.54.04_AM.png\",\n        \"Screen Shot 2018-08-01 at 11.54.04 AM.png\",\n        2258,\n        1096,\n        \"#eff1f2\"\n      ]\n    }\n  ]\n}\n[/block]\nYou might want to use this moment as an opportunity to clean up additional personal information your Power-Up has stored about this member on your own servers. For instance, revoking a personal token.\n\nTrello will call the `remove-data` capability when the user confirms they want to remove their personal settings for your Power-Up. You will be given ~500ms to take an action using the private data for the member before Trello removes it.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'remove-data': function(t){\\n    // load the data from Trello quickly first in case we need\\n    // to use any of it to cleanup on our side\\n    return t.getAll()\\n    .then(function(data) {\\n      // here we might want to properly revoke a token\\n      // or call into our own service to remove some records\\n    })\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"remove-data","type":"fn","title":"remove-data","__v":0,"updatedAt":"2019-06-10T14:28:52.715Z"},{"_id":"594bc7d170a0130019782506","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:36:17.978Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"Tells Trello what to do when the clicks on the Authorize Account prompt.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/20ecfd3-show-authorization.PNG\",\n        \"show-authorization.PNG\",\n        524,\n        301,\n        \"#e8e9ef\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-authorization': function(t, options){\\n    // return what to do when a user clicks the 'Authorize Account' link\\n    // from the Power-Up gear icon which shows when 'authorization-status'\\n    // returns { authorized: false }\\n    // in this case we would open a popup\\n    return t.popup({\\n      title: 'My Auth Popup',\\n      url: './authorize.html',\\n      height: 140,\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"show-authorization","type":"fn","title":"show-authorization","__v":0,"updatedAt":"2019-06-10T14:28:52.716Z"},{"_id":"594bc7da70a0130019782507","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837757d5c65000fe8b479","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T13:36:26.970Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"If your Power-Up has a settings or configuration page, supporting this capability will show the gear button in your Power-Up, and provide the `Edit Power-Up Settings` prompt. When that prompt is clicked Trello will run your capability function.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/abb174b-show-settings.PNG\",\n        \"show-settings.PNG\",\n        529,\n        295,\n        \"#e9eaef\"\n      ]\n    }\n  ]\n}\n[/block]\nAn example of how the Custom Fields Power-Up uses this capability to show a popup with configuration options.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/7f48705-show-settings-2.PNG\",\n        \"show-settings-2.PNG\",\n        526,\n        592,\n        \"#e5e6eb\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-settings': function(t, options){\\n    // when a user clicks the gear icon by your Power-Up in the Power-Ups menu\\n    // what should Trello show. We highly recommend the popup in this case as\\n    // it is the least disruptive, and fits in well with the rest of Trello's UX\\n    return t.popup({\\n      title: 'Custom Fields Settings',\\n      url: './settings.html',\\n      height: 184 // we can always resize later\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"show-settings","type":"fn","title":"show-settings","__v":0,"updatedAt":"2019-06-10T14:28:52.716Z"},{"_id":"594837a0524b9a000fb7dde8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":null,"updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-19T20:44:16.621Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"When you include the `power-up.js` or `power-up.min.js` script on your page, it will put an object on the `window` called `TrelloPowerUp`. You can initialize the Power-Up communication library with either:\n\nOn your index connection page, where you register your callback functions for each of the capabilities that your Power-Up supports\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) { ... },\\n  'card-buttons': function (t, opts) { ... },\\n  ...\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlternatively, your Power-Up may have other pages that are hosted in iframes inside of Trello such as for popups, or for `attachment-sections`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOnce you have access to `t` (you can call it whatever you want) as in the capability callback functions, or in your secondary iframes, you can use `t` to ask questions of Trello, as well as have Trello do things for you. These are the methods available to you on `t`:","excerpt":"","slug":"client-library","type":"fn","title":"Client Library","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z","children":[{"_id":"594b206297f2b0000f748fb6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:41:54.001Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Get data at a specific scope and visibility\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared', 'myKey')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can optionally include a default value to return if that key doesn't exist\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared', 'myKey', 'Uh oh, not yet set')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlternatively, if you want all data at a scope and visibility, not just a single key:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can also get data from a card given it's ID:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('542b0bd40d309dc6eba7ec91', 'shared', 'myKey')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-get","type":"fn","title":"t.get(scope, visibility, key, default)","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z"},{"_id":"594b1fb831eb2d001bf392b1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:39:04.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Return all pluginData for all scopes & visibilities currently in context\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.getAll()\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe data response might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  board: {\\n    shared: {\\n      enabled: true\\n    },\\n    private: {\\n      shh: 'its a secret'\\n    }\\n  },\\n  organization: {\\n    shared: {\\n      interval: 1500\\n    }\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-getall","type":"fn","title":"t.getAll()","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z"},{"_id":"594b20d270a0130019781cc6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:43:46.428Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Used to store data within the Trello Power-Up platform.\n\n`t.set()` returns a Promise and accepts the following options:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Values\",\n    \"h-2\": \"About\",\n    \"0-0\": \"**scope**\\nstring\",\n    \"1-0\": \"**visibility**\\nstring\",\n    \"2-0\": \"**key**\\nstring\",\n    \"3-0\": \"**value**\\nSerializable item\",\n    \"0-1\": \"One of: `board`, `card`, `member`, `organization`, or the ID of card that is in scope.\",\n    \"1-1\": \"One of: `shared`, `private`.\",\n    \"2-1\": \"Any string.\",\n    \"2-2\": \"\",\n    \"3-1\": \"Accepts individual string, number, boolean, or object containing them.\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"visibility: \\\"shared\\\" vs. \\\"private\\\"\",\n  \"body\": \"When selecting a visibility for the data that you are setting, you should be thinking about who should be able to see it.\\n\\n**shared** - You should use this visibility if the data you are storing should be visible / accessible to everyone who can read the \\\"scope\\\" it is stored against. So for example `t.set('board', 'shared', 'key', 'value')` would make that data (`{key: 'value'}`) visible to everyone who can see the board. Keep in mind, a board could be made public, meaning _everyone_ including people who are not even Trello members would then have access to that data. \\n\\n*Do **not** store secrets or personal data in 'shared' visibility*\\n\\n**private** - You should use this visibility when you are storing data that you want to be visible / accessible only to the Trello member who you are storing it against. So for example `t.set('board', 'private', 'key', 'value')` would make that data (`{key: 'value'}`) only accessible to that particular member. If another member were to load the board and the data stored against it, they would not be able to see or access that piece of data.\\n\\nIf you are storing external service tokens, such as an oauth token to your app or service, you should consider using [t.storeSecret](https://developers.trello.com/v1.0/reference#t-storesecret)\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Errors\"\n}\n[/block]\n`Invalid value for scope.` - Occurs when an invalid value is passed for the scope.\n\n`Invalid value for visibility.` - Occurs when an invalid value is passed for the visibility.\n\n`PluginData length of 4096 characters exceeded. See: https://developers.trello.com/v1.0/reference#section-size-limit` - Occurs when trying to set data that exceeds 4096 characters in current scope/visibility pair.\n\n`Detected potential secret. You should never store secrets like tokens in shared pluginData. See: https://developers.trello.com/v1.0/reference#t-set\"` - We want to make it harder to accidentally store secrets in a place that might be publicly accessible so we will block calls to `t.set('{object}', 'shared', {key}, {value})` where the key contains the data that looks like it might be a secret: `auth`, `refresh`, `token`, `secret`.\n\n[block:api-header]\n{\n  \"title\": \"Setting Multiple Values\"\n}\n[/block]\n`t.set()` allows for multiple keys to be set by accepting an object full of the key/value pairs instead of the single `key` and `value` parameter:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"let myKeyValueObject = {\\n  myKey: 'myValue',\\n  otherKey: 25,\\n  enabled: true\\n}\\nt.set('card', 'shared', myKeyValueObject);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\nShared storage operations are not atomic. If two `set` operations happen at the same time on two different keys they can override one another.\n\nAt the point in time a Power-Up uses `t.set()`, a single PUT request is made for all of the shared storage at once. Under the hood, Trello doesn't store separate key/value pairs‚Äìit is a single JSON blob. If client A changes something and client B sets something before getting the socket update for A‚Äôs change, they‚Äôre going to collide and result in data loss.\n\nIf a Power-Up needs to set multiple keys concurrently, the safest thing to do is to pass an object containing the multiple key/value pairs as described above.\n[block:api-header]\n{\n  \"title\": \"Example Usage\"\n}\n[/block]\nYou can set a specific key and value at the target visibility and scope:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('card', 'shared', 'myKey', 'myValue');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr if you have a plain javascript object, you can set that all at once:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('card', 'shared', { myKey: 'myValue', more: 25, enabled: true });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAdditionally, you can set data on a card from any context by calling `t.set` with its ID.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('542b0bd40d309dc6eba7ec91', 'shared', 'myKey', 'myValue');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou may want to check what kind of permissions this user has before using `t.set`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nvar permissions = t.getContext().permissions;\\n\\nif (permissions.board === 'write') {\\n  return t.set('board', 'shared', { myKey: 'myValue', more: 25, enabled: true });\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Write Permissions\",\n  \"body\": \"Keep in mind, the user of your Power-Up isn't guaranteed to have write access in Trello, or on a specific object. This means your `t.set` call could fail. You may want to catch these errors, and have fallback logic.\\n\\nYou can check the permissions object in the context as shown above to know whether the active user can set `\\\"shared\\\"` data at a certain scope. In general, a Trello member, (as long as there is a member in the context), can set `\\\"private\\\"` data at any scope, with the exception of `\\\"organization\\\"` when the organization in question is itself private, and the active member is not a member of that organization.\\n\\nIn that particular case, you can catch the error, and fallback to writing that at the board level.\"\n}\n[/block]","excerpt":"Store data in a Trello Power-Up","slug":"t-set","type":"fn","title":"t.set(scope, visibility, key, value)","__v":0,"updatedAt":"2019-06-10T14:28:52.718Z"},{"_id":"594b213d9814d90019a3f551","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:45:33.370Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"You can remove a key at a specific scope:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.remove('member', 'private', 'myKey');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr you can remove multiple keys at once:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.remove('member', 'private', ['myKey', 'anotherKey', 'enabled']);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-remove","type":"fn","title":"t.remove(scope, visibility, key)","__v":0,"updatedAt":"2019-06-10T14:28:52.718Z"},{"_id":"594d84be845458001b4c6e8a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:14:38.985Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When you create additional iframes, such as for [attachment-sections](ref:attachment-sections), you can pass yourself arguments. Those arguments can be retrieved on that page once it is loaded via `t.arg` like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.arg('myArg');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-arg","type":"fn","title":"t.arg(name, defaultValue)","__v":0,"updatedAt":"2019-06-10T14:28:52.719Z"},{"_id":"594d853f634354002938da47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:16:47.159Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"If you need to store sensitive information, such as an oauth token to a service other than Trello, we recommend that you use `t.storeSecret` and `t.loadSecret` to do so.\n\nWhen storing a secret, Trello will generate a new encryption key for the member, if one doesn't yet exist for your Power-Up, and will encrypt the secret, and store it in the browser's local storage (on your Power-Up's domain, not on the `trello.com` domain).\n\nWhile this does mean that your user's may have to repeat the process on each browser they use, it also means their secrets are never sent to Trello, and therefore remain safe with the Power-Up itself.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.storeSecret('token', 'shhh...its a secret');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nIt is possible that `t.loadSecret()` can throw a `Decryption failed` error when attempting, and failing, to decrypt a secret. This can happen if the encryption key stored in `pluginData` has been removed via the user selecting `Remove Personal Settings` from the Power-Up's settings menu. When using `t.loadSecret()`, you should expect to catch this error.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"localStorage disabled\",\n  \"body\": \"If you are using this method, you'll want to make sure you catch and handle cases where access to localStorage is disabled in the browser. You should try to present the user with a helpful message that localStorage needs to be enabled for your domain.\"\n}\n[/block]","excerpt":"","slug":"t-storesecret","type":"fn","title":"t.storeSecret(key, data)","__v":0,"updatedAt":"2019-06-10T14:28:52.719Z"},{"_id":"594d85530c8d130015c5c6a8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:17:07.673Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"To retrieve secrets that you have stored via `t.storeSecret` you'll need to use `t.loadSecret`. It will handle decrypting the secret before handing it back to you.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.loadSecret('token')\\n.then(function (secret) {\\n  console.log(secret);\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-loadsecret","type":"fn","title":"t.loadSecret(key)","__v":0,"updatedAt":"2019-06-10T14:28:52.720Z"},{"_id":"5c9b99b03c9f770051af8de7","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.720Z","createdAt":"2019-03-27T15:41:36.994Z","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","parentDoc":"594837a0524b9a000fb7dde8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"You can use this method to remove a locally stored secret (that was stored via `t.storeSecret`).\n\nNote that this will remove the encrypted secret locally, but will not remove or alter the encryption key stored in Trello. That's probably the behavior that you want, as removing or altering the encryption key would render _all_ secrets stored via `t.storeSecret` with that key useless.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"TrelloPowerUp.initialize({\\n  'remove-data': function(t) {\\n    // the user has pressed the remove personal settings button\\n    // let's imagine earlier we stored a secret like so:\\n    // t.storeSecret('token', 'shh its a secret');\\n    // now we just want to clean it up\\n    return t.clearSecret('token');\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-clearsecret","type":"fn","title":"t.clearSecret(key)","__v":0},{"_id":"594b21d797f2b0000f748fb9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:48:07.264Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"In order to know whether you want to show a `card-badge` on a card, you first may want to know more information about the card in question. The methods below will help you ask Trello for information about specific fields on Trello objects.","excerpt":"","slug":"get-data-on-trello-objects","type":"basic","title":"Get data on Trello objects","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"596d000b7485f2001a09cee1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:20:59.581Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"Synchronously get the current context for `t`. This can be useful if you need the ID of a model that is in scope, or want to check user permissions.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    var context = t.getContext();\\n    console.log(JSON.stringify(context, null, 2));\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  // id of the current board\\n  board: \\\"59287bae175fb20142c4c282\\\",\\n  // id of the current card (if there is one)\\n  card: \\\"59287bec175fb20142c4c363\\\",\\n  // capability command, (if there is one)\\n  command: \\\"card-buttons\\\",\\n  // id of the current member, \\\"notLoggedIn\\\" if no member is logged in\\n  member: \\\"591f23d52a2eaa0c33e6c187\\\",\\n  // id of the team the board is in (if its in one)\\n  organization: \\\"538627f73cbb44d1bfbb58f0\\\",\\n  // id of the enterprise the board is in (if its in one)\\n  enterprise: \\\"5cedada40a30f27bdb6e26b7\\\",\\n  // read or write permissions for current member per modelType\\n  permissions: {\\n    board: \\\"write\\\",\\n    organization: \\\"write\\\",\\n    card: \\\"write\\\"\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tgetcontext","type":"fn","title":"t.getContext()","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"596d003ee0604b002b4990d8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:21:50.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"Synchronously determine if your Power-Up is being used by a logged in Trello member. Keep in mind, that your Power-Up might be enabled on a public board that is being viewed and interacted with by someone who is not logged into Trello.\n\nReturns `true` or `false`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    console.log(t.isMemberSignedIn());\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tismembersignedin","type":"fn","title":"t.isMemberSignedIn()","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"594b2233169246000f3b290d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:49:39.430Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"Ask Trello for information on specific properties of the current board.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.board('all')\\n    .then(function (board) {\\n      console.log(JSON.stringify(board, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.board('id', 'name')\\n    .then(function (board) {\\n      console.log(JSON.stringify(board, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"url\",\n    \"3-0\": \"shortLink\",\n    \"4-0\": \"members\",\n    \"5-0\": \"dateLastActivity\",\n    \"6-0\": \"idOrganization\",\n    \"7-0\": \"customFields\",\n    \"8-0\": \"labels\",\n    \"9-0\": \"memberships\"\n  },\n  \"cols\": 1,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"t-board","type":"fn","title":"t.board('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.722Z"},{"_id":"594b2c4897f2b0000f749047","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:32:40.068Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return t.list('all')\\n    .then(function (list) {\\n      console.log(JSON.stringify(list, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"cards\"\n  },\n  \"cols\": 1,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"t-list","type":"fn","title":"t.list('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.722Z"},{"_id":"594b2c999814d90019a3f59c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:34:01.866Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Get information on all open lists on the board. Takes the same field options as [t.list](#t-list).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.lists('all')\\n    .then(function (lists) {\\n      console.log(JSON.stringify(lists, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-lists","type":"fn","title":"t.lists('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.723Z"},{"_id":"594b2c5ab94b720019430b9d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:32:58.072Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return t.card('all')\\n    .then(function (card) {\\n      console.log(JSON.stringify(card, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"desc\",\n    \"3-0\": \"due\",\n    \"5-0\": \"closed\",\n    \"6-0\": \"cover\",\n    \"7-0\": \"attachments\",\n    \"8-0\": \"members\",\n    \"9-0\": \"labels\",\n    \"10-0\": \"url\",\n    \"11-0\": \"shortLink\",\n    \"12-0\": \"idList\",\n    \"13-0\": \"idShort\",\n    \"14-0\": \"dateLastActivity\",\n    \"15-0\": \"badges\",\n    \"h-0\": \"Allowed Fields\",\n    \"4-0\": \"dueComplete\",\n    \"16-0\": \"customFieldItems\",\n    \"17-0\": \"coordinates\",\n    \"18-0\": \"address\",\n    \"19-0\": \"locationName\"\n  },\n  \"cols\": 1,\n  \"rows\": 20\n}\n[/block]","excerpt":"","slug":"t-card","type":"fn","title":"t.card('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.723Z"},{"_id":"594b2cace5ea7a000f734a47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:34:20.087Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Get information on all open cards on the board. Takes the same field options as [t.card](#t-card).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.cards('all')\\n    .then(function (cards) {\\n      console.log(JSON.stringify(cards, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-cards","type":"fn","title":"t.cards('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.724Z"},{"_id":"594b2c8897f2b0000f749049","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:33:44.665Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.member('all')\\n.then(function (member) {\\n  console.log(JSON.stringify(member, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"fullName\",\n    \"2-0\": \"username\",\n    \"3-0\": \"avatar\",\n    \"4-0\": \"initials\"\n  },\n  \"cols\": 1,\n  \"rows\": 5\n}\n[/block]\n\n### Privacy Controlled Fields\n\nSome fields on the [member can be put under privacy controls](https://developers.trello.com/reference#section-member-fields-and-privacy-controls). When a user selects a privacy setting other than `public` for their `avatar` or `fullName`, calls to `t.member` asking for either of those fields will change.\n\nIf `fullName` is set to anything other than `public`, the value returned from `t.member('fullName')` will be the same as `t.member('username')`.\n\nIf `avatar` is set to anything other than `public`, calls to `t.member('avatar')` will return `null`. This is the same response you'd receive currently if the user did not have an avatar set.","excerpt":"","slug":"t-member","type":"fn","title":"t.member('id', 'fullName', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.724Z"},{"_id":"596d005cdad7bc0029a9a4f5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5a2f0b8e3e3fd700280b2e18"],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:22:20.405Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"Determine whether the current member can write data on a certain model. Useful for example if trying to determine if the current user of your Power-Up can attach an item to a card with `t.attach`\n\nSynchronously returns `true` or `false`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    console.log(t.memberCanWriteToModel('card'));\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed ModelType\",\n    \"0-0\": \"board\",\n    \"2-0\": \"organization\",\n    \"1-0\": \"card\"\n  },\n  \"cols\": 1,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"tmembercanwritetomodelmodeltype","type":"fn","title":"t.memberCanWriteToModel(modelType)","__v":1,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d84f20c8d130015c5c6a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:15:30.104Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"Get information about the organization (team) that the current board is in (if any).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.organization('all')\\n.then(function (organization) {\\n  console.log(JSON.stringify(organization, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.organization('id', 'name')\\n.then(function (organization) {\\n  console.log(JSON.stringify(organization, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\"\n  },\n  \"cols\": 1,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Private Organizations\",\n  \"body\": \"A board may be in a private team (organization) for which the current member using your Power-Up isn't in and therefore can't see. In that case you won't be able to get organization details via `t.organization`.\\n\\nIf you still need the `id` of the organization, you can use `t.board('idOrganization')`\"\n}\n[/block]","excerpt":"","slug":"t-organization","type":"fn","title":"t.organization('id, 'name')","__v":0,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d835f0c8d130015c5c685","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["59ef5f50ddeade003070aed4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:08:47.553Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":19,"body":"Whenever you are displaying a visible iframe in Trello, we want to make sure it doesn't flash when there are changes.\n\nA good example is [attachment-sections](ref:attachment-sections). When new attachments are added, some are removed, or other data about your Power-Up is changed, you may need to re-render your section, but Trello doesn't want to reload your iframe, as that would cause a jarring flash.\n\nInstead, you should make sure any logic that updates your UI in visible iframes with changes should live in or be triggered by `t.render`. Trello will re-call `t.render` whenever something changes that we think might be relevant.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can access arguments passed to your iframe like so\\n// unlike logic that lives inside t.render() this will only\\n// be passed once, so don't rely on this for information that\\n// could change, for example what attachments you want to show\\n// in this section\\nvar arg = t.arg('arg');\\n\\nt.render(function () {\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function (attachment) {\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function (yellowstoneAttachments) {\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function () {\\n    return t.sizeTo('#content');\\n  });\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-render","type":"fn","title":"t.render(func)","__v":1,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d83a26d807a001baf1de7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":["59763b073bd93b001a1e7f85","5a39e4f2539ed90012553328"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:09:54.754Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":20,"body":"Sometimes, such as to complete an oauth flow, you need to show a page in its own new window. For authentication, this is usually because oauth pages (for security reasons) cannot be displayed inside of iframes.\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\nWhen calling `t.authorize` you must provide the URL to kick-off the authorization flow and, optionally, include an object containing a set of options. Below are valid values for the option object.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Name\",\n    \"0-0\": \"**height**\\ninteger\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**width**\\ninteger\",\n    \"1-1\": \"Width of the window to be opened in pixels.\",\n    \"0-1\": \"Height of the window to be opened in pixels.\",\n    \"2-0\": \"**validToken**\\nfunction\",\n    \"2-1\": \"A function that returns a boolean value to indicate whether the token being returned is valid or not. If the function returns `true`, the Promise started by `t.authorize` will be resolved. If the function returns `false`, the Promise will not be resolved.\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]\n`t.authorize` can help you complete these flows. The first argument should be the URL that will be opened in a new window, and the options allow you to specify the size of the window, as well as a validation function if you want to check the token that comes back.\n\nHere is an example of completing Trello's oauth flow using `t.authorize`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var Promise = TrelloPowerUp.Promise;\\nvar t = TrelloPowerUp.iframe();\\n\\n// When constructing the URL, remember that you'll need to encode your\\n// APPNAME and RETURNURL\\n// You can do that with the encodeURIComponent(string) function\\n// encodeURIComponent('Hello World') -> \\\"Hello%20World\\\"\\nvar oauthUrl = 'https://trello.com/1/authorize?expiration=never' +\\n  '&name=[APPNAME]&scope=read&key=[APIKEY]&callback_method=fragment' +\\n  '&return_url=[RETURNURL]';\\n\\nvar tokenLooksValid = function(token) {\\n  return /^[0-9a-f]{64}$/.test(token);\\n}\\n\\nvar storageHandler = function(evt) {  \\n  if (evt.key === 'token' && evt.newValue) {\\n    // Do something with the token here, then...\\n    authorizeWindow.close();\\n    window.removeEventListener('storage', storageHandler);\\n  }\\n}\\n\\nvar authorizeOpts = {\\n  height: 680,\\n  width: 580,\\n  validToken: tokenLooksValid,\\n  windowCallback: function(authorizeWindow) {\\n    // This callback gets called with the handle to the\\n    // authorization window. This can be useful if you\\n    // can't call window.close() in your new window \\n    // (such as the case when your authorization page\\n    // is rendered inside an iframe).\\n    window.addEventListener('storage', storageHandler);\\n  }\\n};\\n\\nvar authBtn = document.getElementById('authorize');\\nauthBtn.addEventListener('click', function() {\\n  t.authorize(oauthUrl, authorizeOpts)\\n  .then(function(token) {\\n    return t.set('organization', 'private', 'token', token)\\n    .catch(t.NotHandled, function() {\\n      // fall back to storing at board level\\n      return t.set('board', 'private', 'token', token);\\n    });\\n  })\\n  .then(function() {\\n    // now that the token is stored, we can close this popup\\n    // you might alternatively choose to open a new popup\\n    return t.closePopup();\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`t.authorize` will return a Promise that you can wait to resolve or reject. The Promise will resolve when either the `window.authorize(token)` function is called, or an item is stored in `localStorage` on the same domain under the key `'token'`.\n\nAt the end of the authorization flow in the new window you will want to have a script that looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var token = window.location.hash.substring(7);\\nlet authorize;\\n\\ntry {\\n  if (window.opener && typeof window.opener.authorize === 'function') {\\n    authorize = window.opener.authorize;\\n  }\\n} catch (e) {\\n  // Security settings are preventing this, fall back to local storage.\\n}\\n\\nif (authorize) {\\n  try {\\n    authorize(token);\\n  } catch (e) {\\n    // localStorage only works when the opened window's domain is\\n    // the same as the domain of the Power-Up iframe that opened\\n    // the window.\\n    localStorage.setItem('token', token);\\n  }\\n} else {\\n  localStorage.setItem('token', token);\\n}\\n\\n// This window.close() may not work if this page is inside an\\n// iframe. In this case, use the `windowCallback` option in\\n// `t.authorize()` to get access to the window handler when\\n// `t.authorize()` is called.\\nsetTimeout(function(){ window.close(); }, 1000);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-authorize","type":"fn","title":"t.authorize(url, opts)","__v":2,"updatedAt":"2019-06-10T14:28:52.726Z"},{"_id":"594d83d177799f001b905970","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5c45374d73a9720fe54ca0af"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:10:41.454Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":21,"body":"Lets you tell Trello to navigate to an arbitrary Trello URL, such as that of a card or board. Will not let you navigate the page to a non-Trello URL. If trying to bring up an open (not archived) card on the current board, you should instead use [t.showCard](#t-showcard) as it will be much more performant.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.navigate({\\n  url: 'https://trello.com/c/nqPiDKmw/9-grand-canyon-national-park'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-navigate","type":"fn","title":"t.navigate(opts)","__v":1,"updatedAt":"2019-06-10T14:28:52.726Z"},{"_id":"594d85cc2af9f70029b6304d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:19:08.106Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":22,"body":"With `t.attach` you can attach a URL to a card, as long as you are in the context of a particular card. A common use case for this is as the result of clicking a `card-button`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var attachOnClick = function (t, opts) {\\n  return t.attach({\\n    name: 'The name for the attachment', // optional\\n    url: 'https://developers.trello.com' // required\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: './images/icon.svg',\\n      text: 'Attach a Thing',\\n      callback: attachOnClick\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Requires permissions.card === 'write'\",\n  \"body\": \"You may want to check that `t.memberCanWriteToModel('card') === true` before even giving the user the option to attach something to a card.\"\n}\n[/block]","excerpt":"","slug":"t-attach","type":"fn","title":"t.attach(data)","__v":0,"updatedAt":"2019-06-10T14:28:52.727Z"},{"_id":"594d83ff2e5787001b713b98","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:11:27.686Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":23,"body":"Given a key, and optional replacement data, synchronously returns the output of `window.localizer.localize(key, data)`\n\nAssume you have a resources file like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"btn-name\\\": \\\"Hi {name}\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      text: t.localizeKey('btn-name', { name: 'Trello' }),\\n      url: 'https://developers.trello.com',\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThat will generate a button with the text: `Hi Trello`","excerpt":"","slug":"t-localizekey","type":"fn","title":"t.localizeKey(key, data)","__v":0,"updatedAt":"2019-06-10T14:28:52.727Z"},{"_id":"594d845adf89370015573469","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:12:58.192Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":24,"body":"Synchronously localizes multiple keys. You can either provide an array of keys `['key1', 'key2']` or an array of key-data arrays `[['key1', { data: 1 }], ['key2', { data: 2 }]]`. This will return an array of strings, in the same order as the keys were passed in.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      text: t.localizeKeys([['btn-name', { name: 'Trello' }]]),\\n      url: 'https://developers.trello.com',\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-localizekeys","type":"fn","title":"t.localizeKeys(keys)","__v":0,"updatedAt":"2019-06-10T14:28:52.728Z"},{"_id":"594d84820c8d130015c5c6a6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5c4538623b425e004520ca01"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:13:38.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":25,"body":"Synchronously inserts localized texts into DOM nodes starting at the provided node and all of its children. Tag a node in your HTML with `data-i18n-id=\"key\"` for its text content to be replaced based on that key. You can pass args with `data-i18n-args='{ \"arg1\": \"data\" }'`. You can also have placeholder text replaced with `data-i18n-attrs='{ \"placeholder\": \"key\" }'`. This will also use the args defined in `data-i18n-args`.\n\nCurrently there is no support for dot notation when replacing args.\n\nLet's assume we have an overlay iframe that looks like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"./css/overlay.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <h2 data-i18n-id=\\\"tips-for-overlay\\\">Tips for using t.overlay()</h2>\\n      <hr/>\\n      <ol>\\n        <li data-i18n-id=\\\"only-for-user-actions\\\">\\n          You should only call t.overlay() as a response to a user action, such as clicking a button.\\n        </li>\\n        <li data-i18n-id=\\\"prefer-t-popup\\\">\\n          Try to use t.popup() when possible instead of t.overlay() as it helps to better maintain context.\\n        </li>\\n        <li data-i18n-id=\\\"easy-to-close\\\">\\n          When using an overlay, be sure to keep the user aware they haven't left their Trello board, and make it easy and intuitive to close.\\n        </li>\\n        <li data-i18n-id=\\\"load-and-render-fast\\\">\\n          Try to get your overlay to load and render as quickly as possible.\\n        </li>\\n      </ol>\\n    </div>\\n    <script src=\\\"./js/overlay.js\\\"></script>\\n  </body>\\n</html>\\n\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nOur javascript to make sure that gets localized might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n\\nt.render(function(){\\n\\tlet contentNode = document.getElementById('content');\\n  t.localizeNode(contentNode);\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nFor reference the `./strings/en-US.json` file would look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"tips-for-overlay\\\": \\\"Tips for using t.overlay()\\\",\\n  \\\"only-for-user-actions\\\": \\\"You should only call t.overlay() as a response to a user action, such as clicking a button.\\\",\\n  \\\"prefer-t-popup\\\": \\\"Try to use t.popup() when possible instead of t.overlay() as it helps to better maintain context.\\\",\\n  \\\"easy-to-close\\\": \\\"When using an overlay, be sure to keep the user aware they haven't left their Trello board, and make it easy and intuitive to close.\\\",\\n  \\\"load-and-render-fast\\\": \\\"Try to get your overlay to load and render as quickly as possible.\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-localizenode","type":"fn","title":"t.localizeNode(DOMelement)","__v":1,"updatedAt":"2019-06-10T14:28:52.728Z"},{"_id":"594d8674387538002da1767e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:21:56.645Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":26,"body":"Sometimes you might need to be able to run a callback function on something like a popup. When you create the popup, in the instantiation object you can give it a callback property with a function to be run, but then how do you trigger it?\n\nThat's where `t.notifyParent('done')` comes into play. Calling this method from that popup will trigger Trello to run the callback.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var onDone = function (t, opts) {\\n  console.log('Hey There');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'show-settings': function (t, opts) {\\n    return t.popup({\\n      callback: onDone,\\n      title: 'Settings',\\n      url: './settings.html',\\n      height: 184\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe script on our settings page might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.render(function () {\\n  // do some stuff\\n});\\n\\ndocument.getElementById('save').addEventListener('click', function () {\\n  // will cause the callback that was included when this\\n  // popup was created to be run\\n  return t.notifyParent('done');\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-notifyparent","type":"fn","title":"t.notifyParent('done')","__v":0,"updatedAt":"2019-06-10T14:28:52.729Z"},{"_id":"59b2d8d2f7dfc9003ac02195","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-09-08T17:52:18.367Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":27,"body":"Add current context data to a URL so that (as long as it is opened by Trello) the page will continue to be able to communicate with Trello via the Power-Up interface.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// synchronously returns the \\\"signed\\\" URL\\nvar signedURL = t.signUrl(\\\"https://google.com\\\", { anArg: 'hey' });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`args` is an optional object where you can retrieve the values with `t.arg` once you load this URL and initialize a `t`.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"In general, wherever possible, Trello does this for you automatically. So when you give a URL to t.popup for example, you don't have to sign it yourself first.\"\n}\n[/block]\nCurrently there are two places where you will need to use `t.signUrl` on your own:\n\n1. `attachment-thumbnail` when returning an `initialize` iframe url:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    return {\\n        url: options.url,\\n        title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        },\\n        openText: 'Open in NPS',\\n        initialize: {\\n          type: 'iframe',\\n          url: t.signUrl(TrelloPowerUp.util.relativeUrl('authorize-link.html'))\\n        }\\n      };\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n2. `attachment-sections` when returning the `content` iframe url:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-sections': function (t, opts) {\\n    return [{\\n      id: 'abc123',\\n      claimed: opts.entries,\\n      icon: 'https://example.com/image.svg',\\n      title: 'My Section',\\n      content: {\\n        type: 'iframe',\\n        url: t.signUrl('./folder.html', { arg: 'why not' })\\n      }\\n    }];\\n  }\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Warning\",\n  \"body\": \"This function currently assumes the URL provided to it does not already have a hash component.\"\n}\n[/block]","excerpt":"","slug":"t-signurl","type":"fn","title":"t.signUrl(url, args)","__v":0,"updatedAt":"2019-06-10T14:28:52.729Z"}],"childrenPages":[{"_id":"594b206297f2b0000f748fb6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:41:54.001Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Get data at a specific scope and visibility\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared', 'myKey')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can optionally include a default value to return if that key doesn't exist\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared', 'myKey', 'Uh oh, not yet set')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlternatively, if you want all data at a scope and visibility, not just a single key:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can also get data from a card given it's ID:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('542b0bd40d309dc6eba7ec91', 'shared', 'myKey')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-get","type":"fn","title":"t.get(scope, visibility, key, default)","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z"},{"_id":"594b1fb831eb2d001bf392b1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:39:04.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Return all pluginData for all scopes & visibilities currently in context\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.getAll()\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe data response might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  board: {\\n    shared: {\\n      enabled: true\\n    },\\n    private: {\\n      shh: 'its a secret'\\n    }\\n  },\\n  organization: {\\n    shared: {\\n      interval: 1500\\n    }\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-getall","type":"fn","title":"t.getAll()","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z"},{"_id":"594b20d270a0130019781cc6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:43:46.428Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Used to store data within the Trello Power-Up platform.\n\n`t.set()` returns a Promise and accepts the following options:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Values\",\n    \"h-2\": \"About\",\n    \"0-0\": \"**scope**\\nstring\",\n    \"1-0\": \"**visibility**\\nstring\",\n    \"2-0\": \"**key**\\nstring\",\n    \"3-0\": \"**value**\\nSerializable item\",\n    \"0-1\": \"One of: `board`, `card`, `member`, `organization`, or the ID of card that is in scope.\",\n    \"1-1\": \"One of: `shared`, `private`.\",\n    \"2-1\": \"Any string.\",\n    \"2-2\": \"\",\n    \"3-1\": \"Accepts individual string, number, boolean, or object containing them.\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"visibility: \\\"shared\\\" vs. \\\"private\\\"\",\n  \"body\": \"When selecting a visibility for the data that you are setting, you should be thinking about who should be able to see it.\\n\\n**shared** - You should use this visibility if the data you are storing should be visible / accessible to everyone who can read the \\\"scope\\\" it is stored against. So for example `t.set('board', 'shared', 'key', 'value')` would make that data (`{key: 'value'}`) visible to everyone who can see the board. Keep in mind, a board could be made public, meaning _everyone_ including people who are not even Trello members would then have access to that data. \\n\\n*Do **not** store secrets or personal data in 'shared' visibility*\\n\\n**private** - You should use this visibility when you are storing data that you want to be visible / accessible only to the Trello member who you are storing it against. So for example `t.set('board', 'private', 'key', 'value')` would make that data (`{key: 'value'}`) only accessible to that particular member. If another member were to load the board and the data stored against it, they would not be able to see or access that piece of data.\\n\\nIf you are storing external service tokens, such as an oauth token to your app or service, you should consider using [t.storeSecret](https://developers.trello.com/v1.0/reference#t-storesecret)\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Errors\"\n}\n[/block]\n`Invalid value for scope.` - Occurs when an invalid value is passed for the scope.\n\n`Invalid value for visibility.` - Occurs when an invalid value is passed for the visibility.\n\n`PluginData length of 4096 characters exceeded. See: https://developers.trello.com/v1.0/reference#section-size-limit` - Occurs when trying to set data that exceeds 4096 characters in current scope/visibility pair.\n\n`Detected potential secret. You should never store secrets like tokens in shared pluginData. See: https://developers.trello.com/v1.0/reference#t-set\"` - We want to make it harder to accidentally store secrets in a place that might be publicly accessible so we will block calls to `t.set('{object}', 'shared', {key}, {value})` where the key contains the data that looks like it might be a secret: `auth`, `refresh`, `token`, `secret`.\n\n[block:api-header]\n{\n  \"title\": \"Setting Multiple Values\"\n}\n[/block]\n`t.set()` allows for multiple keys to be set by accepting an object full of the key/value pairs instead of the single `key` and `value` parameter:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"let myKeyValueObject = {\\n  myKey: 'myValue',\\n  otherKey: 25,\\n  enabled: true\\n}\\nt.set('card', 'shared', myKeyValueObject);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\nShared storage operations are not atomic. If two `set` operations happen at the same time on two different keys they can override one another.\n\nAt the point in time a Power-Up uses `t.set()`, a single PUT request is made for all of the shared storage at once. Under the hood, Trello doesn't store separate key/value pairs‚Äìit is a single JSON blob. If client A changes something and client B sets something before getting the socket update for A‚Äôs change, they‚Äôre going to collide and result in data loss.\n\nIf a Power-Up needs to set multiple keys concurrently, the safest thing to do is to pass an object containing the multiple key/value pairs as described above.\n[block:api-header]\n{\n  \"title\": \"Example Usage\"\n}\n[/block]\nYou can set a specific key and value at the target visibility and scope:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('card', 'shared', 'myKey', 'myValue');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr if you have a plain javascript object, you can set that all at once:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('card', 'shared', { myKey: 'myValue', more: 25, enabled: true });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAdditionally, you can set data on a card from any context by calling `t.set` with its ID.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('542b0bd40d309dc6eba7ec91', 'shared', 'myKey', 'myValue');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou may want to check what kind of permissions this user has before using `t.set`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nvar permissions = t.getContext().permissions;\\n\\nif (permissions.board === 'write') {\\n  return t.set('board', 'shared', { myKey: 'myValue', more: 25, enabled: true });\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Write Permissions\",\n  \"body\": \"Keep in mind, the user of your Power-Up isn't guaranteed to have write access in Trello, or on a specific object. This means your `t.set` call could fail. You may want to catch these errors, and have fallback logic.\\n\\nYou can check the permissions object in the context as shown above to know whether the active user can set `\\\"shared\\\"` data at a certain scope. In general, a Trello member, (as long as there is a member in the context), can set `\\\"private\\\"` data at any scope, with the exception of `\\\"organization\\\"` when the organization in question is itself private, and the active member is not a member of that organization.\\n\\nIn that particular case, you can catch the error, and fallback to writing that at the board level.\"\n}\n[/block]","excerpt":"Store data in a Trello Power-Up","slug":"t-set","type":"fn","title":"t.set(scope, visibility, key, value)","__v":0,"updatedAt":"2019-06-10T14:28:52.718Z"},{"_id":"594b213d9814d90019a3f551","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:45:33.370Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"You can remove a key at a specific scope:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.remove('member', 'private', 'myKey');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr you can remove multiple keys at once:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.remove('member', 'private', ['myKey', 'anotherKey', 'enabled']);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-remove","type":"fn","title":"t.remove(scope, visibility, key)","__v":0,"updatedAt":"2019-06-10T14:28:52.718Z"},{"_id":"594d84be845458001b4c6e8a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:14:38.985Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When you create additional iframes, such as for [attachment-sections](ref:attachment-sections), you can pass yourself arguments. Those arguments can be retrieved on that page once it is loaded via `t.arg` like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.arg('myArg');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-arg","type":"fn","title":"t.arg(name, defaultValue)","__v":0,"updatedAt":"2019-06-10T14:28:52.719Z"},{"_id":"594d853f634354002938da47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:16:47.159Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"If you need to store sensitive information, such as an oauth token to a service other than Trello, we recommend that you use `t.storeSecret` and `t.loadSecret` to do so.\n\nWhen storing a secret, Trello will generate a new encryption key for the member, if one doesn't yet exist for your Power-Up, and will encrypt the secret, and store it in the browser's local storage (on your Power-Up's domain, not on the `trello.com` domain).\n\nWhile this does mean that your user's may have to repeat the process on each browser they use, it also means their secrets are never sent to Trello, and therefore remain safe with the Power-Up itself.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.storeSecret('token', 'shhh...its a secret');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nIt is possible that `t.loadSecret()` can throw a `Decryption failed` error when attempting, and failing, to decrypt a secret. This can happen if the encryption key stored in `pluginData` has been removed via the user selecting `Remove Personal Settings` from the Power-Up's settings menu. When using `t.loadSecret()`, you should expect to catch this error.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"localStorage disabled\",\n  \"body\": \"If you are using this method, you'll want to make sure you catch and handle cases where access to localStorage is disabled in the browser. You should try to present the user with a helpful message that localStorage needs to be enabled for your domain.\"\n}\n[/block]","excerpt":"","slug":"t-storesecret","type":"fn","title":"t.storeSecret(key, data)","__v":0,"updatedAt":"2019-06-10T14:28:52.719Z"},{"_id":"594d85530c8d130015c5c6a8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:17:07.673Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"To retrieve secrets that you have stored via `t.storeSecret` you'll need to use `t.loadSecret`. It will handle decrypting the secret before handing it back to you.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.loadSecret('token')\\n.then(function (secret) {\\n  console.log(secret);\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-loadsecret","type":"fn","title":"t.loadSecret(key)","__v":0,"updatedAt":"2019-06-10T14:28:52.720Z"},{"_id":"5c9b99b03c9f770051af8de7","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.720Z","createdAt":"2019-03-27T15:41:36.994Z","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","parentDoc":"594837a0524b9a000fb7dde8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"You can use this method to remove a locally stored secret (that was stored via `t.storeSecret`).\n\nNote that this will remove the encrypted secret locally, but will not remove or alter the encryption key stored in Trello. That's probably the behavior that you want, as removing or altering the encryption key would render _all_ secrets stored via `t.storeSecret` with that key useless.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"TrelloPowerUp.initialize({\\n  'remove-data': function(t) {\\n    // the user has pressed the remove personal settings button\\n    // let's imagine earlier we stored a secret like so:\\n    // t.storeSecret('token', 'shh its a secret');\\n    // now we just want to clean it up\\n    return t.clearSecret('token');\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-clearsecret","type":"fn","title":"t.clearSecret(key)","__v":0},{"_id":"594b21d797f2b0000f748fb9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:48:07.264Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"In order to know whether you want to show a `card-badge` on a card, you first may want to know more information about the card in question. The methods below will help you ask Trello for information about specific fields on Trello objects.","excerpt":"","slug":"get-data-on-trello-objects","type":"basic","title":"Get data on Trello objects","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"596d000b7485f2001a09cee1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:20:59.581Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"Synchronously get the current context for `t`. This can be useful if you need the ID of a model that is in scope, or want to check user permissions.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    var context = t.getContext();\\n    console.log(JSON.stringify(context, null, 2));\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  // id of the current board\\n  board: \\\"59287bae175fb20142c4c282\\\",\\n  // id of the current card (if there is one)\\n  card: \\\"59287bec175fb20142c4c363\\\",\\n  // capability command, (if there is one)\\n  command: \\\"card-buttons\\\",\\n  // id of the current member, \\\"notLoggedIn\\\" if no member is logged in\\n  member: \\\"591f23d52a2eaa0c33e6c187\\\",\\n  // id of the team the board is in (if its in one)\\n  organization: \\\"538627f73cbb44d1bfbb58f0\\\",\\n  // id of the enterprise the board is in (if its in one)\\n  enterprise: \\\"5cedada40a30f27bdb6e26b7\\\",\\n  // read or write permissions for current member per modelType\\n  permissions: {\\n    board: \\\"write\\\",\\n    organization: \\\"write\\\",\\n    card: \\\"write\\\"\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tgetcontext","type":"fn","title":"t.getContext()","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"596d003ee0604b002b4990d8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:21:50.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"Synchronously determine if your Power-Up is being used by a logged in Trello member. Keep in mind, that your Power-Up might be enabled on a public board that is being viewed and interacted with by someone who is not logged into Trello.\n\nReturns `true` or `false`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    console.log(t.isMemberSignedIn());\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tismembersignedin","type":"fn","title":"t.isMemberSignedIn()","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"594b2233169246000f3b290d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:49:39.430Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"Ask Trello for information on specific properties of the current board.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.board('all')\\n    .then(function (board) {\\n      console.log(JSON.stringify(board, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.board('id', 'name')\\n    .then(function (board) {\\n      console.log(JSON.stringify(board, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"url\",\n    \"3-0\": \"shortLink\",\n    \"4-0\": \"members\",\n    \"5-0\": \"dateLastActivity\",\n    \"6-0\": \"idOrganization\",\n    \"7-0\": \"customFields\",\n    \"8-0\": \"labels\",\n    \"9-0\": \"memberships\"\n  },\n  \"cols\": 1,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"t-board","type":"fn","title":"t.board('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.722Z"},{"_id":"594b2c4897f2b0000f749047","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:32:40.068Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return t.list('all')\\n    .then(function (list) {\\n      console.log(JSON.stringify(list, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"cards\"\n  },\n  \"cols\": 1,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"t-list","type":"fn","title":"t.list('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.722Z"},{"_id":"594b2c999814d90019a3f59c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:34:01.866Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Get information on all open lists on the board. Takes the same field options as [t.list](#t-list).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.lists('all')\\n    .then(function (lists) {\\n      console.log(JSON.stringify(lists, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-lists","type":"fn","title":"t.lists('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.723Z"},{"_id":"594b2c5ab94b720019430b9d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:32:58.072Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return t.card('all')\\n    .then(function (card) {\\n      console.log(JSON.stringify(card, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"desc\",\n    \"3-0\": \"due\",\n    \"5-0\": \"closed\",\n    \"6-0\": \"cover\",\n    \"7-0\": \"attachments\",\n    \"8-0\": \"members\",\n    \"9-0\": \"labels\",\n    \"10-0\": \"url\",\n    \"11-0\": \"shortLink\",\n    \"12-0\": \"idList\",\n    \"13-0\": \"idShort\",\n    \"14-0\": \"dateLastActivity\",\n    \"15-0\": \"badges\",\n    \"h-0\": \"Allowed Fields\",\n    \"4-0\": \"dueComplete\",\n    \"16-0\": \"customFieldItems\",\n    \"17-0\": \"coordinates\",\n    \"18-0\": \"address\",\n    \"19-0\": \"locationName\"\n  },\n  \"cols\": 1,\n  \"rows\": 20\n}\n[/block]","excerpt":"","slug":"t-card","type":"fn","title":"t.card('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.723Z"},{"_id":"594b2cace5ea7a000f734a47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:34:20.087Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Get information on all open cards on the board. Takes the same field options as [t.card](#t-card).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.cards('all')\\n    .then(function (cards) {\\n      console.log(JSON.stringify(cards, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-cards","type":"fn","title":"t.cards('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.724Z"},{"_id":"594b2c8897f2b0000f749049","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:33:44.665Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.member('all')\\n.then(function (member) {\\n  console.log(JSON.stringify(member, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"fullName\",\n    \"2-0\": \"username\",\n    \"3-0\": \"avatar\",\n    \"4-0\": \"initials\"\n  },\n  \"cols\": 1,\n  \"rows\": 5\n}\n[/block]\n\n### Privacy Controlled Fields\n\nSome fields on the [member can be put under privacy controls](https://developers.trello.com/reference#section-member-fields-and-privacy-controls). When a user selects a privacy setting other than `public` for their `avatar` or `fullName`, calls to `t.member` asking for either of those fields will change.\n\nIf `fullName` is set to anything other than `public`, the value returned from `t.member('fullName')` will be the same as `t.member('username')`.\n\nIf `avatar` is set to anything other than `public`, calls to `t.member('avatar')` will return `null`. This is the same response you'd receive currently if the user did not have an avatar set.","excerpt":"","slug":"t-member","type":"fn","title":"t.member('id', 'fullName', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.724Z"},{"_id":"596d005cdad7bc0029a9a4f5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5a2f0b8e3e3fd700280b2e18"],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:22:20.405Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"Determine whether the current member can write data on a certain model. Useful for example if trying to determine if the current user of your Power-Up can attach an item to a card with `t.attach`\n\nSynchronously returns `true` or `false`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    console.log(t.memberCanWriteToModel('card'));\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed ModelType\",\n    \"0-0\": \"board\",\n    \"2-0\": \"organization\",\n    \"1-0\": \"card\"\n  },\n  \"cols\": 1,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"tmembercanwritetomodelmodeltype","type":"fn","title":"t.memberCanWriteToModel(modelType)","__v":1,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d84f20c8d130015c5c6a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:15:30.104Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"Get information about the organization (team) that the current board is in (if any).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.organization('all')\\n.then(function (organization) {\\n  console.log(JSON.stringify(organization, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.organization('id', 'name')\\n.then(function (organization) {\\n  console.log(JSON.stringify(organization, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\"\n  },\n  \"cols\": 1,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Private Organizations\",\n  \"body\": \"A board may be in a private team (organization) for which the current member using your Power-Up isn't in and therefore can't see. In that case you won't be able to get organization details via `t.organization`.\\n\\nIf you still need the `id` of the organization, you can use `t.board('idOrganization')`\"\n}\n[/block]","excerpt":"","slug":"t-organization","type":"fn","title":"t.organization('id, 'name')","__v":0,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d835f0c8d130015c5c685","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["59ef5f50ddeade003070aed4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:08:47.553Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":19,"body":"Whenever you are displaying a visible iframe in Trello, we want to make sure it doesn't flash when there are changes.\n\nA good example is [attachment-sections](ref:attachment-sections). When new attachments are added, some are removed, or other data about your Power-Up is changed, you may need to re-render your section, but Trello doesn't want to reload your iframe, as that would cause a jarring flash.\n\nInstead, you should make sure any logic that updates your UI in visible iframes with changes should live in or be triggered by `t.render`. Trello will re-call `t.render` whenever something changes that we think might be relevant.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can access arguments passed to your iframe like so\\n// unlike logic that lives inside t.render() this will only\\n// be passed once, so don't rely on this for information that\\n// could change, for example what attachments you want to show\\n// in this section\\nvar arg = t.arg('arg');\\n\\nt.render(function () {\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function (attachment) {\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function (yellowstoneAttachments) {\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function () {\\n    return t.sizeTo('#content');\\n  });\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-render","type":"fn","title":"t.render(func)","__v":1,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d83a26d807a001baf1de7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":["59763b073bd93b001a1e7f85","5a39e4f2539ed90012553328"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:09:54.754Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":20,"body":"Sometimes, such as to complete an oauth flow, you need to show a page in its own new window. For authentication, this is usually because oauth pages (for security reasons) cannot be displayed inside of iframes.\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\nWhen calling `t.authorize` you must provide the URL to kick-off the authorization flow and, optionally, include an object containing a set of options. Below are valid values for the option object.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Name\",\n    \"0-0\": \"**height**\\ninteger\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**width**\\ninteger\",\n    \"1-1\": \"Width of the window to be opened in pixels.\",\n    \"0-1\": \"Height of the window to be opened in pixels.\",\n    \"2-0\": \"**validToken**\\nfunction\",\n    \"2-1\": \"A function that returns a boolean value to indicate whether the token being returned is valid or not. If the function returns `true`, the Promise started by `t.authorize` will be resolved. If the function returns `false`, the Promise will not be resolved.\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]\n`t.authorize` can help you complete these flows. The first argument should be the URL that will be opened in a new window, and the options allow you to specify the size of the window, as well as a validation function if you want to check the token that comes back.\n\nHere is an example of completing Trello's oauth flow using `t.authorize`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var Promise = TrelloPowerUp.Promise;\\nvar t = TrelloPowerUp.iframe();\\n\\n// When constructing the URL, remember that you'll need to encode your\\n// APPNAME and RETURNURL\\n// You can do that with the encodeURIComponent(string) function\\n// encodeURIComponent('Hello World') -> \\\"Hello%20World\\\"\\nvar oauthUrl = 'https://trello.com/1/authorize?expiration=never' +\\n  '&name=[APPNAME]&scope=read&key=[APIKEY]&callback_method=fragment' +\\n  '&return_url=[RETURNURL]';\\n\\nvar tokenLooksValid = function(token) {\\n  return /^[0-9a-f]{64}$/.test(token);\\n}\\n\\nvar storageHandler = function(evt) {  \\n  if (evt.key === 'token' && evt.newValue) {\\n    // Do something with the token here, then...\\n    authorizeWindow.close();\\n    window.removeEventListener('storage', storageHandler);\\n  }\\n}\\n\\nvar authorizeOpts = {\\n  height: 680,\\n  width: 580,\\n  validToken: tokenLooksValid,\\n  windowCallback: function(authorizeWindow) {\\n    // This callback gets called with the handle to the\\n    // authorization window. This can be useful if you\\n    // can't call window.close() in your new window \\n    // (such as the case when your authorization page\\n    // is rendered inside an iframe).\\n    window.addEventListener('storage', storageHandler);\\n  }\\n};\\n\\nvar authBtn = document.getElementById('authorize');\\nauthBtn.addEventListener('click', function() {\\n  t.authorize(oauthUrl, authorizeOpts)\\n  .then(function(token) {\\n    return t.set('organization', 'private', 'token', token)\\n    .catch(t.NotHandled, function() {\\n      // fall back to storing at board level\\n      return t.set('board', 'private', 'token', token);\\n    });\\n  })\\n  .then(function() {\\n    // now that the token is stored, we can close this popup\\n    // you might alternatively choose to open a new popup\\n    return t.closePopup();\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`t.authorize` will return a Promise that you can wait to resolve or reject. The Promise will resolve when either the `window.authorize(token)` function is called, or an item is stored in `localStorage` on the same domain under the key `'token'`.\n\nAt the end of the authorization flow in the new window you will want to have a script that looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var token = window.location.hash.substring(7);\\nlet authorize;\\n\\ntry {\\n  if (window.opener && typeof window.opener.authorize === 'function') {\\n    authorize = window.opener.authorize;\\n  }\\n} catch (e) {\\n  // Security settings are preventing this, fall back to local storage.\\n}\\n\\nif (authorize) {\\n  try {\\n    authorize(token);\\n  } catch (e) {\\n    // localStorage only works when the opened window's domain is\\n    // the same as the domain of the Power-Up iframe that opened\\n    // the window.\\n    localStorage.setItem('token', token);\\n  }\\n} else {\\n  localStorage.setItem('token', token);\\n}\\n\\n// This window.close() may not work if this page is inside an\\n// iframe. In this case, use the `windowCallback` option in\\n// `t.authorize()` to get access to the window handler when\\n// `t.authorize()` is called.\\nsetTimeout(function(){ window.close(); }, 1000);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-authorize","type":"fn","title":"t.authorize(url, opts)","__v":2,"updatedAt":"2019-06-10T14:28:52.726Z"},{"_id":"594d83d177799f001b905970","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5c45374d73a9720fe54ca0af"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:10:41.454Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":21,"body":"Lets you tell Trello to navigate to an arbitrary Trello URL, such as that of a card or board. Will not let you navigate the page to a non-Trello URL. If trying to bring up an open (not archived) card on the current board, you should instead use [t.showCard](#t-showcard) as it will be much more performant.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.navigate({\\n  url: 'https://trello.com/c/nqPiDKmw/9-grand-canyon-national-park'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-navigate","type":"fn","title":"t.navigate(opts)","__v":1,"updatedAt":"2019-06-10T14:28:52.726Z"},{"_id":"594d85cc2af9f70029b6304d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:19:08.106Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":22,"body":"With `t.attach` you can attach a URL to a card, as long as you are in the context of a particular card. A common use case for this is as the result of clicking a `card-button`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var attachOnClick = function (t, opts) {\\n  return t.attach({\\n    name: 'The name for the attachment', // optional\\n    url: 'https://developers.trello.com' // required\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: './images/icon.svg',\\n      text: 'Attach a Thing',\\n      callback: attachOnClick\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Requires permissions.card === 'write'\",\n  \"body\": \"You may want to check that `t.memberCanWriteToModel('card') === true` before even giving the user the option to attach something to a card.\"\n}\n[/block]","excerpt":"","slug":"t-attach","type":"fn","title":"t.attach(data)","__v":0,"updatedAt":"2019-06-10T14:28:52.727Z"},{"_id":"594d83ff2e5787001b713b98","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:11:27.686Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":23,"body":"Given a key, and optional replacement data, synchronously returns the output of `window.localizer.localize(key, data)`\n\nAssume you have a resources file like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"btn-name\\\": \\\"Hi {name}\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      text: t.localizeKey('btn-name', { name: 'Trello' }),\\n      url: 'https://developers.trello.com',\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThat will generate a button with the text: `Hi Trello`","excerpt":"","slug":"t-localizekey","type":"fn","title":"t.localizeKey(key, data)","__v":0,"updatedAt":"2019-06-10T14:28:52.727Z"},{"_id":"594d845adf89370015573469","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:12:58.192Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":24,"body":"Synchronously localizes multiple keys. You can either provide an array of keys `['key1', 'key2']` or an array of key-data arrays `[['key1', { data: 1 }], ['key2', { data: 2 }]]`. This will return an array of strings, in the same order as the keys were passed in.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      text: t.localizeKeys([['btn-name', { name: 'Trello' }]]),\\n      url: 'https://developers.trello.com',\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-localizekeys","type":"fn","title":"t.localizeKeys(keys)","__v":0,"updatedAt":"2019-06-10T14:28:52.728Z"},{"_id":"594d84820c8d130015c5c6a6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5c4538623b425e004520ca01"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:13:38.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":25,"body":"Synchronously inserts localized texts into DOM nodes starting at the provided node and all of its children. Tag a node in your HTML with `data-i18n-id=\"key\"` for its text content to be replaced based on that key. You can pass args with `data-i18n-args='{ \"arg1\": \"data\" }'`. You can also have placeholder text replaced with `data-i18n-attrs='{ \"placeholder\": \"key\" }'`. This will also use the args defined in `data-i18n-args`.\n\nCurrently there is no support for dot notation when replacing args.\n\nLet's assume we have an overlay iframe that looks like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"./css/overlay.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <h2 data-i18n-id=\\\"tips-for-overlay\\\">Tips for using t.overlay()</h2>\\n      <hr/>\\n      <ol>\\n        <li data-i18n-id=\\\"only-for-user-actions\\\">\\n          You should only call t.overlay() as a response to a user action, such as clicking a button.\\n        </li>\\n        <li data-i18n-id=\\\"prefer-t-popup\\\">\\n          Try to use t.popup() when possible instead of t.overlay() as it helps to better maintain context.\\n        </li>\\n        <li data-i18n-id=\\\"easy-to-close\\\">\\n          When using an overlay, be sure to keep the user aware they haven't left their Trello board, and make it easy and intuitive to close.\\n        </li>\\n        <li data-i18n-id=\\\"load-and-render-fast\\\">\\n          Try to get your overlay to load and render as quickly as possible.\\n        </li>\\n      </ol>\\n    </div>\\n    <script src=\\\"./js/overlay.js\\\"></script>\\n  </body>\\n</html>\\n\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nOur javascript to make sure that gets localized might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n\\nt.render(function(){\\n\\tlet contentNode = document.getElementById('content');\\n  t.localizeNode(contentNode);\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nFor reference the `./strings/en-US.json` file would look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"tips-for-overlay\\\": \\\"Tips for using t.overlay()\\\",\\n  \\\"only-for-user-actions\\\": \\\"You should only call t.overlay() as a response to a user action, such as clicking a button.\\\",\\n  \\\"prefer-t-popup\\\": \\\"Try to use t.popup() when possible instead of t.overlay() as it helps to better maintain context.\\\",\\n  \\\"easy-to-close\\\": \\\"When using an overlay, be sure to keep the user aware they haven't left their Trello board, and make it easy and intuitive to close.\\\",\\n  \\\"load-and-render-fast\\\": \\\"Try to get your overlay to load and render as quickly as possible.\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-localizenode","type":"fn","title":"t.localizeNode(DOMelement)","__v":1,"updatedAt":"2019-06-10T14:28:52.728Z"},{"_id":"594d8674387538002da1767e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:21:56.645Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":26,"body":"Sometimes you might need to be able to run a callback function on something like a popup. When you create the popup, in the instantiation object you can give it a callback property with a function to be run, but then how do you trigger it?\n\nThat's where `t.notifyParent('done')` comes into play. Calling this method from that popup will trigger Trello to run the callback.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var onDone = function (t, opts) {\\n  console.log('Hey There');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'show-settings': function (t, opts) {\\n    return t.popup({\\n      callback: onDone,\\n      title: 'Settings',\\n      url: './settings.html',\\n      height: 184\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe script on our settings page might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.render(function () {\\n  // do some stuff\\n});\\n\\ndocument.getElementById('save').addEventListener('click', function () {\\n  // will cause the callback that was included when this\\n  // popup was created to be run\\n  return t.notifyParent('done');\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-notifyparent","type":"fn","title":"t.notifyParent('done')","__v":0,"updatedAt":"2019-06-10T14:28:52.729Z"},{"_id":"59b2d8d2f7dfc9003ac02195","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-09-08T17:52:18.367Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":27,"body":"Add current context data to a URL so that (as long as it is opened by Trello) the page will continue to be able to communicate with Trello via the Power-Up interface.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// synchronously returns the \\\"signed\\\" URL\\nvar signedURL = t.signUrl(\\\"https://google.com\\\", { anArg: 'hey' });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`args` is an optional object where you can retrieve the values with `t.arg` once you load this URL and initialize a `t`.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"In general, wherever possible, Trello does this for you automatically. So when you give a URL to t.popup for example, you don't have to sign it yourself first.\"\n}\n[/block]\nCurrently there are two places where you will need to use `t.signUrl` on your own:\n\n1. `attachment-thumbnail` when returning an `initialize` iframe url:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    return {\\n        url: options.url,\\n        title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        },\\n        openText: 'Open in NPS',\\n        initialize: {\\n          type: 'iframe',\\n          url: t.signUrl(TrelloPowerUp.util.relativeUrl('authorize-link.html'))\\n        }\\n      };\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n2. `attachment-sections` when returning the `content` iframe url:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-sections': function (t, opts) {\\n    return [{\\n      id: 'abc123',\\n      claimed: opts.entries,\\n      icon: 'https://example.com/image.svg',\\n      title: 'My Section',\\n      content: {\\n        type: 'iframe',\\n        url: t.signUrl('./folder.html', { arg: 'why not' })\\n      }\\n    }];\\n  }\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Warning\",\n  \"body\": \"This function currently assumes the URL provided to it does not already have a hash component.\"\n}\n[/block]","excerpt":"","slug":"t-signurl","type":"fn","title":"t.signUrl(url, args)","__v":0,"updatedAt":"2019-06-10T14:28:52.729Z"}]},{"_id":"594b206297f2b0000f748fb6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:41:54.001Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Get data at a specific scope and visibility\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared', 'myKey')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can optionally include a default value to return if that key doesn't exist\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared', 'myKey', 'Uh oh, not yet set')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlternatively, if you want all data at a scope and visibility, not just a single key:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('board', 'shared')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can also get data from a card given it's ID:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.get('542b0bd40d309dc6eba7ec91', 'shared', 'myKey')\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-get","type":"fn","title":"t.get(scope, visibility, key, default)","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z"},{"_id":"594b1fb831eb2d001bf392b1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:39:04.935Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Return all pluginData for all scopes & visibilities currently in context\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.getAll()\\n.then(function (data) {\\n  console.log(JSON.stringify(data, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe data response might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  board: {\\n    shared: {\\n      enabled: true\\n    },\\n    private: {\\n      shh: 'its a secret'\\n    }\\n  },\\n  organization: {\\n    shared: {\\n      interval: 1500\\n    }\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-getall","type":"fn","title":"t.getAll()","__v":0,"updatedAt":"2019-06-10T14:28:52.717Z"},{"_id":"594b20d270a0130019781cc6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:43:46.428Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Used to store data within the Trello Power-Up platform.\n\n`t.set()` returns a Promise and accepts the following options:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Values\",\n    \"h-2\": \"About\",\n    \"0-0\": \"**scope**\\nstring\",\n    \"1-0\": \"**visibility**\\nstring\",\n    \"2-0\": \"**key**\\nstring\",\n    \"3-0\": \"**value**\\nSerializable item\",\n    \"0-1\": \"One of: `board`, `card`, `member`, `organization`, or the ID of card that is in scope.\",\n    \"1-1\": \"One of: `shared`, `private`.\",\n    \"2-1\": \"Any string.\",\n    \"2-2\": \"\",\n    \"3-1\": \"Accepts individual string, number, boolean, or object containing them.\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"visibility: \\\"shared\\\" vs. \\\"private\\\"\",\n  \"body\": \"When selecting a visibility for the data that you are setting, you should be thinking about who should be able to see it.\\n\\n**shared** - You should use this visibility if the data you are storing should be visible / accessible to everyone who can read the \\\"scope\\\" it is stored against. So for example `t.set('board', 'shared', 'key', 'value')` would make that data (`{key: 'value'}`) visible to everyone who can see the board. Keep in mind, a board could be made public, meaning _everyone_ including people who are not even Trello members would then have access to that data. \\n\\n*Do **not** store secrets or personal data in 'shared' visibility*\\n\\n**private** - You should use this visibility when you are storing data that you want to be visible / accessible only to the Trello member who you are storing it against. So for example `t.set('board', 'private', 'key', 'value')` would make that data (`{key: 'value'}`) only accessible to that particular member. If another member were to load the board and the data stored against it, they would not be able to see or access that piece of data.\\n\\nIf you are storing external service tokens, such as an oauth token to your app or service, you should consider using [t.storeSecret](https://developers.trello.com/v1.0/reference#t-storesecret)\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Errors\"\n}\n[/block]\n`Invalid value for scope.` - Occurs when an invalid value is passed for the scope.\n\n`Invalid value for visibility.` - Occurs when an invalid value is passed for the visibility.\n\n`PluginData length of 4096 characters exceeded. See: https://developers.trello.com/v1.0/reference#section-size-limit` - Occurs when trying to set data that exceeds 4096 characters in current scope/visibility pair.\n\n`Detected potential secret. You should never store secrets like tokens in shared pluginData. See: https://developers.trello.com/v1.0/reference#t-set\"` - We want to make it harder to accidentally store secrets in a place that might be publicly accessible so we will block calls to `t.set('{object}', 'shared', {key}, {value})` where the key contains the data that looks like it might be a secret: `auth`, `refresh`, `token`, `secret`.\n\n[block:api-header]\n{\n  \"title\": \"Setting Multiple Values\"\n}\n[/block]\n`t.set()` allows for multiple keys to be set by accepting an object full of the key/value pairs instead of the single `key` and `value` parameter:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"let myKeyValueObject = {\\n  myKey: 'myValue',\\n  otherKey: 25,\\n  enabled: true\\n}\\nt.set('card', 'shared', myKeyValueObject);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\nShared storage operations are not atomic. If two `set` operations happen at the same time on two different keys they can override one another.\n\nAt the point in time a Power-Up uses `t.set()`, a single PUT request is made for all of the shared storage at once. Under the hood, Trello doesn't store separate key/value pairs‚Äìit is a single JSON blob. If client A changes something and client B sets something before getting the socket update for A‚Äôs change, they‚Äôre going to collide and result in data loss.\n\nIf a Power-Up needs to set multiple keys concurrently, the safest thing to do is to pass an object containing the multiple key/value pairs as described above.\n[block:api-header]\n{\n  \"title\": \"Example Usage\"\n}\n[/block]\nYou can set a specific key and value at the target visibility and scope:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('card', 'shared', 'myKey', 'myValue');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr if you have a plain javascript object, you can set that all at once:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('card', 'shared', { myKey: 'myValue', more: 25, enabled: true });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAdditionally, you can set data on a card from any context by calling `t.set` with its ID.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.set('542b0bd40d309dc6eba7ec91', 'shared', 'myKey', 'myValue');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou may want to check what kind of permissions this user has before using `t.set`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nvar permissions = t.getContext().permissions;\\n\\nif (permissions.board === 'write') {\\n  return t.set('board', 'shared', { myKey: 'myValue', more: 25, enabled: true });\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Write Permissions\",\n  \"body\": \"Keep in mind, the user of your Power-Up isn't guaranteed to have write access in Trello, or on a specific object. This means your `t.set` call could fail. You may want to catch these errors, and have fallback logic.\\n\\nYou can check the permissions object in the context as shown above to know whether the active user can set `\\\"shared\\\"` data at a certain scope. In general, a Trello member, (as long as there is a member in the context), can set `\\\"private\\\"` data at any scope, with the exception of `\\\"organization\\\"` when the organization in question is itself private, and the active member is not a member of that organization.\\n\\nIn that particular case, you can catch the error, and fallback to writing that at the board level.\"\n}\n[/block]","excerpt":"Store data in a Trello Power-Up","slug":"t-set","type":"fn","title":"t.set(scope, visibility, key, value)","__v":0,"updatedAt":"2019-06-10T14:28:52.718Z"},{"_id":"594b213d9814d90019a3f551","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:45:33.370Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"You can remove a key at a specific scope:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.remove('member', 'private', 'myKey');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr you can remove multiple keys at once:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.remove('member', 'private', ['myKey', 'anotherKey', 'enabled']);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-remove","type":"fn","title":"t.remove(scope, visibility, key)","__v":0,"updatedAt":"2019-06-10T14:28:52.718Z"},{"_id":"594d84be845458001b4c6e8a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:14:38.985Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When you create additional iframes, such as for [attachment-sections](ref:attachment-sections), you can pass yourself arguments. Those arguments can be retrieved on that page once it is loaded via `t.arg` like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.arg('myArg');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-arg","type":"fn","title":"t.arg(name, defaultValue)","__v":0,"updatedAt":"2019-06-10T14:28:52.719Z"},{"_id":"594d853f634354002938da47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:16:47.159Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"If you need to store sensitive information, such as an oauth token to a service other than Trello, we recommend that you use `t.storeSecret` and `t.loadSecret` to do so.\n\nWhen storing a secret, Trello will generate a new encryption key for the member, if one doesn't yet exist for your Power-Up, and will encrypt the secret, and store it in the browser's local storage (on your Power-Up's domain, not on the `trello.com` domain).\n\nWhile this does mean that your user's may have to repeat the process on each browser they use, it also means their secrets are never sent to Trello, and therefore remain safe with the Power-Up itself.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.storeSecret('token', 'shhh...its a secret');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nIt is possible that `t.loadSecret()` can throw a `Decryption failed` error when attempting, and failing, to decrypt a secret. This can happen if the encryption key stored in `pluginData` has been removed via the user selecting `Remove Personal Settings` from the Power-Up's settings menu. When using `t.loadSecret()`, you should expect to catch this error.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"localStorage disabled\",\n  \"body\": \"If you are using this method, you'll want to make sure you catch and handle cases where access to localStorage is disabled in the browser. You should try to present the user with a helpful message that localStorage needs to be enabled for your domain.\"\n}\n[/block]","excerpt":"","slug":"t-storesecret","type":"fn","title":"t.storeSecret(key, data)","__v":0,"updatedAt":"2019-06-10T14:28:52.719Z"},{"_id":"594d85530c8d130015c5c6a8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:17:07.673Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"To retrieve secrets that you have stored via `t.storeSecret` you'll need to use `t.loadSecret`. It will handle decrypting the secret before handing it back to you.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.loadSecret('token')\\n.then(function (secret) {\\n  console.log(secret);\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-loadsecret","type":"fn","title":"t.loadSecret(key)","__v":0,"updatedAt":"2019-06-10T14:28:52.720Z"},{"_id":"5c9b99b03c9f770051af8de7","version":"592884a2bdc27e1b00e5796a","updatedAt":"2019-06-10T14:28:52.720Z","createdAt":"2019-03-27T15:41:36.994Z","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","parentDoc":"594837a0524b9a000fb7dde8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"You can use this method to remove a locally stored secret (that was stored via `t.storeSecret`).\n\nNote that this will remove the encrypted secret locally, but will not remove or alter the encryption key stored in Trello. That's probably the behavior that you want, as removing or altering the encryption key would render _all_ secrets stored via `t.storeSecret` with that key useless.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"TrelloPowerUp.initialize({\\n  'remove-data': function(t) {\\n    // the user has pressed the remove personal settings button\\n    // let's imagine earlier we stored a secret like so:\\n    // t.storeSecret('token', 'shh its a secret');\\n    // now we just want to clean it up\\n    return t.clearSecret('token');\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-clearsecret","type":"fn","title":"t.clearSecret(key)","__v":0},{"_id":"594b21d797f2b0000f748fb9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:48:07.264Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"In order to know whether you want to show a `card-badge` on a card, you first may want to know more information about the card in question. The methods below will help you ask Trello for information about specific fields on Trello objects.","excerpt":"","slug":"get-data-on-trello-objects","type":"basic","title":"Get data on Trello objects","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"596d000b7485f2001a09cee1","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:20:59.581Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"Synchronously get the current context for `t`. This can be useful if you need the ID of a model that is in scope, or want to check user permissions.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    var context = t.getContext();\\n    console.log(JSON.stringify(context, null, 2));\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  // id of the current board\\n  board: \\\"59287bae175fb20142c4c282\\\",\\n  // id of the current card (if there is one)\\n  card: \\\"59287bec175fb20142c4c363\\\",\\n  // capability command, (if there is one)\\n  command: \\\"card-buttons\\\",\\n  // id of the current member, \\\"notLoggedIn\\\" if no member is logged in\\n  member: \\\"591f23d52a2eaa0c33e6c187\\\",\\n  // id of the team the board is in (if its in one)\\n  organization: \\\"538627f73cbb44d1bfbb58f0\\\",\\n  // id of the enterprise the board is in (if its in one)\\n  enterprise: \\\"5cedada40a30f27bdb6e26b7\\\",\\n  // read or write permissions for current member per modelType\\n  permissions: {\\n    board: \\\"write\\\",\\n    organization: \\\"write\\\",\\n    card: \\\"write\\\"\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tgetcontext","type":"fn","title":"t.getContext()","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"596d003ee0604b002b4990d8","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:21:50.672Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":10,"body":"Synchronously determine if your Power-Up is being used by a logged in Trello member. Keep in mind, that your Power-Up might be enabled on a public board that is being viewed and interacted with by someone who is not logged into Trello.\n\nReturns `true` or `false`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    console.log(t.isMemberSignedIn());\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tismembersignedin","type":"fn","title":"t.isMemberSignedIn()","__v":0,"updatedAt":"2019-06-10T14:28:52.721Z"},{"_id":"594b2233169246000f3b290d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T01:49:39.430Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":11,"body":"Ask Trello for information on specific properties of the current board.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.board('all')\\n    .then(function (board) {\\n      console.log(JSON.stringify(board, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.board('id', 'name')\\n    .then(function (board) {\\n      console.log(JSON.stringify(board, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"url\",\n    \"3-0\": \"shortLink\",\n    \"4-0\": \"members\",\n    \"5-0\": \"dateLastActivity\",\n    \"6-0\": \"idOrganization\",\n    \"7-0\": \"customFields\",\n    \"8-0\": \"labels\",\n    \"9-0\": \"memberships\"\n  },\n  \"cols\": 1,\n  \"rows\": 10\n}\n[/block]","excerpt":"","slug":"t-board","type":"fn","title":"t.board('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.722Z"},{"_id":"594b2c4897f2b0000f749047","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:32:40.068Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return t.list('all')\\n    .then(function (list) {\\n      console.log(JSON.stringify(list, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"cards\"\n  },\n  \"cols\": 1,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"t-list","type":"fn","title":"t.list('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.722Z"},{"_id":"594b2c999814d90019a3f59c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:34:01.866Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Get information on all open lists on the board. Takes the same field options as [t.list](#t-list).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.lists('all')\\n    .then(function (lists) {\\n      console.log(JSON.stringify(lists, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-lists","type":"fn","title":"t.lists('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.723Z"},{"_id":"594b2c5ab94b720019430b9d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:32:58.072Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return t.card('all')\\n    .then(function (card) {\\n      console.log(JSON.stringify(card, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"id\",\n    \"1-0\": \"name\",\n    \"2-0\": \"desc\",\n    \"3-0\": \"due\",\n    \"5-0\": \"closed\",\n    \"6-0\": \"cover\",\n    \"7-0\": \"attachments\",\n    \"8-0\": \"members\",\n    \"9-0\": \"labels\",\n    \"10-0\": \"url\",\n    \"11-0\": \"shortLink\",\n    \"12-0\": \"idList\",\n    \"13-0\": \"idShort\",\n    \"14-0\": \"dateLastActivity\",\n    \"15-0\": \"badges\",\n    \"h-0\": \"Allowed Fields\",\n    \"4-0\": \"dueComplete\",\n    \"16-0\": \"customFieldItems\",\n    \"17-0\": \"coordinates\",\n    \"18-0\": \"address\",\n    \"19-0\": \"locationName\"\n  },\n  \"cols\": 1,\n  \"rows\": 20\n}\n[/block]","excerpt":"","slug":"t-card","type":"fn","title":"t.card('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.723Z"},{"_id":"594b2cace5ea7a000f734a47","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:34:20.087Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":15,"body":"Get information on all open cards on the board. Takes the same field options as [t.card](#t-card).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'board-buttons': function (t, opts) {\\n    return t.cards('all')\\n    .then(function (cards) {\\n      console.log(JSON.stringify(cards, null, 2));\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-cards","type":"fn","title":"t.cards('id', 'name', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.724Z"},{"_id":"594b2c8897f2b0000f749049","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-22T02:33:44.665Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":16,"body":"[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.member('all')\\n.then(function (member) {\\n  console.log(JSON.stringify(member, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"fullName\",\n    \"2-0\": \"username\",\n    \"3-0\": \"avatar\",\n    \"4-0\": \"initials\"\n  },\n  \"cols\": 1,\n  \"rows\": 5\n}\n[/block]\n\n### Privacy Controlled Fields\n\nSome fields on the [member can be put under privacy controls](https://developers.trello.com/reference#section-member-fields-and-privacy-controls). When a user selects a privacy setting other than `public` for their `avatar` or `fullName`, calls to `t.member` asking for either of those fields will change.\n\nIf `fullName` is set to anything other than `public`, the value returned from `t.member('fullName')` will be the same as `t.member('username')`.\n\nIf `avatar` is set to anything other than `public`, calls to `t.member('avatar')` will return `null`. This is the same response you'd receive currently if the user did not have an avatar set.","excerpt":"","slug":"t-member","type":"fn","title":"t.member('id', 'fullName', ...)","__v":0,"updatedAt":"2019-06-10T14:28:52.724Z"},{"_id":"596d005cdad7bc0029a9a4f5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5a2f0b8e3e3fd700280b2e18"],"next":{"pages":[],"description":""},"createdAt":"2017-07-17T18:22:20.405Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":17,"body":"Determine whether the current member can write data on a certain model. Useful for example if trying to determine if the current user of your Power-Up can attach an item to a card with `t.attach`\n\nSynchronously returns `true` or `false`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    console.log(t.memberCanWriteToModel('card'));\\n    return [];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed ModelType\",\n    \"0-0\": \"board\",\n    \"2-0\": \"organization\",\n    \"1-0\": \"card\"\n  },\n  \"cols\": 1,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"tmembercanwritetomodelmodeltype","type":"fn","title":"t.memberCanWriteToModel(modelType)","__v":1,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d84f20c8d130015c5c6a7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:15:30.104Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":18,"body":"Get information about the organization (team) that the current board is in (if any).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.organization('all')\\n.then(function (organization) {\\n  console.log(JSON.stringify(organization, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nreturn t.organization('id', 'name')\\n.then(function (organization) {\\n  console.log(JSON.stringify(organization, null, 2));\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Allowed Fields\",\n    \"0-0\": \"id\",\n    \"1-0\": \"name\"\n  },\n  \"cols\": 1,\n  \"rows\": 2\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Private Organizations\",\n  \"body\": \"A board may be in a private team (organization) for which the current member using your Power-Up isn't in and therefore can't see. In that case you won't be able to get organization details via `t.organization`.\\n\\nIf you still need the `id` of the organization, you can use `t.board('idOrganization')`\"\n}\n[/block]","excerpt":"","slug":"t-organization","type":"fn","title":"t.organization('id, 'name')","__v":0,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d835f0c8d130015c5c685","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["59ef5f50ddeade003070aed4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:08:47.553Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":19,"body":"Whenever you are displaying a visible iframe in Trello, we want to make sure it doesn't flash when there are changes.\n\nA good example is [attachment-sections](ref:attachment-sections). When new attachments are added, some are removed, or other data about your Power-Up is changed, you may need to re-render your section, but Trello doesn't want to reload your iframe, as that would cause a jarring flash.\n\nInstead, you should make sure any logic that updates your UI in visible iframes with changes should live in or be triggered by `t.render`. Trello will re-call `t.render` whenever something changes that we think might be relevant.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can access arguments passed to your iframe like so\\n// unlike logic that lives inside t.render() this will only\\n// be passed once, so don't rely on this for information that\\n// could change, for example what attachments you want to show\\n// in this section\\nvar arg = t.arg('arg');\\n\\nt.render(function () {\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function (attachment) {\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function (yellowstoneAttachments) {\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function () {\\n    return t.sizeTo('#content');\\n  });\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-render","type":"fn","title":"t.render(func)","__v":1,"updatedAt":"2019-06-10T14:28:52.725Z"},{"_id":"594d83a26d807a001baf1de7","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":["59763b073bd93b001a1e7f85","5a39e4f2539ed90012553328"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:09:54.754Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":20,"body":"Sometimes, such as to complete an oauth flow, you need to show a page in its own new window. For authentication, this is usually because oauth pages (for security reasons) cannot be displayed inside of iframes.\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\nWhen calling `t.authorize` you must provide the URL to kick-off the authorization flow and, optionally, include an object containing a set of options. Below are valid values for the option object.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Name\",\n    \"0-0\": \"**height**\\ninteger\",\n    \"h-1\": \"Description\",\n    \"1-0\": \"**width**\\ninteger\",\n    \"1-1\": \"Width of the window to be opened in pixels.\",\n    \"0-1\": \"Height of the window to be opened in pixels.\",\n    \"2-0\": \"**validToken**\\nfunction\",\n    \"2-1\": \"A function that returns a boolean value to indicate whether the token being returned is valid or not. If the function returns `true`, the Promise started by `t.authorize` will be resolved. If the function returns `false`, the Promise will not be resolved.\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]\n`t.authorize` can help you complete these flows. The first argument should be the URL that will be opened in a new window, and the options allow you to specify the size of the window, as well as a validation function if you want to check the token that comes back.\n\nHere is an example of completing Trello's oauth flow using `t.authorize`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var Promise = TrelloPowerUp.Promise;\\nvar t = TrelloPowerUp.iframe();\\n\\n// When constructing the URL, remember that you'll need to encode your\\n// APPNAME and RETURNURL\\n// You can do that with the encodeURIComponent(string) function\\n// encodeURIComponent('Hello World') -> \\\"Hello%20World\\\"\\nvar oauthUrl = 'https://trello.com/1/authorize?expiration=never' +\\n  '&name=[APPNAME]&scope=read&key=[APIKEY]&callback_method=fragment' +\\n  '&return_url=[RETURNURL]';\\n\\nvar tokenLooksValid = function(token) {\\n  return /^[0-9a-f]{64}$/.test(token);\\n}\\n\\nvar storageHandler = function(evt) {  \\n  if (evt.key === 'token' && evt.newValue) {\\n    // Do something with the token here, then...\\n    authorizeWindow.close();\\n    window.removeEventListener('storage', storageHandler);\\n  }\\n}\\n\\nvar authorizeOpts = {\\n  height: 680,\\n  width: 580,\\n  validToken: tokenLooksValid,\\n  windowCallback: function(authorizeWindow) {\\n    // This callback gets called with the handle to the\\n    // authorization window. This can be useful if you\\n    // can't call window.close() in your new window \\n    // (such as the case when your authorization page\\n    // is rendered inside an iframe).\\n    window.addEventListener('storage', storageHandler);\\n  }\\n};\\n\\nvar authBtn = document.getElementById('authorize');\\nauthBtn.addEventListener('click', function() {\\n  t.authorize(oauthUrl, authorizeOpts)\\n  .then(function(token) {\\n    return t.set('organization', 'private', 'token', token)\\n    .catch(t.NotHandled, function() {\\n      // fall back to storing at board level\\n      return t.set('board', 'private', 'token', token);\\n    });\\n  })\\n  .then(function() {\\n    // now that the token is stored, we can close this popup\\n    // you might alternatively choose to open a new popup\\n    return t.closePopup();\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`t.authorize` will return a Promise that you can wait to resolve or reject. The Promise will resolve when either the `window.authorize(token)` function is called, or an item is stored in `localStorage` on the same domain under the key `'token'`.\n\nAt the end of the authorization flow in the new window you will want to have a script that looks like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var token = window.location.hash.substring(7);\\nlet authorize;\\n\\ntry {\\n  if (window.opener && typeof window.opener.authorize === 'function') {\\n    authorize = window.opener.authorize;\\n  }\\n} catch (e) {\\n  // Security settings are preventing this, fall back to local storage.\\n}\\n\\nif (authorize) {\\n  try {\\n    authorize(token);\\n  } catch (e) {\\n    // localStorage only works when the opened window's domain is\\n    // the same as the domain of the Power-Up iframe that opened\\n    // the window.\\n    localStorage.setItem('token', token);\\n  }\\n} else {\\n  localStorage.setItem('token', token);\\n}\\n\\n// This window.close() may not work if this page is inside an\\n// iframe. In this case, use the `windowCallback` option in\\n// `t.authorize()` to get access to the window handler when\\n// `t.authorize()` is called.\\nsetTimeout(function(){ window.close(); }, 1000);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-authorize","type":"fn","title":"t.authorize(url, opts)","__v":2,"updatedAt":"2019-06-10T14:28:52.726Z"},{"_id":"594d83d177799f001b905970","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5c45374d73a9720fe54ca0af"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:10:41.454Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":21,"body":"Lets you tell Trello to navigate to an arbitrary Trello URL, such as that of a card or board. Will not let you navigate the page to a non-Trello URL. If trying to bring up an open (not archived) card on the current board, you should instead use [t.showCard](#t-showcard) as it will be much more performant.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.navigate({\\n  url: 'https://trello.com/c/nqPiDKmw/9-grand-canyon-national-park'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-navigate","type":"fn","title":"t.navigate(opts)","__v":1,"updatedAt":"2019-06-10T14:28:52.726Z"},{"_id":"594d85cc2af9f70029b6304d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:19:08.106Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":22,"body":"With `t.attach` you can attach a URL to a card, as long as you are in the context of a particular card. A common use case for this is as the result of clicking a `card-button`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var attachOnClick = function (t, opts) {\\n  return t.attach({\\n    name: 'The name for the attachment', // optional\\n    url: 'https://developers.trello.com' // required\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: './images/icon.svg',\\n      text: 'Attach a Thing',\\n      callback: attachOnClick\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Requires permissions.card === 'write'\",\n  \"body\": \"You may want to check that `t.memberCanWriteToModel('card') === true` before even giving the user the option to attach something to a card.\"\n}\n[/block]","excerpt":"","slug":"t-attach","type":"fn","title":"t.attach(data)","__v":0,"updatedAt":"2019-06-10T14:28:52.727Z"},{"_id":"594d83ff2e5787001b713b98","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:11:27.686Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":23,"body":"Given a key, and optional replacement data, synchronously returns the output of `window.localizer.localize(key, data)`\n\nAssume you have a resources file like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"btn-name\\\": \\\"Hi {name}\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      text: t.localizeKey('btn-name', { name: 'Trello' }),\\n      url: 'https://developers.trello.com',\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThat will generate a button with the text: `Hi Trello`","excerpt":"","slug":"t-localizekey","type":"fn","title":"t.localizeKey(key, data)","__v":0,"updatedAt":"2019-06-10T14:28:52.727Z"},{"_id":"594d845adf89370015573469","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:12:58.192Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":24,"body":"Synchronously localizes multiple keys. You can either provide an array of keys `['key1', 'key2']` or an array of key-data arrays `[['key1', { data: 1 }], ['key2', { data: 2 }]]`. This will return an array of strings, in the same order as the keys were passed in.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      text: t.localizeKeys([['btn-name', { name: 'Trello' }]]),\\n      url: 'https://developers.trello.com',\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-localizekeys","type":"fn","title":"t.localizeKeys(keys)","__v":0,"updatedAt":"2019-06-10T14:28:52.728Z"},{"_id":"594d84820c8d130015c5c6a6","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":["5c4538623b425e004520ca01"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:13:38.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":25,"body":"Synchronously inserts localized texts into DOM nodes starting at the provided node and all of its children. Tag a node in your HTML with `data-i18n-id=\"key\"` for its text content to be replaced based on that key. You can pass args with `data-i18n-args='{ \"arg1\": \"data\" }'`. You can also have placeholder text replaced with `data-i18n-attrs='{ \"placeholder\": \"key\" }'`. This will also use the args defined in `data-i18n-args`.\n\nCurrently there is no support for dot notation when replacing args.\n\nLet's assume we have an overlay iframe that looks like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"./css/overlay.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <h2 data-i18n-id=\\\"tips-for-overlay\\\">Tips for using t.overlay()</h2>\\n      <hr/>\\n      <ol>\\n        <li data-i18n-id=\\\"only-for-user-actions\\\">\\n          You should only call t.overlay() as a response to a user action, such as clicking a button.\\n        </li>\\n        <li data-i18n-id=\\\"prefer-t-popup\\\">\\n          Try to use t.popup() when possible instead of t.overlay() as it helps to better maintain context.\\n        </li>\\n        <li data-i18n-id=\\\"easy-to-close\\\">\\n          When using an overlay, be sure to keep the user aware they haven't left their Trello board, and make it easy and intuitive to close.\\n        </li>\\n        <li data-i18n-id=\\\"load-and-render-fast\\\">\\n          Try to get your overlay to load and render as quickly as possible.\\n        </li>\\n      </ol>\\n    </div>\\n    <script src=\\\"./js/overlay.js\\\"></script>\\n  </body>\\n</html>\\n\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nOur javascript to make sure that gets localized might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n\\nt.render(function(){\\n\\tlet contentNode = document.getElementById('content');\\n  t.localizeNode(contentNode);\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nFor reference the `./strings/en-US.json` file would look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"tips-for-overlay\\\": \\\"Tips for using t.overlay()\\\",\\n  \\\"only-for-user-actions\\\": \\\"You should only call t.overlay() as a response to a user action, such as clicking a button.\\\",\\n  \\\"prefer-t-popup\\\": \\\"Try to use t.popup() when possible instead of t.overlay() as it helps to better maintain context.\\\",\\n  \\\"easy-to-close\\\": \\\"When using an overlay, be sure to keep the user aware they haven't left their Trello board, and make it easy and intuitive to close.\\\",\\n  \\\"load-and-render-fast\\\": \\\"Try to get your overlay to load and render as quickly as possible.\\\"\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-localizenode","type":"fn","title":"t.localizeNode(DOMelement)","__v":1,"updatedAt":"2019-06-10T14:28:52.728Z"},{"_id":"594d8674387538002da1767e","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:21:56.645Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":26,"body":"Sometimes you might need to be able to run a callback function on something like a popup. When you create the popup, in the instantiation object you can give it a callback property with a function to be run, but then how do you trigger it?\n\nThat's where `t.notifyParent('done')` comes into play. Calling this method from that popup will trigger Trello to run the callback.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var onDone = function (t, opts) {\\n  console.log('Hey There');\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'show-settings': function (t, opts) {\\n    return t.popup({\\n      callback: onDone,\\n      title: 'Settings',\\n      url: './settings.html',\\n      height: 184\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe script on our settings page might look like:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.render(function () {\\n  // do some stuff\\n});\\n\\ndocument.getElementById('save').addEventListener('click', function () {\\n  // will cause the callback that was included when this\\n  // popup was created to be run\\n  return t.notifyParent('done');\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-notifyparent","type":"fn","title":"t.notifyParent('done')","__v":0,"updatedAt":"2019-06-10T14:28:52.729Z"},{"_id":"59b2d8d2f7dfc9003ac02195","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"594837a0524b9a000fb7dde8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-09-08T17:52:18.367Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":27,"body":"Add current context data to a URL so that (as long as it is opened by Trello) the page will continue to be able to communicate with Trello via the Power-Up interface.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// synchronously returns the \\\"signed\\\" URL\\nvar signedURL = t.signUrl(\\\"https://google.com\\\", { anArg: 'hey' });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n`args` is an optional object where you can retrieve the values with `t.arg` once you load this URL and initialize a `t`.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"In general, wherever possible, Trello does this for you automatically. So when you give a URL to t.popup for example, you don't have to sign it yourself first.\"\n}\n[/block]\nCurrently there are two places where you will need to use `t.signUrl` on your own:\n\n1. `attachment-thumbnail` when returning an `initialize` iframe url:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-thumbnail': function (t, options) {\\n    return {\\n        url: options.url,\\n        title: parkName,\\n        image: {\\n          url: './images/nps.svg',\\n          logo: true // false if you are using a thumbnail of the content\\n        },\\n        openText: 'Open in NPS',\\n        initialize: {\\n          type: 'iframe',\\n          url: t.signUrl(TrelloPowerUp.util.relativeUrl('authorize-link.html'))\\n        }\\n      };\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n2. `attachment-sections` when returning the `content` iframe url:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-sections': function (t, opts) {\\n    return [{\\n      id: 'abc123',\\n      claimed: opts.entries,\\n      icon: 'https://example.com/image.svg',\\n      title: 'My Section',\\n      content: {\\n        type: 'iframe',\\n        url: t.signUrl('./folder.html', { arg: 'why not' })\\n      }\\n    }];\\n  }\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Warning\",\n  \"body\": \"This function currently assumes the URL provided to it does not already have a hash component.\"\n}\n[/block]","excerpt":"","slug":"t-signurl","type":"fn","title":"t.signUrl(url, args)","__v":0,"updatedAt":"2019-06-10T14:28:52.729Z"},{"_id":"5bb673e4bdc41900039aa307","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"5b75d499c1398c0003dbf656","updates":["5bebdfe1151dee001d7d6450","5c4d80eca0070e0014bf02fd"],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T20:11:16.410Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"The REST API client provides methods to make it easier to interact with Trello's REST API from a Power-Up. The client primarily helps with authorization; it makes it easy to get a user's OAuth token when you provide your API key.\n\nTo get started, you will need to obtain your Trello API key. You can do so by logging into Trello and visiting [https://trello.com/app-key](https://trello.com/app-key). Your API key is unique to your user and will be used to identify your Power-Up.\n\nThen, add your API key (`appKey`) and the name of your app (`appName`) when you call `.initialize()` for your Power-Up. The name of your app specified here will be shown to the member when they authorize your app. \n[block:api-header]\n{\n  \"title\": \"Example Initialization\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Note that both the `appName` and `appKey` options must be included for the API client to be available. If you call `getRestApi` without including them, it will throw an exception.\",\n  \"title\": \"Required options\"\n}\n[/block]\nOn your connector iframe:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  // ...\\n  // This is where you declare your capabilities\\n  // ...\\n}, {\\n  appKey: 'my-trello-key',\\n  appName: 'My Power-Up'\\n});\",\n      \"language\": \"javascript\",\n      \"name\": null\n    }\n  ]\n}\n[/block]\nYou may also use the API client from an iframe by specifying these options when initializing the iframe helper:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  appKey: 'my-trello-key',\\n  appName: 'My Power-Up'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Getting API Client Instance\"\n}\n[/block]\nAfter you've initialized the Power-Up client library with your `appKey` and `appName` you can call `t.getRestApi()` to get an instance of the API client. \n\n`t.getRestApi()` returns a Promise.\n\nFor example, on your connector iframe:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n    \\t// We now have an instance of the API client.\\n      .isAuthorized()\\n      .then(function(isAuthorized) {\\n        if (isAuthorized) {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showMenu\\n          }];\\n        } else {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showIframe\\n          }];\\n        }\\n      });\\n}, {\\n  appKey: 'my-trello-key',\\n  appName: 'My Power-Up'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAnd on a different iframe within the Power-Up:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<!doctype html>\\n<html lang=en>\\n  <body>\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n    <script>\\n      var t = window.TrelloPowerUp.iframe({\\n        appKey: 'your-app-key',\\n        appName: 'My Great Power-Up'\\n      });\\n      t.render(function() {\\n        t.getRestApi()\\n          .isAuthorized()\\n          .then(function(isAuthorized) {\\n            alert('Success!');\\n          });\\n      });\\n    </script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"rest-api-client","type":"basic","title":"REST API Client","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.730Z","children":[{"_id":"5bb692b265a07d0003e61ce3","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":["5cb25c0a3b7fc3002570bd07"],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T22:22:42.350Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Use `client.authorize` to kick off the auth flow and get a token you can use to make requests to the Trello REST API on behalf of the member. Returns a Promise which will resolve with a token when the auth flow is complete. Note that the `appName` param you include when setting up your Power-Up is shown to the member when they authorize your app.\n\nWhen you use `client.authorize`, it handles storing the token securely for you. You may call `client.isAuthorized` or `client.getToken` to check if you have already been authorized, or to retrieve the token. The token is stored in private plugin data, so the member will only need to auth once.\n\nThe authorize function accepts an optional opts object which can have the following optional parameters:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Default Value\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"expiration\",\n    \"0-1\": \"`\\\"never\\\"`\",\n    \"1-0\": \"scope\",\n    \"1-1\": \"`\\\"read\\\"`\",\n    \"2-0\": \"return_url\",\n    \"2-1\": \"the value of `window.location.href`\",\n    \"0-2\": \"One of: `1hour`, `1day`, `30days`, `never`\",\n    \"1-2\": \"Comma separated list of: `read`, `write`, `account`\",\n    \"2-2\": \"The URL to redirect to at the end of the auth flow. You generally don't want to change this.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n## A word about popup blocking\n\nNote that this method kicks off Trello's full consent flow. This flow opens a browser popup that asks the member to sign in if they are not already, and then prompts them to grant your app the requested permissions.\n\nTo prevent the browser from blocking Trello's consent popup, only call `client.authorize` from a click handler *on your domain*.\n\nThe best way to handle this is to use one of the UI helpers or capabilities that lets you specify an iframe URL. These include `t.popup`, `t.modal`, and the `attachment-section` and `card-back-section` capabilities.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Don't call client.authorize from a capability handler!\",\n  \"body\": \"You might be tempted to call `client.authorize` from a capability handler, for example, from a `card-buttons` callback. Unfortunately this **does not** register as a click by the browser, and it *will block the consent popup*. Instead, open a `t.popup` from your `card-button` handler, and load an iframe that contains a button that calls `client.authorize`.\"\n}\n[/block]\nHere is an example of how to correctly call `client.authorize` in a way that won't trigger the popup blocker. The first part is in your iframe connector:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"function showIframe(t) {\\n  return t.popup({\\n    title: 'Authorize to continue',\\n    url: './authorize.html'\\n  });\\n}\\n\\nfunction showMenu(t) {\\n  return t.popup({\\n    title: 'Do something cool',\\n    items: [\\n      // ‚Ä¶\\n    ]\\n  });\\n}\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n      .isAuthorized()\\n      .then(function(isAuthorized) {\\n        if (isAuthorized) {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showMenu\\n          }];\\n        } else {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showIframe\\n          }];\\n        }\\n      });\\n  }\\n}, {\\n  appKey: 'your-app-key',\\n  appName: 'My Great Power-Up'\\n});\",\n      \"language\": \"javascript\",\n      \"name\": \"index.js\"\n    }\n  ]\n}\n[/block]\nThen, `authorize.html` should look like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<!doctype html>\\n<html lang=en>\\n  <head>\\n    <meta charset=utf-8>\\n    <title>Authorize</title>\\n  </head>\\n  <body>\\n    <button type=button>Click to authorize</button>\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n    <script>\\n      var t = window.TrelloPowerUp.iframe({\\n        appKey: 'your-app-key',\\n        appName: 'My Great Power-Up'\\n      });\\n      t.render(function() {\\n        document.querySelector('button').addEventListener('click', function() {\\n          t.getRestApi()\\n            .authorize({ scope: 'read,write' })\\n            .then(function(t) {\\n              alert('Success!');\\n            });\\n        }, false);\\n      });\\n    </script>\\n  </body>\\n</html>\",\n      \"language\": \"html\",\n      \"name\": \"authorize.html\"\n    }\n  ]\n}\n[/block]\n## Handling cancellations\n\nIf the member chooses not to authorize your app for whatever reason, `t.authorize` will reject the promise with `TrelloPowerUp.restApiError.AuthDeniedError`. Here is an example of how to handle that:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"document.querySelector('button').addEventListener('click', function() {\\n  t.getRestApi()\\n    .authorize({ scope: 'read,write' })\\n    .then(function(t) {\\n      alert('Success!');\\n    })\\n    .catch(TrelloPowerUp.restApiError.AuthDeniedError, function() {\\n      alert('Cancelled!');\\n    })\\n}, false);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-authorize","type":"basic","title":"client.authorize(opts)","__v":1,"parentDoc":"5bb673e4bdc41900039aa307","updatedAt":"2019-06-10T14:28:52.730Z"},{"_id":"5bb6a62c3589c500032d3530","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bb673e4bdc41900039aa307","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T23:45:48.214Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Returns a promise that resolves to the token obtained from a previous call to `client.authorize`, if there is one. If the member has not authorized your app yet, resolves to null.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.getRestApi()\\n.getToken()\\n.then(function(token) {\\n  if (!token) {\\n    // do auth instead\\n  }\\n  \\n  // make a request with token\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-gettoken","type":"basic","title":"client.getToken()","__v":0,"updatedAt":"2019-06-10T14:28:52.730Z"},{"_id":"5bb69f1a3589c500032d3454","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bb673e4bdc41900039aa307","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T23:15:38.348Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Returns a promise which resolves to a boolean indicating whether the member has authorized your Power-Up to make API requests on their behalf. You can use this to determine whether you should call `t.authorize`. \n\nNote also that most capabilities allow you to return a promise from your handler function. You may use this to return a slightly-different UI based on whether the member has authorized you or not.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n    .isAuthorized()\\n    .then(function(authorized) {\\n      if (authorized) {\\n        // return signed-in button\\n      } else {\\n        // return signed-out button\\n      }\\n    });\\n  }\\n}, {\\n  appKey: 'my-api-key',\\n  appName: 'My Trello App'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-isauthorized","type":"basic","title":"client.isAuthorized()","__v":0,"updatedAt":"2019-06-10T14:28:52.731Z"},{"_id":"5bb6aca765a07d0003e62021","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-05T00:13:27.428Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"The API client is only available from the `t` object you receive in a capability function, or inside an iframe. It is not available from the object returned by `window.TrelloPowerUp.initialize`.\n\nIn other words, these examples work (remember that `appKey` and `appName` must be specified):\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    t.getRestApi()// Works!\\n  }\\n}, {\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThis works too:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n });\\n\\nt.getRestApi()// Works!\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nHowever, *this does not work!*:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.initialize({\\n  // ‚Ä¶\\n}, {\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n});\\n\\nt.getRestApi() // Does not work!\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-availability","type":"basic","title":"API client availability","__v":0,"parentDoc":"5bb673e4bdc41900039aa307","updatedAt":"2019-06-10T14:28:52.731Z"}],"childrenPages":[{"_id":"5bb692b265a07d0003e61ce3","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":["5cb25c0a3b7fc3002570bd07"],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T22:22:42.350Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Use `client.authorize` to kick off the auth flow and get a token you can use to make requests to the Trello REST API on behalf of the member. Returns a Promise which will resolve with a token when the auth flow is complete. Note that the `appName` param you include when setting up your Power-Up is shown to the member when they authorize your app.\n\nWhen you use `client.authorize`, it handles storing the token securely for you. You may call `client.isAuthorized` or `client.getToken` to check if you have already been authorized, or to retrieve the token. The token is stored in private plugin data, so the member will only need to auth once.\n\nThe authorize function accepts an optional opts object which can have the following optional parameters:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Default Value\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"expiration\",\n    \"0-1\": \"`\\\"never\\\"`\",\n    \"1-0\": \"scope\",\n    \"1-1\": \"`\\\"read\\\"`\",\n    \"2-0\": \"return_url\",\n    \"2-1\": \"the value of `window.location.href`\",\n    \"0-2\": \"One of: `1hour`, `1day`, `30days`, `never`\",\n    \"1-2\": \"Comma separated list of: `read`, `write`, `account`\",\n    \"2-2\": \"The URL to redirect to at the end of the auth flow. You generally don't want to change this.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n## A word about popup blocking\n\nNote that this method kicks off Trello's full consent flow. This flow opens a browser popup that asks the member to sign in if they are not already, and then prompts them to grant your app the requested permissions.\n\nTo prevent the browser from blocking Trello's consent popup, only call `client.authorize` from a click handler *on your domain*.\n\nThe best way to handle this is to use one of the UI helpers or capabilities that lets you specify an iframe URL. These include `t.popup`, `t.modal`, and the `attachment-section` and `card-back-section` capabilities.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Don't call client.authorize from a capability handler!\",\n  \"body\": \"You might be tempted to call `client.authorize` from a capability handler, for example, from a `card-buttons` callback. Unfortunately this **does not** register as a click by the browser, and it *will block the consent popup*. Instead, open a `t.popup` from your `card-button` handler, and load an iframe that contains a button that calls `client.authorize`.\"\n}\n[/block]\nHere is an example of how to correctly call `client.authorize` in a way that won't trigger the popup blocker. The first part is in your iframe connector:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"function showIframe(t) {\\n  return t.popup({\\n    title: 'Authorize to continue',\\n    url: './authorize.html'\\n  });\\n}\\n\\nfunction showMenu(t) {\\n  return t.popup({\\n    title: 'Do something cool',\\n    items: [\\n      // ‚Ä¶\\n    ]\\n  });\\n}\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n      .isAuthorized()\\n      .then(function(isAuthorized) {\\n        if (isAuthorized) {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showMenu\\n          }];\\n        } else {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showIframe\\n          }];\\n        }\\n      });\\n  }\\n}, {\\n  appKey: 'your-app-key',\\n  appName: 'My Great Power-Up'\\n});\",\n      \"language\": \"javascript\",\n      \"name\": \"index.js\"\n    }\n  ]\n}\n[/block]\nThen, `authorize.html` should look like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<!doctype html>\\n<html lang=en>\\n  <head>\\n    <meta charset=utf-8>\\n    <title>Authorize</title>\\n  </head>\\n  <body>\\n    <button type=button>Click to authorize</button>\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n    <script>\\n      var t = window.TrelloPowerUp.iframe({\\n        appKey: 'your-app-key',\\n        appName: 'My Great Power-Up'\\n      });\\n      t.render(function() {\\n        document.querySelector('button').addEventListener('click', function() {\\n          t.getRestApi()\\n            .authorize({ scope: 'read,write' })\\n            .then(function(t) {\\n              alert('Success!');\\n            });\\n        }, false);\\n      });\\n    </script>\\n  </body>\\n</html>\",\n      \"language\": \"html\",\n      \"name\": \"authorize.html\"\n    }\n  ]\n}\n[/block]\n## Handling cancellations\n\nIf the member chooses not to authorize your app for whatever reason, `t.authorize` will reject the promise with `TrelloPowerUp.restApiError.AuthDeniedError`. Here is an example of how to handle that:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"document.querySelector('button').addEventListener('click', function() {\\n  t.getRestApi()\\n    .authorize({ scope: 'read,write' })\\n    .then(function(t) {\\n      alert('Success!');\\n    })\\n    .catch(TrelloPowerUp.restApiError.AuthDeniedError, function() {\\n      alert('Cancelled!');\\n    })\\n}, false);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-authorize","type":"basic","title":"client.authorize(opts)","__v":1,"parentDoc":"5bb673e4bdc41900039aa307","updatedAt":"2019-06-10T14:28:52.730Z"},{"_id":"5bb6a62c3589c500032d3530","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bb673e4bdc41900039aa307","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T23:45:48.214Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Returns a promise that resolves to the token obtained from a previous call to `client.authorize`, if there is one. If the member has not authorized your app yet, resolves to null.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.getRestApi()\\n.getToken()\\n.then(function(token) {\\n  if (!token) {\\n    // do auth instead\\n  }\\n  \\n  // make a request with token\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-gettoken","type":"basic","title":"client.getToken()","__v":0,"updatedAt":"2019-06-10T14:28:52.730Z"},{"_id":"5bb69f1a3589c500032d3454","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bb673e4bdc41900039aa307","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T23:15:38.348Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Returns a promise which resolves to a boolean indicating whether the member has authorized your Power-Up to make API requests on their behalf. You can use this to determine whether you should call `t.authorize`. \n\nNote also that most capabilities allow you to return a promise from your handler function. You may use this to return a slightly-different UI based on whether the member has authorized you or not.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n    .isAuthorized()\\n    .then(function(authorized) {\\n      if (authorized) {\\n        // return signed-in button\\n      } else {\\n        // return signed-out button\\n      }\\n    });\\n  }\\n}, {\\n  appKey: 'my-api-key',\\n  appName: 'My Trello App'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-isauthorized","type":"basic","title":"client.isAuthorized()","__v":0,"updatedAt":"2019-06-10T14:28:52.731Z"},{"_id":"5bb6aca765a07d0003e62021","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-05T00:13:27.428Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"The API client is only available from the `t` object you receive in a capability function, or inside an iframe. It is not available from the object returned by `window.TrelloPowerUp.initialize`.\n\nIn other words, these examples work (remember that `appKey` and `appName` must be specified):\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    t.getRestApi()// Works!\\n  }\\n}, {\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThis works too:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n });\\n\\nt.getRestApi()// Works!\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nHowever, *this does not work!*:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.initialize({\\n  // ‚Ä¶\\n}, {\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n});\\n\\nt.getRestApi() // Does not work!\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-availability","type":"basic","title":"API client availability","__v":0,"parentDoc":"5bb673e4bdc41900039aa307","updatedAt":"2019-06-10T14:28:52.731Z"}]},{"_id":"5bb692b265a07d0003e61ce3","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":["5cb25c0a3b7fc3002570bd07"],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T22:22:42.350Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Use `client.authorize` to kick off the auth flow and get a token you can use to make requests to the Trello REST API on behalf of the member. Returns a Promise which will resolve with a token when the auth flow is complete. Note that the `appName` param you include when setting up your Power-Up is shown to the member when they authorize your app.\n\nWhen you use `client.authorize`, it handles storing the token securely for you. You may call `client.isAuthorized` or `client.getToken` to check if you have already been authorized, or to retrieve the token. The token is stored in private plugin data, so the member will only need to auth once.\n\nThe authorize function accepts an optional opts object which can have the following optional parameters:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Default Value\",\n    \"h-2\": \"Notes\",\n    \"0-0\": \"expiration\",\n    \"0-1\": \"`\\\"never\\\"`\",\n    \"1-0\": \"scope\",\n    \"1-1\": \"`\\\"read\\\"`\",\n    \"2-0\": \"return_url\",\n    \"2-1\": \"the value of `window.location.href`\",\n    \"0-2\": \"One of: `1hour`, `1day`, `30days`, `never`\",\n    \"1-2\": \"Comma separated list of: `read`, `write`, `account`\",\n    \"2-2\": \"The URL to redirect to at the end of the auth flow. You generally don't want to change this.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n## A word about popup blocking\n\nNote that this method kicks off Trello's full consent flow. This flow opens a browser popup that asks the member to sign in if they are not already, and then prompts them to grant your app the requested permissions.\n\nTo prevent the browser from blocking Trello's consent popup, only call `client.authorize` from a click handler *on your domain*.\n\nThe best way to handle this is to use one of the UI helpers or capabilities that lets you specify an iframe URL. These include `t.popup`, `t.modal`, and the `attachment-section` and `card-back-section` capabilities.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Don't call client.authorize from a capability handler!\",\n  \"body\": \"You might be tempted to call `client.authorize` from a capability handler, for example, from a `card-buttons` callback. Unfortunately this **does not** register as a click by the browser, and it *will block the consent popup*. Instead, open a `t.popup` from your `card-button` handler, and load an iframe that contains a button that calls `client.authorize`.\"\n}\n[/block]\nHere is an example of how to correctly call `client.authorize` in a way that won't trigger the popup blocker. The first part is in your iframe connector:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"function showIframe(t) {\\n  return t.popup({\\n    title: 'Authorize to continue',\\n    url: './authorize.html'\\n  });\\n}\\n\\nfunction showMenu(t) {\\n  return t.popup({\\n    title: 'Do something cool',\\n    items: [\\n      // ‚Ä¶\\n    ]\\n  });\\n}\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n      .isAuthorized()\\n      .then(function(isAuthorized) {\\n        if (isAuthorized) {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showMenu\\n          }];\\n        } else {\\n          return [{\\n            text: 'David\\\\'s Power-Up',\\n            callback: showIframe\\n          }];\\n        }\\n      });\\n  }\\n}, {\\n  appKey: 'your-app-key',\\n  appName: 'My Great Power-Up'\\n});\",\n      \"language\": \"javascript\",\n      \"name\": \"index.js\"\n    }\n  ]\n}\n[/block]\nThen, `authorize.html` should look like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<!doctype html>\\n<html lang=en>\\n  <head>\\n    <meta charset=utf-8>\\n    <title>Authorize</title>\\n  </head>\\n  <body>\\n    <button type=button>Click to authorize</button>\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n    <script>\\n      var t = window.TrelloPowerUp.iframe({\\n        appKey: 'your-app-key',\\n        appName: 'My Great Power-Up'\\n      });\\n      t.render(function() {\\n        document.querySelector('button').addEventListener('click', function() {\\n          t.getRestApi()\\n            .authorize({ scope: 'read,write' })\\n            .then(function(t) {\\n              alert('Success!');\\n            });\\n        }, false);\\n      });\\n    </script>\\n  </body>\\n</html>\",\n      \"language\": \"html\",\n      \"name\": \"authorize.html\"\n    }\n  ]\n}\n[/block]\n## Handling cancellations\n\nIf the member chooses not to authorize your app for whatever reason, `t.authorize` will reject the promise with `TrelloPowerUp.restApiError.AuthDeniedError`. Here is an example of how to handle that:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"document.querySelector('button').addEventListener('click', function() {\\n  t.getRestApi()\\n    .authorize({ scope: 'read,write' })\\n    .then(function(t) {\\n      alert('Success!');\\n    })\\n    .catch(TrelloPowerUp.restApiError.AuthDeniedError, function() {\\n      alert('Cancelled!');\\n    })\\n}, false);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-authorize","type":"basic","title":"client.authorize(opts)","__v":1,"parentDoc":"5bb673e4bdc41900039aa307","updatedAt":"2019-06-10T14:28:52.730Z"},{"_id":"5bb6a62c3589c500032d3530","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bb673e4bdc41900039aa307","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T23:45:48.214Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Returns a promise that resolves to the token obtained from a previous call to `client.authorize`, if there is one. If the member has not authorized your app yet, resolves to null.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.getRestApi()\\n.getToken()\\n.then(function(token) {\\n  if (!token) {\\n    // do auth instead\\n  }\\n  \\n  // make a request with token\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-gettoken","type":"basic","title":"client.getToken()","__v":0,"updatedAt":"2019-06-10T14:28:52.730Z"},{"_id":"5bb69f1a3589c500032d3454","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bb673e4bdc41900039aa307","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-04T23:15:38.348Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Returns a promise which resolves to a boolean indicating whether the member has authorized your Power-Up to make API requests on their behalf. You can use this to determine whether you should call `t.authorize`. \n\nNote also that most capabilities allow you to return a promise from your handler function. You may use this to return a slightly-different UI based on whether the member has authorized you or not.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    return t.getRestApi()\\n    .isAuthorized()\\n    .then(function(authorized) {\\n      if (authorized) {\\n        // return signed-in button\\n      } else {\\n        // return signed-out button\\n      }\\n    });\\n  }\\n}, {\\n  appKey: 'my-api-key',\\n  appName: 'My Trello App'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-isauthorized","type":"basic","title":"client.isAuthorized()","__v":0,"updatedAt":"2019-06-10T14:28:52.731Z"},{"_id":"5bb6aca765a07d0003e62021","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-05T00:13:27.428Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"The API client is only available from the `t` object you receive in a capability function, or inside an iframe. It is not available from the object returned by `window.TrelloPowerUp.initialize`.\n\nIn other words, these examples work (remember that `appKey` and `appName` must be specified):\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'card-buttons': function(t) {\\n    t.getRestApi()// Works!\\n  }\\n}, {\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThis works too:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n });\\n\\nt.getRestApi()// Works!\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nHowever, *this does not work!*:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.initialize({\\n  // ‚Ä¶\\n}, {\\n  appName: 'My Killer App',\\n  appKey: 'my-trello-key'\\n});\\n\\nt.getRestApi() // Does not work!\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"client-availability","type":"basic","title":"API client availability","__v":0,"parentDoc":"5bb673e4bdc41900039aa307","updatedAt":"2019-06-10T14:28:52.731Z"},{"_id":"5bbb9b26219c3e000376c0b6","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T18:00:06.326Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"The Power-Up client library includes a number of functions that make it easy for you to open Trello-y UI experiences. This section documents the multiple methods available for you to use.\n\nBeing able to provide useful and meaningful UI directly inside of Trello is part of what make Power-Ups so powerful. The functions that you can call via `t` allow you to summon UI in various forms to best serve your users.\n\nWe recommend you gravitate towards the least intrusive control that can get the job done. Generally that means sticking with `t.popup` except in rare cases.","excerpt":"","slug":"ui-functions","type":"fn","title":"UI Functions","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.732Z","children":[{"_id":"594d824eaae15f0015da7456","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":["59b6c9440e00c90010b62c55","5c4d989aa0070e0014bf08b4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:04:14.599Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"The real workhorse of the UI controls available to your Power-Up, the popup lets you present options or controls to the user without disrupting their context. Popups can be stacked, meaning you can have users navigate through more than one if necessary and a back control comes built in. You can control the height of a popup, but the width is fixed by Trello.\n\nThere are three types of popups that you can use:\n[block:api-header]\n{\n  \"title\": \"Popup List\"\n}\n[/block]\nThe simplest kind of popup displays a list of options. Each option has text and a callback function to be run if the option is clicked. The screenshot below shows how the Card Snooze Power-Up makes use of the popup list to show a list of initial options for snoozing a card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/24505d8-popup-list.PNG\",\n        \"popup-list.PNG\",\n        1472,\n        1345,\n        \"#3e4040\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Snooze Card',\\n    items: [{\\n      text: 'Choose Time',\\n      callback: function (t, opts) { ... }\\n    }, {\\n      text: 'In 1 hour',\\n      callback: function (t, opts) { ... }\\n    }, {\\n      text: 'In 2 hours',\\n      callback: function (t, opts) { ... }\\n    }]\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'Snooze',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Popup Search\"\n}\n[/block]\nWhen the list of options grows to long, its probably time to switch to a search popup. These popups can either take a long static list of prepopulated options and will perform client side search for you, or can take a function to be called as the user types which performs the search and returns the resulting options. The screenshot below shows the GitHub Power-Up using this functionality to provide a means of searching for a pull request to attach to the card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c048936-popup-search.PNG\",\n        \"popup-search.PNG\",\n        1648,\n        1495,\n        \"#e9eaf0\"\n      ]\n    }\n  ]\n}\n[/block]\n### Options\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"title\",\n    \"0-1\": \"String\",\n    \"0-2\": \"Displayed at the top of the popup.\",\n    \"1-0\": \"items\",\n    \"1-1\": \"Array of Objects\\nor\\nFunction that returns a Promise\",\n    \"1-2\": \"Each object in the array should contain a `text` key and either a `callback` or `url` key or both.\\n`text` - String - Will be searched by Trello when the user enters a value into the text field.\\n`callback` - Function - Called by Trello it when the user clicks the item.\\n`url` - String - Trello will open the URL when the user selects the item.\\n`alwaysVisible` - Boolean (optional) - Determines whether the item should always be displayed, regardless of whether it matches the search, or not.\\n\\nFor dynamic searching, you can pass the `items` key a function that will be called when the user begins typing. It should resolve to an array containing objects with the keys defined above.\",\n    \"2-0\": \"search\",\n    \"2-1\": \"Object\",\n    \"2-2\": \"Should be an object that contains the following keys (all optional):\\n`count` - Integer - Determines the number of items to display when searching\\n`placeholder` - String - Text to display in search text input when it is empty.\\n`empty` - String - Text to display when a user is searching but not results found.\\n`searching` - String - The value to display when the search function is being executed.\\n`debounce` - Integer - When doing dynamic search, the number of milliseconds to wait after the user has stopped typing before calling the search function. Defaults to 300, also the minimum value.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\nAn example of client side search, where you have the full list of items ready before calling t.popup:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Pull Requests',\\n    items: [{\\n      text: '#135 attempt to fix trello/api-docs#134',\\n      callback: function (t, opts) { ... },\\n      url: 'https://github.com/trello/api-docs/pull/135'\\n    }, {\\n      text: '#133 Removing duplicate `status` property',\\n      callback: function (t, opts) { ... },\\n      url: 'https://github.com/trello/api-docs/pull/133'\\n    }, {\\n      text: '#131 Update New Action Default',\\n      callback: function (t, opts) { ... }\\n      url: 'https://github.com/trello/api-docs/pull/131'\\n    }, {\\n      alwaysVisible: true, // non-search option, always shown\\n      text: 'Choose a different repo...',\\n      callback: function (t, opts) { ... }\\n    }],\\n    search: {\\n      count: 10, // number of items to display at a time\\n      placeholder: 'Search pull requests',\\n      empty: 'No pull requests found'\\n    }\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'GitHub',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAn example of dynamic search:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar Promise = window.TrelloPowerUp.Promise;\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Pull Requests',\\n    items: function (t, options) {\\n      // use options.search which is the search text entered so far\\n      // return a Promise that resolves to an array of items\\n      // similar to the items you provided in the client side version above\\n      return new Promise(function (resolve) {\\n        // you'd probably be making a network request at this point\\n        resolve([{\\n          text: 'Result 1',\\n          callback: function (t, opts) { ... }\\n        }, {\\n          text: 'Result 2',\\n          callback: function (t, opts) { ... }\\n        }]);\\n      });\\n    },\\n    search: {\\n      // optional # of ms to debounce search to\\n      // defaults to 300, override must be larger than 300\\n      debounce: 300,\\n      placeholder: 'Search pull requests',\\n      empty: 'No pull requests found',\\n      searching: 'Searching GitHub...'\\n    }\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'GitHub',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Iframe Popup\"\n}\n[/block]\nLastly, if neither of the prior built in popup options works for you, you can instead have the popup load an iframe, giving you full control over the content and functionality. The screenshot below again shows the Card Snooze Power-Up and how it uses an iframe Popup to let the user pick a specific date and time to snooze the card until.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/5ad6af8-popup-iframe.PNG\",\n        \"popup-iframe.PNG\",\n        1475,\n        1346,\n        \"#414140\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Change Snooze Time',\\n    url: './snooze-time.html',\\n    args: { myArgs: 'You can access these with t.arg()' },\\n    height: 278 // initial height, can be changed later\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'Snooze',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-popup","type":"fn","title":"t.popup(opts)","__v":2,"updatedAt":"2019-06-10T14:28:52.732Z"},{"_id":"594d825ab8a390002999609b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:04:26.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Close an open popup.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closePopup();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closepopup","type":"fn","title":"t.closePopup()","__v":0,"updatedAt":"2019-06-10T14:28:52.733Z"},{"_id":"594d82badf89370015573467","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:06:02.501Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Everytime you call `t.popup()` from within a popup, they get added to a stack. The user can manually navigate back to prior popups using a Trello provided back arrow.\n\nYou can also navigate back to the prior popup in the stack by calling `t.back()`;\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.back();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tback","type":"fn","title":"t.back()","__v":0,"updatedAt":"2019-06-10T14:28:52.733Z"},{"_id":"5bbb8b18dc7f900003fdb473","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T16:51:36.651Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Infrequently, it may be necessary to alert the user that something is underway (so they shouldn't close the tab), or that something has gone wrong. In these rare cases, you may use `t.alert` to notify a user of something. Please don't overuse this, and tend towards `t.popup` where more appropriate.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Please don't overuse this\",\n  \"body\": \"Alerts are purposefully noisy. Showing them more than necessary can get very annoying for your users. Tend towards `t.popup` where more appropriate.\"\n}\n[/block]\n\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/6562a74-Screenshot_2018-10-17_14.27.01.png\",\n        \"Screenshot 2018-10-17 14.27.01.png\",\n        940,\n        554,\n        \"#8e6d71\"\n      ],\n      \"caption\": \"An example of the default `info` alert.\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// you can also use the t you get in a capability function\\nvar t = window.TrelloPowerUp.iframe();\\n\\n// simplest alert requires just a message\\n// displays for 5 seconds using the 'info' display\\nt.alert({\\n  message: 'Powering-Up, give us a second...'\\n});\\n\\n// more complex alert\\nt.alert({\\n  message: 'Powered-Up Successfully üéâ',\\n  duration: 6,\\n  display: 'success'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlert options shape:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"message\",\n    \"0-1\": \"required\\nmax 140 chars\",\n    \"1-0\": \"duration\",\n    \"1-1\": \"optional\\ndefault 5s\\nmin - 5, max - 30\",\n    \"2-0\": \"display\",\n    \"2-1\": \"optional\\ndefault 'info'\\n['info', 'warning', 'error', 'success']\",\n    \"0-2\": \"The message you would like to display to the user. Keep it short & sweet.\",\n    \"1-2\": \"How long you want the alert displayed for. Try to be brief\",\n    \"2-2\": \"How the message should be displayed. Alters the background color of the alert.\",\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Required?\",\n    \"h-2\": \"Details\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"One Alert at a time\",\n  \"body\": \"While alerts from multiple Power-Ups & Trello itself will stack vertically, each Power-Up is limited to showing at most one alert at a time. If you trigger a new alert while one is already showing the previous one will be removed in favor of the new one.\"\n}\n[/block]","excerpt":"","slug":"t-alert","type":"fn","title":"t.alert(opts)","__v":0,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"5bbbada5219c3e000376c2dd","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T19:19:01.547Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When showing alert messages to the user, you might be communicating a long running operation which you don't know beforehand how long it will take. In these cases you can use an alert with a long duration, and when the operation completes, you can hide the alert manually by calling `t.hideAlert()`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// you can also use the t you get in a capability function\\nvar t = window.TrelloPowerUp.iframe();\\n\\n// show an alert for a bit, we don't know how long it will\\n// take so we will hide it manually when its done\\nt.alert({\\n  message: 'Working on it, hang tight...',\\n  duration: 30, // don't worry we will close it sooner\\n  display: 'info'\\n});\\n\\n// some time later once the operation is complete\\nwindow.setTimeout(t.hideAlert, 8000);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"No alerts showing\",\n  \"body\": \"If you call `t.hideAlert()` and you are currently showing no alerts, nothing will happen, and no error will be thrown. It is essentially a no-op.\"\n}\n[/block]","excerpt":"","slug":"t-hidealert","type":"fn","title":"t.hideAlert()","__v":0,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"594d82fd845458001b4c6e86","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":["59669949557762001a3bac34"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:07:09.493Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"`t.boardBar` allows you to load an iframe across the bottom of the board. You are allowed any height you want, up to 60% of the height of the window (this includes the height of the header of the board bar). The board bar comes with a title bar whose color you are able to set. Additionally, you can specify a set of icons to be displayed at the top of the bar along with callbacks for each button which will be called at the point in time the user clicks on a button.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c5fc776-Screen_Shot_2017-08-23_at_1.57.22_PM.png\",\n        \"Screen Shot 2017-08-23 at 1.57.22 PM.png\",\n        3116,\n        522,\n        \"#0f3b52\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"opts\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Argument\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"url\\n**string**\",\n    \"1-0\": \"args\\n**object**\",\n    \"2-0\": \"height\\n**integer**\",\n    \"0-1\": \"The url of the page to be loaded into the iframe.\",\n    \"1-1\": \"Optional arguments to be passed to the iframe as query parameters.\",\n    \"2-1\": \"Height of the board bar in pixels.\",\n    \"3-0\": \"accentColor\\n**string**\",\n    \"3-1\": \"Hex color value or a [Trello Brand Color](ref:trello-brand-colors). Used as the color of the header.\",\n    \"4-0\": \"callback\\n**function**\",\n    \"4-1\": \"Optional function to be called when user closes board bar.\",\n    \"5-0\": \"title\\n**string**\",\n    \"5-1\": \"Optional string to be displayed as the title in the header of the board bar. Board bar title will default to the name of the Power-Up.\",\n    \"6-0\": \"actions\\n**array**\",\n    \"6-1\": \"Optional array of quick action buttons for the header. Up to three allowed, with up to one on the right side.\",\n    \"7-0\": \"resizable\\n**boolean**\",\n    \"7-1\": \"Determines whether the board bar will be resizable by the user. The default value will be `false`. The initial height will still be determined by the value passed to `height`, calls to `t.sizeTo()` will continue to be respected, and the max height of the board bar will continue to be 60%.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\nThe `actions` parameter above accepts an array of no more than three action objects with the which have the following values:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"icon\\n**string**\",\n    \"0-1\": \"Valid URL (http or https) of image. Required.\",\n    \"0-2\": \"Icon to be displayed\",\n    \"1-0\": \"alt\\n**string**\",\n    \"1-2\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"2-0\": \"callback\\n**function**\",\n    \"2-2\": \"The function to be called a user clicks on the icon\",\n    \"1-1\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"2-1\": \"The function to be called when a user clicks on the icon.\",\n    \"3-0\": \"position\\n**string**\",\n    \"3-1\": \"Can be `left` or `right` and determines which side of the header the icon is displayed.\",\n    \"4-0\": \"url\\n**string**\",\n    \"4-1\": \"Optional `https://` URL that will open in a new tab when the action icon is clicked.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nBelow is an example of opening a board bar from a board button. When the user clicks the board button labeled \"Popup\", a board bar with the contents of `board-bar.html` will be displayed.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-settings': function (t, opts) {\\n    return t.boardBar({\\n      // required URL to load in the iframe\\n      url: './board-bar.html',\\n      // optional arguments to be passed to the iframe as query parameters\\n      // access later with t.arg('text')\\n      args: { text: 'Hello' },\\n      // optional color for header chrome\\n      accentColor: '#F2D600',\\n      // initial height for iframe\\n      height: 200, // initial height for iframe\\n      // optional function to be called if user closes modal\\n      callback: () => console.log('Goodbye.'),\\n      // optional boolean for whether the user should\\n      // be allowed to resize the bar vertically\\n      resizable: true,\\n      // optional title for header chrome\\n      title: 'Board Meeting',\\n      // optional action buttons for header chrome\\n      // max 3, up to 1 on right side\\n      actions: [{\\n        icon: './images/icon.svg',\\n        url: 'https://google.com',\\n        alt: 'Leftmost',\\n        position: 'left',\\n      }, {\\n        icon: './images/icon.svg',\\n        callback: (tr) => tr.popup({\\n          title: tr.localizeKey('appear_in_settings'),\\n          url: 'settings.html',\\n          height: 164,\\n        }),\\n        alt: 'Second from left',\\n        position: 'left',\\n      }, {\\n        icon: './images/icon.svg',\\n        callback: () => console.log(':tada:'),\\n        alt: 'Right side',\\n        position: 'right',\\n      }],\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c8cb69f-Screen_Shot_2017-08-18_at_5.21.10_PM.png\",\n        \"Screen Shot 2017-08-18 at 5.21.10 PM.png\",\n        988,\n        755,\n        \"#6d7984\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-boardbar","type":"fn","title":"t.boardBar(opts)","__v":1,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"594d831a86739c001769249d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:07:38.913Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Board bars come by default with a close control that the use can use to close the board bar. However, if you need to close the board bar programmatically you can do so by calling `t.closeBoardBar()`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closeBoardBar();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closeboardbar","type":"fn","title":"t.closeBoardBar()","__v":0,"updatedAt":"2019-06-10T14:28:52.735Z"},{"_id":"59934b819bb958000fe9c70c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-15T19:29:05.535Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"In certain cases, your Power-Up might need to show UI that requires taking up a large portion of the screen. When you need something more than [t.popup(opts)](ref:t-popup) or [t.boardBar(opts)](ref:t-boardbar) can provide, you can use `t.modal`. This lets you display an iframe directly on top of Trello. The modal comes in two widths, `fullscreen: true` as seen below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4e99683-fullscreen-true.png\",\n        \"fullscreen-true.png\",\n        1535,\n        939,\n        \"#6c6d6c\"\n      ]\n    }\n  ]\n}\n[/block]\nAnd `fullscreen: false` looks like:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/83557bd-fullscreen-false.png\",\n        \"fullscreen-false.png\",\n        1535,\n        930,\n        \"#878988\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"url\\n**string**\",\n    \"0-1\": \"Any valid URL.\",\n    \"0-2\": \"The URL of the page to be shown inside of the iframe.\",\n    \"1-0\": \"accentColor\\n**string**\",\n    \"1-1\": \"Hex color value or a [Trello Brand Color](ref:trello-brand-colors).\",\n    \"1-2\": \"Color to be used on top of modal design.\",\n    \"2-0\": \"height\\n**integer**\",\n    \"2-1\": \"Positive integer.\",\n    \"2-2\": \"Height of the modal.\",\n    \"3-0\": \"fullscreen\\n**boolean**\",\n    \"3-1\": \"True or False\",\n    \"3-2\": \"Determines whether the modal should be full width or not.\",\n    \"4-0\": \"callback\\n**function**\",\n    \"4-1\": \"Function that runs.\\n**optional**\",\n    \"4-2\": \"The function to be called if the user closes the modal.\",\n    \"5-0\": \"title\\n**string**\",\n    \"5-1\": \"Any string.\\n**optional**\",\n    \"5-2\": \"String to be displayed in header of modal.\",\n    \"6-0\": \"actions\\n**array**\",\n    \"6-1\": \"Array of action items (as described below).\\n**optional**\",\n    \"6-2\": \"Buttons to be displayed in header of modal.\",\n    \"7-0\": \"args\\n**object**\",\n    \"7-1\": \"Object of key / values to be passed as query parameters to iframe\\n**optional**\",\n    \"7-2\": \"Can be accessed from the iframe using `t.arg(key)`\"\n  },\n  \"cols\": 3,\n  \"rows\": 8\n}\n[/block]\nThe `actions` parameter above accepts an array of no more than three action objects with the which have the following values:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"icon\\n**string**\",\n    \"0-1\": \"Valid URL of image.\",\n    \"h-0\": \"Key\",\n    \"h-1\": \"Valid Value\",\n    \"h-2\": \"Description\",\n    \"1-0\": \"callback\\n**function**\",\n    \"2-0\": \"alt\\n**string**\",\n    \"2-1\": \"Any string\",\n    \"3-0\": \"position\\n**string**\",\n    \"0-2\": \"Icon to be displayed.\",\n    \"1-1\": \"Callable function.\",\n    \"1-2\": \"The function to be called when a user clicks on the icon.\",\n    \"2-2\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"3-1\": \"`left` or `right`\",\n    \"3-2\": \"Determines whether the icon should be displayed on the left or right side of the modal header.\",\n    \"4-0\": \"url\\n**string**\",\n    \"4-1\": \"An `https://` url\",\n    \"4-2\": \"An optional URL to open in a new tab when the user clicks the action icon.\"\n  },\n  \"cols\": 3,\n  \"rows\": 5\n}\n[/block]\nHere is an example call to `t.modal`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.modal({\\n  // the url to load for the iframe\\n  url: './modal.html',\\n  // optional arguments to be passed to the iframe as query parameters\\n  // access later with t.arg('text')\\n  args: { text: 'Hello' },\\n  // optional color for header chrome\\n  accentColor: '#F2D600',\\n  // initial height for iframe\\n  height: 500, // not used if fullscreen is true\\n  // whether the modal should stretch to take up the whole screen\\n  fullscreen: true,\\n  // optional function to be called if user closes modal (via `X` or escape, etc)\\n  callback: () => console.log('Goodbye.'),\\n  // optional title for header chrome\\n  title: 'appear.in meeting',\\n  // optional action buttons for header chrome\\n  // max 3, up to 1 on right side\\n  actions: [{\\n    icon: './images/icon.svg',\\n    url: 'https://google.com',\\n    alt: 'Leftmost',\\n    position: 'left',\\n  }, {\\n    icon: './images/icon.svg',\\n    callback: (tr) => tr.popup({\\n      title: tr.localizeKey('appear_in_settings'),\\n      url: 'settings.html',\\n      height: 164,\\n    }),\\n    alt: 'Second from left',\\n    position: 'left',\\n  }, {\\n    icon: './images/icon.svg',\\n    callback: () => console.log(':tada:'),\\n    alt: 'Right side',\\n    position: 'right',\\n  }],\\n})\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-modal","type":"fn","title":"t.modal(opts)","__v":0,"updatedAt":"2019-06-10T14:28:52.735Z"},{"_id":"599749efe1eec5002d1e3001","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-18T20:11:27.829Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"If you have a modal open, you can call `t.closeModal()` to close it.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closeModal();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closemodal","type":"fn","title":"t.closeModal()","__v":0,"updatedAt":"2019-06-10T14:28:52.736Z"},{"_id":"5adf9a44452bd900036d0e80","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-04-24T20:57:40.929Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"If you have a modal open, you can update parts of it using `t.updateModal({options})`.\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Name\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"About\",\n    \"0-0\": \"**accentColor**\\nstring\",\n    \"2-0\": \"**fullscreen**\\nboolean\",\n    \"1-0\": \"**actions**\\narray of objects\",\n    \"3-0\": \"**title**\\nstring\",\n    \"0-1\": \"A valid hex color (eg, `9900CC`) to update the modal header's background color to.\",\n    \"0-2\": \"The color to update the modal's header with.\",\n    \"1-1\": \"An array of [action objects](https://developers.trello.com/v1.0/reference#t-modal).\",\n    \"1-2\": \"The\",\n    \"2-1\": \"A boolean used to determine whether the modal should be fullscreen or not.\",\n    \"3-1\": \"The string to update the modal's header to.\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Example\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"let updateObject = {\\n  fullscreen: false,  \\n  accentColor: \\\"9900CC\\\",\\n  actions: [{\\n    icon: './images/icon.svg',\\n    url: 'https://google.com',\\n    alt: 'Leftmost',\\n    position: 'left',\\n  }],\\n  title: \\\"My New Title\\\",\\n}\\n\\nt.updateModal(updateObject);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tupdatemodal","type":"fn","title":"t.updateModal()","__v":0,"updatedAt":"2019-06-10T14:28:52.736Z"},{"_id":"594d8382634354002938da24","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:09:22.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"You'll almost always need a way to tell Trello that the size of the content in one of your iframes has changed, or maybe doesn't perfectly line up with the height you requested when instantiating the iframe.\n\nFor those moments, you can use `t.sizeTo(arg)`\n\n`t.sizeTo` takes a single argument which can by any of the following:\n[block:parameters]\n{\n  \"data\": {\n    \"h-2\": \"Example\",\n    \"h-0\": \"Type\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"`string`\",\n    \"0-1\": \"A DOM query selector that will select the node to measure and use the height of\",\n    \"0-2\": \"`t.sizeTo('#content')`\",\n    \"1-0\": \"`element`\",\n    \"1-1\": \"A DOM element that will be measured and we will use the height of\",\n    \"2-1\": \"A positive number that will be used directly for the height\",\n    \"2-0\": \"`number`\",\n    \"2-2\": \"`t.sizeTo(625)`\",\n    \"1-2\": \"`t.sizeTo(document.body)`\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\nTo get an understanding of how this is used lets look at an attachment-section example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-sections': function(t, options){\\n    // options.entries is a list of the attachments for this card\\n    // you can look through them and 'claim' any that you want to\\n    // include in your section.\\n\\n    // we will just claim urls for Yellowstone\\n    var claimed = options.entries.filter(function(attachment){\\n      return attachment.url.indexOf('http://www.nps.gov/yell/') === 0;\\n    });\\n\\n    if(claimed && claimed.length > 0){\\n      return [{\\n        claimed: claimed,\\n        icon: HYPERDEV_ICON,\\n        title: 'Example Attachment Section: Yellowstone',\\n        content: {\\n          type: 'iframe',\\n          url: t.signUrl('./section.html'),\\n          height: 230\\n        }\\n      }];\\n    } else {\\n      return [];\\n    }\\n  }\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nLet's look at `./section.html`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <p>Tips for using attachment-sections</p>\\n      <ol>\\n        <li>Make sure your section feels at home on the card. It should fit in with the rest of the card and not stick out.</li>\\n        <li>You can specify a height when you claim the section, and also use t.sizeTo() to make sure your section is the perfect height.</li>\\n        <li>Try to keep the height of your sections to a minimum.</li>\\n        <li>It should be obvious to the user what attachments went into your section. They shouldn't be left wondering were one of their attachments disappeared to.</li>\\n      </ol>\\n      <p class=\\\"u-quiet\\\">Claimed attachment urls: <span id=\\\"urls\\\"></span></p>\\n    </div>\\n    <script src=\\\"./js/section.js\\\"></script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nLastly, let's look at `./js/section.js`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.render(function(){\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function(attachment){\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function(yellowstoneAttachments){\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function(){\\n    return t.sizeTo('#content'); // üëà\\n  });\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAs you can see, once we have rendered out our section, the last thing we do is call `t.sizeTo('#content')` to make sure that our section iframe isn't showing as an awkward height and is \"just right\".","excerpt":"","slug":"t-sizeto","type":"fn","title":"t.sizeTo(arg)","__v":0,"updatedAt":"2019-06-10T14:28:52.738Z"},{"_id":"594d83bb387538002da1767a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:10:19.651Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Let's you tell Trello to open a specific card as long as that card is both on the current board, and not archived. To show an archived card on the current board, use [t.navigate](#t-navigate)\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can use either the shortLink for the card\\n// or the full id\\nt.showCard('nqPiDKmw');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-showcard","type":"fn","title":"t.showCard(idCard)","__v":0,"updatedAt":"2019-06-10T14:28:52.738Z"},{"_id":"5b50c92671e34d0003b8ba0c","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-07-19T17:23:50.713Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"Used to close a card if there is one currently open.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// Open up a card modal\\nt.showCard('nqPiDKmw');\\n\\n// close the open card modal\\nt.hideCard();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"thidecard","type":"fn","title":"t.hideCard()","__v":0,"updatedAt":"2019-06-10T14:28:52.739Z"}],"childrenPages":[{"_id":"594d824eaae15f0015da7456","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":["59b6c9440e00c90010b62c55","5c4d989aa0070e0014bf08b4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:04:14.599Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"The real workhorse of the UI controls available to your Power-Up, the popup lets you present options or controls to the user without disrupting their context. Popups can be stacked, meaning you can have users navigate through more than one if necessary and a back control comes built in. You can control the height of a popup, but the width is fixed by Trello.\n\nThere are three types of popups that you can use:\n[block:api-header]\n{\n  \"title\": \"Popup List\"\n}\n[/block]\nThe simplest kind of popup displays a list of options. Each option has text and a callback function to be run if the option is clicked. The screenshot below shows how the Card Snooze Power-Up makes use of the popup list to show a list of initial options for snoozing a card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/24505d8-popup-list.PNG\",\n        \"popup-list.PNG\",\n        1472,\n        1345,\n        \"#3e4040\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Snooze Card',\\n    items: [{\\n      text: 'Choose Time',\\n      callback: function (t, opts) { ... }\\n    }, {\\n      text: 'In 1 hour',\\n      callback: function (t, opts) { ... }\\n    }, {\\n      text: 'In 2 hours',\\n      callback: function (t, opts) { ... }\\n    }]\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'Snooze',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Popup Search\"\n}\n[/block]\nWhen the list of options grows to long, its probably time to switch to a search popup. These popups can either take a long static list of prepopulated options and will perform client side search for you, or can take a function to be called as the user types which performs the search and returns the resulting options. The screenshot below shows the GitHub Power-Up using this functionality to provide a means of searching for a pull request to attach to the card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c048936-popup-search.PNG\",\n        \"popup-search.PNG\",\n        1648,\n        1495,\n        \"#e9eaf0\"\n      ]\n    }\n  ]\n}\n[/block]\n### Options\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"title\",\n    \"0-1\": \"String\",\n    \"0-2\": \"Displayed at the top of the popup.\",\n    \"1-0\": \"items\",\n    \"1-1\": \"Array of Objects\\nor\\nFunction that returns a Promise\",\n    \"1-2\": \"Each object in the array should contain a `text` key and either a `callback` or `url` key or both.\\n`text` - String - Will be searched by Trello when the user enters a value into the text field.\\n`callback` - Function - Called by Trello it when the user clicks the item.\\n`url` - String - Trello will open the URL when the user selects the item.\\n`alwaysVisible` - Boolean (optional) - Determines whether the item should always be displayed, regardless of whether it matches the search, or not.\\n\\nFor dynamic searching, you can pass the `items` key a function that will be called when the user begins typing. It should resolve to an array containing objects with the keys defined above.\",\n    \"2-0\": \"search\",\n    \"2-1\": \"Object\",\n    \"2-2\": \"Should be an object that contains the following keys (all optional):\\n`count` - Integer - Determines the number of items to display when searching\\n`placeholder` - String - Text to display in search text input when it is empty.\\n`empty` - String - Text to display when a user is searching but not results found.\\n`searching` - String - The value to display when the search function is being executed.\\n`debounce` - Integer - When doing dynamic search, the number of milliseconds to wait after the user has stopped typing before calling the search function. Defaults to 300, also the minimum value.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\nAn example of client side search, where you have the full list of items ready before calling t.popup:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Pull Requests',\\n    items: [{\\n      text: '#135 attempt to fix trello/api-docs#134',\\n      callback: function (t, opts) { ... },\\n      url: 'https://github.com/trello/api-docs/pull/135'\\n    }, {\\n      text: '#133 Removing duplicate `status` property',\\n      callback: function (t, opts) { ... },\\n      url: 'https://github.com/trello/api-docs/pull/133'\\n    }, {\\n      text: '#131 Update New Action Default',\\n      callback: function (t, opts) { ... }\\n      url: 'https://github.com/trello/api-docs/pull/131'\\n    }, {\\n      alwaysVisible: true, // non-search option, always shown\\n      text: 'Choose a different repo...',\\n      callback: function (t, opts) { ... }\\n    }],\\n    search: {\\n      count: 10, // number of items to display at a time\\n      placeholder: 'Search pull requests',\\n      empty: 'No pull requests found'\\n    }\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'GitHub',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAn example of dynamic search:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar Promise = window.TrelloPowerUp.Promise;\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Pull Requests',\\n    items: function (t, options) {\\n      // use options.search which is the search text entered so far\\n      // return a Promise that resolves to an array of items\\n      // similar to the items you provided in the client side version above\\n      return new Promise(function (resolve) {\\n        // you'd probably be making a network request at this point\\n        resolve([{\\n          text: 'Result 1',\\n          callback: function (t, opts) { ... }\\n        }, {\\n          text: 'Result 2',\\n          callback: function (t, opts) { ... }\\n        }]);\\n      });\\n    },\\n    search: {\\n      // optional # of ms to debounce search to\\n      // defaults to 300, override must be larger than 300\\n      debounce: 300,\\n      placeholder: 'Search pull requests',\\n      empty: 'No pull requests found',\\n      searching: 'Searching GitHub...'\\n    }\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'GitHub',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Iframe Popup\"\n}\n[/block]\nLastly, if neither of the prior built in popup options works for you, you can instead have the popup load an iframe, giving you full control over the content and functionality. The screenshot below again shows the Card Snooze Power-Up and how it uses an iframe Popup to let the user pick a specific date and time to snooze the card until.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/5ad6af8-popup-iframe.PNG\",\n        \"popup-iframe.PNG\",\n        1475,\n        1346,\n        \"#414140\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Change Snooze Time',\\n    url: './snooze-time.html',\\n    args: { myArgs: 'You can access these with t.arg()' },\\n    height: 278 // initial height, can be changed later\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'Snooze',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-popup","type":"fn","title":"t.popup(opts)","__v":2,"updatedAt":"2019-06-10T14:28:52.732Z"},{"_id":"594d825ab8a390002999609b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:04:26.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Close an open popup.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closePopup();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closepopup","type":"fn","title":"t.closePopup()","__v":0,"updatedAt":"2019-06-10T14:28:52.733Z"},{"_id":"594d82badf89370015573467","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:06:02.501Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Everytime you call `t.popup()` from within a popup, they get added to a stack. The user can manually navigate back to prior popups using a Trello provided back arrow.\n\nYou can also navigate back to the prior popup in the stack by calling `t.back()`;\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.back();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tback","type":"fn","title":"t.back()","__v":0,"updatedAt":"2019-06-10T14:28:52.733Z"},{"_id":"5bbb8b18dc7f900003fdb473","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T16:51:36.651Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Infrequently, it may be necessary to alert the user that something is underway (so they shouldn't close the tab), or that something has gone wrong. In these rare cases, you may use `t.alert` to notify a user of something. Please don't overuse this, and tend towards `t.popup` where more appropriate.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Please don't overuse this\",\n  \"body\": \"Alerts are purposefully noisy. Showing them more than necessary can get very annoying for your users. Tend towards `t.popup` where more appropriate.\"\n}\n[/block]\n\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/6562a74-Screenshot_2018-10-17_14.27.01.png\",\n        \"Screenshot 2018-10-17 14.27.01.png\",\n        940,\n        554,\n        \"#8e6d71\"\n      ],\n      \"caption\": \"An example of the default `info` alert.\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// you can also use the t you get in a capability function\\nvar t = window.TrelloPowerUp.iframe();\\n\\n// simplest alert requires just a message\\n// displays for 5 seconds using the 'info' display\\nt.alert({\\n  message: 'Powering-Up, give us a second...'\\n});\\n\\n// more complex alert\\nt.alert({\\n  message: 'Powered-Up Successfully üéâ',\\n  duration: 6,\\n  display: 'success'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlert options shape:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"message\",\n    \"0-1\": \"required\\nmax 140 chars\",\n    \"1-0\": \"duration\",\n    \"1-1\": \"optional\\ndefault 5s\\nmin - 5, max - 30\",\n    \"2-0\": \"display\",\n    \"2-1\": \"optional\\ndefault 'info'\\n['info', 'warning', 'error', 'success']\",\n    \"0-2\": \"The message you would like to display to the user. Keep it short & sweet.\",\n    \"1-2\": \"How long you want the alert displayed for. Try to be brief\",\n    \"2-2\": \"How the message should be displayed. Alters the background color of the alert.\",\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Required?\",\n    \"h-2\": \"Details\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"One Alert at a time\",\n  \"body\": \"While alerts from multiple Power-Ups & Trello itself will stack vertically, each Power-Up is limited to showing at most one alert at a time. If you trigger a new alert while one is already showing the previous one will be removed in favor of the new one.\"\n}\n[/block]","excerpt":"","slug":"t-alert","type":"fn","title":"t.alert(opts)","__v":0,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"5bbbada5219c3e000376c2dd","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T19:19:01.547Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When showing alert messages to the user, you might be communicating a long running operation which you don't know beforehand how long it will take. In these cases you can use an alert with a long duration, and when the operation completes, you can hide the alert manually by calling `t.hideAlert()`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// you can also use the t you get in a capability function\\nvar t = window.TrelloPowerUp.iframe();\\n\\n// show an alert for a bit, we don't know how long it will\\n// take so we will hide it manually when its done\\nt.alert({\\n  message: 'Working on it, hang tight...',\\n  duration: 30, // don't worry we will close it sooner\\n  display: 'info'\\n});\\n\\n// some time later once the operation is complete\\nwindow.setTimeout(t.hideAlert, 8000);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"No alerts showing\",\n  \"body\": \"If you call `t.hideAlert()` and you are currently showing no alerts, nothing will happen, and no error will be thrown. It is essentially a no-op.\"\n}\n[/block]","excerpt":"","slug":"t-hidealert","type":"fn","title":"t.hideAlert()","__v":0,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"594d82fd845458001b4c6e86","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":["59669949557762001a3bac34"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:07:09.493Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"`t.boardBar` allows you to load an iframe across the bottom of the board. You are allowed any height you want, up to 60% of the height of the window (this includes the height of the header of the board bar). The board bar comes with a title bar whose color you are able to set. Additionally, you can specify a set of icons to be displayed at the top of the bar along with callbacks for each button which will be called at the point in time the user clicks on a button.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c5fc776-Screen_Shot_2017-08-23_at_1.57.22_PM.png\",\n        \"Screen Shot 2017-08-23 at 1.57.22 PM.png\",\n        3116,\n        522,\n        \"#0f3b52\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"opts\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Argument\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"url\\n**string**\",\n    \"1-0\": \"args\\n**object**\",\n    \"2-0\": \"height\\n**integer**\",\n    \"0-1\": \"The url of the page to be loaded into the iframe.\",\n    \"1-1\": \"Optional arguments to be passed to the iframe as query parameters.\",\n    \"2-1\": \"Height of the board bar in pixels.\",\n    \"3-0\": \"accentColor\\n**string**\",\n    \"3-1\": \"Hex color value or a [Trello Brand Color](ref:trello-brand-colors). Used as the color of the header.\",\n    \"4-0\": \"callback\\n**function**\",\n    \"4-1\": \"Optional function to be called when user closes board bar.\",\n    \"5-0\": \"title\\n**string**\",\n    \"5-1\": \"Optional string to be displayed as the title in the header of the board bar. Board bar title will default to the name of the Power-Up.\",\n    \"6-0\": \"actions\\n**array**\",\n    \"6-1\": \"Optional array of quick action buttons for the header. Up to three allowed, with up to one on the right side.\",\n    \"7-0\": \"resizable\\n**boolean**\",\n    \"7-1\": \"Determines whether the board bar will be resizable by the user. The default value will be `false`. The initial height will still be determined by the value passed to `height`, calls to `t.sizeTo()` will continue to be respected, and the max height of the board bar will continue to be 60%.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\nThe `actions` parameter above accepts an array of no more than three action objects with the which have the following values:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"icon\\n**string**\",\n    \"0-1\": \"Valid URL (http or https) of image. Required.\",\n    \"0-2\": \"Icon to be displayed\",\n    \"1-0\": \"alt\\n**string**\",\n    \"1-2\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"2-0\": \"callback\\n**function**\",\n    \"2-2\": \"The function to be called a user clicks on the icon\",\n    \"1-1\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"2-1\": \"The function to be called when a user clicks on the icon.\",\n    \"3-0\": \"position\\n**string**\",\n    \"3-1\": \"Can be `left` or `right` and determines which side of the header the icon is displayed.\",\n    \"4-0\": \"url\\n**string**\",\n    \"4-1\": \"Optional `https://` URL that will open in a new tab when the action icon is clicked.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nBelow is an example of opening a board bar from a board button. When the user clicks the board button labeled \"Popup\", a board bar with the contents of `board-bar.html` will be displayed.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-settings': function (t, opts) {\\n    return t.boardBar({\\n      // required URL to load in the iframe\\n      url: './board-bar.html',\\n      // optional arguments to be passed to the iframe as query parameters\\n      // access later with t.arg('text')\\n      args: { text: 'Hello' },\\n      // optional color for header chrome\\n      accentColor: '#F2D600',\\n      // initial height for iframe\\n      height: 200, // initial height for iframe\\n      // optional function to be called if user closes modal\\n      callback: () => console.log('Goodbye.'),\\n      // optional boolean for whether the user should\\n      // be allowed to resize the bar vertically\\n      resizable: true,\\n      // optional title for header chrome\\n      title: 'Board Meeting',\\n      // optional action buttons for header chrome\\n      // max 3, up to 1 on right side\\n      actions: [{\\n        icon: './images/icon.svg',\\n        url: 'https://google.com',\\n        alt: 'Leftmost',\\n        position: 'left',\\n      }, {\\n        icon: './images/icon.svg',\\n        callback: (tr) => tr.popup({\\n          title: tr.localizeKey('appear_in_settings'),\\n          url: 'settings.html',\\n          height: 164,\\n        }),\\n        alt: 'Second from left',\\n        position: 'left',\\n      }, {\\n        icon: './images/icon.svg',\\n        callback: () => console.log(':tada:'),\\n        alt: 'Right side',\\n        position: 'right',\\n      }],\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c8cb69f-Screen_Shot_2017-08-18_at_5.21.10_PM.png\",\n        \"Screen Shot 2017-08-18 at 5.21.10 PM.png\",\n        988,\n        755,\n        \"#6d7984\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-boardbar","type":"fn","title":"t.boardBar(opts)","__v":1,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"594d831a86739c001769249d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:07:38.913Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Board bars come by default with a close control that the use can use to close the board bar. However, if you need to close the board bar programmatically you can do so by calling `t.closeBoardBar()`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closeBoardBar();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closeboardbar","type":"fn","title":"t.closeBoardBar()","__v":0,"updatedAt":"2019-06-10T14:28:52.735Z"},{"_id":"59934b819bb958000fe9c70c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-15T19:29:05.535Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"In certain cases, your Power-Up might need to show UI that requires taking up a large portion of the screen. When you need something more than [t.popup(opts)](ref:t-popup) or [t.boardBar(opts)](ref:t-boardbar) can provide, you can use `t.modal`. This lets you display an iframe directly on top of Trello. The modal comes in two widths, `fullscreen: true` as seen below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4e99683-fullscreen-true.png\",\n        \"fullscreen-true.png\",\n        1535,\n        939,\n        \"#6c6d6c\"\n      ]\n    }\n  ]\n}\n[/block]\nAnd `fullscreen: false` looks like:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/83557bd-fullscreen-false.png\",\n        \"fullscreen-false.png\",\n        1535,\n        930,\n        \"#878988\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"url\\n**string**\",\n    \"0-1\": \"Any valid URL.\",\n    \"0-2\": \"The URL of the page to be shown inside of the iframe.\",\n    \"1-0\": \"accentColor\\n**string**\",\n    \"1-1\": \"Hex color value or a [Trello Brand Color](ref:trello-brand-colors).\",\n    \"1-2\": \"Color to be used on top of modal design.\",\n    \"2-0\": \"height\\n**integer**\",\n    \"2-1\": \"Positive integer.\",\n    \"2-2\": \"Height of the modal.\",\n    \"3-0\": \"fullscreen\\n**boolean**\",\n    \"3-1\": \"True or False\",\n    \"3-2\": \"Determines whether the modal should be full width or not.\",\n    \"4-0\": \"callback\\n**function**\",\n    \"4-1\": \"Function that runs.\\n**optional**\",\n    \"4-2\": \"The function to be called if the user closes the modal.\",\n    \"5-0\": \"title\\n**string**\",\n    \"5-1\": \"Any string.\\n**optional**\",\n    \"5-2\": \"String to be displayed in header of modal.\",\n    \"6-0\": \"actions\\n**array**\",\n    \"6-1\": \"Array of action items (as described below).\\n**optional**\",\n    \"6-2\": \"Buttons to be displayed in header of modal.\",\n    \"7-0\": \"args\\n**object**\",\n    \"7-1\": \"Object of key / values to be passed as query parameters to iframe\\n**optional**\",\n    \"7-2\": \"Can be accessed from the iframe using `t.arg(key)`\"\n  },\n  \"cols\": 3,\n  \"rows\": 8\n}\n[/block]\nThe `actions` parameter above accepts an array of no more than three action objects with the which have the following values:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"icon\\n**string**\",\n    \"0-1\": \"Valid URL of image.\",\n    \"h-0\": \"Key\",\n    \"h-1\": \"Valid Value\",\n    \"h-2\": \"Description\",\n    \"1-0\": \"callback\\n**function**\",\n    \"2-0\": \"alt\\n**string**\",\n    \"2-1\": \"Any string\",\n    \"3-0\": \"position\\n**string**\",\n    \"0-2\": \"Icon to be displayed.\",\n    \"1-1\": \"Callable function.\",\n    \"1-2\": \"The function to be called when a user clicks on the icon.\",\n    \"2-2\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"3-1\": \"`left` or `right`\",\n    \"3-2\": \"Determines whether the icon should be displayed on the left or right side of the modal header.\",\n    \"4-0\": \"url\\n**string**\",\n    \"4-1\": \"An `https://` url\",\n    \"4-2\": \"An optional URL to open in a new tab when the user clicks the action icon.\"\n  },\n  \"cols\": 3,\n  \"rows\": 5\n}\n[/block]\nHere is an example call to `t.modal`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.modal({\\n  // the url to load for the iframe\\n  url: './modal.html',\\n  // optional arguments to be passed to the iframe as query parameters\\n  // access later with t.arg('text')\\n  args: { text: 'Hello' },\\n  // optional color for header chrome\\n  accentColor: '#F2D600',\\n  // initial height for iframe\\n  height: 500, // not used if fullscreen is true\\n  // whether the modal should stretch to take up the whole screen\\n  fullscreen: true,\\n  // optional function to be called if user closes modal (via `X` or escape, etc)\\n  callback: () => console.log('Goodbye.'),\\n  // optional title for header chrome\\n  title: 'appear.in meeting',\\n  // optional action buttons for header chrome\\n  // max 3, up to 1 on right side\\n  actions: [{\\n    icon: './images/icon.svg',\\n    url: 'https://google.com',\\n    alt: 'Leftmost',\\n    position: 'left',\\n  }, {\\n    icon: './images/icon.svg',\\n    callback: (tr) => tr.popup({\\n      title: tr.localizeKey('appear_in_settings'),\\n      url: 'settings.html',\\n      height: 164,\\n    }),\\n    alt: 'Second from left',\\n    position: 'left',\\n  }, {\\n    icon: './images/icon.svg',\\n    callback: () => console.log(':tada:'),\\n    alt: 'Right side',\\n    position: 'right',\\n  }],\\n})\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-modal","type":"fn","title":"t.modal(opts)","__v":0,"updatedAt":"2019-06-10T14:28:52.735Z"},{"_id":"599749efe1eec5002d1e3001","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-18T20:11:27.829Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"If you have a modal open, you can call `t.closeModal()` to close it.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closeModal();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closemodal","type":"fn","title":"t.closeModal()","__v":0,"updatedAt":"2019-06-10T14:28:52.736Z"},{"_id":"5adf9a44452bd900036d0e80","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-04-24T20:57:40.929Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"If you have a modal open, you can update parts of it using `t.updateModal({options})`.\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Name\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"About\",\n    \"0-0\": \"**accentColor**\\nstring\",\n    \"2-0\": \"**fullscreen**\\nboolean\",\n    \"1-0\": \"**actions**\\narray of objects\",\n    \"3-0\": \"**title**\\nstring\",\n    \"0-1\": \"A valid hex color (eg, `9900CC`) to update the modal header's background color to.\",\n    \"0-2\": \"The color to update the modal's header with.\",\n    \"1-1\": \"An array of [action objects](https://developers.trello.com/v1.0/reference#t-modal).\",\n    \"1-2\": \"The\",\n    \"2-1\": \"A boolean used to determine whether the modal should be fullscreen or not.\",\n    \"3-1\": \"The string to update the modal's header to.\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Example\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"let updateObject = {\\n  fullscreen: false,  \\n  accentColor: \\\"9900CC\\\",\\n  actions: [{\\n    icon: './images/icon.svg',\\n    url: 'https://google.com',\\n    alt: 'Leftmost',\\n    position: 'left',\\n  }],\\n  title: \\\"My New Title\\\",\\n}\\n\\nt.updateModal(updateObject);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tupdatemodal","type":"fn","title":"t.updateModal()","__v":0,"updatedAt":"2019-06-10T14:28:52.736Z"},{"_id":"594d8382634354002938da24","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:09:22.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"You'll almost always need a way to tell Trello that the size of the content in one of your iframes has changed, or maybe doesn't perfectly line up with the height you requested when instantiating the iframe.\n\nFor those moments, you can use `t.sizeTo(arg)`\n\n`t.sizeTo` takes a single argument which can by any of the following:\n[block:parameters]\n{\n  \"data\": {\n    \"h-2\": \"Example\",\n    \"h-0\": \"Type\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"`string`\",\n    \"0-1\": \"A DOM query selector that will select the node to measure and use the height of\",\n    \"0-2\": \"`t.sizeTo('#content')`\",\n    \"1-0\": \"`element`\",\n    \"1-1\": \"A DOM element that will be measured and we will use the height of\",\n    \"2-1\": \"A positive number that will be used directly for the height\",\n    \"2-0\": \"`number`\",\n    \"2-2\": \"`t.sizeTo(625)`\",\n    \"1-2\": \"`t.sizeTo(document.body)`\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\nTo get an understanding of how this is used lets look at an attachment-section example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-sections': function(t, options){\\n    // options.entries is a list of the attachments for this card\\n    // you can look through them and 'claim' any that you want to\\n    // include in your section.\\n\\n    // we will just claim urls for Yellowstone\\n    var claimed = options.entries.filter(function(attachment){\\n      return attachment.url.indexOf('http://www.nps.gov/yell/') === 0;\\n    });\\n\\n    if(claimed && claimed.length > 0){\\n      return [{\\n        claimed: claimed,\\n        icon: HYPERDEV_ICON,\\n        title: 'Example Attachment Section: Yellowstone',\\n        content: {\\n          type: 'iframe',\\n          url: t.signUrl('./section.html'),\\n          height: 230\\n        }\\n      }];\\n    } else {\\n      return [];\\n    }\\n  }\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nLet's look at `./section.html`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <p>Tips for using attachment-sections</p>\\n      <ol>\\n        <li>Make sure your section feels at home on the card. It should fit in with the rest of the card and not stick out.</li>\\n        <li>You can specify a height when you claim the section, and also use t.sizeTo() to make sure your section is the perfect height.</li>\\n        <li>Try to keep the height of your sections to a minimum.</li>\\n        <li>It should be obvious to the user what attachments went into your section. They shouldn't be left wondering were one of their attachments disappeared to.</li>\\n      </ol>\\n      <p class=\\\"u-quiet\\\">Claimed attachment urls: <span id=\\\"urls\\\"></span></p>\\n    </div>\\n    <script src=\\\"./js/section.js\\\"></script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nLastly, let's look at `./js/section.js`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.render(function(){\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function(attachment){\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function(yellowstoneAttachments){\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function(){\\n    return t.sizeTo('#content'); // üëà\\n  });\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAs you can see, once we have rendered out our section, the last thing we do is call `t.sizeTo('#content')` to make sure that our section iframe isn't showing as an awkward height and is \"just right\".","excerpt":"","slug":"t-sizeto","type":"fn","title":"t.sizeTo(arg)","__v":0,"updatedAt":"2019-06-10T14:28:52.738Z"},{"_id":"594d83bb387538002da1767a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:10:19.651Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Let's you tell Trello to open a specific card as long as that card is both on the current board, and not archived. To show an archived card on the current board, use [t.navigate](#t-navigate)\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can use either the shortLink for the card\\n// or the full id\\nt.showCard('nqPiDKmw');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-showcard","type":"fn","title":"t.showCard(idCard)","__v":0,"updatedAt":"2019-06-10T14:28:52.738Z"},{"_id":"5b50c92671e34d0003b8ba0c","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-07-19T17:23:50.713Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"Used to close a card if there is one currently open.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// Open up a card modal\\nt.showCard('nqPiDKmw');\\n\\n// close the open card modal\\nt.hideCard();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"thidecard","type":"fn","title":"t.hideCard()","__v":0,"updatedAt":"2019-06-10T14:28:52.739Z"}]},{"_id":"594d824eaae15f0015da7456","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":["59b6c9440e00c90010b62c55","5c4d989aa0070e0014bf08b4"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:04:14.599Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"The real workhorse of the UI controls available to your Power-Up, the popup lets you present options or controls to the user without disrupting their context. Popups can be stacked, meaning you can have users navigate through more than one if necessary and a back control comes built in. You can control the height of a popup, but the width is fixed by Trello.\n\nThere are three types of popups that you can use:\n[block:api-header]\n{\n  \"title\": \"Popup List\"\n}\n[/block]\nThe simplest kind of popup displays a list of options. Each option has text and a callback function to be run if the option is clicked. The screenshot below shows how the Card Snooze Power-Up makes use of the popup list to show a list of initial options for snoozing a card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/24505d8-popup-list.PNG\",\n        \"popup-list.PNG\",\n        1472,\n        1345,\n        \"#3e4040\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Snooze Card',\\n    items: [{\\n      text: 'Choose Time',\\n      callback: function (t, opts) { ... }\\n    }, {\\n      text: 'In 1 hour',\\n      callback: function (t, opts) { ... }\\n    }, {\\n      text: 'In 2 hours',\\n      callback: function (t, opts) { ... }\\n    }]\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'Snooze',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Popup Search\"\n}\n[/block]\nWhen the list of options grows to long, its probably time to switch to a search popup. These popups can either take a long static list of prepopulated options and will perform client side search for you, or can take a function to be called as the user types which performs the search and returns the resulting options. The screenshot below shows the GitHub Power-Up using this functionality to provide a means of searching for a pull request to attach to the card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c048936-popup-search.PNG\",\n        \"popup-search.PNG\",\n        1648,\n        1495,\n        \"#e9eaf0\"\n      ]\n    }\n  ]\n}\n[/block]\n### Options\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"title\",\n    \"0-1\": \"String\",\n    \"0-2\": \"Displayed at the top of the popup.\",\n    \"1-0\": \"items\",\n    \"1-1\": \"Array of Objects\\nor\\nFunction that returns a Promise\",\n    \"1-2\": \"Each object in the array should contain a `text` key and either a `callback` or `url` key or both.\\n`text` - String - Will be searched by Trello when the user enters a value into the text field.\\n`callback` - Function - Called by Trello it when the user clicks the item.\\n`url` - String - Trello will open the URL when the user selects the item.\\n`alwaysVisible` - Boolean (optional) - Determines whether the item should always be displayed, regardless of whether it matches the search, or not.\\n\\nFor dynamic searching, you can pass the `items` key a function that will be called when the user begins typing. It should resolve to an array containing objects with the keys defined above.\",\n    \"2-0\": \"search\",\n    \"2-1\": \"Object\",\n    \"2-2\": \"Should be an object that contains the following keys (all optional):\\n`count` - Integer - Determines the number of items to display when searching\\n`placeholder` - String - Text to display in search text input when it is empty.\\n`empty` - String - Text to display when a user is searching but not results found.\\n`searching` - String - The value to display when the search function is being executed.\\n`debounce` - Integer - When doing dynamic search, the number of milliseconds to wait after the user has stopped typing before calling the search function. Defaults to 300, also the minimum value.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\nAn example of client side search, where you have the full list of items ready before calling t.popup:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Pull Requests',\\n    items: [{\\n      text: '#135 attempt to fix trello/api-docs#134',\\n      callback: function (t, opts) { ... },\\n      url: 'https://github.com/trello/api-docs/pull/135'\\n    }, {\\n      text: '#133 Removing duplicate `status` property',\\n      callback: function (t, opts) { ... },\\n      url: 'https://github.com/trello/api-docs/pull/133'\\n    }, {\\n      text: '#131 Update New Action Default',\\n      callback: function (t, opts) { ... }\\n      url: 'https://github.com/trello/api-docs/pull/131'\\n    }, {\\n      alwaysVisible: true, // non-search option, always shown\\n      text: 'Choose a different repo...',\\n      callback: function (t, opts) { ... }\\n    }],\\n    search: {\\n      count: 10, // number of items to display at a time\\n      placeholder: 'Search pull requests',\\n      empty: 'No pull requests found'\\n    }\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'GitHub',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAn example of dynamic search:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar Promise = window.TrelloPowerUp.Promise;\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Pull Requests',\\n    items: function (t, options) {\\n      // use options.search which is the search text entered so far\\n      // return a Promise that resolves to an array of items\\n      // similar to the items you provided in the client side version above\\n      return new Promise(function (resolve) {\\n        // you'd probably be making a network request at this point\\n        resolve([{\\n          text: 'Result 1',\\n          callback: function (t, opts) { ... }\\n        }, {\\n          text: 'Result 2',\\n          callback: function (t, opts) { ... }\\n        }]);\\n      });\\n    },\\n    search: {\\n      // optional # of ms to debounce search to\\n      // defaults to 300, override must be larger than 300\\n      debounce: 300,\\n      placeholder: 'Search pull requests',\\n      empty: 'No pull requests found',\\n      searching: 'Searching GitHub...'\\n    }\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'GitHub',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Iframe Popup\"\n}\n[/block]\nLastly, if neither of the prior built in popup options works for you, you can instead have the popup load an iframe, giving you full control over the content and functionality. The screenshot below again shows the Card Snooze Power-Up and how it uses an iframe Popup to let the user pick a specific date and time to snooze the card until.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/5ad6af8-popup-iframe.PNG\",\n        \"popup-iframe.PNG\",\n        1475,\n        1346,\n        \"#414140\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\\n\\nvar btnCallback = function (t, opts) {\\n  return t.popup({\\n    title: 'Change Snooze Time',\\n    url: './snooze-time.html',\\n    args: { myArgs: 'You can access these with t.arg()' },\\n    height: 278 // initial height, can be changed later\\n  });\\n};\\n\\nwindow.TrelloPowerUp.initialize({\\n  'card-buttons': function (t, opts) {\\n    return [{\\n      icon: GRAY_ICON,\\n      text: 'Snooze',\\n      callback: btnCallback\\n    }];\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-popup","type":"fn","title":"t.popup(opts)","__v":2,"updatedAt":"2019-06-10T14:28:52.732Z"},{"_id":"594d825ab8a390002999609b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:04:26.669Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Close an open popup.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closePopup();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closepopup","type":"fn","title":"t.closePopup()","__v":0,"updatedAt":"2019-06-10T14:28:52.733Z"},{"_id":"594d82badf89370015573467","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:06:02.501Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Everytime you call `t.popup()` from within a popup, they get added to a stack. The user can manually navigate back to prior popups using a Trello provided back arrow.\n\nYou can also navigate back to the prior popup in the stack by calling `t.back()`;\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.back();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tback","type":"fn","title":"t.back()","__v":0,"updatedAt":"2019-06-10T14:28:52.733Z"},{"_id":"5bbb8b18dc7f900003fdb473","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T16:51:36.651Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Infrequently, it may be necessary to alert the user that something is underway (so they shouldn't close the tab), or that something has gone wrong. In these rare cases, you may use `t.alert` to notify a user of something. Please don't overuse this, and tend towards `t.popup` where more appropriate.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Please don't overuse this\",\n  \"body\": \"Alerts are purposefully noisy. Showing them more than necessary can get very annoying for your users. Tend towards `t.popup` where more appropriate.\"\n}\n[/block]\n\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/6562a74-Screenshot_2018-10-17_14.27.01.png\",\n        \"Screenshot 2018-10-17 14.27.01.png\",\n        940,\n        554,\n        \"#8e6d71\"\n      ],\n      \"caption\": \"An example of the default `info` alert.\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// you can also use the t you get in a capability function\\nvar t = window.TrelloPowerUp.iframe();\\n\\n// simplest alert requires just a message\\n// displays for 5 seconds using the 'info' display\\nt.alert({\\n  message: 'Powering-Up, give us a second...'\\n});\\n\\n// more complex alert\\nt.alert({\\n  message: 'Powered-Up Successfully üéâ',\\n  duration: 6,\\n  display: 'success'\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAlert options shape:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"message\",\n    \"0-1\": \"required\\nmax 140 chars\",\n    \"1-0\": \"duration\",\n    \"1-1\": \"optional\\ndefault 5s\\nmin - 5, max - 30\",\n    \"2-0\": \"display\",\n    \"2-1\": \"optional\\ndefault 'info'\\n['info', 'warning', 'error', 'success']\",\n    \"0-2\": \"The message you would like to display to the user. Keep it short & sweet.\",\n    \"1-2\": \"How long you want the alert displayed for. Try to be brief\",\n    \"2-2\": \"How the message should be displayed. Alters the background color of the alert.\",\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Required?\",\n    \"h-2\": \"Details\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"One Alert at a time\",\n  \"body\": \"While alerts from multiple Power-Ups & Trello itself will stack vertically, each Power-Up is limited to showing at most one alert at a time. If you trigger a new alert while one is already showing the previous one will be removed in favor of the new one.\"\n}\n[/block]","excerpt":"","slug":"t-alert","type":"fn","title":"t.alert(opts)","__v":0,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"5bbbada5219c3e000376c2dd","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T19:19:01.547Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When showing alert messages to the user, you might be communicating a long running operation which you don't know beforehand how long it will take. In these cases you can use an alert with a long duration, and when the operation completes, you can hide the alert manually by calling `t.hideAlert()`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// you can also use the t you get in a capability function\\nvar t = window.TrelloPowerUp.iframe();\\n\\n// show an alert for a bit, we don't know how long it will\\n// take so we will hide it manually when its done\\nt.alert({\\n  message: 'Working on it, hang tight...',\\n  duration: 30, // don't worry we will close it sooner\\n  display: 'info'\\n});\\n\\n// some time later once the operation is complete\\nwindow.setTimeout(t.hideAlert, 8000);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"No alerts showing\",\n  \"body\": \"If you call `t.hideAlert()` and you are currently showing no alerts, nothing will happen, and no error will be thrown. It is essentially a no-op.\"\n}\n[/block]","excerpt":"","slug":"t-hidealert","type":"fn","title":"t.hideAlert()","__v":0,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"594d82fd845458001b4c6e86","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":["59669949557762001a3bac34"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:07:09.493Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"`t.boardBar` allows you to load an iframe across the bottom of the board. You are allowed any height you want, up to 60% of the height of the window (this includes the height of the header of the board bar). The board bar comes with a title bar whose color you are able to set. Additionally, you can specify a set of icons to be displayed at the top of the bar along with callbacks for each button which will be called at the point in time the user clicks on a button.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c5fc776-Screen_Shot_2017-08-23_at_1.57.22_PM.png\",\n        \"Screen Shot 2017-08-23 at 1.57.22 PM.png\",\n        3116,\n        522,\n        \"#0f3b52\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"opts\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Argument\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"url\\n**string**\",\n    \"1-0\": \"args\\n**object**\",\n    \"2-0\": \"height\\n**integer**\",\n    \"0-1\": \"The url of the page to be loaded into the iframe.\",\n    \"1-1\": \"Optional arguments to be passed to the iframe as query parameters.\",\n    \"2-1\": \"Height of the board bar in pixels.\",\n    \"3-0\": \"accentColor\\n**string**\",\n    \"3-1\": \"Hex color value or a [Trello Brand Color](ref:trello-brand-colors). Used as the color of the header.\",\n    \"4-0\": \"callback\\n**function**\",\n    \"4-1\": \"Optional function to be called when user closes board bar.\",\n    \"5-0\": \"title\\n**string**\",\n    \"5-1\": \"Optional string to be displayed as the title in the header of the board bar. Board bar title will default to the name of the Power-Up.\",\n    \"6-0\": \"actions\\n**array**\",\n    \"6-1\": \"Optional array of quick action buttons for the header. Up to three allowed, with up to one on the right side.\",\n    \"7-0\": \"resizable\\n**boolean**\",\n    \"7-1\": \"Determines whether the board bar will be resizable by the user. The default value will be `false`. The initial height will still be determined by the value passed to `height`, calls to `t.sizeTo()` will continue to be respected, and the max height of the board bar will continue to be 60%.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\nThe `actions` parameter above accepts an array of no more than three action objects with the which have the following values:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"icon\\n**string**\",\n    \"0-1\": \"Valid URL (http or https) of image. Required.\",\n    \"0-2\": \"Icon to be displayed\",\n    \"1-0\": \"alt\\n**string**\",\n    \"1-2\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"2-0\": \"callback\\n**function**\",\n    \"2-2\": \"The function to be called a user clicks on the icon\",\n    \"1-1\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"2-1\": \"The function to be called when a user clicks on the icon.\",\n    \"3-0\": \"position\\n**string**\",\n    \"3-1\": \"Can be `left` or `right` and determines which side of the header the icon is displayed.\",\n    \"4-0\": \"url\\n**string**\",\n    \"4-1\": \"Optional `https://` URL that will open in a new tab when the action icon is clicked.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\nBelow is an example of opening a board bar from a board button. When the user clicks the board button labeled \"Popup\", a board bar with the contents of `board-bar.html` will be displayed.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'show-settings': function (t, opts) {\\n    return t.boardBar({\\n      // required URL to load in the iframe\\n      url: './board-bar.html',\\n      // optional arguments to be passed to the iframe as query parameters\\n      // access later with t.arg('text')\\n      args: { text: 'Hello' },\\n      // optional color for header chrome\\n      accentColor: '#F2D600',\\n      // initial height for iframe\\n      height: 200, // initial height for iframe\\n      // optional function to be called if user closes modal\\n      callback: () => console.log('Goodbye.'),\\n      // optional boolean for whether the user should\\n      // be allowed to resize the bar vertically\\n      resizable: true,\\n      // optional title for header chrome\\n      title: 'Board Meeting',\\n      // optional action buttons for header chrome\\n      // max 3, up to 1 on right side\\n      actions: [{\\n        icon: './images/icon.svg',\\n        url: 'https://google.com',\\n        alt: 'Leftmost',\\n        position: 'left',\\n      }, {\\n        icon: './images/icon.svg',\\n        callback: (tr) => tr.popup({\\n          title: tr.localizeKey('appear_in_settings'),\\n          url: 'settings.html',\\n          height: 164,\\n        }),\\n        alt: 'Second from left',\\n        position: 'left',\\n      }, {\\n        icon: './images/icon.svg',\\n        callback: () => console.log(':tada:'),\\n        alt: 'Right side',\\n        position: 'right',\\n      }],\\n    });\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/c8cb69f-Screen_Shot_2017-08-18_at_5.21.10_PM.png\",\n        \"Screen Shot 2017-08-18 at 5.21.10 PM.png\",\n        988,\n        755,\n        \"#6d7984\"\n      ]\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-boardbar","type":"fn","title":"t.boardBar(opts)","__v":1,"updatedAt":"2019-06-10T14:28:52.734Z"},{"_id":"594d831a86739c001769249d","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:07:38.913Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Board bars come by default with a close control that the use can use to close the board bar. However, if you need to close the board bar programmatically you can do so by calling `t.closeBoardBar()`.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closeBoardBar();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closeboardbar","type":"fn","title":"t.closeBoardBar()","__v":0,"updatedAt":"2019-06-10T14:28:52.735Z"},{"_id":"59934b819bb958000fe9c70c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-15T19:29:05.535Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"In certain cases, your Power-Up might need to show UI that requires taking up a large portion of the screen. When you need something more than [t.popup(opts)](ref:t-popup) or [t.boardBar(opts)](ref:t-boardbar) can provide, you can use `t.modal`. This lets you display an iframe directly on top of Trello. The modal comes in two widths, `fullscreen: true` as seen below:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4e99683-fullscreen-true.png\",\n        \"fullscreen-true.png\",\n        1535,\n        939,\n        \"#6c6d6c\"\n      ]\n    }\n  ]\n}\n[/block]\nAnd `fullscreen: false` looks like:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/83557bd-fullscreen-false.png\",\n        \"fullscreen-false.png\",\n        1535,\n        930,\n        \"#878988\"\n      ]\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Key\",\n    \"h-1\": \"Valid Values\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"url\\n**string**\",\n    \"0-1\": \"Any valid URL.\",\n    \"0-2\": \"The URL of the page to be shown inside of the iframe.\",\n    \"1-0\": \"accentColor\\n**string**\",\n    \"1-1\": \"Hex color value or a [Trello Brand Color](ref:trello-brand-colors).\",\n    \"1-2\": \"Color to be used on top of modal design.\",\n    \"2-0\": \"height\\n**integer**\",\n    \"2-1\": \"Positive integer.\",\n    \"2-2\": \"Height of the modal.\",\n    \"3-0\": \"fullscreen\\n**boolean**\",\n    \"3-1\": \"True or False\",\n    \"3-2\": \"Determines whether the modal should be full width or not.\",\n    \"4-0\": \"callback\\n**function**\",\n    \"4-1\": \"Function that runs.\\n**optional**\",\n    \"4-2\": \"The function to be called if the user closes the modal.\",\n    \"5-0\": \"title\\n**string**\",\n    \"5-1\": \"Any string.\\n**optional**\",\n    \"5-2\": \"String to be displayed in header of modal.\",\n    \"6-0\": \"actions\\n**array**\",\n    \"6-1\": \"Array of action items (as described below).\\n**optional**\",\n    \"6-2\": \"Buttons to be displayed in header of modal.\",\n    \"7-0\": \"args\\n**object**\",\n    \"7-1\": \"Object of key / values to be passed as query parameters to iframe\\n**optional**\",\n    \"7-2\": \"Can be accessed from the iframe using `t.arg(key)`\"\n  },\n  \"cols\": 3,\n  \"rows\": 8\n}\n[/block]\nThe `actions` parameter above accepts an array of no more than three action objects with the which have the following values:\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"icon\\n**string**\",\n    \"0-1\": \"Valid URL of image.\",\n    \"h-0\": \"Key\",\n    \"h-1\": \"Valid Value\",\n    \"h-2\": \"Description\",\n    \"1-0\": \"callback\\n**function**\",\n    \"2-0\": \"alt\\n**string**\",\n    \"2-1\": \"Any string\",\n    \"3-0\": \"position\\n**string**\",\n    \"0-2\": \"Icon to be displayed.\",\n    \"1-1\": \"Callable function.\",\n    \"1-2\": \"The function to be called when a user clicks on the icon.\",\n    \"2-2\": \"The string to be used as the `alt` value for the `<img>` tag.\",\n    \"3-1\": \"`left` or `right`\",\n    \"3-2\": \"Determines whether the icon should be displayed on the left or right side of the modal header.\",\n    \"4-0\": \"url\\n**string**\",\n    \"4-1\": \"An `https://` url\",\n    \"4-2\": \"An optional URL to open in a new tab when the user clicks the action icon.\"\n  },\n  \"cols\": 3,\n  \"rows\": 5\n}\n[/block]\nHere is an example call to `t.modal`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.modal({\\n  // the url to load for the iframe\\n  url: './modal.html',\\n  // optional arguments to be passed to the iframe as query parameters\\n  // access later with t.arg('text')\\n  args: { text: 'Hello' },\\n  // optional color for header chrome\\n  accentColor: '#F2D600',\\n  // initial height for iframe\\n  height: 500, // not used if fullscreen is true\\n  // whether the modal should stretch to take up the whole screen\\n  fullscreen: true,\\n  // optional function to be called if user closes modal (via `X` or escape, etc)\\n  callback: () => console.log('Goodbye.'),\\n  // optional title for header chrome\\n  title: 'appear.in meeting',\\n  // optional action buttons for header chrome\\n  // max 3, up to 1 on right side\\n  actions: [{\\n    icon: './images/icon.svg',\\n    url: 'https://google.com',\\n    alt: 'Leftmost',\\n    position: 'left',\\n  }, {\\n    icon: './images/icon.svg',\\n    callback: (tr) => tr.popup({\\n      title: tr.localizeKey('appear_in_settings'),\\n      url: 'settings.html',\\n      height: 164,\\n    }),\\n    alt: 'Second from left',\\n    position: 'left',\\n  }, {\\n    icon: './images/icon.svg',\\n    callback: () => console.log(':tada:'),\\n    alt: 'Right side',\\n    position: 'right',\\n  }],\\n})\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-modal","type":"fn","title":"t.modal(opts)","__v":0,"updatedAt":"2019-06-10T14:28:52.735Z"},{"_id":"599749efe1eec5002d1e3001","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-18T20:11:27.829Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"If you have a modal open, you can call `t.closeModal()` to close it.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"t.closeModal();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-closemodal","type":"fn","title":"t.closeModal()","__v":0,"updatedAt":"2019-06-10T14:28:52.736Z"},{"_id":"5adf9a44452bd900036d0e80","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-04-24T20:57:40.929Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"If you have a modal open, you can update parts of it using `t.updateModal({options})`.\n[block:api-header]\n{\n  \"title\": \"Options\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Name\",\n    \"h-1\": \"Value\",\n    \"h-2\": \"About\",\n    \"0-0\": \"**accentColor**\\nstring\",\n    \"2-0\": \"**fullscreen**\\nboolean\",\n    \"1-0\": \"**actions**\\narray of objects\",\n    \"3-0\": \"**title**\\nstring\",\n    \"0-1\": \"A valid hex color (eg, `9900CC`) to update the modal header's background color to.\",\n    \"0-2\": \"The color to update the modal's header with.\",\n    \"1-1\": \"An array of [action objects](https://developers.trello.com/v1.0/reference#t-modal).\",\n    \"1-2\": \"The\",\n    \"2-1\": \"A boolean used to determine whether the modal should be fullscreen or not.\",\n    \"3-1\": \"The string to update the modal's header to.\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Example\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"let updateObject = {\\n  fullscreen: false,  \\n  accentColor: \\\"9900CC\\\",\\n  actions: [{\\n    icon: './images/icon.svg',\\n    url: 'https://google.com',\\n    alt: 'Leftmost',\\n    position: 'left',\\n  }],\\n  title: \\\"My New Title\\\",\\n}\\n\\nt.updateModal(updateObject);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"tupdatemodal","type":"fn","title":"t.updateModal()","__v":0,"updatedAt":"2019-06-10T14:28:52.736Z"},{"_id":"594d8382634354002938da24","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:09:22.143Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":12,"body":"You'll almost always need a way to tell Trello that the size of the content in one of your iframes has changed, or maybe doesn't perfectly line up with the height you requested when instantiating the iframe.\n\nFor those moments, you can use `t.sizeTo(arg)`\n\n`t.sizeTo` takes a single argument which can by any of the following:\n[block:parameters]\n{\n  \"data\": {\n    \"h-2\": \"Example\",\n    \"h-0\": \"Type\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"`string`\",\n    \"0-1\": \"A DOM query selector that will select the node to measure and use the height of\",\n    \"0-2\": \"`t.sizeTo('#content')`\",\n    \"1-0\": \"`element`\",\n    \"1-1\": \"A DOM element that will be measured and we will use the height of\",\n    \"2-1\": \"A positive number that will be used directly for the height\",\n    \"2-0\": \"`number`\",\n    \"2-2\": \"`t.sizeTo(625)`\",\n    \"1-2\": \"`t.sizeTo(document.body)`\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\nTo get an understanding of how this is used lets look at an attachment-section example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"window.TrelloPowerUp.initialize({\\n  'attachment-sections': function(t, options){\\n    // options.entries is a list of the attachments for this card\\n    // you can look through them and 'claim' any that you want to\\n    // include in your section.\\n\\n    // we will just claim urls for Yellowstone\\n    var claimed = options.entries.filter(function(attachment){\\n      return attachment.url.indexOf('http://www.nps.gov/yell/') === 0;\\n    });\\n\\n    if(claimed && claimed.length > 0){\\n      return [{\\n        claimed: claimed,\\n        icon: HYPERDEV_ICON,\\n        title: 'Example Attachment Section: Yellowstone',\\n        content: {\\n          type: 'iframe',\\n          url: t.signUrl('./section.html'),\\n          height: 230\\n        }\\n      }];\\n    } else {\\n      return [];\\n    }\\n  }\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nLet's look at `./section.html`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://p.trellocdn.com/power-up.min.css\\\">\\n    <script src=\\\"https://p.trellocdn.com/power-up.min.js\\\"></script>\\n  </head>\\n  <body>\\n    <div id=\\\"content\\\">\\n      <p>Tips for using attachment-sections</p>\\n      <ol>\\n        <li>Make sure your section feels at home on the card. It should fit in with the rest of the card and not stick out.</li>\\n        <li>You can specify a height when you claim the section, and also use t.sizeTo() to make sure your section is the perfect height.</li>\\n        <li>Try to keep the height of your sections to a minimum.</li>\\n        <li>It should be obvious to the user what attachments went into your section. They shouldn't be left wondering were one of their attachments disappeared to.</li>\\n      </ol>\\n      <p class=\\\"u-quiet\\\">Claimed attachment urls: <span id=\\\"urls\\\"></span></p>\\n    </div>\\n    <script src=\\\"./js/section.js\\\"></script>\\n  </body>\\n</html>\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nLastly, let's look at `./js/section.js`:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nt.render(function(){\\n  // make sure your rendering logic lives here, since we will\\n  // recall this method as the user adds and removes attachments\\n  // from your section\\n  t.card('attachments')\\n  .get('attachments')\\n  .filter(function(attachment){\\n    return attachment.url.indexOf('http://www.nps.gov/yell/') == 0;\\n  })\\n  .then(function(yellowstoneAttachments){\\n    var urls = yellowstoneAttachments.map(function(a){ return a.url; });\\n    document.getElementById('urls').textContent = urls.join(', ');\\n  })\\n  .then(function(){\\n    return t.sizeTo('#content'); // üëà\\n  });\\n});\\n\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nAs you can see, once we have rendered out our section, the last thing we do is call `t.sizeTo('#content')` to make sure that our section iframe isn't showing as an awkward height and is \"just right\".","excerpt":"","slug":"t-sizeto","type":"fn","title":"t.sizeTo(arg)","__v":0,"updatedAt":"2019-06-10T14:28:52.738Z"},{"_id":"594d83bb387538002da1767a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb9b26219c3e000376c0b6","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:10:19.651Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":13,"body":"Let's you tell Trello to open a specific card as long as that card is both on the current board, and not archived. To show an archived card on the current board, use [t.navigate](#t-navigate)\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// you can use either the shortLink for the card\\n// or the full id\\nt.showCard('nqPiDKmw');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"t-showcard","type":"fn","title":"t.showCard(idCard)","__v":0,"updatedAt":"2019-06-10T14:28:52.738Z"},{"_id":"5b50c92671e34d0003b8ba0c","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","parentDoc":"5bbb9b26219c3e000376c0b6","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-07-19T17:23:50.713Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":14,"body":"Used to close a card if there is one currently open.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\n// Open up a card modal\\nt.showCard('nqPiDKmw');\\n\\n// close the open card modal\\nt.hideCard();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"thidecard","type":"fn","title":"t.hideCard()","__v":0,"updatedAt":"2019-06-10T14:28:52.739Z"},{"_id":"5bbb98e9dc7f900003fdb509","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T17:50:33.142Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"When you are using `window.TrelloPowerUp` you also have access to some helpful utilities and helpers if you need them.","excerpt":"","slug":"utils-and-helpers","type":"basic","title":"Utils and Helpers","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.739Z","children":[{"_id":"5bbbaf9db5862c000362682f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T19:27:25.297Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Escapes a string for insertion into HTML, replacing &, <, >, \", and ' characters.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nconsole.log(t.safe('<script>alert(\\\"danger\\\")</script>'));\\n\\n// prints out:\\n// &lt;script&gt;alert(&quot;danger&quot;)&lt;/script&gt;\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"Escapes a string for insertion into HTML","slug":"tsafes","type":"fn","title":"t.safe(s)","__v":0,"updatedAt":"2019-06-10T14:28:52.739Z"},{"_id":"598b2d6cc31a30000f738204","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-09T15:42:36.625Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Trello Power-Ups rely heavily on Promises to enable communication back and forth between your Power-Up and Trello.\n\nIf you are using Promises in your own code, you should make sure that you use the provided Bluebird Promise as a way of making sure that your Power-Up works in browsers such as IE11 that don't support Promises natively.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var Promise = window.TrelloPowerUp.Promise;\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"bluebird-promises","type":"basic","title":"Bluebird Promises","__v":0,"updatedAt":"2019-06-10T14:28:52.740Z"},{"_id":"598b2e7842d567000fae72ab","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-09T15:47:04.526Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"We've made it easy to get the hex string for a Trello brand color by name. You can find the colors on our [brand guide](https://trello.com/about/branding#colors).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var colors = window.TrelloPowerUp.util.colors;\\n\\n// returns the hex string for a named Trello color\\n// first arg is the name of the color\\n// second is optional weight, defaults to 500\\ncolors.getHexString('blue', 500);\\n// returns \\\"#0079BF\\\"\\n\\ncolors.getHexString('gray');\\n// returns \\\"#C4C9CC\\\"\\n\\n// Given a specially formatted color name string\\n// returns the hex string\\ncolors.namedColorStringToHex('business-blue#600');\\n// returns \\\"#3E4D80\\\"\\n\\ncolors.namedColorStringToHex('yellow');\\n// returns \\\"#F2D600\\\"\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"trello-brand-colors","type":"basic","title":"Trello Brand Colors","__v":0,"updatedAt":"2019-06-10T14:28:52.740Z"},{"_id":"59b2defe9dd6520010074f95","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-09-08T18:18:38.564Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Generally Trello handles this for you transparently. If for some reason you need to take a relative URL like `./folder.html` and turn that into an absolute URL, you can use:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var absolute = window.TrelloPowerUp.util.relativeUrl('./folder.html');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"relative-url-to-absolute","type":"fn","title":"Relative Url to Absolute","__v":0,"updatedAt":"2019-06-10T14:28:52.741Z"}],"childrenPages":[{"_id":"5bbbaf9db5862c000362682f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T19:27:25.297Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Escapes a string for insertion into HTML, replacing &, <, >, \", and ' characters.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nconsole.log(t.safe('<script>alert(\\\"danger\\\")</script>'));\\n\\n// prints out:\\n// &lt;script&gt;alert(&quot;danger&quot;)&lt;/script&gt;\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"Escapes a string for insertion into HTML","slug":"tsafes","type":"fn","title":"t.safe(s)","__v":0,"updatedAt":"2019-06-10T14:28:52.739Z"},{"_id":"598b2d6cc31a30000f738204","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-09T15:42:36.625Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Trello Power-Ups rely heavily on Promises to enable communication back and forth between your Power-Up and Trello.\n\nIf you are using Promises in your own code, you should make sure that you use the provided Bluebird Promise as a way of making sure that your Power-Up works in browsers such as IE11 that don't support Promises natively.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var Promise = window.TrelloPowerUp.Promise;\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"bluebird-promises","type":"basic","title":"Bluebird Promises","__v":0,"updatedAt":"2019-06-10T14:28:52.740Z"},{"_id":"598b2e7842d567000fae72ab","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-09T15:47:04.526Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"We've made it easy to get the hex string for a Trello brand color by name. You can find the colors on our [brand guide](https://trello.com/about/branding#colors).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var colors = window.TrelloPowerUp.util.colors;\\n\\n// returns the hex string for a named Trello color\\n// first arg is the name of the color\\n// second is optional weight, defaults to 500\\ncolors.getHexString('blue', 500);\\n// returns \\\"#0079BF\\\"\\n\\ncolors.getHexString('gray');\\n// returns \\\"#C4C9CC\\\"\\n\\n// Given a specially formatted color name string\\n// returns the hex string\\ncolors.namedColorStringToHex('business-blue#600');\\n// returns \\\"#3E4D80\\\"\\n\\ncolors.namedColorStringToHex('yellow');\\n// returns \\\"#F2D600\\\"\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"trello-brand-colors","type":"basic","title":"Trello Brand Colors","__v":0,"updatedAt":"2019-06-10T14:28:52.740Z"},{"_id":"59b2defe9dd6520010074f95","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-09-08T18:18:38.564Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Generally Trello handles this for you transparently. If for some reason you need to take a relative URL like `./folder.html` and turn that into an absolute URL, you can use:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var absolute = window.TrelloPowerUp.util.relativeUrl('./folder.html');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"relative-url-to-absolute","type":"fn","title":"Relative Url to Absolute","__v":0,"updatedAt":"2019-06-10T14:28:52.741Z"}]},{"_id":"5bbbaf9db5862c000362682f","version":"592884a2bdc27e1b00e5796a","project":"592884a1bdc27e1b00e57967","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-10-08T19:27:25.297Z","link_external":false,"link_url":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Escapes a string for insertion into HTML, replacing &, <, >, \", and ' characters.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe();\\n\\nconsole.log(t.safe('<script>alert(\\\"danger\\\")</script>'));\\n\\n// prints out:\\n// &lt;script&gt;alert(&quot;danger&quot;)&lt;/script&gt;\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"Escapes a string for insertion into HTML","slug":"tsafes","type":"fn","title":"t.safe(s)","__v":0,"updatedAt":"2019-06-10T14:28:52.739Z"},{"_id":"598b2d6cc31a30000f738204","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-09T15:42:36.625Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Trello Power-Ups rely heavily on Promises to enable communication back and forth between your Power-Up and Trello.\n\nIf you are using Promises in your own code, you should make sure that you use the provided Bluebird Promise as a way of making sure that your Power-Up works in browsers such as IE11 that don't support Promises natively.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var Promise = window.TrelloPowerUp.Promise;\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"bluebird-promises","type":"basic","title":"Bluebird Promises","__v":0,"updatedAt":"2019-06-10T14:28:52.740Z"},{"_id":"598b2e7842d567000fae72ab","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-09T15:47:04.526Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"We've made it easy to get the hex string for a Trello brand color by name. You can find the colors on our [brand guide](https://trello.com/about/branding#colors).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var colors = window.TrelloPowerUp.util.colors;\\n\\n// returns the hex string for a named Trello color\\n// first arg is the name of the color\\n// second is optional weight, defaults to 500\\ncolors.getHexString('blue', 500);\\n// returns \\\"#0079BF\\\"\\n\\ncolors.getHexString('gray');\\n// returns \\\"#C4C9CC\\\"\\n\\n// Given a specially formatted color name string\\n// returns the hex string\\ncolors.namedColorStringToHex('business-blue#600');\\n// returns \\\"#3E4D80\\\"\\n\\ncolors.namedColorStringToHex('yellow');\\n// returns \\\"#F2D600\\\"\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"trello-brand-colors","type":"basic","title":"Trello Brand Colors","__v":0,"updatedAt":"2019-06-10T14:28:52.740Z"},{"_id":"59b2defe9dd6520010074f95","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"5bbb98e9dc7f900003fdb509","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-09-08T18:18:38.564Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Generally Trello handles this for you transparently. If for some reason you need to take a relative URL like `./folder.html` and turn that into an absolute URL, you can use:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var absolute = window.TrelloPowerUp.util.relativeUrl('./folder.html');\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"relative-url-to-absolute","type":"fn","title":"Relative Url to Absolute","__v":0,"updatedAt":"2019-06-10T14:28:52.741Z"},{"_id":"595d07fb175e75003de3ed2a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:38:35.875Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"","excerpt":"","slug":"topics","type":"basic","title":"Topics","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.741Z","children":[{"_id":"595d08035c6c83001bde9f51","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"595d07fb175e75003de3ed2a","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:38:43.144Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Power-Ups run inside of the Trello web client. They will be making requests to your server (for example, to retrieve the manifest.json file) from the trello.com domain. Your server will need to have CORS settings that allow Trello.com to successfully make that request. Your server should respond to requests with an Access-Control-Allow-Origin header of either: Access-Control-Allow-Origin: 'https://trello.com' or Access-Control-Allow-Origin: '*'.\n\nMost programming languages have a package that helps you configure CORS:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Programming Language/Framework\",\n    \"h-1\": \"CORS Package\",\n    \"0-0\": \"Python/Flask\",\n    \"0-1\": \"[https://flask-cors.readthedocs.io/en/latest/](https://flask-cors.readthedocs.io/en/latest/)\",\n    \"1-0\": \"Javascript/Express\",\n    \"1-1\": \"[https://github.com/expressjs/cors](https://github.com/expressjs/cors)\",\n    \"2-0\": \"ASP.net\",\n    \"2-1\": \"[https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api](https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api)\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"cors","type":"basic","title":"CORS Settings","__v":0,"updatedAt":"2019-06-10T14:28:52.742Z"},{"_id":"595d0861d4bc0f0033d1e66a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:40:17.778Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"You should only require authentication when it is required by the user. Here are some samples of ways that Power-Ups can trigger an authentication workflow:\n\n1. For our Dropbox Power-Up, ‚ÄúShow Details from Dropbox‚Ä¶‚Äù has been added to the attachment-thumbnail by detecting that the link to Dropbox has not been initialized for this member. Once the Power-Up has been initialized and authenticated, we show a true thumbnail.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/538c460-sample-authentication-attachment-thumbnail.png\",\n        \"sample-authentication-attachment-thumbnail.png\",\n        1008,\n        208,\n        \"#eaeaf0\"\n      ]\n    }\n  ]\n}\n[/block]\nFor our Github Power-Up, the attachment-sections iframe managed by the Power-Up includes a prompt to authenticate to see additional information.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4e14ad4-sample-authentication-attachment-section.png\",\n        \"sample-authentication-attachment-section.png\",\n        1104,\n        206,\n        \"#ebebf3\"\n      ]\n    }\n  ]\n}\n[/block]\nWe also trigger authentication after a user attempts to perform an action that requires it, such as when attaching a GitHub Issue to a card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/e1039dd-sample-authentication-popup.png\",\n        \"sample-authentication-popup.png\",\n        614,\n        424,\n        \"#5d7e59\"\n      ]\n    }\n  ]\n}\n[/block]\nWhen developing a Power-Up that requires authentication, try to offer as much functionality in a non-authenticated state as possible, and add non-intrusive links to authenticate the user to provide more functionality.\n\nTo achieve Authentication, you will often need to use the t.authenticate method. Here‚Äôs a code sample of how you might handle the OAuth workflow from within a Power-Up popover iframe.\n\nClient side we need to wire up what should happen when the authenticate button or link is clicked, which is handled by the following code.\n\n```\nvar Promise = TrelloPowerUp.Promise;\nvar t = TrelloPowerUp.iframe();\n\nvar oauthUrl = 'https://trello.com/1/authorize?expiration=never' +\n  '&name=[APPNAME]&scope=read&key=[APIKEY]&callback_method=fragment' +\n  '&return_url=[RETURNURL]';\n\nvar tokenLooksValid = function(token) {\n  return /^[0-9a-f]{64}$/.test(token);\n}\n\nvar authorizeOpts = {\n  height: 680,\n  width: 580,\n  validToken: tokenLooksValid\n};\n\nvar authBtn = document.getElementById('authorize');\nauthBtn.addEventListener('click', function() {\n  t.authorize(oauthUrl, authorizeOpts)\n  .then(function(token) {\n    return t.set('organization', 'private', 'token', token)\n    .catch(t.NotHandled, function() {\n      // fall back to storing at board level\n      return t.set('board', 'private', 'token', token);\n    });\n  })\n  .then(function() {\n    // now that the token is stored, we can close this popup\n    // you might alternatively choose to open a new popup\n    return t.closePopup();\n  });\n});\n```\n\nThe authorize handler opens a new window. Once the auth flow is complete in that window, you should land on a page you control (generally your return_url). That page needs to contain a small amount of javascript to send the resulting token back to the Power-Up.\n\nHere is an example of how that would be achieved for the Trello OAuth flow from above:\n\n```\nlet authorize;\n\ntry {\n  if (window.opener && typeof window.opener.authorize === 'function') {\n    authorize = window.opener.authorize;\n  }\n} catch (e) {\n  // Security settings are preventing this, fall back to local storage.\n}\n\nif (authorize) {\n  authorize(token);\n} else {\n  localStorage.setItem('token', token);\n}\n\nsetTimeout(function(){ window.close(); }, 1000);\n```","excerpt":"","slug":"authentication","type":"basic","title":"Authentication","__v":0,"updatedAt":"2019-06-10T14:28:52.742Z"},{"_id":"595d08c61375bd0049129cc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":["5c45490fc6a1a701d80b9963"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:41:58.639Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Trello is full of colors, and sometimes when rendering a Power-Ups icons, you want to ensure there is proper contrast between your icon and text and the background. Trello supports appropriately recoloring via two mechanisms.\n\nThe [`board-buttons`](ref:board-buttons) capability expects an object to be passed for the `icon` property during initialization so that variants for display on `light` and `dark` backgrounds can be provided.\n\nOther icons can be recolored based on a query parameter that we will provide. This parameter is designed to ensure that icons have great usability even when the background behind an image may change.\n\nFor example, a card badge icons are expected to be grey (#999) in their default state, but when a color is applied to the badge (such as ‚Äòred‚Äô), the icon is passed **?color=fff**. This behavior means that the icon should be recolored such that the primary color used is white, ensuring the image will look good and have good usability on a red background.","excerpt":"","slug":"recoloring","type":"basic","title":"Recoloring","__v":1,"updatedAt":"2019-06-10T14:28:52.743Z"},{"_id":"594d83ef2e5787001b713b97","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"595d07fb175e75003de3ed2a","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:11:11.526Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Trello Power-Ups were designed with Internationalization in mind. When creating a plugin or iframe, you can optionally pass in the options argument one of the following:\n\nlocalization object:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"localization: {\\n  defaultLocale: 'en',\\n  supportedLocales: ['en', 'fr'],\\n  resourceUrl: './strings/{locale}.json'\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nlocalizer object:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"localizer: {\\n  localize: function (key, data) {\\n    ... synchronously returns a localized string for the given key and data ...\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nloadLocalizer function:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"loadLocalizer: function (locale) {\\n  ... returns a Promise that resolves to a localizer object ...\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can pass those to TrelloPowerUp like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n\\n// or\\n\\nwindow.TrelloPowerUp.initialize({\\n  'capability': function (t, opts) { ... }\\n}, {\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\nAdditionally, you can set `window.localizer` to your own custom localizer and the `t.localize*` methods will use it.\n\nOnce a localizer has been initialized, you can call the following new handlers (which behind the scenes make use of the localizer). We make the current user locale available to you via `window.locale`. Additionally, you can grab it off the options object from any of the interfaces or callbacks as well.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Localization in iframes other than the connector\",\n  \"body\": \"When you are using\\n\\n```javascript\\nvar t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n```\\n\\nThe localizer is not guaranteed to be loaded and ready until the `t.render` function is called. So trying to use any localization methods prior to that could fail.\\n\\nAlternatively you could do something like:\\n\\n```javascript\\nvar i18n-settings = {\\n  defaultLocale: 'en',\\n  supportedLocales: ['en', 'fr'],\\n  resourceUrl: './strings/{locale}.json'\\n};\\n\\nvar t = window.TrelloPowerUp.iframe();\\n\\nwindow.locale = /[\\\\?&]locale=([\\\\w-]+)/.exec(location.search)[1];\\n\\nwindow.TrelloPowerUp.util.initLocalizer(window.locale, { localization: i18n-settings })\\n.then(() => {\\n  // t.localize methods are now available\\n  t.localizeNode(document.getElementById('content'));\\n});\\n```\"\n}\n[/block]\nWe cover localizing a simple Power-Up in our YouTube series:\n[block:html]\n{\n  \"html\": \"<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/qxm5atYNYBg\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\"\n}\n[/block]","excerpt":"","slug":"localization","type":"basic","title":"Localization","__v":0,"updatedAt":"2019-06-14T16:37:09.909Z"},{"_id":"595d08d191f29200158114b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:42:09.520Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When Trello makes a request to your Power-Up for a capability method or callback, it will wait a fixed amount of time for a reply before giving up. Your Power-Up should reply within one second - faster is better across all cases. Usually, Trello will stop waiting for a response after five seconds although requests to some capabilities may wait slightly longer.\n\nAdditionally, you should make sure that your manifest file and index connector can be loaded by Trello as quickly as possible. You should have these served within one second; Trello will stop waiting for a response after 10 seconds.","excerpt":"","slug":"timeouts","type":"basic","title":"Timeouts","__v":0,"updatedAt":"2019-06-10T14:28:52.743Z"},{"_id":"595d08e201467d00152627df","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:42:26.704Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"Many browsers [throttle the CPU](https://developers.google.com/web/updates/2017/03/background_tabs) usage of tabs open in the background. This causes Power-Up communication to be slowed drastically and causes them to be more prone to time outs. To mitiage potential problems, the Power-Up client library will only attempt to communicate with your Power-Up if the Trello board on which the Power-Up is enabled [is visible](https://www.w3.org/TR/page-visibility/).","excerpt":"","slug":"power-ups-in-browser-backgrounds","type":"basic","title":"Power-Ups In Browser Backgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.744Z"},{"_id":"595d091ed4bc0f0033d1e66c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"59dbbcc74c45e30010603ae2","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:43:26.036Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Webhooks and Offline Access are not currently part of the Power-Up architecture. Power-Ups are only active while a member is in the Trello web client experience. It is possible for your Power-Up and service to access a user‚Äôs information and create Webhooks using the standard API.\n\nThe way to accomplish this is for you to Authorize your application to the Trello API as a part of your Authorization flow, or in response to a user action. You would then need your service to use the standard Trello API to make offline requests.\n\nFor example, if you were building a Power-Up where you wanted to react to any change made to a card, the member‚Äôs experience could be as follows.\n\n  * Trello Member enables **Magic Service** Power-Up\n  * Trello Member clicks on the **card-button** to attach a **Magic Service** to a card.\n  * You prompt the member via an **overlay** iframe to authorize your service to access the member‚Äôs Trello account\n  * Your service stores the user‚Äôs token as part of a one-time authorization step\n  * Your service stores the Card‚Äôs ID as part of your **card-button** callback\n  * Your service creates a webhook based on Card ID\n  * Your Power-Up renders a new **card-button** for any cards that are already attached to your service\n  * When the user clicks the ‚Äúdetach‚Äù **card-button**, your service deletes the webhook","excerpt":"","slug":"webhooks-offline-access","type":"basic","title":"Webhooks & Offline Access","__v":0,"updatedAt":"2019-06-10T14:28:52.744Z"},{"_id":"595d092b1375bd0049129cc5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":["5bbd10c5598b2e0003c9cb50"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:43:39.647Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"It can be difficult to debug Power-Up errors that come from the web client because the stack traces are not particularly helpful.\n\nTo help with this, we're adding a new option to enable `helpfulStacks`. When used, it will create and store a stacktrace with each request that will be used if that request fails with an error.\n\nThis is a potentially expensive option to turn on so we recommend only using it for short periods of time when you need to know more information for debugging.\n\nTo turn it on, you can add it as an option when initializing the Power-Up:\n\n```\nwindow.TrelloPowerUp.initialize({\n  'board-buttons': function (t, opts) { ... }\n}, {\n  helpfulStacks: true\n});\n```\n\nSimilarly, if you are in an iframe, you can turn it on with the following:\n\n```\nvar t = TrelloPowerUp.iframe({ helpfulStacks: true });\n```\n\n---\n\nAs our platform grows, we are working on identifying the most common mistakes and problems.\n\n**Uncaught PluginRunner::NotHandled: attempt to run callback on plugin 55a5d917446f51777421000f failed(anonymous function) @ ltp.js:40603(anonymous function) @ ltp.js:37845**\nltp.js:38699 ^--- With additional stack trace: PluginRunner::NotHandled: attempt to run callback on plugin 55a5d917446f51777421000f failed\n\n**Solution:** Make sure you are specifying ‚Äúcallback‚Äù as one of your capabilities in your manifest.json file.\n\n\n**PostMessageIO::NotHandled: Invalid context, missing board**\n\n**Solution:** If a Power-Up has a stale, local context Trello will strip out the old context which leads to the client library issuing this warning. A Power-Up can get into this state if a new board is navigated to in the middle of a number of back and forth requests between Trello and the Power-Up. The connector iframe remains loaded on the new board, continuing to attempt its final requests with the old context, and then Trello catches the old context and removes it. You should see this warning rarely and it can be safely ignored.","excerpt":"","slug":"troubleshooting","type":"basic","title":"Troubleshooting","__v":1,"updatedAt":"2019-06-10T14:28:52.745Z"},{"_id":"5ab3a77606644c006a6630a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-22T12:54:14.065Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"The description you provide in the Power-Up admin portal will be used multiple places throughout Trello to share information to users about your Power-Up. It will be used in the Power-Up directory as seen here:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/712fbb7-Screen_Shot_2018-03-22_at_9.08.14_AM.png\",\n        \"Screen Shot 2018-03-22 at 9.08.14 AM.png\",\n        1958,\n        1440,\n        \"#edeeee\"\n      ],\n      \"caption\": \"The Bitbucket Cloud Power-Up's description.\"\n    }\n  ]\n}\n[/block]\nIt will also be used in future features like Power-Up landing pages, updates to the Power-Up menu, etc. Great Power-Ups include useful information about the Power-Up as well as gifs and screenshots of the Power-Up in action!\n\nA Power-Up's description should be provided in the [Power-Up admin portal](https://developers.trello.com/v1.0/docs/managing-power-ups). The description field accepts markdown, the same format as Trello card descriptions. You can read more about what is possible [here](http://help.trello.com/article/821-using-markdown-in-trello).\n\nFor example, the Bitbucket Power-Up's Description field looks like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"Connect [Bitbucket](https://bitbucket.org) and Trello to help your software team plan and track work. The Bitbucket Power-up allows you to:\\\\n\\\\n* Quickly jump to Bitbucket by creating a link on your board.\\\\n* Attach branches, commits and pull requests to cards.\\\\n* See important information regarding your code from the card.\\\\n* Show the status of your pull requests and other linked information from the front of the card.\\\\n\\\\n### Screenshot\\\\n\\\\n![Back of card Bitbucket section](https://bello.atlassian.io/assets/bello-screenshot.png)\",\n      \"language\": \"markdown\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"markdown-in-descriptions","type":"basic","title":"Markdown In Descriptions","__v":0,"parentDoc":"595d07fb175e75003de3ed2a","updatedAt":"2019-06-10T14:28:52.745Z"}],"childrenPages":[{"_id":"595d08035c6c83001bde9f51","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"595d07fb175e75003de3ed2a","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:38:43.144Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Power-Ups run inside of the Trello web client. They will be making requests to your server (for example, to retrieve the manifest.json file) from the trello.com domain. Your server will need to have CORS settings that allow Trello.com to successfully make that request. Your server should respond to requests with an Access-Control-Allow-Origin header of either: Access-Control-Allow-Origin: 'https://trello.com' or Access-Control-Allow-Origin: '*'.\n\nMost programming languages have a package that helps you configure CORS:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Programming Language/Framework\",\n    \"h-1\": \"CORS Package\",\n    \"0-0\": \"Python/Flask\",\n    \"0-1\": \"[https://flask-cors.readthedocs.io/en/latest/](https://flask-cors.readthedocs.io/en/latest/)\",\n    \"1-0\": \"Javascript/Express\",\n    \"1-1\": \"[https://github.com/expressjs/cors](https://github.com/expressjs/cors)\",\n    \"2-0\": \"ASP.net\",\n    \"2-1\": \"[https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api](https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api)\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"cors","type":"basic","title":"CORS Settings","__v":0,"updatedAt":"2019-06-10T14:28:52.742Z"},{"_id":"595d0861d4bc0f0033d1e66a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:40:17.778Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"You should only require authentication when it is required by the user. Here are some samples of ways that Power-Ups can trigger an authentication workflow:\n\n1. For our Dropbox Power-Up, ‚ÄúShow Details from Dropbox‚Ä¶‚Äù has been added to the attachment-thumbnail by detecting that the link to Dropbox has not been initialized for this member. Once the Power-Up has been initialized and authenticated, we show a true thumbnail.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/538c460-sample-authentication-attachment-thumbnail.png\",\n        \"sample-authentication-attachment-thumbnail.png\",\n        1008,\n        208,\n        \"#eaeaf0\"\n      ]\n    }\n  ]\n}\n[/block]\nFor our Github Power-Up, the attachment-sections iframe managed by the Power-Up includes a prompt to authenticate to see additional information.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4e14ad4-sample-authentication-attachment-section.png\",\n        \"sample-authentication-attachment-section.png\",\n        1104,\n        206,\n        \"#ebebf3\"\n      ]\n    }\n  ]\n}\n[/block]\nWe also trigger authentication after a user attempts to perform an action that requires it, such as when attaching a GitHub Issue to a card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/e1039dd-sample-authentication-popup.png\",\n        \"sample-authentication-popup.png\",\n        614,\n        424,\n        \"#5d7e59\"\n      ]\n    }\n  ]\n}\n[/block]\nWhen developing a Power-Up that requires authentication, try to offer as much functionality in a non-authenticated state as possible, and add non-intrusive links to authenticate the user to provide more functionality.\n\nTo achieve Authentication, you will often need to use the t.authenticate method. Here‚Äôs a code sample of how you might handle the OAuth workflow from within a Power-Up popover iframe.\n\nClient side we need to wire up what should happen when the authenticate button or link is clicked, which is handled by the following code.\n\n```\nvar Promise = TrelloPowerUp.Promise;\nvar t = TrelloPowerUp.iframe();\n\nvar oauthUrl = 'https://trello.com/1/authorize?expiration=never' +\n  '&name=[APPNAME]&scope=read&key=[APIKEY]&callback_method=fragment' +\n  '&return_url=[RETURNURL]';\n\nvar tokenLooksValid = function(token) {\n  return /^[0-9a-f]{64}$/.test(token);\n}\n\nvar authorizeOpts = {\n  height: 680,\n  width: 580,\n  validToken: tokenLooksValid\n};\n\nvar authBtn = document.getElementById('authorize');\nauthBtn.addEventListener('click', function() {\n  t.authorize(oauthUrl, authorizeOpts)\n  .then(function(token) {\n    return t.set('organization', 'private', 'token', token)\n    .catch(t.NotHandled, function() {\n      // fall back to storing at board level\n      return t.set('board', 'private', 'token', token);\n    });\n  })\n  .then(function() {\n    // now that the token is stored, we can close this popup\n    // you might alternatively choose to open a new popup\n    return t.closePopup();\n  });\n});\n```\n\nThe authorize handler opens a new window. Once the auth flow is complete in that window, you should land on a page you control (generally your return_url). That page needs to contain a small amount of javascript to send the resulting token back to the Power-Up.\n\nHere is an example of how that would be achieved for the Trello OAuth flow from above:\n\n```\nlet authorize;\n\ntry {\n  if (window.opener && typeof window.opener.authorize === 'function') {\n    authorize = window.opener.authorize;\n  }\n} catch (e) {\n  // Security settings are preventing this, fall back to local storage.\n}\n\nif (authorize) {\n  authorize(token);\n} else {\n  localStorage.setItem('token', token);\n}\n\nsetTimeout(function(){ window.close(); }, 1000);\n```","excerpt":"","slug":"authentication","type":"basic","title":"Authentication","__v":0,"updatedAt":"2019-06-10T14:28:52.742Z"},{"_id":"595d08c61375bd0049129cc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":["5c45490fc6a1a701d80b9963"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:41:58.639Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Trello is full of colors, and sometimes when rendering a Power-Ups icons, you want to ensure there is proper contrast between your icon and text and the background. Trello supports appropriately recoloring via two mechanisms.\n\nThe [`board-buttons`](ref:board-buttons) capability expects an object to be passed for the `icon` property during initialization so that variants for display on `light` and `dark` backgrounds can be provided.\n\nOther icons can be recolored based on a query parameter that we will provide. This parameter is designed to ensure that icons have great usability even when the background behind an image may change.\n\nFor example, a card badge icons are expected to be grey (#999) in their default state, but when a color is applied to the badge (such as ‚Äòred‚Äô), the icon is passed **?color=fff**. This behavior means that the icon should be recolored such that the primary color used is white, ensuring the image will look good and have good usability on a red background.","excerpt":"","slug":"recoloring","type":"basic","title":"Recoloring","__v":1,"updatedAt":"2019-06-10T14:28:52.743Z"},{"_id":"594d83ef2e5787001b713b97","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"595d07fb175e75003de3ed2a","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:11:11.526Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Trello Power-Ups were designed with Internationalization in mind. When creating a plugin or iframe, you can optionally pass in the options argument one of the following:\n\nlocalization object:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"localization: {\\n  defaultLocale: 'en',\\n  supportedLocales: ['en', 'fr'],\\n  resourceUrl: './strings/{locale}.json'\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nlocalizer object:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"localizer: {\\n  localize: function (key, data) {\\n    ... synchronously returns a localized string for the given key and data ...\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nloadLocalizer function:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"loadLocalizer: function (locale) {\\n  ... returns a Promise that resolves to a localizer object ...\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can pass those to TrelloPowerUp like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n\\n// or\\n\\nwindow.TrelloPowerUp.initialize({\\n  'capability': function (t, opts) { ... }\\n}, {\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\nAdditionally, you can set `window.localizer` to your own custom localizer and the `t.localize*` methods will use it.\n\nOnce a localizer has been initialized, you can call the following new handlers (which behind the scenes make use of the localizer). We make the current user locale available to you via `window.locale`. Additionally, you can grab it off the options object from any of the interfaces or callbacks as well.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Localization in iframes other than the connector\",\n  \"body\": \"When you are using\\n\\n```javascript\\nvar t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n```\\n\\nThe localizer is not guaranteed to be loaded and ready until the `t.render` function is called. So trying to use any localization methods prior to that could fail.\\n\\nAlternatively you could do something like:\\n\\n```javascript\\nvar i18n-settings = {\\n  defaultLocale: 'en',\\n  supportedLocales: ['en', 'fr'],\\n  resourceUrl: './strings/{locale}.json'\\n};\\n\\nvar t = window.TrelloPowerUp.iframe();\\n\\nwindow.locale = /[\\\\?&]locale=([\\\\w-]+)/.exec(location.search)[1];\\n\\nwindow.TrelloPowerUp.util.initLocalizer(window.locale, { localization: i18n-settings })\\n.then(() => {\\n  // t.localize methods are now available\\n  t.localizeNode(document.getElementById('content'));\\n});\\n```\"\n}\n[/block]\nWe cover localizing a simple Power-Up in our YouTube series:\n[block:html]\n{\n  \"html\": \"<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/qxm5atYNYBg\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\"\n}\n[/block]","excerpt":"","slug":"localization","type":"basic","title":"Localization","__v":0,"updatedAt":"2019-06-14T16:37:09.909Z"},{"_id":"595d08d191f29200158114b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:42:09.520Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When Trello makes a request to your Power-Up for a capability method or callback, it will wait a fixed amount of time for a reply before giving up. Your Power-Up should reply within one second - faster is better across all cases. Usually, Trello will stop waiting for a response after five seconds although requests to some capabilities may wait slightly longer.\n\nAdditionally, you should make sure that your manifest file and index connector can be loaded by Trello as quickly as possible. You should have these served within one second; Trello will stop waiting for a response after 10 seconds.","excerpt":"","slug":"timeouts","type":"basic","title":"Timeouts","__v":0,"updatedAt":"2019-06-10T14:28:52.743Z"},{"_id":"595d08e201467d00152627df","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:42:26.704Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"Many browsers [throttle the CPU](https://developers.google.com/web/updates/2017/03/background_tabs) usage of tabs open in the background. This causes Power-Up communication to be slowed drastically and causes them to be more prone to time outs. To mitiage potential problems, the Power-Up client library will only attempt to communicate with your Power-Up if the Trello board on which the Power-Up is enabled [is visible](https://www.w3.org/TR/page-visibility/).","excerpt":"","slug":"power-ups-in-browser-backgrounds","type":"basic","title":"Power-Ups In Browser Backgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.744Z"},{"_id":"595d091ed4bc0f0033d1e66c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"59dbbcc74c45e30010603ae2","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:43:26.036Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Webhooks and Offline Access are not currently part of the Power-Up architecture. Power-Ups are only active while a member is in the Trello web client experience. It is possible for your Power-Up and service to access a user‚Äôs information and create Webhooks using the standard API.\n\nThe way to accomplish this is for you to Authorize your application to the Trello API as a part of your Authorization flow, or in response to a user action. You would then need your service to use the standard Trello API to make offline requests.\n\nFor example, if you were building a Power-Up where you wanted to react to any change made to a card, the member‚Äôs experience could be as follows.\n\n  * Trello Member enables **Magic Service** Power-Up\n  * Trello Member clicks on the **card-button** to attach a **Magic Service** to a card.\n  * You prompt the member via an **overlay** iframe to authorize your service to access the member‚Äôs Trello account\n  * Your service stores the user‚Äôs token as part of a one-time authorization step\n  * Your service stores the Card‚Äôs ID as part of your **card-button** callback\n  * Your service creates a webhook based on Card ID\n  * Your Power-Up renders a new **card-button** for any cards that are already attached to your service\n  * When the user clicks the ‚Äúdetach‚Äù **card-button**, your service deletes the webhook","excerpt":"","slug":"webhooks-offline-access","type":"basic","title":"Webhooks & Offline Access","__v":0,"updatedAt":"2019-06-10T14:28:52.744Z"},{"_id":"595d092b1375bd0049129cc5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":["5bbd10c5598b2e0003c9cb50"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:43:39.647Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"It can be difficult to debug Power-Up errors that come from the web client because the stack traces are not particularly helpful.\n\nTo help with this, we're adding a new option to enable `helpfulStacks`. When used, it will create and store a stacktrace with each request that will be used if that request fails with an error.\n\nThis is a potentially expensive option to turn on so we recommend only using it for short periods of time when you need to know more information for debugging.\n\nTo turn it on, you can add it as an option when initializing the Power-Up:\n\n```\nwindow.TrelloPowerUp.initialize({\n  'board-buttons': function (t, opts) { ... }\n}, {\n  helpfulStacks: true\n});\n```\n\nSimilarly, if you are in an iframe, you can turn it on with the following:\n\n```\nvar t = TrelloPowerUp.iframe({ helpfulStacks: true });\n```\n\n---\n\nAs our platform grows, we are working on identifying the most common mistakes and problems.\n\n**Uncaught PluginRunner::NotHandled: attempt to run callback on plugin 55a5d917446f51777421000f failed(anonymous function) @ ltp.js:40603(anonymous function) @ ltp.js:37845**\nltp.js:38699 ^--- With additional stack trace: PluginRunner::NotHandled: attempt to run callback on plugin 55a5d917446f51777421000f failed\n\n**Solution:** Make sure you are specifying ‚Äúcallback‚Äù as one of your capabilities in your manifest.json file.\n\n\n**PostMessageIO::NotHandled: Invalid context, missing board**\n\n**Solution:** If a Power-Up has a stale, local context Trello will strip out the old context which leads to the client library issuing this warning. A Power-Up can get into this state if a new board is navigated to in the middle of a number of back and forth requests between Trello and the Power-Up. The connector iframe remains loaded on the new board, continuing to attempt its final requests with the old context, and then Trello catches the old context and removes it. You should see this warning rarely and it can be safely ignored.","excerpt":"","slug":"troubleshooting","type":"basic","title":"Troubleshooting","__v":1,"updatedAt":"2019-06-10T14:28:52.745Z"},{"_id":"5ab3a77606644c006a6630a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-22T12:54:14.065Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"The description you provide in the Power-Up admin portal will be used multiple places throughout Trello to share information to users about your Power-Up. It will be used in the Power-Up directory as seen here:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/712fbb7-Screen_Shot_2018-03-22_at_9.08.14_AM.png\",\n        \"Screen Shot 2018-03-22 at 9.08.14 AM.png\",\n        1958,\n        1440,\n        \"#edeeee\"\n      ],\n      \"caption\": \"The Bitbucket Cloud Power-Up's description.\"\n    }\n  ]\n}\n[/block]\nIt will also be used in future features like Power-Up landing pages, updates to the Power-Up menu, etc. Great Power-Ups include useful information about the Power-Up as well as gifs and screenshots of the Power-Up in action!\n\nA Power-Up's description should be provided in the [Power-Up admin portal](https://developers.trello.com/v1.0/docs/managing-power-ups). The description field accepts markdown, the same format as Trello card descriptions. You can read more about what is possible [here](http://help.trello.com/article/821-using-markdown-in-trello).\n\nFor example, the Bitbucket Power-Up's Description field looks like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"Connect [Bitbucket](https://bitbucket.org) and Trello to help your software team plan and track work. The Bitbucket Power-up allows you to:\\\\n\\\\n* Quickly jump to Bitbucket by creating a link on your board.\\\\n* Attach branches, commits and pull requests to cards.\\\\n* See important information regarding your code from the card.\\\\n* Show the status of your pull requests and other linked information from the front of the card.\\\\n\\\\n### Screenshot\\\\n\\\\n![Back of card Bitbucket section](https://bello.atlassian.io/assets/bello-screenshot.png)\",\n      \"language\": \"markdown\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"markdown-in-descriptions","type":"basic","title":"Markdown In Descriptions","__v":0,"parentDoc":"595d07fb175e75003de3ed2a","updatedAt":"2019-06-10T14:28:52.745Z"}]},{"_id":"595d08035c6c83001bde9f51","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","parentDoc":"595d07fb175e75003de3ed2a","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:38:43.144Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"Power-Ups run inside of the Trello web client. They will be making requests to your server (for example, to retrieve the manifest.json file) from the trello.com domain. Your server will need to have CORS settings that allow Trello.com to successfully make that request. Your server should respond to requests with an Access-Control-Allow-Origin header of either: Access-Control-Allow-Origin: 'https://trello.com' or Access-Control-Allow-Origin: '*'.\n\nMost programming languages have a package that helps you configure CORS:\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Programming Language/Framework\",\n    \"h-1\": \"CORS Package\",\n    \"0-0\": \"Python/Flask\",\n    \"0-1\": \"[https://flask-cors.readthedocs.io/en/latest/](https://flask-cors.readthedocs.io/en/latest/)\",\n    \"1-0\": \"Javascript/Express\",\n    \"1-1\": \"[https://github.com/expressjs/cors](https://github.com/expressjs/cors)\",\n    \"2-0\": \"ASP.net\",\n    \"2-1\": \"[https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api](https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api)\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]","excerpt":"","slug":"cors","type":"basic","title":"CORS Settings","__v":0,"updatedAt":"2019-06-10T14:28:52.742Z"},{"_id":"595d0861d4bc0f0033d1e66a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:40:17.778Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"You should only require authentication when it is required by the user. Here are some samples of ways that Power-Ups can trigger an authentication workflow:\n\n1. For our Dropbox Power-Up, ‚ÄúShow Details from Dropbox‚Ä¶‚Äù has been added to the attachment-thumbnail by detecting that the link to Dropbox has not been initialized for this member. Once the Power-Up has been initialized and authenticated, we show a true thumbnail.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/538c460-sample-authentication-attachment-thumbnail.png\",\n        \"sample-authentication-attachment-thumbnail.png\",\n        1008,\n        208,\n        \"#eaeaf0\"\n      ]\n    }\n  ]\n}\n[/block]\nFor our Github Power-Up, the attachment-sections iframe managed by the Power-Up includes a prompt to authenticate to see additional information.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/4e14ad4-sample-authentication-attachment-section.png\",\n        \"sample-authentication-attachment-section.png\",\n        1104,\n        206,\n        \"#ebebf3\"\n      ]\n    }\n  ]\n}\n[/block]\nWe also trigger authentication after a user attempts to perform an action that requires it, such as when attaching a GitHub Issue to a card.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/e1039dd-sample-authentication-popup.png\",\n        \"sample-authentication-popup.png\",\n        614,\n        424,\n        \"#5d7e59\"\n      ]\n    }\n  ]\n}\n[/block]\nWhen developing a Power-Up that requires authentication, try to offer as much functionality in a non-authenticated state as possible, and add non-intrusive links to authenticate the user to provide more functionality.\n\nTo achieve Authentication, you will often need to use the t.authenticate method. Here‚Äôs a code sample of how you might handle the OAuth workflow from within a Power-Up popover iframe.\n\nClient side we need to wire up what should happen when the authenticate button or link is clicked, which is handled by the following code.\n\n```\nvar Promise = TrelloPowerUp.Promise;\nvar t = TrelloPowerUp.iframe();\n\nvar oauthUrl = 'https://trello.com/1/authorize?expiration=never' +\n  '&name=[APPNAME]&scope=read&key=[APIKEY]&callback_method=fragment' +\n  '&return_url=[RETURNURL]';\n\nvar tokenLooksValid = function(token) {\n  return /^[0-9a-f]{64}$/.test(token);\n}\n\nvar authorizeOpts = {\n  height: 680,\n  width: 580,\n  validToken: tokenLooksValid\n};\n\nvar authBtn = document.getElementById('authorize');\nauthBtn.addEventListener('click', function() {\n  t.authorize(oauthUrl, authorizeOpts)\n  .then(function(token) {\n    return t.set('organization', 'private', 'token', token)\n    .catch(t.NotHandled, function() {\n      // fall back to storing at board level\n      return t.set('board', 'private', 'token', token);\n    });\n  })\n  .then(function() {\n    // now that the token is stored, we can close this popup\n    // you might alternatively choose to open a new popup\n    return t.closePopup();\n  });\n});\n```\n\nThe authorize handler opens a new window. Once the auth flow is complete in that window, you should land on a page you control (generally your return_url). That page needs to contain a small amount of javascript to send the resulting token back to the Power-Up.\n\nHere is an example of how that would be achieved for the Trello OAuth flow from above:\n\n```\nlet authorize;\n\ntry {\n  if (window.opener && typeof window.opener.authorize === 'function') {\n    authorize = window.opener.authorize;\n  }\n} catch (e) {\n  // Security settings are preventing this, fall back to local storage.\n}\n\nif (authorize) {\n  authorize(token);\n} else {\n  localStorage.setItem('token', token);\n}\n\nsetTimeout(function(){ window.close(); }, 1000);\n```","excerpt":"","slug":"authentication","type":"basic","title":"Authentication","__v":0,"updatedAt":"2019-06-10T14:28:52.742Z"},{"_id":"595d08c61375bd0049129cc4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":["5c45490fc6a1a701d80b9963"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:41:58.639Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Trello is full of colors, and sometimes when rendering a Power-Ups icons, you want to ensure there is proper contrast between your icon and text and the background. Trello supports appropriately recoloring via two mechanisms.\n\nThe [`board-buttons`](ref:board-buttons) capability expects an object to be passed for the `icon` property during initialization so that variants for display on `light` and `dark` backgrounds can be provided.\n\nOther icons can be recolored based on a query parameter that we will provide. This parameter is designed to ensure that icons have great usability even when the background behind an image may change.\n\nFor example, a card badge icons are expected to be grey (#999) in their default state, but when a color is applied to the badge (such as ‚Äòred‚Äô), the icon is passed **?color=fff**. This behavior means that the icon should be recolored such that the primary color used is white, ensuring the image will look good and have good usability on a red background.","excerpt":"","slug":"recoloring","type":"basic","title":"Recoloring","__v":1,"updatedAt":"2019-06-10T14:28:52.743Z"},{"_id":"594d83ef2e5787001b713b97","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"57b333148d94953200fd31b8","parentDoc":"595d07fb175e75003de3ed2a","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T21:11:11.526Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Trello Power-Ups were designed with Internationalization in mind. When creating a plugin or iframe, you can optionally pass in the options argument one of the following:\n\nlocalization object:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"localization: {\\n  defaultLocale: 'en',\\n  supportedLocales: ['en', 'fr'],\\n  resourceUrl: './strings/{locale}.json'\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nlocalizer object:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"localizer: {\\n  localize: function (key, data) {\\n    ... synchronously returns a localized string for the given key and data ...\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nloadLocalizer function:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"loadLocalizer: function (locale) {\\n  ... returns a Promise that resolves to a localizer object ...\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYou can pass those to TrelloPowerUp like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n\\n// or\\n\\nwindow.TrelloPowerUp.initialize({\\n  'capability': function (t, opts) { ... }\\n}, {\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\nAdditionally, you can set `window.localizer` to your own custom localizer and the `t.localize*` methods will use it.\n\nOnce a localizer has been initialized, you can call the following new handlers (which behind the scenes make use of the localizer). We make the current user locale available to you via `window.locale`. Additionally, you can grab it off the options object from any of the interfaces or callbacks as well.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Localization in iframes other than the connector\",\n  \"body\": \"When you are using\\n\\n```javascript\\nvar t = window.TrelloPowerUp.iframe({\\n  localization: {\\n    defaultLocale: 'en',\\n    supportedLocales: ['en', 'fr'],\\n    resourceUrl: './strings/{locale}.json'\\n  }\\n});\\n```\\n\\nThe localizer is not guaranteed to be loaded and ready until the `t.render` function is called. So trying to use any localization methods prior to that could fail.\\n\\nAlternatively you could do something like:\\n\\n```javascript\\nvar i18n-settings = {\\n  defaultLocale: 'en',\\n  supportedLocales: ['en', 'fr'],\\n  resourceUrl: './strings/{locale}.json'\\n};\\n\\nvar t = window.TrelloPowerUp.iframe();\\n\\nwindow.locale = /[\\\\?&]locale=([\\\\w-]+)/.exec(location.search)[1];\\n\\nwindow.TrelloPowerUp.util.initLocalizer(window.locale, { localization: i18n-settings })\\n.then(() => {\\n  // t.localize methods are now available\\n  t.localizeNode(document.getElementById('content'));\\n});\\n```\"\n}\n[/block]\nWe cover localizing a simple Power-Up in our YouTube series:\n[block:html]\n{\n  \"html\": \"<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/qxm5atYNYBg\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\"\n}\n[/block]","excerpt":"","slug":"localization","type":"basic","title":"Localization","__v":0,"updatedAt":"2019-06-14T16:37:09.909Z"},{"_id":"595d08d191f29200158114b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:42:09.520Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"When Trello makes a request to your Power-Up for a capability method or callback, it will wait a fixed amount of time for a reply before giving up. Your Power-Up should reply within one second - faster is better across all cases. Usually, Trello will stop waiting for a response after five seconds although requests to some capabilities may wait slightly longer.\n\nAdditionally, you should make sure that your manifest file and index connector can be loaded by Trello as quickly as possible. You should have these served within one second; Trello will stop waiting for a response after 10 seconds.","excerpt":"","slug":"timeouts","type":"basic","title":"Timeouts","__v":0,"updatedAt":"2019-06-10T14:28:52.743Z"},{"_id":"595d08e201467d00152627df","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:42:26.704Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"Many browsers [throttle the CPU](https://developers.google.com/web/updates/2017/03/background_tabs) usage of tabs open in the background. This causes Power-Up communication to be slowed drastically and causes them to be more prone to time outs. To mitiage potential problems, the Power-Up client library will only attempt to communicate with your Power-Up if the Trello board on which the Power-Up is enabled [is visible](https://www.w3.org/TR/page-visibility/).","excerpt":"","slug":"power-ups-in-browser-backgrounds","type":"basic","title":"Power-Ups In Browser Backgrounds","__v":0,"updatedAt":"2019-06-10T14:28:52.744Z"},{"_id":"595d091ed4bc0f0033d1e66c","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"59dbbcc74c45e30010603ae2","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:43:26.036Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":6,"body":"Webhooks and Offline Access are not currently part of the Power-Up architecture. Power-Ups are only active while a member is in the Trello web client experience. It is possible for your Power-Up and service to access a user‚Äôs information and create Webhooks using the standard API.\n\nThe way to accomplish this is for you to Authorize your application to the Trello API as a part of your Authorization flow, or in response to a user action. You would then need your service to use the standard Trello API to make offline requests.\n\nFor example, if you were building a Power-Up where you wanted to react to any change made to a card, the member‚Äôs experience could be as follows.\n\n  * Trello Member enables **Magic Service** Power-Up\n  * Trello Member clicks on the **card-button** to attach a **Magic Service** to a card.\n  * You prompt the member via an **overlay** iframe to authorize your service to access the member‚Äôs Trello account\n  * Your service stores the user‚Äôs token as part of a one-time authorization step\n  * Your service stores the Card‚Äôs ID as part of your **card-button** callback\n  * Your service creates a webhook based on Card ID\n  * Your Power-Up renders a new **card-button** for any cards that are already attached to your service\n  * When the user clicks the ‚Äúdetach‚Äù **card-button**, your service deletes the webhook","excerpt":"","slug":"webhooks-offline-access","type":"basic","title":"Webhooks & Offline Access","__v":0,"updatedAt":"2019-06-10T14:28:52.744Z"},{"_id":"595d092b1375bd0049129cc5","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","parentDoc":"595d07fb175e75003de3ed2a","user":"592599f5d15a9d1900be545c","updates":["5bbd10c5598b2e0003c9cb50"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T15:43:39.647Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"It can be difficult to debug Power-Up errors that come from the web client because the stack traces are not particularly helpful.\n\nTo help with this, we're adding a new option to enable `helpfulStacks`. When used, it will create and store a stacktrace with each request that will be used if that request fails with an error.\n\nThis is a potentially expensive option to turn on so we recommend only using it for short periods of time when you need to know more information for debugging.\n\nTo turn it on, you can add it as an option when initializing the Power-Up:\n\n```\nwindow.TrelloPowerUp.initialize({\n  'board-buttons': function (t, opts) { ... }\n}, {\n  helpfulStacks: true\n});\n```\n\nSimilarly, if you are in an iframe, you can turn it on with the following:\n\n```\nvar t = TrelloPowerUp.iframe({ helpfulStacks: true });\n```\n\n---\n\nAs our platform grows, we are working on identifying the most common mistakes and problems.\n\n**Uncaught PluginRunner::NotHandled: attempt to run callback on plugin 55a5d917446f51777421000f failed(anonymous function) @ ltp.js:40603(anonymous function) @ ltp.js:37845**\nltp.js:38699 ^--- With additional stack trace: PluginRunner::NotHandled: attempt to run callback on plugin 55a5d917446f51777421000f failed\n\n**Solution:** Make sure you are specifying ‚Äúcallback‚Äù as one of your capabilities in your manifest.json file.\n\n\n**PostMessageIO::NotHandled: Invalid context, missing board**\n\n**Solution:** If a Power-Up has a stale, local context Trello will strip out the old context which leads to the client library issuing this warning. A Power-Up can get into this state if a new board is navigated to in the middle of a number of back and forth requests between Trello and the Power-Up. The connector iframe remains loaded on the new board, continuing to attempt its final requests with the old context, and then Trello catches the old context and removes it. You should see this warning rarely and it can be safely ignored.","excerpt":"","slug":"troubleshooting","type":"basic","title":"Troubleshooting","__v":1,"updatedAt":"2019-06-10T14:28:52.745Z"},{"_id":"5ab3a77606644c006a6630a4","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2018-03-22T12:54:14.065Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"The description you provide in the Power-Up admin portal will be used multiple places throughout Trello to share information to users about your Power-Up. It will be used in the Power-Up directory as seen here:\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/712fbb7-Screen_Shot_2018-03-22_at_9.08.14_AM.png\",\n        \"Screen Shot 2018-03-22 at 9.08.14 AM.png\",\n        1958,\n        1440,\n        \"#edeeee\"\n      ],\n      \"caption\": \"The Bitbucket Cloud Power-Up's description.\"\n    }\n  ]\n}\n[/block]\nIt will also be used in future features like Power-Up landing pages, updates to the Power-Up menu, etc. Great Power-Ups include useful information about the Power-Up as well as gifs and screenshots of the Power-Up in action!\n\nA Power-Up's description should be provided in the [Power-Up admin portal](https://developers.trello.com/v1.0/docs/managing-power-ups). The description field accepts markdown, the same format as Trello card descriptions. You can read more about what is possible [here](http://help.trello.com/article/821-using-markdown-in-trello).\n\nFor example, the Bitbucket Power-Up's Description field looks like this:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"Connect [Bitbucket](https://bitbucket.org) and Trello to help your software team plan and track work. The Bitbucket Power-up allows you to:\\\\n\\\\n* Quickly jump to Bitbucket by creating a link on your board.\\\\n* Attach branches, commits and pull requests to cards.\\\\n* See important information regarding your code from the card.\\\\n* Show the status of your pull requests and other linked information from the front of the card.\\\\n\\\\n### Screenshot\\\\n\\\\n![Back of card Bitbucket section](https://bello.atlassian.io/assets/bello-screenshot.png)\",\n      \"language\": \"markdown\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"markdown-in-descriptions","type":"basic","title":"Markdown In Descriptions","__v":0,"parentDoc":"595d07fb175e75003de3ed2a","updatedAt":"2019-06-10T14:28:52.745Z"},{"_id":"595d367978dc10005d3f1a15","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":["5976d207407d1a001b072179","5a340d070974d00026737e63"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T18:56:57.241Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":7,"body":"We review all Power-Ups before we make them available to all of our users. To view the guidelines, head on over to [Public Power-Up Guidelines](doc:power-up-guidelines).","excerpt":"","slug":"guidelines","type":"basic","title":"Guidelines","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.747Z","children":[],"childrenPages":[]},{"_id":"595d36b61375bd0049129f6a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":["5aa5d53ca611ed0028d675b5","5c45573e1aa5a8036b14debe"],"next":{"pages":[],"description":""},"createdAt":"2017-07-05T18:57:58.887Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":8,"body":"You can rely on the base styles in [power-up.css](https://trello.com/power-ups/power-up.css). There‚Äôs no need to override things like buttons, inputs, tables, headers, font styles, and code blocks that aren‚Äôt core to your Power-Up. **power-up.css** includes [normalize.css](https://necolas.github.io/normalize.css/), a CSS reset which ‚Äúmakes browsers render all elements more consistently and in line with modern standards‚Äù. You don‚Äôt need to include anything similar in your CSS.\n\nThere are a few additional classes outside of those basic elements: \n[block:html]\n{\n  \"html\": \"<style>\\n@charset \\\"UTF-8\\\";\\n\\nhtml {\\nfont-family:sans-serif;\\n-ms-text-size-adjust:100%;\\n-webkit-text-size-adjust:100%\\n}\\n\\nbody {\\nmargin:0\\n}\\n\\narticle,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary {\\ndisplay:block\\n}\\n\\naudio,canvas,progress,video {\\ndisplay:inline-block;\\nvertical-align:baseline\\n}\\n\\naudio:not([controls]) {\\ndisplay:none;\\nheight:0\\n}\\n\\n[hidden],template {\\ndisplay:none\\n}\\n\\na {\\nbackground-color:transparent\\n}\\n\\na:active,a:hover {\\noutline:0\\n}\\n\\nabbr[title] {\\nborder-bottom:1px dotted\\n}\\n\\nb,strong {\\nfont-weight:700\\n}\\n\\ndfn {\\nfont-style:italic\\n}\\n\\nh1 {\\nfont-size:2em;\\nmargin:.67em 0\\n}\\n\\nmark {\\nbackground:#ff0;\\ncolor:#000\\n}\\n\\nsmall {\\nfont-size:80%\\n}\\n\\nsub,sup {\\nfont-size:75%;\\nline-height:0;\\nposition:relative;\\nvertical-align:baseline\\n}\\n\\nsup {\\ntop:-.5em\\n}\\n\\nsub {\\nbottom:-.25em\\n}\\n\\nimg {\\nborder:0\\n}\\n\\nsvg:not(:root) {\\noverflow:hidden\\n}\\n\\nfigure {\\nmargin:1em 40px\\n}\\n\\nhr {\\nbox-sizing:content-box;\\nheight:0\\n}\\n\\npre {\\noverflow:auto\\n}\\n\\ncode,kbd,pre,samp {\\nfont-family:monospace,monospace;\\nfont-size:1em\\n}\\n\\nbutton,input,optgroup,select,textarea {\\ncolor:inherit;\\nfont:inherit;\\nmargin:0\\n}\\n\\nbutton {\\noverflow:visible\\n}\\n\\nbutton,select {\\ntext-transform:none\\n}\\n\\nbutton,html input[type=\\\"button\\\"],/* 1 */\\ninput[type=\\\"reset\\\"],input[type=\\\"submit\\\"] {\\n-webkit-appearance:button;\\ncursor:pointer\\n}\\n\\nbutton[disabled],html input[disabled] {\\ncursor:default\\n}\\n\\nbutton::-moz-focus-inner,input::-moz-focus-inner {\\nborder:0;\\npadding:0\\n}\\n\\ninput {\\nline-height:normal\\n}\\n\\ninput[type=\\\"checkbox\\\"],input[type=\\\"radio\\\"] {\\nbox-sizing:border-box;\\npadding:0\\n}\\n\\ninput[type=\\\"number\\\"]::-webkit-inner-spin-button,input[type=\\\"number\\\"]::-webkit-outer-spin-button {\\nheight:auto\\n}\\n\\ninput[type=\\\"search\\\"] {\\n-webkit-appearance:textfield;\\nbox-sizing:content-box\\n}\\n\\ninput[type=\\\"search\\\"]::-webkit-search-cancel-button,input[type=\\\"search\\\"]::-webkit-search-decoration {\\n-webkit-appearance:none\\n}\\n\\nfieldset {\\nborder:1px solid silver;\\nmargin:0 2px;\\npadding:.35em .625em .75em\\n}\\n\\nlegend {\\nborder:0;\\npadding:0\\n}\\n\\ntextarea {\\noverflow:auto\\n}\\n\\noptgroup {\\nfont-weight:700\\n}\\n\\ntable {\\nborder-collapse:collapse;\\nborder-spacing:0\\n}\\n\\ntd,th {\\npadding:0\\n}\\n\\n.u-clearfix:after {\\nclear:both;\\ncontent:\\\"\\\";\\ndisplay:table\\n}\\n\\n.u-hidden {\\ndisplay:none\\n}\\n\\n.u-monospace {\\nfont-family:\\\"fira-mono\\\",monospace\\n}\\n\\n.u-quiet {\\ncolor:#8c8c8c\\n}\\n\\n.u-overflow-auto {\\noverflow:auto\\n}\\n\\n.u-text-align-center {\\ntext-align:center\\n}\\n\\nbutton,html,input,select,textarea {\\nfont-family:\\\"Helvetica Neue\\\",Arial,Helvetica,sans-serif\\n}\\n\\nbody {\\ncolor:#4d4d4d;\\nfont-size:14px;\\nline-height:18px\\n}\\n\\nh1,h2,h3,h4,h5,h6 {\\nline-height:1.25;\\nmargin-top:0\\n}\\n\\nh1 {\\nfont-size:1.95em\\n}\\n\\nh2 {\\nfont-size:1.56em\\n}\\n\\nh3 {\\nfont-size:1.25em\\n}\\n\\nh4,h5,h6 {\\nfont-size:1em\\n}\\n\\np {\\nmargin-top:0\\n}\\n\\nstrong,h1,h2,h3,h4,h5,h6 {\\nfont-weight:600\\n}\\n\\npre {\\nbackground-color:#EDEFF0;\\nborder-radius:.4em;\\nfont-size:.8em;\\npadding:1em\\n}\\n\\ncode {\\nbackground:#EDEFF0;\\nfont-family:\\\"fira-mono\\\",monospace;\\npadding:0 4px;\\nborder-radius:.4em\\n}\\n\\npre > code {\\nbackground:transparent;\\npadding:0\\n}\\n\\na {\\ncolor:#4d4d4d\\n}\\n\\na:visited {\\ncolor:#000\\n}\\n\\na:hover {\\ncolor:#000\\n}\\n\\nhr {\\ndisplay:block;\\nheight:1px;\\nborder:0;\\nborder-top:1px solid #D6DADC;\\nmargin:1.5em 0;\\npadding:0\\n}\\n\\n::-moz-selection {\\nbackground:#BCD9EA;\\ntext-shadow:none\\n}\\n\\n::selection {\\nbackground:#BCD9EA;\\ntext-shadow:none\\n}\\n\\n@media print {\\n* {\\nbackground:transparent!important;\\ncolor:#000!important;\\nbox-shadow:none!important;\\ntext-shadow:none!important\\n}\\n\\na,a:visited {\\ntext-decoration:underline\\n}\\n\\na[href]:after {\\ncontent:\\\" (\\\" attr(href) \\\")\\\"\\n}\\n\\nabbr[title]:after {\\ncontent:\\\" (\\\" attr(title) \\\")\\\"\\n}\\n\\na[href^=\\\"#\\\"]:after,a[href^=\\\"javascript:\\\"]:after {\\ncontent:\\\"\\\"\\n}\\n\\npre,blockquote {\\nborder:1px solid #999;\\npage-break-inside:avoid\\n}\\n\\nthead {\\ndisplay:table-header-group\\n}\\n\\ntr,img {\\npage-break-inside:avoid\\n}\\n\\nimg {\\nmax-width:100%!important\\n}\\n\\np,h2,h3 {\\norphans:3;\\nwidows:3\\n}\\n\\nh2,h3 {\\npage-break-after:avoid\\n}\\n}\\n\\n.empty-list,.empty {\\nbackground:#E2E4E6;\\nborder:1px dashed #C4C9CC;\\nborder-radius:3px;\\ncolor:#8c8c8c;\\ndisplay:block;\\npadding:6px;\\ntext-align:center\\n}\\n\\n.empty-list {\\nborder-radius:6px;\\npadding:25px 6px\\n}\\n\\nbutton {\\nbackground:-webkit-linear-gradient(top,#E2E4E6 0%,#D6DADC 100%);\\nbackground:linear-gradient(to bottom,#E2E4E6 0%,#D6DADC 100%);\\nborder:0;\\nborder-radius:3px;\\nbox-shadow:0 2px 0 #959DA1;\\ncolor:#4d4d4d;\\ndisplay:inline-block;\\nfont-weight:700!important;\\nmargin:.3em 1em 1em 0;\\noutline:0;\\npadding:.6em 1.4em;\\nposition:relative;\\ntext-decoration:none\\n}\\n\\nbutton:not([disabled]):focus,button:not([disabled]):hover {\\nbackground:-webkit-linear-gradient(top,#D6DADC 0%,#CDD2D4 100%);\\nbackground:linear-gradient(to bottom,#D6DADC 0%,#CDD2D4 100%);\\ncolor:#4d4d4d\\n}\\n\\nbutton:not([disabled]):active {\\nbackground:-webkit-linear-gradient(top,#CDD2D4 0%,#C4C9CC 100%);\\nbackground:linear-gradient(to bottom,#CDD2D4 0%,#C4C9CC 100%);\\ncolor:#4d4d4d\\n}\\n\\nbutton[disabled] {\\nbackground:#E2E4E6;\\nbox-shadow:none;\\ncolor:#8c8c8c;\\ncursor:default;\\nfont-weight:300\\n}\\n\\nbutton.mod-primary:not([disabled]) {\\nbackground:-webkit-linear-gradient(top,#61BD4F 0%,#5AAC44 100%);\\nbackground:linear-gradient(to bottom,#61BD4F 0%,#5AAC44 100%);\\nbox-shadow:0 2px 0 #3F6F21;\\ncolor:#fff;\\npadding:.6em 2.2em\\n}\\n\\nbutton.mod-primary:not([disabled]):focus,button.mod-primary:not([disabled]):hover {\\nbackground:-webkit-linear-gradient(top,#5AAC44 0%,#519839 100%);\\nbackground:linear-gradient(to bottom,#5AAC44 0%,#519839 100%);\\ncolor:#fff\\n}\\n\\nbutton.mod-primary:not([disabled]):active {\\nbackground:-webkit-linear-gradient(top,#519839 0%,#49852E 100%);\\nbackground:linear-gradient(to bottom,#519839 0%,#49852E 100%);\\ncolor:#fff\\n}\\n\\nbutton.mod-danger:not([disabled]) {\\ncolor:#EB5A46\\n}\\n\\nbutton.mod-danger:not([disabled]):focus,button.mod-danger:not([disabled]):hover {\\nbackground:-webkit-linear-gradient(top,#EB5A46 0%,#CF513D 100%);\\nbackground:linear-gradient(to bottom,#EB5A46 0%,#CF513D 100%);\\nbox-shadow:0 2px 0 #6E2F1A;\\ncolor:#fff\\n}\\n\\nbutton.mod-danger:not([disabled]):active {\\nbackground:-webkit-linear-gradient(top,#CF513D 0%,#B04632 100%);\\nbackground:linear-gradient(to bottom,#CF513D 0%,#B04632 100%);\\nbox-shadow:0 2px 0 #6E2F1A;\\ncolor:#fff\\n}\\n\\nbutton.mod-inline {\\nbox-shadow:0 1px 0 #C4C9CC;\\ndisplay:inline;\\nfont-size:.8em;\\npadding:.3em .8em\\n}\\n\\nbutton.mod-full {\\nwidth:100%;\\nmargin-right:0\\n}\\n\\nbutton.mod-bottom {\\nmargin-bottom:2px;\\nmargin-right:0\\n}\\n\\nlabel {\\ndisplay:block;\\nfont-weight:600;\\nmargin-bottom:.3em\\n}\\n\\ntextarea,input[type=\\\"text\\\"],input[type=\\\"email\\\"],input[type=\\\"password\\\"],input[type=\\\"number\\\"] {\\nbackground:#EDEFF0;\\nborder-radius:3px;\\nborder:1px solid #CDD2D4;\\nbox-sizing:border-box;\\ndisplay:block;\\nmargin-bottom:1em;\\npadding:.5em;\\nwidth:100%;\\nmax-width:500px\\n}\\n\\ntextarea:not([disabled]):hover,input[type=\\\"text\\\"]:not([disabled]):hover,input[type=\\\"email\\\"]:not([disabled]):hover,input[type=\\\"password\\\"]:not([disabled]):hover,input[type=\\\"number\\\"]:not([disabled]):hover {\\nborder-color:#B6BBBF\\n}\\n\\ntextarea:not([disabled]):focus,input[type=\\\"text\\\"]:not([disabled]):focus,input[type=\\\"email\\\"]:not([disabled]):focus,input[type=\\\"password\\\"]:not([disabled]):focus,input[type=\\\"number\\\"]:not([disabled]):focus {\\nborder-color:#A5ACB0;\\noutline:none;\\nbox-shadow:0 0 6px #CDD2D4\\n}\\n\\ntextarea {\\nmin-height:6em\\n}\\n\\ntextarea[disabled],input[disabled][type=\\\"text\\\"],input[disabled][type=\\\"email\\\"],input[disabled][type=\\\"password\\\"],input[disabled][type=\\\"number\\\"] {\\nbackground:#F8F9F9;\\nborder-color:#E2E4E6;\\nbox-shadow:none;\\ncolor:#8c8c8c;\\ncursor:default\\n}\\n\\ntextarea.is-error,input[type=\\\"text\\\"].is-error,input[type=\\\"email\\\"].is-error,input[type=\\\"password\\\"].is-error,input[type=\\\"number\\\"].is-error {\\nbackground:#FBEDEB;\\nborder-color:#EC9488\\n}\\n\\ntextarea.is-error:hover,input[type=\\\"text\\\"].is-error:hover,input[type=\\\"email\\\"].is-error:hover,input[type=\\\"password\\\"].is-error:hover,input[type=\\\"number\\\"].is-error:hover {\\nbox-shadow:0 0 3px #EFB3AB;\\nborder-color:#EC9488\\n}\\n\\ntextarea.is-error:focus,input[type=\\\"text\\\"].is-error:focus,input[type=\\\"email\\\"].is-error:focus,input[type=\\\"password\\\"].is-error:focus,input[type=\\\"number\\\"].is-error:focus {\\nbox-shadow:0 0 6px #EC9488;\\nborder-color:#EC9488\\n}\\n\\nselect {\\nwidth:100%;\\nmargin-bottom:1em;\\nmax-width:500px\\n}\\n\\ntable {\\nfont-size:inherit;\\nmargin-bottom:8px;\\nwidth:100%\\n}\\n\\ntable,td,th {\\nvertical-align:top;\\nborder-top:1px solid #D6DADC;\\nborder-left:1px solid #D6DADC\\n}\\n\\ntd,th {\\npadding:5px;\\nborder-right:1px solid #D6DADC;\\nborder-bottom:1px solid #D6DADC;\\ntext-align:left\\n}\\n\\nth {\\nfont-weight:700\\n}\\n\\nthead {\\nbackground:-webkit-linear-gradient(top,#F8F9F9 0%,#EDEFF0 100%);\\nbackground:linear-gradient(to bottom,#F8F9F9 0%,#EDEFF0 100%)\\n}\\n\\ntbody {\\nbackground-color:#fff\\n}\\n\\n.setting-item {\\nmargin-bottom:8px\\n}\\n\\n.big-link {\\nborder-radius:3px;\\ncursor:pointer;\\ndisplay:block;\\nmargin:8px 0 4px;\\npadding:8px 12px;\\ntext-decoration:underline\\n}\\n\\n.big-link:hover {\\ncolor:#000;\\nbackground-color:#E2E4E6\\n}\\n\\n.big-link.is-hidden {\\ndisplay:none\\n}\\n\\n.big-link.mod-centered {\\ntext-align:center\\n}\\n\\n.basic-attachment-list-item {\\nborder-radius:3px;\\ncursor:pointer;\\npadding:6px 8px;\\nmargin-bottom:4px\\n}\\n\\n.basic-attachment-list-item:hover {\\nbackground-color:#E2E4E6\\n}\\n\\n.authorize-link {\\nborder-radius:3px;\\ncursor:pointer;\\ndisplay:block;\\nmargin:8px 0 4px;\\npadding:8px;\\ntext-align:center;\\ntext-decoration:underline\\n}\\n\\n.authorize-link:hover {\\nbackground-color:#D6DADC\\n}\\n\\n.quiet-button {\\nborder-radius:3px;\\ncolor:#8c8c8c;\\ndisplay:block;\\nmargin:2px 0;\\npadding:6px 8px;\\nposition:relative;\\n-webkit-user-select:none;\\n-moz-user-select:none;\\n-ms-user-select:none;\\nuser-select:none\\n}\\n\\n.quiet-button:visited {\\ncolor:#8c8c8c\\n}\\n\\n.quiet-button:hover {\\nbackground:#D6DADC;\\ncolor:#4d4d4d\\n}\\n\\n.quiet-button:active {\\nbackground:#CDD2D4;\\ncolor:#4d4d4d\\n}\\n\\n.quiet-button-icon {\\nleft:7px;\\nposition:absolute;\\ntop:7px\\n}\\n\\n.quiet-button.mod-with-image {\\npadding-left:28px\\n}\\n\\n.quiet-button.mod-gutter {\\npadding-left:38px\\n}\\n</style>\\n\\n<div>\\n\\t<ul>\\n    <li>\\n      For buttons, you can use a <strong>&lt;button&gt;</strong> tag: <button>Button</button>\\n    </li>    \\n    <li>\\n      You can optionally use the <strong>.mod-primary</strong> class, to make it green and more prominent (for call-to-action buttons and such): <button class=\\\"mod-primary\\\">Call-to-action Button</button>\\n    </li>\\n    <li>\\n      You can add a <strong>.mod-danger</strong> class for dangerous or destructive actions like deleting: <button class=\\\"mod-danger\\\">Dangerous Button</button>\\n    </li>\\n    <li>\\n      Text inputs will also be styled: <input type=\\\"text\\\">\\n    </li>\\n    <li>\\n      For <strong>&lt;button&gt;</strong>, <strong>&lt;input&gt;</strong>, and <strong>&lt;textarea&gt;</strong> elements, you can add the <strong>disabled</strong> attribute to communicate that you can‚Äôt interact with the element: <button disabled=\\\"\\\">Disabled Button</button> \\n    </li>\\n  </ul>\\n</div>\"\n}\n[/block]\nFor more about how we write CSS for Trello, see our [style guide](https://github.com/trello/trellisheets/blob/master/styleguide.md). ‚Äã\n\nFor colors, you can pull from the Trello [color palette](https://trello.com/about/branding#colors). We also have [Trellicolors](https://github.com/trello/trellicolors), which converts our colors to different formats in case you want to interact with them programmatically. The light-gray colors are what we typically use for UI chrome.\n\nFor fonts, we recommend using [Trellicons](http://archive.is/https://blog.fogcreek.com/trello-uses-an-icon-font-and-so-can-you/) (see also [How We Fixed Our Icon Problem](https://blog.trello.com/how-we-fixed-our-icon-problem)) where they make sense for your project.","excerpt":"","slug":"style-1","type":"basic","title":"Style","__v":2,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.749Z","children":[],"childrenPages":[]},{"_id":"59a478a823588c00194d7e30","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"5948372399cec4000f1171c8","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-08-28T20:10:16.877Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":9,"body":"Once your Power-Up is ready, you can make it available to all Trello users by submitting it [here](https://developers.trello.com/v1.0/docs/submitting-your-app-1).","excerpt":"","slug":"making-your-power-up-public","type":"basic","title":"Making Your Power-Up Public","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.749Z","children":[],"childrenPages":[]},{"_id":"594d14a05589520033080f3a","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"57b333148d94953200fd31b8","updates":["5a7ddc5eb195b2001d6845bf"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:16:16.507Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"System for Cross-domain Identity Management (SCIM) offers a standard schema for users and groups (plus other custom entities which can be defined), and a protocol by which these entities can be created, updated, linked and whatnot.\nThe SCIM specification is defined in:\n\n- [RFC7643](https://tools.ietf.org/html/rfc7643) ‚Äî Core Schema, defining the format of the information sent to, and received from, the API\n- [RFC7644](https://tools.ietf.org/html/rfc7644) ‚Äî Protocol, defining the behavior to expect from the API, and how to interact with it\n- [RFC7642](https://tools.ietf.org/html/RFC7642) ‚Äî Definitions, Overview, Concepts, and Requirements\n\nIt allows a Trello user who is an admin of a [Trello Enterprise](https://trello.com/enterprise) to provision and deprovision users automatically across all the services they use (hosted and cloud-based). As soon as they create a user in their central identity system, a Trello user is created to match.","excerpt":"","slug":"overview","type":"basic","title":"Overview","__v":1,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.750Z","children":[],"childrenPages":[]},{"_id":"594d14a7bb94700033f6a5ec","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"57b333148d94953200fd31b8","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:16:23.868Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":1,"body":"Trello supports SCIM version 2.0, at [https://trello.com/scim/v2](https://trello.com/scim/v2).\n\nAs recommended by the spec, we include v2 in the SCIM API URL to allow us to potentially implement other versions (either 1.1 for older clients, or future versions) without breaking compatibility.\n[block:api-header]\n{\n  \"title\": \"SCIM Scope\"\n}\n[/block]\nThe SCIM API will handle users, teams, and boards that are associated with a single [Trello Enterprise](https://trello.com/enterprise).\n\nFor example, a SCIM client will see that User C (Figure 1) is a member of Enterprise Team 1 and Board 3, but not that they are a member of Team 1 or Board 2, because these are not associated with the enterprise.\n[block:image]\n{\n  \"images\": [\n    {\n      \"image\": [\n        \"https://files.readme.io/d077f6e-SCIM.png\",\n        \"SCIM.png\",\n        949,\n        694,\n        \"#dbdee4\"\n      ]\n    }\n  ]\n}\n[/block]\nThe authorization token sent as a header in the SCIM request determines which enterprise we deal with.","excerpt":"","slug":"scim-version","type":"basic","title":"SCIM Version","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.750Z","children":[],"childrenPages":[]},{"_id":"594d14e91dcef4001c8a864b","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"57b333148d94953200fd31b8","updates":["5cbf15cff9181f0033fbb8fa"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:17:29.775Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":2,"body":"Clients authorize with the SCIM API by sending an OAuth 2-style Bearer token in the Authorization header with each request.\nThis token can be obtained by a Trello enterprise admin user, logged into the Trello web client, at <a href=\"https://trello.com/my/enterprise/token\" target=\"_blank\">https://trello.com/enterprise/[enterpriseName]/token</a>.\n\nTokens are generated to:\n\n- have one TokenPermission of type Enterprise or * and an idModel that corresponds to an enterprise that exists\n- have an idMember that is an admin of that Enterprise\n\nThe Authorization header can be in the Bearer form:\n`Authorization: Bearer TRELLO_TOKEN`\n\nThe Authorization token that is sent to Trello determines which enterprise's information will be returned. If you are the admin of multiple enterprises, you'll need a different token for each.","excerpt":"","slug":"authorization","type":"basic","title":"Authorization","__v":1,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.751Z","children":[{"_id":"594d1825ead5e5005369e431","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"57b333148d94953200fd31b8","parentDoc":"594d14e91dcef4001c8a864b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:31:17.942Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"For each of these example requests, it is assumed that the token is sent in a header, e.g.: `Authorization: Bearer d4f925b0d9a44a85f48038725d33054abddd1b6b`\n\nFor readability, these examples show the filter parameter unencoded. This should be URL encoded in your requests, so that `userName sw \"a\"` becomes `userName+sw+%22a%22`\n### List the first 100 users in your enterprise, ordered by name\n\n`/scim/v2/users?orderBy=displayName&amp;count=100`\n\n### and the next 100‚Ä¶\n`/scim/v2/users?orderBy=displayName&amp;count=100&amp;startIndex=100`\n\n### List users on enterprise boards who aren't in an enterprise team\n`/scim/v2/users?filter=userType eq \"collaborator\"`\n\n### List users called Alice\n`/scim/v2/users?filter=displayName co \"Alice\"`\nSee notes regarding handling of names.\n\n### List the email addresses of users who have been deactivated from the enterprise\n`/scim/v2/users?attributes=emails&amp;filter=active eq false`\n\n### List the users in the Sales and Marketing teams\nFirst get the team IDs:\n`/scim/v2/groups?attributes=id&amp;filter=meta.trelloType eq \"Team\" and (name eq \"Sales\" or name eq \"Marketing\")`\n\n### Then use the IDs returned for those teams to get the users:\n`/scim/v2/users?filter=groups.value eq \"59248c4dae276a021cb296d\" or groups.value eq \"a286075043d42dcdce8d6668\"`\n\n### List users not using a US English locale:\n`/scim/v2/users?filter=locale ne \"en-US\"`\n\n### List all the teams in your enterprise\n`/scim/v2/groups?filter=meta.trelloType eq \"Team\"`\n\n### List all the boards belonging to a team\nGroup responses for teams include both Boards and Users in the members attribute.\n`/scim/v2/groups?filter=name eq \"Sales\"`\n\n### List all the boards created since January 2017\n`/scim/v2/groups?filter=meta.trelloType eq \"Board\" and meta.created gt \"2017-01-01\"`  \n\n### Deactivating a user from all Trello enterprise teams and boards\nSee [Update a User](ref:section-update-a-user)","excerpt":"","slug":"example-uses-1","type":"basic","title":"Example Uses","__v":0,"updatedAt":"2019-06-10T14:28:52.751Z"}],"childrenPages":[{"_id":"594d1825ead5e5005369e431","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"57b333148d94953200fd31b8","parentDoc":"594d14e91dcef4001c8a864b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:31:17.942Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"For each of these example requests, it is assumed that the token is sent in a header, e.g.: `Authorization: Bearer d4f925b0d9a44a85f48038725d33054abddd1b6b`\n\nFor readability, these examples show the filter parameter unencoded. This should be URL encoded in your requests, so that `userName sw \"a\"` becomes `userName+sw+%22a%22`\n### List the first 100 users in your enterprise, ordered by name\n\n`/scim/v2/users?orderBy=displayName&amp;count=100`\n\n### and the next 100‚Ä¶\n`/scim/v2/users?orderBy=displayName&amp;count=100&amp;startIndex=100`\n\n### List users on enterprise boards who aren't in an enterprise team\n`/scim/v2/users?filter=userType eq \"collaborator\"`\n\n### List users called Alice\n`/scim/v2/users?filter=displayName co \"Alice\"`\nSee notes regarding handling of names.\n\n### List the email addresses of users who have been deactivated from the enterprise\n`/scim/v2/users?attributes=emails&amp;filter=active eq false`\n\n### List the users in the Sales and Marketing teams\nFirst get the team IDs:\n`/scim/v2/groups?attributes=id&amp;filter=meta.trelloType eq \"Team\" and (name eq \"Sales\" or name eq \"Marketing\")`\n\n### Then use the IDs returned for those teams to get the users:\n`/scim/v2/users?filter=groups.value eq \"59248c4dae276a021cb296d\" or groups.value eq \"a286075043d42dcdce8d6668\"`\n\n### List users not using a US English locale:\n`/scim/v2/users?filter=locale ne \"en-US\"`\n\n### List all the teams in your enterprise\n`/scim/v2/groups?filter=meta.trelloType eq \"Team\"`\n\n### List all the boards belonging to a team\nGroup responses for teams include both Boards and Users in the members attribute.\n`/scim/v2/groups?filter=name eq \"Sales\"`\n\n### List all the boards created since January 2017\n`/scim/v2/groups?filter=meta.trelloType eq \"Board\" and meta.created gt \"2017-01-01\"`  \n\n### Deactivating a user from all Trello enterprise teams and boards\nSee [Update a User](ref:section-update-a-user)","excerpt":"","slug":"example-uses-1","type":"basic","title":"Example Uses","__v":0,"updatedAt":"2019-06-10T14:28:52.751Z"}]},{"_id":"594d1825ead5e5005369e431","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"57b333148d94953200fd31b8","parentDoc":"594d14e91dcef4001c8a864b","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:31:17.942Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":0,"body":"For each of these example requests, it is assumed that the token is sent in a header, e.g.: `Authorization: Bearer d4f925b0d9a44a85f48038725d33054abddd1b6b`\n\nFor readability, these examples show the filter parameter unencoded. This should be URL encoded in your requests, so that `userName sw \"a\"` becomes `userName+sw+%22a%22`\n### List the first 100 users in your enterprise, ordered by name\n\n`/scim/v2/users?orderBy=displayName&amp;count=100`\n\n### and the next 100‚Ä¶\n`/scim/v2/users?orderBy=displayName&amp;count=100&amp;startIndex=100`\n\n### List users on enterprise boards who aren't in an enterprise team\n`/scim/v2/users?filter=userType eq \"collaborator\"`\n\n### List users called Alice\n`/scim/v2/users?filter=displayName co \"Alice\"`\nSee notes regarding handling of names.\n\n### List the email addresses of users who have been deactivated from the enterprise\n`/scim/v2/users?attributes=emails&amp;filter=active eq false`\n\n### List the users in the Sales and Marketing teams\nFirst get the team IDs:\n`/scim/v2/groups?attributes=id&amp;filter=meta.trelloType eq \"Team\" and (name eq \"Sales\" or name eq \"Marketing\")`\n\n### Then use the IDs returned for those teams to get the users:\n`/scim/v2/users?filter=groups.value eq \"59248c4dae276a021cb296d\" or groups.value eq \"a286075043d42dcdce8d6668\"`\n\n### List users not using a US English locale:\n`/scim/v2/users?filter=locale ne \"en-US\"`\n\n### List all the teams in your enterprise\n`/scim/v2/groups?filter=meta.trelloType eq \"Team\"`\n\n### List all the boards belonging to a team\nGroup responses for teams include both Boards and Users in the members attribute.\n`/scim/v2/groups?filter=name eq \"Sales\"`\n\n### List all the boards created since January 2017\n`/scim/v2/groups?filter=meta.trelloType eq \"Board\" and meta.created gt \"2017-01-01\"`  \n\n### Deactivating a user from all Trello enterprise teams and boards\nSee [Update a User](ref:section-update-a-user)","excerpt":"","slug":"example-uses-1","type":"basic","title":"Example Uses","__v":0,"updatedAt":"2019-06-10T14:28:52.751Z"},{"_id":"594d1527bb94700033f6a5ed","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"592599f5d15a9d1900be545c","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:18:31.990Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":3,"body":"Make a GET request to `/scim/v2/ResourceTypes` for machine-readable information about the resources available.\n\n### Users\n\n`GET` `https://trello.com/scim/v2/users/58d11883e7ea028acc5b19a4`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"58d11883e7ea028acc5b19a4\\\",\\n  \\\"schemas\\\": [\\n    \\\"urn:ietf:params:scim:schemas:core:2.0:User\\\"\\n  ],\\n  \\\"meta\\\": {\\n    \\\"resourceType\\\": \\\"User\\\",\\n    \\\"created\\\": \\\"2016-07-01T16:10:26.000Z\\\",\\n    \\\"location\\\": \\\"https://trello.com/scim/v2/users/58d11883e7ea028acc5b19a4\\\",\\n    \\\"trelloType\\\": \\\"Member\\\"\\n  },\\n  \\\"userName\\\": \\\"dm74\\\",\\n  \\\"name\\\": {\\n    \\\"formatted\\\": \\\"David Mitchell\\\",\\n    \\\"givenName\\\": \\\"David\\\",\\n    \\\"familyName\\\": \\\"Mitchell\\\"\\n  },\\n  \\\"displayName\\\": \\\"David Mitchell\\\",\\n  \\\"profileUrl\\\": \\\"https://trello.com/dm74\\\",\\n  \\\"userType\\\": \\\"member\\\",\\n  \\\"locale\\\": \\\"en-GB\\\",\\n  \\\"active\\\": true,\\n  \\\"emails\\\": [\\n    {\\n      \\\"value\\\": \\\"davidmitchell@example.com\\\",\\n      \\\"primary\\\": true\\n    }\\n  ],\\n  \\\"roles\\\": [\\n    {\\n      \\\"value\\\": \\\"organization.admin\\\",\\n      \\\"display\\\": \\\"Administrator of one or more enterprise teams\\\"\\n    },\\n    {\\n      \\\"value\\\": \\\"board.admin\\\",\\n      \\\"display\\\": \\\"Administrator of one or more enterprise boards\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n### Groups\n\nGroups includes both Trello teams and boards. They can be distinguished by their `meta.trelloType` attribute.\n\nA team's members includes boards and users; a board's members are users.\n\nThis example is of a team with one user, and two boards:\n`GET` `https://trello.com/scim/v2/Groups/58d54eae8a7a0251950aec81`\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"id\\\": \\\"58d54eae8a7a0251950aec81\\\",\\n  \\\"schemas\\\": [\\n    \\\"urn:ietf:params:scim:schemas:core:2.0:Group\\\"\\n  ],\\n  \\\"meta\\\": {\\n    \\\"resourceType\\\": \\\"Group\\\",\\n    \\\"created\\\": \\\"2017-03-24T16:51:58.000Z\\\",\\n    \\\"location\\\": \\\"https://trello.com/scim/v2/groups/58d54eae8a7a0251950aec81\\\",\\n    \\\"trelloType\\\": \\\"Team\\\"\\n  },\\n  \\\"displayName\\\": \\\"Popcorn\\\",\\n  \\\"members\\\": [\\n    {\\n      \\\"$ref\\\": \\\"https://trello.com/scim/v2/users/58d11883e7ea028acc5b19a4\\\",\\n      \\\"value\\\": \\\"58d11883e7ea028acc5b19a4\\\",\\n      \\\"type\\\": \\\"Member\\\",\\n      \\\"displayName\\\": \\\"David Mitchell\\\"\\n    },\\n    {\\n      \\\"$ref\\\": \\\"https://trello.com/scim/v2/groups/58d54edb0cbef0923bc6546a\\\",\\n      \\\"value\\\": \\\"58d54edb0cbef0923bc6546a\\\",\\n      \\\"type\\\": \\\"Board\\\",\\n      \\\"displayName\\\": \\\"Salt\\\"\\n    },\\n    {\\n      \\\"$ref\\\": \\\"https://trello.com/scim/v2/groups/58d54ee29a0af8d02877959e\\\",\\n      \\\"value\\\": \\\"58d54ee29a0af8d02877959e\\\",\\n      \\\"type\\\": \\\"Board\\\",\\n      \\\"displayName\\\": \\\"Sweet\\\"\\n    }\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]","excerpt":"","slug":"resources","type":"basic","title":"Resources","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.752Z","children":[],"childrenPages":[]},{"_id":"594d152cf4cb8a001bbe2bbd","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"56ddd4424acab82000ae9d30","updates":[],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:18:36.456Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":4,"body":"[block:api-header]\n{\n  \"title\": \"List and Search\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"\",\n    \"0-0\": \"Users\",\n    \"0-1\": \"GET /scim/v2/Users\",\n    \"1-1\": \"GET /scim/v2/Groups\",\n    \"1-0\": \"Groups\",\n    \"2-0\": \"All resources including Users and Groups\",\n    \"2-2\": \"You can use meta.resourceType (\\\"user\\\", \\\"group\\\", etc) or meta.trelloType (\\\"member\\\", \\\"team\\\", \\\"board\\\", etc) to filter by types.\",\n    \"2-1\": \"GET /scim/v2\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Parameters\"\n}\n[/block]\n\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Parameter\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\",\n    \"h-3\": \"Example\",\n    \"0-0\": \"filter\",\n    \"0-1\": \"string\",\n    \"0-2\": \"Filter the resources using an expressive but simple query language. See <a href=\\\"#filtering\\\">Filtering section</a>, below.\",\n    \"0-3\": \"username eq \\\"bob\\\"\",\n    \"1-0\": \"count\",\n    \"1-1\": \"integer\",\n    \"1-2\": \"The maximum number of results to include. Used with startIndex for pagination.\",\n    \"1-3\": \"20\",\n    \"2-0\": \"startIndex\",\n    \"2-1\": \"integer\",\n    \"2-2\": \"The number of the first result to include. Used with count for pagination.\",\n    \"2-3\": \"30\",\n    \"3-0\": \"sortBy\",\n    \"3-1\": \"string\",\n    \"3-2\": \"An attribute name to sort the results by.\",\n    \"3-3\": \"groups.value\",\n    \"4-0\": \"sortOrder\",\n    \"4-1\": \"string\",\n    \"4-2\": \"Either ascending (default) or descending.\",\n    \"4-3\": \"descending\"\n  },\n  \"cols\": 4,\n  \"rows\": 5\n}\n[/block]\n## Get a single User, Team, or Board\n\n### User\n`GET /scim/v2/Users/USER_ID` - e.g. `/scim/v2/Users/58d11883e7ea028acc5b19a4`\n\n### Group (Teams and Boards)\n`GET /scim/v2/Groups/GROUP_ID`\n\n## Create a new User\n`POST /scim/v2/Users` sending a header of `Content-type: application/json` and a body with a User resource representation, such as: `{\"displayName\": \"David Walliams\", \"emails\": [ { \"value\": \"dw@example.com\" } ] }`\n\nThe following attributes will be used; any other will be ignored:\n\n* Required:\n  * one of `displayName`, `name.formatted`, or `name.givenName` and `name.familyName`\n  * `emails.value`\n* Optional:\n  * `userName` - Normally best to omit, and one will be autogenerated. If supplied, must be 3-100 characters of only lowercase letters, underscores and numbers.\n  * `locale`</li>\n  * `timezone`</li>\n\nIf successful, the response will have a status of 201, and contain the full User resource in the body. The user will be enabled for Single Sign On if the enterprise has this configured. Otherwise, the user will need to <a href=\"https://trello.com/forgot\" target=\"_blank\">reset their password</a> to set a password for login.\n\nThe created Trello user will be owned by the enterprise. If the enterprise has domains configured, the user will not email address require confirmation. Otherwise, an email will be sent asking the user to confirm their address.\n\nAt present, it is not possible to assign a user to any Teams or Boards at creation. This may be supported in a later release of the Trello SCIM API.\n\n### Update a User\n\nCurrently, you can only update a user's active attribute. We plan to support updating other attributes at some point in the future.\n\nWhen a user is set to `active: false`, they will be deactivated from all enterprise teams and boards. If the user is then set to `active: true`, they will be reactivated on any teams and boards they had previously been deactivated from when deactivated from the enterprise (via the SCIM API or Enterprise Admin Dashboard).\n\nIf the user had been deactivated from each teams individually, setting them to `active: true` via the SCIM API will reactivate them in all the enterprise teams they were previously a member of.\n\nA user can be updated via PATCH or PUT requests. Remember to send a Content-type header with application/json or application/scim+json.\n\n#### Updating `active` via PATCH\n`PATCH https://trello.com/scim/v2/Users/58d11883e7ea028acc5b19a4\n\n```\n{\n  \"schemas\": ['urn:ietf:params:scim:api:messages:2.0:PatchOp']\n  \"Operations\": [ { \"op\": \"replace\", \"value\": { \"active\": false } } ]\n}\n```\n\n#### Updating via PUT\n`PUT https://trello.com/scim/v2/Users/58d11883e7ea028acc5b19a4\n\n```\n{\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\",\n    \"https://trello.com/scim/v2/schemas/TrelloUser\"\n  ],\n  \"displayName\": \"Little Bobby Tables\",\n  \"name\": { \"formatted\": \"Little Bobby Tables\" },\n  \"userName\": \"bobby_tables\",\n  \"active\": false,\n  \"emails\": [\n    {\n      \"value\": \"bobby_tables@example.com\",\n      \"primary\": true\n    }\n  ]\n}\n```\n\nWhilst at present everything other than the `active` attribute is ignored, in future we may support updating other attributes via PUT.\n\nTherefore you should GET the current state of the User, modify the active attribute, and PUT the whole user representation, to avoid unintentionally changing other attributes.\n\n## Schemas\n`GET /scim/v2/Schemas`\nGives details of all the attributes used in each resource type.\n\n## ResourceTypes\n`GET /scim/v2/ResourceTypes`\nGives details about each resource type available.\n\n# ServiceProviderConfig\n`GET /scim/v2/ServiceProviderConfig`\nGives details about the features available in the SCIM API.\n\n### Filtering\n<a name=\"scim-filtering\">Resources</a> can be filtered using powerful yet simple query expressions. This is sent in the filter parameter of a GET request.\nAn example of a basic filter expression is: `userName eq \"matt\"` i.e. in the form {attribute} {operator} {comparison value}\n\n#### Attributes\nPretty much any of the attributes you see in resource responses can be used. Use a dot syntax for subattributes, e.g. `emails.value`\n\n#### Operators\n\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"eq\",\n    \"0-1\": \"Equal\",\n    \"0-2\": \"For all attributes\",\n    \"1-0\": \"ne\",\n    \"1-1\": \"Not Equal\",\n    \"2-0\": \"pr\",\n    \"2-1\": \"Present\",\n    \"3-0\": \"co\",\n    \"3-1\": \"Contains\",\n    \"3-2\": \"For string attributes\",\n    \"4-0\": \"sw\",\n    \"4-1\": \"Starts With\",\n    \"5-0\": \"ew\",\n    \"5-1\": \"Ends With\",\n    \"6-0\": \"lt\",\n    \"6-1\": \"Less Than\",\n    \"6-2\": \"For number and date attributes\",\n    \"7-0\": \"le\",\n    \"7-1\": \"Less Than or Equal\",\n    \"8-0\": \"gt\",\n    \"8-1\": \"Greater Than\",\n    \"9-0\": \"ge\",\n    \"9-1\": \"Greater Than or Equal\"\n  },\n  \"cols\": 3,\n  \"rows\": 10\n}\n[/block]\n## Comparison Values\nThis can be:\n\n  * a string, enclosed in \"double quotes\",\n  * a number, e.g. 5\n  * a date or date-time, in ISO 8601 format, enclosed in double quotes: e.g. \"2017-01-01\"\n  * Boolean true or false\n\n## Combining Expressions\nExpressions can be combined with AND and OR. e.g.:\n`userName sw \"m\" OR emails.value co \"@atlassian.com\"`\n\nYou can also use parentheses for grouping:\n`(userName co \"bob\" and active eq true) or displayName ew \"Smith\"`\n\n## NOT\nYou can use NOT to invert an expression:\n`name.formatted co \"bob\" AND NOT name.formatted co \"holness\"`\n\n## Multi-value attributes\nSCIM resources can have multi-value attributes (AKA arrays).\nFor example, a User's `emails` might look like this:\n\n```json\n{\n  ...,\n  \"emails\": [\n    { \"value\": \"frank.underwood@gmail.com\", primary: false },\n    { \"value\": \"potus@whitehouse.gov\", primary: true } \n  ]\n}\n```\n\nSay you wanted to find Users who have a Gmail address as their primary email address (a set that this example user is not part of).\n\nIf you filtered for:\n`emails.value ew \"@gmail.com\" and emails.primary eq true`\n\nthen our example user would match, because he has an email ending with @gmail.com and a primary email. Even though they are different emails.\n\nTo find only those Users who have a Gmail address that is primary, use a filter like this:\n`emails[value eq \"@gmail.com\" and primary eq true]`\n\nThat will only match Users where one emails matches both conditions. If the equivalent of MongoDB's elemMatch, if you're familiar with that.","excerpt":"","slug":"routes","type":"basic","title":"Routes","__v":0,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.752Z","children":[],"childrenPages":[]},{"_id":"594d1531b8ff94001c6c14b9","project":"592884a1bdc27e1b00e57967","version":"592884a2bdc27e1b00e5796a","category":"594d148cc804570021d221da","user":"592599f5d15a9d1900be545c","updates":["5bbd118dfe62fb0003d01959"],"next":{"pages":[],"description":""},"createdAt":"2017-06-23T13:18:41.324Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"language":"json","code":"{}","name":""},{"status":400,"language":"json","code":"{}","name":""}]},"auth":"required","params":[],"url":"","method":"get"},"isReference":true,"order":5,"body":"Trello only stores the full name of our users. For compatibility reasons, we attempt to include a derived givenName and familyName in responses for users in locales that typically use Western-order names, but these should not be relied upon to be correct.\n\nFiltering by `name.givenName`, `name.familyName`, etc. will internally use `name.formatted`, and so may not give the expected results. If you know that a name is Western-order, you may find a filter such as `name.formatted sw \"Alice \"` (note the trailing space) achieves what you need.","excerpt":"","slug":"notes","type":"basic","title":"Notes","__v":1,"parentDoc":null,"updatedAt":"2019-06-10T14:28:52.753Z","children":[],"childrenPages":[]}]